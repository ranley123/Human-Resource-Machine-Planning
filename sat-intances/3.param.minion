MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 54
# CSE_active_eliminated_expressions = 144
# CSE_active_total_size = 333
**VARIABLES**
DISCRETE statePlaces_00002_00002 #
{-1..100}
DISCRETE statePlaces_00002_00003 #
{-1..100}
DISCRETE statePlaces_00002_00004 #
{-1..100}
DISCRETE statePlaces_00002_00005 #
{-1..100}
DISCRETE statePlaces_00002_00006 #
{-1..100}
DISCRETE statePlaces_00002_00007 #
{-1..100}
DISCRETE statePlaces_00002_00008 #
{-1..100}
DISCRETE statePlaces_00002_00009 #
{-1..100}
DISCRETE statePlaces_00002_00010 #
{-1..100}
DISCRETE statePlaces_00003_00002 #
{-1..100}
DISCRETE statePlaces_00003_00003 #
{-1..100}
DISCRETE statePlaces_00003_00004 #
{-1..100}
DISCRETE statePlaces_00003_00005 #
{-1..100}
DISCRETE statePlaces_00003_00006 #
{-1..100}
DISCRETE statePlaces_00003_00007 #
{-1..100}
DISCRETE statePlaces_00003_00008 #
{-1..100}
DISCRETE statePlaces_00003_00009 #
{-1..100}
DISCRETE statePlaces_00003_00010 #
{-1..100}
DISCRETE actionTypes_00002 #
{1..5}
DISCRETE actionTypes_00003 #
{1..5}
DISCRETE actionTypes_00004 #
{1..5}
DISCRETE actionTypes_00005 #
{1..5}
DISCRETE actionTypes_00006 #
{1..5}
DISCRETE actionTypes_00007 #
{1..5}
DISCRETE actionTypes_00008 #
{1..5}
DISCRETE actionTypes_00009 #
{1..5}
DISCRETE actionTypes_00010 #
{1..5}
DISCRETE actionFrom_00002 #
{0..3}
DISCRETE actionFrom_00003 #
{0..3}
DISCRETE actionFrom_00004 #
{0..3}
DISCRETE actionFrom_00005 #
{0..3}
DISCRETE actionFrom_00006 #
{0..3}
DISCRETE actionFrom_00007 #
{0..3}
DISCRETE actionFrom_00008 #
{0..3}
DISCRETE actionFrom_00009 #
{0..3}
DISCRETE actionFrom_00010 #
{0..3}
DISCRETE actionTo_00002 #
{0..3}
DISCRETE actionTo_00003 #
{0..3}
DISCRETE actionTo_00004 #
{0..3}
DISCRETE actionTo_00005 #
{0..3}
DISCRETE actionTo_00006 #
{0..3}
DISCRETE actionTo_00007 #
{0..3}
DISCRETE actionTo_00008 #
{0..3}
DISCRETE actionTo_00009 #
{0..3}
DISCRETE actionTo_00010 #
{0..3}
DISCRETE pointers_00000_00002 #
{0..4}
DISCRETE pointers_00000_00003 #
{0..4}
DISCRETE pointers_00000_00004 #
{0..4}
DISCRETE pointers_00000_00005 #
{0..4}
DISCRETE pointers_00000_00006 #
{0..4}
DISCRETE pointers_00000_00007 #
{0..4}
DISCRETE pointers_00000_00008 #
{0..4}
DISCRETE pointers_00000_00009 #
{0..4}
DISCRETE pointers_00000_00010 #
{0..4}
DISCRETE pointers_00001_00002 #
{0..4}
DISCRETE pointers_00001_00003 #
{0..4}
DISCRETE pointers_00001_00004 #
{0..4}
DISCRETE pointers_00001_00005 #
{0..4}
DISCRETE pointers_00001_00006 #
{0..4}
DISCRETE pointers_00001_00007 #
{0..4}
DISCRETE pointers_00001_00008 #
{0..4}
DISCRETE pointers_00001_00009 #
{0..4}
BOOL aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionTo_00010 + -2))=SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionFrom_00010 + -2)))
BOOL aux53 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionTo_00009 + -2))=SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionFrom_00009 + -2)))
BOOL aux54 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionTo_00003 + -2))=SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionFrom_00003 + -2)))
BOOL aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionTo_00004 + -2))=SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionFrom_00004 + -2)))
BOOL aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionTo_00002 + -2))=SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionFrom_00002 + -2)))
BOOL aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionTo_00007 + -2))=SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionFrom_00007 + -2)))
BOOL aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionTo_00008 + -2))=SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionFrom_00008 + -2)))
BOOL aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionTo_00005 + -2))=SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionFrom_00005 + -2)))
BOOL aux60 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionTo_00006 + -2))=SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionFrom_00006 + -2)))
DISCRETE aux61 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionFrom_00002 + -2))
{-1..100}
DISCRETE aux62 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionFrom_00007 + -2))
{-1..100}
DISCRETE aux63 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionFrom_00003 + -2))
{-1..100}
DISCRETE aux64 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionFrom_00006 + -2))
{-1..100}
DISCRETE aux65 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionFrom_00009 + -2))
{-1..100}
DISCRETE aux66 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionFrom_00010 + -2))
{-1..100}
DISCRETE aux67 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionFrom_00005 + -2))
{-1..100}
DISCRETE aux68 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionFrom_00008 + -2))
{-1..100}
DISCRETE aux69 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionFrom_00004 + -2))
{-1..100}
DISCRETE aux70 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00005 + -2)
{-2..1}
DISCRETE aux71 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00004 + -2)
{-2..1}
DISCRETE aux72 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00007 + -2)
{-2..1}
DISCRETE aux73 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00006 + -2)
{-2..1}
DISCRETE aux74 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00009 + -2)
{-2..1}
DISCRETE aux75 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00008 + -2)
{-2..1}
DISCRETE aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00003 + -2)
{-2..1}
DISCRETE aux77 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00002 + -2)
{-2..1}
DISCRETE aux78 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00005 + -2)
{-2..1}
DISCRETE aux79 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00004 + -2)
{-2..1}
DISCRETE aux80 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00010 + -2)
{-2..1}
DISCRETE aux81 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00009 + -2)
{-2..1}
DISCRETE aux82 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00010 + -2)
{-2..1}
DISCRETE aux83 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00008 + -2)
{-2..1}
BOOL aux84 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00002 in int(2..3))
BOOL aux85 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00003 in int(2..3))
BOOL aux86 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00004 in int(2..3))
BOOL aux87 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00005 in int(2..3))
BOOL aux88 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00006 in int(2..3))
BOOL aux89 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00007 in int(2..3))
BOOL aux90 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00008 in int(2..3))
BOOL aux91 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00009 in int(2..3))
BOOL aux92 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00010 in int(2..3))
DISCRETE aux93 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00003 + -2)
{-2..1}
DISCRETE aux94 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00006 + -2)
{-2..1}
DISCRETE aux95 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00007 + -2)
{-2..1}
DISCRETE aux96 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00002 + -2)
{-2..1}
BOOL aux97 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00005 in int(2..3))
BOOL aux98 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00006 in int(2..3))
BOOL aux99 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00003 in int(2..3))
BOOL aux100 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00004 in int(2..3))
BOOL aux101 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00007 in int(2..3))
BOOL aux102 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00008 in int(2..3))
BOOL aux103 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00009 in int(2..3))
BOOL aux104 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00010 in int(2..3))
BOOL aux105 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00002 in int(2..3))
BOOL aux106 #(1 != actionTypes_00002)
BOOL aux107 #(1 != actionTypes_00003)
BOOL aux108 #(1 != actionTypes_00004)
BOOL aux109 #(1 != actionTypes_00005)
BOOL aux110 #(1 != actionTypes_00006)
BOOL aux111 #(1 != actionTypes_00007)
BOOL aux112 #(1 != actionTypes_00008)
BOOL aux113 #(1 != actionTypes_00009)
BOOL aux114 #(1 != actionTypes_00010)
BOOL aux115 #(2 != actionTypes_00002)
BOOL aux116 #(2 != actionTypes_00003)
BOOL aux117 #(2 != actionTypes_00004)
BOOL aux118 #(2 != actionTypes_00005)
BOOL aux119 #(2 != actionTypes_00006)
BOOL aux120 #(2 != actionTypes_00007)
BOOL aux121 #(2 != actionTypes_00008)
BOOL aux122 #(2 != actionTypes_00009)
BOOL aux123 #(2 != actionTypes_00010)
BOOL aux124 #((1=actionTypes_00002) \/ (2=actionTypes_00002) \/ (3=actionTypes_00002) \/ (5=actionTypes_00002) \/ ((4=actionTypes_00002) /\ (actionTo_00002 != 3)))
BOOL aux125 #((1=actionTypes_00003) \/ (2=actionTypes_00003) \/ (3=actionTypes_00003) \/ (5=actionTypes_00003) \/ ((4=actionTypes_00003) /\ (actionTo_00003 != 3)))
BOOL aux126 #((1=actionTypes_00004) \/ (2=actionTypes_00004) \/ (3=actionTypes_00004) \/ (5=actionTypes_00004) \/ ((4=actionTypes_00004) /\ (actionTo_00004 != 3)))
BOOL aux127 #((1=actionTypes_00005) \/ (2=actionTypes_00005) \/ (3=actionTypes_00005) \/ (5=actionTypes_00005) \/ ((4=actionTypes_00005) /\ (actionTo_00005 != 3)))
BOOL aux128 #((1=actionTypes_00006) \/ (2=actionTypes_00006) \/ (3=actionTypes_00006) \/ (5=actionTypes_00006) \/ ((4=actionTypes_00006) /\ (actionTo_00006 != 3)))
BOOL aux129 #((1=actionTypes_00007) \/ (2=actionTypes_00007) \/ (3=actionTypes_00007) \/ (5=actionTypes_00007) \/ ((4=actionTypes_00007) /\ (actionTo_00007 != 3)))
BOOL aux130 #((1=actionTypes_00008) \/ (2=actionTypes_00008) \/ (3=actionTypes_00008) \/ (5=actionTypes_00008) \/ ((4=actionTypes_00008) /\ (actionTo_00008 != 3)))
BOOL aux131 #((1=actionTypes_00009) \/ (2=actionTypes_00009) \/ (3=actionTypes_00009) \/ (5=actionTypes_00009) \/ ((4=actionTypes_00009) /\ (actionTo_00009 != 3)))
BOOL aux132 #((1=actionTypes_00010) \/ (2=actionTypes_00010) \/ (3=actionTypes_00010) \/ (5=actionTypes_00010) \/ ((4=actionTypes_00010) /\ (actionTo_00010 != 3)))
BOOL aux133 #((2=actionTypes_00002) \/ (4=actionTypes_00002))
BOOL aux134 #((2=actionTypes_00003) \/ (4=actionTypes_00003))
BOOL aux135 #((2=actionTypes_00004) \/ (4=actionTypes_00004))
BOOL aux136 #((2=actionTypes_00005) \/ (4=actionTypes_00005))
BOOL aux137 #((2=actionTypes_00006) \/ (4=actionTypes_00006))
BOOL aux138 #((2=actionTypes_00007) \/ (4=actionTypes_00007))
BOOL aux139 #((2=actionTypes_00008) \/ (4=actionTypes_00008))
BOOL aux140 #((2=actionTypes_00009) \/ (4=actionTypes_00009))
BOOL aux141 #((2=actionTypes_00010) \/ (4=actionTypes_00010))
BOOL aux142 #(1=actionTypes_00002)
BOOL aux143 #(1=actionTypes_00002)
BOOL aux144 #(1=actionTypes_00002)
BOOL aux145 #(1=actionTypes_00002)
BOOL aux146 #(1=actionTypes_00002)
DISCRETE aux147 #(pointers_00000_00002 + -1)
{-1..3}
BOOL aux148 #(1=actionTypes_00003)
BOOL aux149 #(1=actionTypes_00003)
BOOL aux150 #(1=actionTypes_00003)
BOOL aux151 #(1=actionTypes_00003)
BOOL aux152 #(1=actionTypes_00003)
DISCRETE aux153 #(pointers_00000_00003 + -1)
{-1..3}
BOOL aux154 #(1=actionTypes_00004)
BOOL aux155 #(1=actionTypes_00004)
BOOL aux156 #(1=actionTypes_00004)
BOOL aux157 #(1=actionTypes_00004)
BOOL aux158 #(1=actionTypes_00004)
DISCRETE aux159 #(pointers_00000_00004 + -1)
{-1..3}
BOOL aux160 #(1=actionTypes_00005)
BOOL aux161 #(1=actionTypes_00005)
BOOL aux162 #(1=actionTypes_00005)
BOOL aux163 #(1=actionTypes_00005)
BOOL aux164 #(1=actionTypes_00005)
DISCRETE aux165 #(pointers_00000_00005 + -1)
{-1..3}
BOOL aux166 #(1=actionTypes_00006)
BOOL aux167 #(1=actionTypes_00006)
BOOL aux168 #(1=actionTypes_00006)
BOOL aux169 #(1=actionTypes_00006)
BOOL aux170 #(1=actionTypes_00006)
DISCRETE aux171 #(pointers_00000_00006 + -1)
{-1..3}
BOOL aux172 #(1=actionTypes_00007)
BOOL aux173 #(1=actionTypes_00007)
BOOL aux174 #(1=actionTypes_00007)
BOOL aux175 #(1=actionTypes_00007)
BOOL aux176 #(1=actionTypes_00007)
DISCRETE aux177 #(pointers_00000_00007 + -1)
{-1..3}
BOOL aux178 #(1=actionTypes_00008)
BOOL aux179 #(1=actionTypes_00008)
BOOL aux180 #(1=actionTypes_00008)
BOOL aux181 #(1=actionTypes_00008)
BOOL aux182 #(1=actionTypes_00008)
DISCRETE aux183 #(pointers_00000_00008 + -1)
{-1..3}
BOOL aux184 #(1=actionTypes_00009)
BOOL aux185 #(1=actionTypes_00009)
BOOL aux186 #(1=actionTypes_00009)
BOOL aux187 #(1=actionTypes_00009)
BOOL aux188 #(1=actionTypes_00009)
DISCRETE aux189 #(pointers_00000_00009 + -1)
{-1..3}
BOOL aux190 #(1=actionTypes_00010)
BOOL aux191 #(1=actionTypes_00010)
BOOL aux192 #(1=actionTypes_00010)
BOOL aux193 #(1=actionTypes_00010)
BOOL aux194 #(1=actionTypes_00010)
DISCRETE aux195 #(pointers_00000_00010 + -1)
{-1..3}
BOOL aux196 #(2=actionTypes_00002)
BOOL aux197 #(2=actionTypes_00002)
BOOL aux198 #(2=actionTypes_00002)
BOOL aux199 #(2=actionTypes_00002)
BOOL aux200 #(2=actionTypes_00002)
BOOL aux201 #(2=actionTypes_00002)
BOOL aux202 #(2=actionTypes_00002)
DISCRETE aux203 #(pointers_00001_00002 + -1)
{-1..3}
BOOL aux204 #(2=actionTypes_00003)
BOOL aux205 #(2=actionTypes_00003)
BOOL aux206 #(2=actionTypes_00003)
BOOL aux207 #(2=actionTypes_00003)
BOOL aux208 #(2=actionTypes_00003)
BOOL aux209 #(2=actionTypes_00003)
BOOL aux210 #(2=actionTypes_00003)
BOOL aux211 #(2=actionTypes_00003)
DISCRETE aux212 #(pointers_00001_00003 + -1)
{-1..3}
BOOL aux213 #(2=actionTypes_00004)
BOOL aux214 #(2=actionTypes_00004)
BOOL aux215 #(2=actionTypes_00004)
BOOL aux216 #(2=actionTypes_00004)
BOOL aux217 #(2=actionTypes_00004)
BOOL aux218 #(2=actionTypes_00004)
BOOL aux219 #(2=actionTypes_00004)
BOOL aux220 #(2=actionTypes_00004)
DISCRETE aux221 #(pointers_00001_00004 + -1)
{-1..3}
BOOL aux222 #(2=actionTypes_00005)
BOOL aux223 #(2=actionTypes_00005)
BOOL aux224 #(2=actionTypes_00005)
BOOL aux225 #(2=actionTypes_00005)
BOOL aux226 #(2=actionTypes_00005)
BOOL aux227 #(2=actionTypes_00005)
BOOL aux228 #(2=actionTypes_00005)
BOOL aux229 #(2=actionTypes_00005)
DISCRETE aux230 #(pointers_00001_00005 + -1)
{-1..3}
BOOL aux231 #(2=actionTypes_00006)
BOOL aux232 #(2=actionTypes_00006)
BOOL aux233 #(2=actionTypes_00006)
BOOL aux234 #(2=actionTypes_00006)
BOOL aux235 #(2=actionTypes_00006)
BOOL aux236 #(2=actionTypes_00006)
BOOL aux237 #(2=actionTypes_00006)
BOOL aux238 #(2=actionTypes_00006)
DISCRETE aux239 #(pointers_00001_00006 + -1)
{-1..3}
BOOL aux240 #(2=actionTypes_00007)
BOOL aux241 #(2=actionTypes_00007)
BOOL aux242 #(2=actionTypes_00007)
BOOL aux243 #(2=actionTypes_00007)
BOOL aux244 #(2=actionTypes_00007)
BOOL aux245 #(2=actionTypes_00007)
BOOL aux246 #(2=actionTypes_00007)
BOOL aux247 #(2=actionTypes_00007)
DISCRETE aux248 #(pointers_00001_00007 + -1)
{-1..3}
BOOL aux249 #(2=actionTypes_00008)
BOOL aux250 #(2=actionTypes_00008)
BOOL aux251 #(2=actionTypes_00008)
BOOL aux252 #(2=actionTypes_00008)
BOOL aux253 #(2=actionTypes_00008)
BOOL aux254 #(2=actionTypes_00008)
BOOL aux255 #(2=actionTypes_00008)
BOOL aux256 #(2=actionTypes_00008)
DISCRETE aux257 #(pointers_00001_00008 + -1)
{-1..3}
BOOL aux258 #(2=actionTypes_00009)
BOOL aux259 #(2=actionTypes_00009)
BOOL aux260 #(2=actionTypes_00009)
BOOL aux261 #(2=actionTypes_00009)
BOOL aux262 #(2=actionTypes_00009)
BOOL aux263 #(2=actionTypes_00009)
BOOL aux264 #(2=actionTypes_00009)
BOOL aux265 #(2=actionTypes_00009)
DISCRETE aux266 #(pointers_00001_00009 + -1)
{-1..3}
BOOL aux267 #(2=actionTypes_00010)
BOOL aux268 #(2=actionTypes_00010)
BOOL aux269 #(2=actionTypes_00010)
BOOL aux270 #(2=actionTypes_00010)
BOOL aux271 #(2=actionTypes_00010)
BOOL aux272 #(2=actionTypes_00010)
BOOL aux273 #(3=actionTypes_00002)
BOOL aux274 #(3=actionTypes_00002)
BOOL aux275 #(3=actionTypes_00002)
BOOL aux276 #(3=actionTypes_00002)
BOOL aux277 #(3=actionTypes_00002)
BOOL aux278 #(3=actionTypes_00002)
BOOL aux279 #(3=actionTypes_00003)
BOOL aux280 #(3=actionTypes_00003)
BOOL aux281 #(3=actionTypes_00003)
BOOL aux282 #(3=actionTypes_00003)
BOOL aux283 #(3=actionTypes_00003)
BOOL aux284 #(3=actionTypes_00003)
BOOL aux285 #(3=actionTypes_00004)
BOOL aux286 #(3=actionTypes_00004)
BOOL aux287 #(3=actionTypes_00004)
BOOL aux288 #(3=actionTypes_00004)
BOOL aux289 #(3=actionTypes_00004)
BOOL aux290 #(3=actionTypes_00004)
BOOL aux291 #(3=actionTypes_00005)
BOOL aux292 #(3=actionTypes_00005)
BOOL aux293 #(3=actionTypes_00005)
BOOL aux294 #(3=actionTypes_00005)
BOOL aux295 #(3=actionTypes_00005)
BOOL aux296 #(3=actionTypes_00005)
BOOL aux297 #(3=actionTypes_00006)
BOOL aux298 #(3=actionTypes_00006)
BOOL aux299 #(3=actionTypes_00006)
BOOL aux300 #(3=actionTypes_00006)
BOOL aux301 #(3=actionTypes_00006)
BOOL aux302 #(3=actionTypes_00006)
BOOL aux303 #(3=actionTypes_00007)
BOOL aux304 #(3=actionTypes_00007)
BOOL aux305 #(3=actionTypes_00007)
BOOL aux306 #(3=actionTypes_00007)
BOOL aux307 #(3=actionTypes_00007)
BOOL aux308 #(3=actionTypes_00007)
BOOL aux309 #(3=actionTypes_00008)
BOOL aux310 #(3=actionTypes_00008)
BOOL aux311 #(3=actionTypes_00008)
BOOL aux312 #(3=actionTypes_00008)
BOOL aux313 #(3=actionTypes_00008)
BOOL aux314 #(3=actionTypes_00008)
BOOL aux315 #(3=actionTypes_00009)
BOOL aux316 #(3=actionTypes_00009)
BOOL aux317 #(3=actionTypes_00009)
BOOL aux318 #(3=actionTypes_00009)
BOOL aux319 #(3=actionTypes_00009)
BOOL aux320 #(3=actionTypes_00009)
BOOL aux321 #(3=actionTypes_00010)
BOOL aux322 #(3=actionTypes_00010)
BOOL aux323 #(3=actionTypes_00010)
BOOL aux324 #(3=actionTypes_00010)
BOOL aux325 #(3=actionTypes_00010)
BOOL aux326 #(3=actionTypes_00010)
BOOL aux327 #(4=actionTypes_00002)
BOOL aux328 #(4=actionTypes_00002)
BOOL aux329 #(4=actionTypes_00002)
BOOL aux330 #(4=actionTypes_00002)
BOOL aux331 #(4=actionTypes_00002)
BOOL aux332 #(4=actionTypes_00003)
BOOL aux333 #(4=actionTypes_00003)
BOOL aux334 #(4=actionTypes_00003)
BOOL aux335 #(4=actionTypes_00003)
BOOL aux336 #(4=actionTypes_00003)
BOOL aux337 #(4=actionTypes_00003)
BOOL aux338 #(4=actionTypes_00004)
BOOL aux339 #(4=actionTypes_00004)
BOOL aux340 #(4=actionTypes_00004)
BOOL aux341 #(4=actionTypes_00004)
BOOL aux342 #(4=actionTypes_00004)
BOOL aux343 #(4=actionTypes_00004)
BOOL aux344 #(4=actionTypes_00005)
BOOL aux345 #(4=actionTypes_00005)
BOOL aux346 #(4=actionTypes_00005)
BOOL aux347 #(4=actionTypes_00005)
BOOL aux348 #(4=actionTypes_00005)
BOOL aux349 #(4=actionTypes_00005)
BOOL aux350 #(4=actionTypes_00006)
BOOL aux351 #(4=actionTypes_00006)
BOOL aux352 #(4=actionTypes_00006)
BOOL aux353 #(4=actionTypes_00006)
BOOL aux354 #(4=actionTypes_00006)
BOOL aux355 #(4=actionTypes_00006)
BOOL aux356 #(4=actionTypes_00007)
BOOL aux357 #(4=actionTypes_00007)
BOOL aux358 #(4=actionTypes_00007)
BOOL aux359 #(4=actionTypes_00007)
BOOL aux360 #(4=actionTypes_00007)
BOOL aux361 #(4=actionTypes_00007)
BOOL aux362 #(4=actionTypes_00008)
BOOL aux363 #(4=actionTypes_00008)
BOOL aux364 #(4=actionTypes_00008)
BOOL aux365 #(4=actionTypes_00008)
BOOL aux366 #(4=actionTypes_00008)
BOOL aux367 #(4=actionTypes_00008)
BOOL aux368 #(4=actionTypes_00009)
BOOL aux369 #(4=actionTypes_00009)
BOOL aux370 #(4=actionTypes_00009)
BOOL aux371 #(4=actionTypes_00009)
BOOL aux372 #(4=actionTypes_00009)
BOOL aux373 #(4=actionTypes_00009)
BOOL aux374 #(4=actionTypes_00010)
BOOL aux375 #(4=actionTypes_00010)
BOOL aux376 #(4=actionTypes_00010)
BOOL aux377 #(4=actionTypes_00010)
BOOL aux378 #(4=actionTypes_00010)
BOOL aux379 #(4=actionTypes_00010)
BOOL aux380 #(5=actionTypes_00002)
BOOL aux381 #(5=actionTypes_00002)
BOOL aux382 #(5=actionTypes_00002)
DISCRETE aux383 #SafeElement([3, -1], aux77)
{-1..3}
**CONSTRAINTS**
w-inintervalset(aux383, [-1,0,3,3])
**VARIABLES**
BOOL aux384 #(5=actionTypes_00002)
BOOL aux385 #(5=actionTypes_00002)
BOOL aux386 #(5=actionTypes_00002)
BOOL aux387 #(5=actionTypes_00002)
DISCRETE aux388 #SafeElement([3, -1], aux96)
{-1..3}
**CONSTRAINTS**
w-inintervalset(aux388, [-1,0,3,3])
**VARIABLES**
BOOL aux389 #(5=actionTypes_00002)
BOOL aux390 #(5=actionTypes_00003)
BOOL aux391 #(5=actionTypes_00003)
BOOL aux392 #(5=actionTypes_00003)
DISCRETE aux393 #SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], aux76)
{-1..100}
BOOL aux394 #(5=actionTypes_00003)
BOOL aux395 #(5=actionTypes_00003)
BOOL aux396 #(5=actionTypes_00003)
BOOL aux397 #(5=actionTypes_00003)
DISCRETE aux398 #SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], aux93)
{-1..100}
BOOL aux399 #(5=actionTypes_00003)
BOOL aux400 #(5=actionTypes_00004)
BOOL aux401 #(5=actionTypes_00004)
BOOL aux402 #(5=actionTypes_00004)
DISCRETE aux403 #SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], aux79)
{-1..100}
BOOL aux404 #(5=actionTypes_00004)
BOOL aux405 #(5=actionTypes_00004)
BOOL aux406 #(5=actionTypes_00004)
BOOL aux407 #(5=actionTypes_00004)
DISCRETE aux408 #SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], aux71)
{-1..100}
BOOL aux409 #(5=actionTypes_00004)
BOOL aux410 #(5=actionTypes_00005)
BOOL aux411 #(5=actionTypes_00005)
BOOL aux412 #(5=actionTypes_00005)
DISCRETE aux413 #SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], aux78)
{-1..100}
BOOL aux414 #(5=actionTypes_00005)
BOOL aux415 #(5=actionTypes_00005)
BOOL aux416 #(5=actionTypes_00005)
BOOL aux417 #(5=actionTypes_00005)
DISCRETE aux418 #SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], aux70)
{-1..100}
BOOL aux419 #(5=actionTypes_00005)
BOOL aux420 #(5=actionTypes_00006)
BOOL aux421 #(5=actionTypes_00006)
BOOL aux422 #(5=actionTypes_00006)
DISCRETE aux423 #SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], aux73)
{-1..100}
BOOL aux424 #(5=actionTypes_00006)
BOOL aux425 #(5=actionTypes_00006)
BOOL aux426 #(5=actionTypes_00006)
BOOL aux427 #(5=actionTypes_00006)
DISCRETE aux428 #SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], aux94)
{-1..100}
BOOL aux429 #(5=actionTypes_00006)
BOOL aux430 #(5=actionTypes_00007)
BOOL aux431 #(5=actionTypes_00007)
BOOL aux432 #(5=actionTypes_00007)
DISCRETE aux433 #SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], aux72)
{-1..100}
BOOL aux434 #(5=actionTypes_00007)
BOOL aux435 #(5=actionTypes_00007)
BOOL aux436 #(5=actionTypes_00007)
BOOL aux437 #(5=actionTypes_00007)
DISCRETE aux438 #SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], aux95)
{-1..100}
BOOL aux439 #(5=actionTypes_00007)
BOOL aux440 #(5=actionTypes_00008)
BOOL aux441 #(5=actionTypes_00008)
BOOL aux442 #(5=actionTypes_00008)
DISCRETE aux443 #SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], aux75)
{-1..100}
BOOL aux444 #(5=actionTypes_00008)
BOOL aux445 #(5=actionTypes_00008)
BOOL aux446 #(5=actionTypes_00008)
BOOL aux447 #(5=actionTypes_00008)
DISCRETE aux448 #SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], aux83)
{-1..100}
BOOL aux449 #(5=actionTypes_00008)
BOOL aux450 #(5=actionTypes_00009)
BOOL aux451 #(5=actionTypes_00009)
BOOL aux452 #(5=actionTypes_00009)
DISCRETE aux453 #SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], aux74)
{-1..100}
BOOL aux454 #(5=actionTypes_00009)
BOOL aux455 #(5=actionTypes_00009)
BOOL aux456 #(5=actionTypes_00009)
BOOL aux457 #(5=actionTypes_00009)
DISCRETE aux458 #SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], aux81)
{-1..100}
BOOL aux459 #(5=actionTypes_00009)
BOOL aux460 #(5=actionTypes_00010)
BOOL aux461 #(5=actionTypes_00010)
BOOL aux462 #(5=actionTypes_00010)
DISCRETE aux463 #SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], aux80)
{-1..100}
BOOL aux464 #(5=actionTypes_00010)
BOOL aux465 #(5=actionTypes_00010)
BOOL aux466 #(5=actionTypes_00010)
BOOL aux467 #(5=actionTypes_00010)
DISCRETE aux468 #SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], aux82)
{-1..100}
BOOL aux469 #(5=actionTypes_00010)
**VARIABLES**
ALIAS output[2]=[5, 21]
**VARIABLES**
ALIAS input[4]=[3, 2, 9, 12]
**SEARCH**
PRINT[[statePlaces_00002_00002],[statePlaces_00002_00003],[statePlaces_00002_00004],[statePlaces_00002_00005],[statePlaces_00002_00006],[statePlaces_00002_00007],[statePlaces_00002_00008],[statePlaces_00002_00009],[statePlaces_00002_00010],[statePlaces_00003_00002],[statePlaces_00003_00003],[statePlaces_00003_00004],[statePlaces_00003_00005],[statePlaces_00003_00006],[statePlaces_00003_00007],[statePlaces_00003_00008],[statePlaces_00003_00009],[statePlaces_00003_00010],[actionTypes_00002],[actionTypes_00003],[actionTypes_00004],[actionTypes_00005],[actionTypes_00006],[actionTypes_00007],[actionTypes_00008],[actionTypes_00009],[actionTypes_00010],[actionFrom_00002],[actionFrom_00003],[actionFrom_00004],[actionFrom_00005],[actionFrom_00006],[actionFrom_00007],[actionFrom_00008],[actionFrom_00009],[actionFrom_00010],[actionTo_00002],[actionTo_00003],[actionTo_00004],[actionTo_00005],[actionTo_00006],[actionTo_00007],[actionTo_00008],[actionTo_00009],[actionTo_00010],[pointers_00000_00002],[pointers_00000_00003],[pointers_00000_00004],[pointers_00000_00005],[pointers_00000_00006],[pointers_00000_00007],[pointers_00000_00008],[pointers_00000_00009],[pointers_00000_00010],[pointers_00001_00002],[pointers_00001_00003],[pointers_00001_00004],[pointers_00001_00005],[pointers_00001_00006],[pointers_00001_00007],[pointers_00001_00008],[pointers_00001_00009]]
**CONSTRAINTS**
reify(diseq(1,actionTypes_00002), aux106)
reify(diseq(1,actionTypes_00003), aux107)
reify(diseq(1,actionTypes_00004), aux108)
reify(diseq(1,actionTypes_00005), aux109)
reify(diseq(1,actionTypes_00006), aux110)
reify(diseq(1,actionTypes_00007), aux111)
reify(diseq(1,actionTypes_00008), aux112)
reify(diseq(1,actionTypes_00009), aux113)
reify(diseq(1,actionTypes_00010), aux114)
reify(diseq(2,actionTypes_00002), aux115)
reify(diseq(2,actionTypes_00003), aux116)
reify(diseq(2,actionTypes_00004), aux117)
reify(diseq(2,actionTypes_00005), aux118)
reify(diseq(2,actionTypes_00006), aux119)
reify(diseq(2,actionTypes_00007), aux120)
reify(diseq(2,actionTypes_00008), aux121)
reify(diseq(2,actionTypes_00009), aux122)
reify(diseq(2,actionTypes_00010), aux123)
reify(watched-or({w-literal(actionTypes_00002,1),w-literal(actionTypes_00002,2),w-literal(actionTypes_00002,3),w-literal(actionTypes_00002,5),watched-and({w-literal(actionTypes_00002,4),diseq(actionTo_00002,3)})}), aux124)
reify(watched-or({w-literal(actionTypes_00003,1),w-literal(actionTypes_00003,2),w-literal(actionTypes_00003,3),w-literal(actionTypes_00003,5),watched-and({w-literal(actionTypes_00003,4),diseq(actionTo_00003,3)})}), aux125)
reify(watched-or({w-literal(actionTypes_00004,1),w-literal(actionTypes_00004,2),w-literal(actionTypes_00004,3),w-literal(actionTypes_00004,5),watched-and({w-literal(actionTypes_00004,4),diseq(actionTo_00004,3)})}), aux126)
reify(watched-or({w-literal(actionTypes_00005,1),w-literal(actionTypes_00005,2),w-literal(actionTypes_00005,3),w-literal(actionTypes_00005,5),watched-and({w-literal(actionTypes_00005,4),diseq(actionTo_00005,3)})}), aux127)
reify(watched-or({w-literal(actionTypes_00006,1),w-literal(actionTypes_00006,2),w-literal(actionTypes_00006,3),w-literal(actionTypes_00006,5),watched-and({w-literal(actionTypes_00006,4),diseq(actionTo_00006,3)})}), aux128)
reify(watched-or({w-literal(actionTypes_00007,1),w-literal(actionTypes_00007,2),w-literal(actionTypes_00007,3),w-literal(actionTypes_00007,5),watched-and({w-literal(actionTypes_00007,4),diseq(actionTo_00007,3)})}), aux129)
reify(watched-or({w-literal(actionTypes_00008,1),w-literal(actionTypes_00008,2),w-literal(actionTypes_00008,3),w-literal(actionTypes_00008,5),watched-and({w-literal(actionTypes_00008,4),diseq(actionTo_00008,3)})}), aux130)
reify(watched-or({w-literal(actionTypes_00009,1),w-literal(actionTypes_00009,2),w-literal(actionTypes_00009,3),w-literal(actionTypes_00009,5),watched-and({w-literal(actionTypes_00009,4),diseq(actionTo_00009,3)})}), aux131)
reify(watched-or({w-literal(actionTypes_00010,1),w-literal(actionTypes_00010,2),w-literal(actionTypes_00010,3),w-literal(actionTypes_00010,5),watched-and({w-literal(actionTypes_00010,4),diseq(actionTo_00010,3)})}), aux132)
reify(watched-or({w-literal(actionTypes_00002,2),w-literal(actionTypes_00002,4)}), aux133)
reify(watched-or({w-literal(actionTypes_00003,2),w-literal(actionTypes_00003,4)}), aux134)
reify(watched-or({w-literal(actionTypes_00004,2),w-literal(actionTypes_00004,4)}), aux135)
reify(watched-or({w-literal(actionTypes_00005,2),w-literal(actionTypes_00005,4)}), aux136)
reify(watched-or({w-literal(actionTypes_00006,2),w-literal(actionTypes_00006,4)}), aux137)
reify(watched-or({w-literal(actionTypes_00007,2),w-literal(actionTypes_00007,4)}), aux138)
reify(watched-or({w-literal(actionTypes_00008,2),w-literal(actionTypes_00008,4)}), aux139)
reify(watched-or({w-literal(actionTypes_00009,2),w-literal(actionTypes_00009,4)}), aux140)
reify(watched-or({w-literal(actionTypes_00010,2),w-literal(actionTypes_00010,4)}), aux141)
reify(w-literal(actionTypes_00002,1), aux142)
reify(w-literal(actionTypes_00002,1), aux143)
reify(w-literal(actionTypes_00002,1), aux144)
reify(w-literal(actionTypes_00002,1), aux145)
reify(w-literal(actionTypes_00002,1), aux146)
reify(w-literal(actionTypes_00003,1), aux148)
reify(w-literal(actionTypes_00003,1), aux149)
reify(w-literal(actionTypes_00003,1), aux150)
reify(w-literal(actionTypes_00003,1), aux151)
reify(w-literal(actionTypes_00003,1), aux152)
reify(w-literal(actionTypes_00004,1), aux154)
reify(w-literal(actionTypes_00004,1), aux155)
reify(w-literal(actionTypes_00004,1), aux156)
reify(w-literal(actionTypes_00004,1), aux157)
reify(w-literal(actionTypes_00004,1), aux158)
reify(w-literal(actionTypes_00005,1), aux160)
reify(w-literal(actionTypes_00005,1), aux161)
reify(w-literal(actionTypes_00005,1), aux162)
reify(w-literal(actionTypes_00005,1), aux163)
reify(w-literal(actionTypes_00005,1), aux164)
reify(w-literal(actionTypes_00006,1), aux166)
reify(w-literal(actionTypes_00006,1), aux167)
reify(w-literal(actionTypes_00006,1), aux168)
reify(w-literal(actionTypes_00006,1), aux169)
reify(w-literal(actionTypes_00006,1), aux170)
reify(w-literal(actionTypes_00007,1), aux172)
reify(w-literal(actionTypes_00007,1), aux173)
reify(w-literal(actionTypes_00007,1), aux174)
reify(w-literal(actionTypes_00007,1), aux175)
reify(w-literal(actionTypes_00007,1), aux176)
reify(w-literal(actionTypes_00008,1), aux178)
reify(w-literal(actionTypes_00008,1), aux179)
reify(w-literal(actionTypes_00008,1), aux180)
reify(w-literal(actionTypes_00008,1), aux181)
reify(w-literal(actionTypes_00008,1), aux182)
reify(w-literal(actionTypes_00009,1), aux184)
reify(w-literal(actionTypes_00009,1), aux185)
reify(w-literal(actionTypes_00009,1), aux186)
reify(w-literal(actionTypes_00009,1), aux187)
reify(w-literal(actionTypes_00009,1), aux188)
reify(w-literal(actionTypes_00010,1), aux190)
reify(w-literal(actionTypes_00010,1), aux191)
reify(w-literal(actionTypes_00010,1), aux192)
reify(w-literal(actionTypes_00010,1), aux193)
reify(w-literal(actionTypes_00010,1), aux194)
reify(w-literal(actionTypes_00002,2), aux196)
reify(w-literal(actionTypes_00002,2), aux197)
reify(w-literal(actionTypes_00002,2), aux198)
reify(w-literal(actionTypes_00002,2), aux199)
reify(w-literal(actionTypes_00002,2), aux200)
reify(w-literal(actionTypes_00002,2), aux201)
reify(w-literal(actionTypes_00002,2), aux202)
reify(w-literal(actionTypes_00003,2), aux204)
reify(w-literal(actionTypes_00003,2), aux205)
reify(w-literal(actionTypes_00003,2), aux206)
reify(w-literal(actionTypes_00003,2), aux207)
reify(w-literal(actionTypes_00003,2), aux208)
reify(w-literal(actionTypes_00003,2), aux209)
reify(w-literal(actionTypes_00003,2), aux210)
reify(w-literal(actionTypes_00003,2), aux211)
reify(w-literal(actionTypes_00004,2), aux213)
reify(w-literal(actionTypes_00004,2), aux214)
reify(w-literal(actionTypes_00004,2), aux215)
reify(w-literal(actionTypes_00004,2), aux216)
reify(w-literal(actionTypes_00004,2), aux217)
reify(w-literal(actionTypes_00004,2), aux218)
reify(w-literal(actionTypes_00004,2), aux219)
reify(w-literal(actionTypes_00004,2), aux220)
reify(w-literal(actionTypes_00005,2), aux222)
reify(w-literal(actionTypes_00005,2), aux223)
reify(w-literal(actionTypes_00005,2), aux224)
reify(w-literal(actionTypes_00005,2), aux225)
reify(w-literal(actionTypes_00005,2), aux226)
reify(w-literal(actionTypes_00005,2), aux227)
reify(w-literal(actionTypes_00005,2), aux228)
reify(w-literal(actionTypes_00005,2), aux229)
reify(w-literal(actionTypes_00006,2), aux231)
reify(w-literal(actionTypes_00006,2), aux232)
reify(w-literal(actionTypes_00006,2), aux233)
reify(w-literal(actionTypes_00006,2), aux234)
reify(w-literal(actionTypes_00006,2), aux235)
reify(w-literal(actionTypes_00006,2), aux236)
reify(w-literal(actionTypes_00006,2), aux237)
reify(w-literal(actionTypes_00006,2), aux238)
reify(w-literal(actionTypes_00007,2), aux240)
reify(w-literal(actionTypes_00007,2), aux241)
reify(w-literal(actionTypes_00007,2), aux242)
reify(w-literal(actionTypes_00007,2), aux243)
reify(w-literal(actionTypes_00007,2), aux244)
reify(w-literal(actionTypes_00007,2), aux245)
reify(w-literal(actionTypes_00007,2), aux246)
reify(w-literal(actionTypes_00007,2), aux247)
reify(w-literal(actionTypes_00008,2), aux249)
reify(w-literal(actionTypes_00008,2), aux250)
reify(w-literal(actionTypes_00008,2), aux251)
reify(w-literal(actionTypes_00008,2), aux252)
reify(w-literal(actionTypes_00008,2), aux253)
reify(w-literal(actionTypes_00008,2), aux254)
reify(w-literal(actionTypes_00008,2), aux255)
reify(w-literal(actionTypes_00008,2), aux256)
reify(w-literal(actionTypes_00009,2), aux258)
reify(w-literal(actionTypes_00009,2), aux259)
reify(w-literal(actionTypes_00009,2), aux260)
reify(w-literal(actionTypes_00009,2), aux261)
reify(w-literal(actionTypes_00009,2), aux262)
reify(w-literal(actionTypes_00009,2), aux263)
reify(w-literal(actionTypes_00009,2), aux264)
reify(w-literal(actionTypes_00009,2), aux265)
reify(w-literal(actionTypes_00010,2), aux267)
reify(w-literal(actionTypes_00010,2), aux268)
reify(w-literal(actionTypes_00010,2), aux269)
reify(w-literal(actionTypes_00010,2), aux270)
reify(w-literal(actionTypes_00010,2), aux271)
reify(w-literal(actionTypes_00010,2), aux272)
reify(w-literal(actionTypes_00002,3), aux273)
reify(w-literal(actionTypes_00002,3), aux274)
reify(w-literal(actionTypes_00002,3), aux275)
reify(w-literal(actionTypes_00002,3), aux276)
reify(w-literal(actionTypes_00002,3), aux277)
reify(w-literal(actionTypes_00002,3), aux278)
reify(w-literal(actionTypes_00003,3), aux279)
reify(w-literal(actionTypes_00003,3), aux280)
reify(w-literal(actionTypes_00003,3), aux281)
reify(w-literal(actionTypes_00003,3), aux282)
reify(w-literal(actionTypes_00003,3), aux283)
reify(w-literal(actionTypes_00003,3), aux284)
reify(w-literal(actionTypes_00004,3), aux285)
reify(w-literal(actionTypes_00004,3), aux286)
reify(w-literal(actionTypes_00004,3), aux287)
reify(w-literal(actionTypes_00004,3), aux288)
reify(w-literal(actionTypes_00004,3), aux289)
reify(w-literal(actionTypes_00004,3), aux290)
reify(w-literal(actionTypes_00005,3), aux291)
reify(w-literal(actionTypes_00005,3), aux292)
reify(w-literal(actionTypes_00005,3), aux293)
reify(w-literal(actionTypes_00005,3), aux294)
reify(w-literal(actionTypes_00005,3), aux295)
reify(w-literal(actionTypes_00005,3), aux296)
reify(w-literal(actionTypes_00006,3), aux297)
reify(w-literal(actionTypes_00006,3), aux298)
reify(w-literal(actionTypes_00006,3), aux299)
reify(w-literal(actionTypes_00006,3), aux300)
reify(w-literal(actionTypes_00006,3), aux301)
reify(w-literal(actionTypes_00006,3), aux302)
reify(w-literal(actionTypes_00007,3), aux303)
reify(w-literal(actionTypes_00007,3), aux304)
reify(w-literal(actionTypes_00007,3), aux305)
reify(w-literal(actionTypes_00007,3), aux306)
reify(w-literal(actionTypes_00007,3), aux307)
reify(w-literal(actionTypes_00007,3), aux308)
reify(w-literal(actionTypes_00008,3), aux309)
reify(w-literal(actionTypes_00008,3), aux310)
reify(w-literal(actionTypes_00008,3), aux311)
reify(w-literal(actionTypes_00008,3), aux312)
reify(w-literal(actionTypes_00008,3), aux313)
reify(w-literal(actionTypes_00008,3), aux314)
reify(w-literal(actionTypes_00009,3), aux315)
reify(w-literal(actionTypes_00009,3), aux316)
reify(w-literal(actionTypes_00009,3), aux317)
reify(w-literal(actionTypes_00009,3), aux318)
reify(w-literal(actionTypes_00009,3), aux319)
reify(w-literal(actionTypes_00009,3), aux320)
reify(w-literal(actionTypes_00010,3), aux321)
reify(w-literal(actionTypes_00010,3), aux322)
reify(w-literal(actionTypes_00010,3), aux323)
reify(w-literal(actionTypes_00010,3), aux324)
reify(w-literal(actionTypes_00010,3), aux325)
reify(w-literal(actionTypes_00010,3), aux326)
reify(w-literal(actionTypes_00002,4), aux327)
reify(w-literal(actionTypes_00002,4), aux328)
reify(w-literal(actionTypes_00002,4), aux329)
reify(w-literal(actionTypes_00002,4), aux330)
reify(w-literal(actionTypes_00002,4), aux331)
reify(w-literal(actionTypes_00003,4), aux332)
reify(w-literal(actionTypes_00003,4), aux333)
reify(w-literal(actionTypes_00003,4), aux334)
reify(w-literal(actionTypes_00003,4), aux335)
reify(w-literal(actionTypes_00003,4), aux336)
reify(w-literal(actionTypes_00003,4), aux337)
reify(w-literal(actionTypes_00004,4), aux338)
reify(w-literal(actionTypes_00004,4), aux339)
reify(w-literal(actionTypes_00004,4), aux340)
reify(w-literal(actionTypes_00004,4), aux341)
reify(w-literal(actionTypes_00004,4), aux342)
reify(w-literal(actionTypes_00004,4), aux343)
reify(w-literal(actionTypes_00005,4), aux344)
reify(w-literal(actionTypes_00005,4), aux345)
reify(w-literal(actionTypes_00005,4), aux346)
reify(w-literal(actionTypes_00005,4), aux347)
reify(w-literal(actionTypes_00005,4), aux348)
reify(w-literal(actionTypes_00005,4), aux349)
reify(w-literal(actionTypes_00006,4), aux350)
reify(w-literal(actionTypes_00006,4), aux351)
reify(w-literal(actionTypes_00006,4), aux352)
reify(w-literal(actionTypes_00006,4), aux353)
reify(w-literal(actionTypes_00006,4), aux354)
reify(w-literal(actionTypes_00006,4), aux355)
reify(w-literal(actionTypes_00007,4), aux356)
reify(w-literal(actionTypes_00007,4), aux357)
reify(w-literal(actionTypes_00007,4), aux358)
reify(w-literal(actionTypes_00007,4), aux359)
reify(w-literal(actionTypes_00007,4), aux360)
reify(w-literal(actionTypes_00007,4), aux361)
reify(w-literal(actionTypes_00008,4), aux362)
reify(w-literal(actionTypes_00008,4), aux363)
reify(w-literal(actionTypes_00008,4), aux364)
reify(w-literal(actionTypes_00008,4), aux365)
reify(w-literal(actionTypes_00008,4), aux366)
reify(w-literal(actionTypes_00008,4), aux367)
reify(w-literal(actionTypes_00009,4), aux368)
reify(w-literal(actionTypes_00009,4), aux369)
reify(w-literal(actionTypes_00009,4), aux370)
reify(w-literal(actionTypes_00009,4), aux371)
reify(w-literal(actionTypes_00009,4), aux372)
reify(w-literal(actionTypes_00009,4), aux373)
reify(w-literal(actionTypes_00010,4), aux374)
reify(w-literal(actionTypes_00010,4), aux375)
reify(w-literal(actionTypes_00010,4), aux376)
reify(w-literal(actionTypes_00010,4), aux377)
reify(w-literal(actionTypes_00010,4), aux378)
reify(w-literal(actionTypes_00010,4), aux379)
reify(w-literal(actionTypes_00002,5), aux380)
reify(w-literal(actionTypes_00002,5), aux381)
reify(w-literal(actionTypes_00002,5), aux382)
watchelement_undefzero([3, -1], aux77, aux383)
reify(w-literal(actionTypes_00002,5), aux384)
reify(w-literal(actionTypes_00002,5), aux385)
reify(w-literal(actionTypes_00002,5), aux386)
reify(w-literal(actionTypes_00002,5), aux387)
watchelement_undefzero([3, -1], aux96, aux388)
reify(w-literal(actionTypes_00002,5), aux389)
reify(w-literal(actionTypes_00003,5), aux390)
reify(w-literal(actionTypes_00003,5), aux391)
reify(w-literal(actionTypes_00003,5), aux392)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux76, aux393)
reify(w-literal(actionTypes_00003,5), aux394)
reify(w-literal(actionTypes_00003,5), aux395)
reify(w-literal(actionTypes_00003,5), aux396)
reify(w-literal(actionTypes_00003,5), aux397)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux93, aux398)
reify(w-literal(actionTypes_00003,5), aux399)
reify(w-literal(actionTypes_00004,5), aux400)
reify(w-literal(actionTypes_00004,5), aux401)
reify(w-literal(actionTypes_00004,5), aux402)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux79, aux403)
reify(w-literal(actionTypes_00004,5), aux404)
reify(w-literal(actionTypes_00004,5), aux405)
reify(w-literal(actionTypes_00004,5), aux406)
reify(w-literal(actionTypes_00004,5), aux407)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux71, aux408)
reify(w-literal(actionTypes_00004,5), aux409)
reify(w-literal(actionTypes_00005,5), aux410)
reify(w-literal(actionTypes_00005,5), aux411)
reify(w-literal(actionTypes_00005,5), aux412)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux78, aux413)
reify(w-literal(actionTypes_00005,5), aux414)
reify(w-literal(actionTypes_00005,5), aux415)
reify(w-literal(actionTypes_00005,5), aux416)
reify(w-literal(actionTypes_00005,5), aux417)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux70, aux418)
reify(w-literal(actionTypes_00005,5), aux419)
reify(w-literal(actionTypes_00006,5), aux420)
reify(w-literal(actionTypes_00006,5), aux421)
reify(w-literal(actionTypes_00006,5), aux422)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux73, aux423)
reify(w-literal(actionTypes_00006,5), aux424)
reify(w-literal(actionTypes_00006,5), aux425)
reify(w-literal(actionTypes_00006,5), aux426)
reify(w-literal(actionTypes_00006,5), aux427)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux94, aux428)
reify(w-literal(actionTypes_00006,5), aux429)
reify(w-literal(actionTypes_00007,5), aux430)
reify(w-literal(actionTypes_00007,5), aux431)
reify(w-literal(actionTypes_00007,5), aux432)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux72, aux433)
reify(w-literal(actionTypes_00007,5), aux434)
reify(w-literal(actionTypes_00007,5), aux435)
reify(w-literal(actionTypes_00007,5), aux436)
reify(w-literal(actionTypes_00007,5), aux437)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux95, aux438)
reify(w-literal(actionTypes_00007,5), aux439)
reify(w-literal(actionTypes_00008,5), aux440)
reify(w-literal(actionTypes_00008,5), aux441)
reify(w-literal(actionTypes_00008,5), aux442)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux75, aux443)
reify(w-literal(actionTypes_00008,5), aux444)
reify(w-literal(actionTypes_00008,5), aux445)
reify(w-literal(actionTypes_00008,5), aux446)
reify(w-literal(actionTypes_00008,5), aux447)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux83, aux448)
reify(w-literal(actionTypes_00008,5), aux449)
reify(w-literal(actionTypes_00009,5), aux450)
reify(w-literal(actionTypes_00009,5), aux451)
reify(w-literal(actionTypes_00009,5), aux452)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux74, aux453)
reify(w-literal(actionTypes_00009,5), aux454)
reify(w-literal(actionTypes_00009,5), aux455)
reify(w-literal(actionTypes_00009,5), aux456)
reify(w-literal(actionTypes_00009,5), aux457)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux81, aux458)
reify(w-literal(actionTypes_00009,5), aux459)
reify(w-literal(actionTypes_00010,5), aux460)
reify(w-literal(actionTypes_00010,5), aux461)
reify(w-literal(actionTypes_00010,5), aux462)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux80, aux463)
reify(w-literal(actionTypes_00010,5), aux464)
reify(w-literal(actionTypes_00010,5), aux465)
reify(w-literal(actionTypes_00010,5), aux466)
reify(w-literal(actionTypes_00010,5), aux467)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux82, aux468)
reify(w-literal(actionTypes_00010,5), aux469)
reify(watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux80, aux66), aux52)
reify(watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux74, aux65), aux53)
reify(watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux76, aux63), aux54)
reify(watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux79, aux69), aux55)
reify(watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux77, aux61), aux56)
reify(watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux72, aux62), aux57)
reify(watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux75, aux68), aux58)
reify(watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux78, aux67), aux59)
reify(watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux73, aux64), aux60)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux96, aux61)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux95, aux62)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux93, aux63)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux94, aux64)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux81, aux65)
watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux82, aux66)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux70, aux67)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux83, aux68)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux71, aux69)
reify(w-inintervalset(actionTo_00002,[2,3]), aux84)
reify(w-inintervalset(actionTo_00003,[2,3]), aux85)
reify(w-inintervalset(actionTo_00004,[2,3]), aux86)
reify(w-inintervalset(actionTo_00005,[2,3]), aux87)
reify(w-inintervalset(actionTo_00006,[2,3]), aux88)
reify(w-inintervalset(actionTo_00007,[2,3]), aux89)
reify(w-inintervalset(actionTo_00008,[2,3]), aux90)
reify(w-inintervalset(actionTo_00009,[2,3]), aux91)
reify(w-inintervalset(actionTo_00010,[2,3]), aux92)
reify(w-inintervalset(actionFrom_00005,[2,3]), aux97)
reify(w-inintervalset(actionFrom_00006,[2,3]), aux98)
reify(w-inintervalset(actionFrom_00003,[2,3]), aux99)
reify(w-inintervalset(actionFrom_00004,[2,3]), aux100)
reify(w-inintervalset(actionFrom_00007,[2,3]), aux101)
reify(w-inintervalset(actionFrom_00008,[2,3]), aux102)
reify(w-inintervalset(actionFrom_00009,[2,3]), aux103)
reify(w-inintervalset(actionFrom_00010,[2,3]), aux104)
reify(w-inintervalset(actionFrom_00002,[2,3]), aux105)
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00010, 2])})
watched-or({ineq(statePlaces_00002_00002, 3, -1),lexless([1, 0],[pointers_00000_00002, pointers_00001_00002]),lexless([3, -1],[statePlaces_00002_00002, statePlaces_00003_00002])})
watched-or({ineq(statePlaces_00002_00003, 3, -1),lexless([1, 0],[pointers_00000_00003, pointers_00001_00003]),lexless([3, -1],[statePlaces_00002_00003, statePlaces_00003_00003])})
watched-or({ineq(statePlaces_00002_00004, 3, -1),lexless([1, 0],[pointers_00000_00004, pointers_00001_00004]),lexless([3, -1],[statePlaces_00002_00004, statePlaces_00003_00004])})
watched-or({ineq(statePlaces_00002_00005, 3, -1),lexless([1, 0],[pointers_00000_00005, pointers_00001_00005]),lexless([3, -1],[statePlaces_00002_00005, statePlaces_00003_00005])})
watched-or({ineq(statePlaces_00002_00006, 3, -1),lexless([1, 0],[pointers_00000_00006, pointers_00001_00006]),lexless([3, -1],[statePlaces_00002_00006, statePlaces_00003_00006])})
watched-or({ineq(statePlaces_00002_00007, 3, -1),lexless([1, 0],[pointers_00000_00007, pointers_00001_00007]),lexless([3, -1],[statePlaces_00002_00007, statePlaces_00003_00007])})
watched-or({ineq(statePlaces_00002_00008, 3, -1),lexless([1, 0],[pointers_00000_00008, pointers_00001_00008]),lexless([3, -1],[statePlaces_00002_00008, statePlaces_00003_00008])})
watched-or({ineq(statePlaces_00002_00009, 3, -1),lexless([1, 0],[pointers_00000_00009, pointers_00001_00009]),lexless([3, -1],[statePlaces_00002_00009, statePlaces_00003_00009])})
watched-or({ineq(statePlaces_00002_00010, 3, -1),lexless([1, 0],[pointers_00000_00010, 2]),lexless([3, -1],[statePlaces_00002_00010, statePlaces_00003_00010])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00003, pointers_00001_00003])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00004, pointers_00001_00004])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00010, 2])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00004, pointers_00001_00004])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00010, 2])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00010, 2])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00010, 2])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00010, 2])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00010, 2])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00010, 2])})
reifyimply(w-literal(pointers_00000_00002,1), aux106)
reifyimply(gaceq(pointers_00000_00002,pointers_00000_00003), aux107)
reifyimply(gaceq(pointers_00000_00003,pointers_00000_00004), aux108)
reifyimply(gaceq(pointers_00000_00004,pointers_00000_00005), aux109)
reifyimply(gaceq(pointers_00000_00005,pointers_00000_00006), aux110)
reifyimply(gaceq(pointers_00000_00006,pointers_00000_00007), aux111)
reifyimply(gaceq(pointers_00000_00007,pointers_00000_00008), aux112)
reifyimply(gaceq(pointers_00000_00008,pointers_00000_00009), aux113)
reifyimply(gaceq(pointers_00000_00009,pointers_00000_00010), aux114)
reifyimply(w-literal(pointers_00001_00002,0), aux115)
reifyimply(gaceq(pointers_00001_00002,pointers_00001_00003), aux116)
reifyimply(gaceq(pointers_00001_00003,pointers_00001_00004), aux117)
reifyimply(gaceq(pointers_00001_00004,pointers_00001_00005), aux118)
reifyimply(gaceq(pointers_00001_00005,pointers_00001_00006), aux119)
reifyimply(gaceq(pointers_00001_00006,pointers_00001_00007), aux120)
reifyimply(gaceq(pointers_00001_00007,pointers_00001_00008), aux121)
reifyimply(gaceq(pointers_00001_00008,pointers_00001_00009), aux122)
reifyimply(w-literal(pointers_00001_00009,2), aux123)
reifyimply(w-literal(statePlaces_00003_00002,-1), aux124)
reifyimply(gaceq(statePlaces_00003_00002,statePlaces_00003_00003), aux125)
reifyimply(gaceq(statePlaces_00003_00003,statePlaces_00003_00004), aux126)
reifyimply(gaceq(statePlaces_00003_00004,statePlaces_00003_00005), aux127)
reifyimply(gaceq(statePlaces_00003_00005,statePlaces_00003_00006), aux128)
reifyimply(gaceq(statePlaces_00003_00006,statePlaces_00003_00007), aux129)
reifyimply(gaceq(statePlaces_00003_00007,statePlaces_00003_00008), aux130)
reifyimply(gaceq(statePlaces_00003_00008,statePlaces_00003_00009), aux131)
reifyimply(gaceq(statePlaces_00003_00009,statePlaces_00003_00010), aux132)
reifyimply(w-literal(statePlaces_00002_00002,3), aux133)
reifyimply(gaceq(statePlaces_00002_00002,statePlaces_00002_00003), aux134)
reifyimply(gaceq(statePlaces_00002_00003,statePlaces_00002_00004), aux135)
reifyimply(gaceq(statePlaces_00002_00004,statePlaces_00002_00005), aux136)
reifyimply(gaceq(statePlaces_00002_00005,statePlaces_00002_00006), aux137)
reifyimply(gaceq(statePlaces_00002_00006,statePlaces_00002_00007), aux138)
reifyimply(gaceq(statePlaces_00002_00007,statePlaces_00002_00008), aux139)
reifyimply(gaceq(statePlaces_00002_00008,statePlaces_00002_00009), aux140)
reifyimply(gaceq(statePlaces_00002_00009,statePlaces_00002_00010), aux141)
reifyimply(w-literal(pointers_00000_00002,2), aux142)
reifyimply(w-literal(actionFrom_00002,0), aux143)
reifyimply(w-literal(actionTo_00002,2), aux144)
reifyimply(w-inintervalset(pointers_00000_00002,[1,4]), aux145)
reifyimply(watchelement_undefzero([3, 2, 9, 12], aux147, statePlaces_00002_00002), aux146)
reifyimply(w-literal(actionFrom_00003,0), aux149)
reifyimply(w-literal(actionTo_00003,2), aux150)
reifyimply(w-inintervalset(pointers_00000_00003,[1,4]), aux151)
reifyimply(watchelement_undefzero([3, 2, 9, 12], aux153, statePlaces_00002_00003), aux152)
reifyimply(w-literal(actionFrom_00004,0), aux155)
reifyimply(w-literal(actionTo_00004,2), aux156)
reifyimply(w-inintervalset(pointers_00000_00004,[1,4]), aux157)
reifyimply(watchelement_undefzero([3, 2, 9, 12], aux159, statePlaces_00002_00004), aux158)
reifyimply(w-literal(actionFrom_00005,0), aux161)
reifyimply(w-literal(actionTo_00005,2), aux162)
reifyimply(w-inintervalset(pointers_00000_00005,[1,4]), aux163)
reifyimply(watchelement_undefzero([3, 2, 9, 12], aux165, statePlaces_00002_00005), aux164)
reifyimply(w-literal(actionFrom_00006,0), aux167)
reifyimply(w-literal(actionTo_00006,2), aux168)
reifyimply(w-inintervalset(pointers_00000_00006,[1,4]), aux169)
reifyimply(watchelement_undefzero([3, 2, 9, 12], aux171, statePlaces_00002_00006), aux170)
reifyimply(w-literal(actionFrom_00007,0), aux173)
reifyimply(w-literal(actionTo_00007,2), aux174)
reifyimply(w-inintervalset(pointers_00000_00007,[1,4]), aux175)
reifyimply(watchelement_undefzero([3, 2, 9, 12], aux177, statePlaces_00002_00007), aux176)
reifyimply(w-literal(actionFrom_00008,0), aux179)
reifyimply(w-literal(actionTo_00008,2), aux180)
reifyimply(w-inintervalset(pointers_00000_00008,[1,4]), aux181)
reifyimply(watchelement_undefzero([3, 2, 9, 12], aux183, statePlaces_00002_00008), aux182)
reifyimply(w-literal(actionFrom_00009,0), aux185)
reifyimply(w-literal(actionTo_00009,2), aux186)
reifyimply(w-inintervalset(pointers_00000_00009,[1,4]), aux187)
reifyimply(watchelement_undefzero([3, 2, 9, 12], aux189, statePlaces_00002_00009), aux188)
reifyimply(w-literal(actionFrom_00010,0), aux191)
reifyimply(w-literal(actionTo_00010,2), aux192)
reifyimply(w-inintervalset(pointers_00000_00010,[1,4]), aux193)
reifyimply(watchelement_undefzero([3, 2, 9, 12], aux195, statePlaces_00002_00010), aux194)
reifyimply(diseq(statePlaces_00002_00002,-1), aux196)
reifyimply(ineq(pointers_00001_00002, 2, 0), aux197)
reifyimply(w-literal(pointers_00001_00002,1), aux198)
reifyimply(w-literal(actionFrom_00002,2), aux199)
reifyimply(w-literal(actionTo_00002,1), aux200)
reifyimply(w-inintervalset(pointers_00001_00002,[1,2]), aux201)
reifyimply(watchelement_undefzero([5, 21], aux203, 3), aux202)
reifyimply(diseq(statePlaces_00002_00003,-1), aux204)
reifyimply(diseq(statePlaces_00002_00002,-1), aux205)
reifyimply(ineq(pointers_00001_00003, 2, 0), aux206)
reifyimply(w-literal(actionFrom_00003,2), aux208)
reifyimply(w-literal(actionTo_00003,1), aux209)
reifyimply(w-inintervalset(pointers_00001_00003,[1,2]), aux210)
reifyimply(watchelement_undefzero([5, 21], aux212, statePlaces_00002_00002), aux211)
reifyimply(diseq(statePlaces_00002_00004,-1), aux213)
reifyimply(diseq(statePlaces_00002_00003,-1), aux214)
reifyimply(ineq(pointers_00001_00004, 2, 0), aux215)
reifyimply(w-literal(actionFrom_00004,2), aux217)
reifyimply(w-literal(actionTo_00004,1), aux218)
reifyimply(w-inintervalset(pointers_00001_00004,[1,2]), aux219)
reifyimply(watchelement_undefzero([5, 21], aux221, statePlaces_00002_00003), aux220)
reifyimply(diseq(statePlaces_00002_00005,-1), aux222)
reifyimply(diseq(statePlaces_00002_00004,-1), aux223)
reifyimply(ineq(pointers_00001_00005, 2, 0), aux224)
reifyimply(w-literal(actionFrom_00005,2), aux226)
reifyimply(w-literal(actionTo_00005,1), aux227)
reifyimply(w-inintervalset(pointers_00001_00005,[1,2]), aux228)
reifyimply(watchelement_undefzero([5, 21], aux230, statePlaces_00002_00004), aux229)
reifyimply(diseq(statePlaces_00002_00006,-1), aux231)
reifyimply(diseq(statePlaces_00002_00005,-1), aux232)
reifyimply(ineq(pointers_00001_00006, 2, 0), aux233)
reifyimply(w-literal(actionFrom_00006,2), aux235)
reifyimply(w-literal(actionTo_00006,1), aux236)
reifyimply(w-inintervalset(pointers_00001_00006,[1,2]), aux237)
reifyimply(watchelement_undefzero([5, 21], aux239, statePlaces_00002_00005), aux238)
reifyimply(diseq(statePlaces_00002_00007,-1), aux240)
reifyimply(diseq(statePlaces_00002_00006,-1), aux241)
reifyimply(ineq(pointers_00001_00007, 2, 0), aux242)
reifyimply(w-literal(actionFrom_00007,2), aux244)
reifyimply(w-literal(actionTo_00007,1), aux245)
reifyimply(w-inintervalset(pointers_00001_00007,[1,2]), aux246)
reifyimply(watchelement_undefzero([5, 21], aux248, statePlaces_00002_00006), aux247)
reifyimply(diseq(statePlaces_00002_00008,-1), aux249)
reifyimply(diseq(statePlaces_00002_00007,-1), aux250)
reifyimply(ineq(pointers_00001_00008, 2, 0), aux251)
reifyimply(w-literal(actionFrom_00008,2), aux253)
reifyimply(w-literal(actionTo_00008,1), aux254)
reifyimply(w-inintervalset(pointers_00001_00008,[1,2]), aux255)
reifyimply(watchelement_undefzero([5, 21], aux257, statePlaces_00002_00007), aux256)
reifyimply(diseq(statePlaces_00002_00009,-1), aux258)
reifyimply(diseq(statePlaces_00002_00008,-1), aux259)
reifyimply(ineq(pointers_00001_00009, 2, 0), aux260)
reifyimply(w-literal(actionFrom_00009,2), aux262)
reifyimply(w-literal(actionTo_00009,1), aux263)
reifyimply(w-inintervalset(pointers_00001_00009,[1,2]), aux264)
reifyimply(watchelement_undefzero([5, 21], aux266, statePlaces_00002_00008), aux265)
reifyimply(diseq(statePlaces_00002_00010,-1), aux267)
reifyimply(diseq(statePlaces_00002_00009,-1), aux268)
reifyimply(w-literal(pointers_00001_00009,1), aux269)
reifyimply(w-literal(actionFrom_00010,2), aux270)
reifyimply(w-literal(actionTo_00010,1), aux271)
reifyimply(w-literal(statePlaces_00002_00009,21), aux272)
ineq(aux273, aux56, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux274)
reifyimply(diseq(aux61,-1), aux275)
reifyimply(w-literal(actionTo_00002,2), aux276)
ineq(aux277, aux84, 0)
ineq(aux278, aux105, 0)
ineq(aux279, aux54, 0)
reifyimply(ineq(3, actionFrom_00003, 0), aux280)
reifyimply(diseq(aux63,-1), aux281)
reifyimply(w-literal(actionTo_00003,2), aux282)
ineq(aux283, aux85, 0)
ineq(aux284, aux99, 0)
ineq(aux285, aux55, 0)
reifyimply(ineq(3, actionFrom_00004, 0), aux286)
reifyimply(diseq(aux69,-1), aux287)
reifyimply(w-literal(actionTo_00004,2), aux288)
ineq(aux289, aux86, 0)
ineq(aux290, aux100, 0)
ineq(aux291, aux59, 0)
reifyimply(ineq(3, actionFrom_00005, 0), aux292)
reifyimply(diseq(aux67,-1), aux293)
reifyimply(w-literal(actionTo_00005,2), aux294)
ineq(aux295, aux87, 0)
ineq(aux296, aux97, 0)
ineq(aux297, aux60, 0)
reifyimply(ineq(3, actionFrom_00006, 0), aux298)
reifyimply(diseq(aux64,-1), aux299)
reifyimply(w-literal(actionTo_00006,2), aux300)
ineq(aux301, aux88, 0)
ineq(aux302, aux98, 0)
ineq(aux303, aux57, 0)
reifyimply(ineq(3, actionFrom_00007, 0), aux304)
reifyimply(diseq(aux62,-1), aux305)
reifyimply(w-literal(actionTo_00007,2), aux306)
ineq(aux307, aux89, 0)
ineq(aux308, aux101, 0)
ineq(aux309, aux58, 0)
reifyimply(ineq(3, actionFrom_00008, 0), aux310)
reifyimply(diseq(aux68,-1), aux311)
reifyimply(w-literal(actionTo_00008,2), aux312)
ineq(aux313, aux90, 0)
ineq(aux314, aux102, 0)
ineq(aux315, aux53, 0)
reifyimply(ineq(3, actionFrom_00009, 0), aux316)
reifyimply(diseq(aux65,-1), aux317)
reifyimply(w-literal(actionTo_00009,2), aux318)
ineq(aux319, aux91, 0)
ineq(aux320, aux103, 0)
ineq(aux321, aux52, 0)
reifyimply(ineq(3, actionFrom_00010, 0), aux322)
reifyimply(diseq(aux66,-1), aux323)
reifyimply(w-literal(actionTo_00010,2), aux324)
ineq(aux325, aux92, 0)
ineq(aux326, aux104, 0)
reifyimply(ineq(3, actionTo_00002, 0), aux327)
reifyimply(w-literal(actionFrom_00002,2), aux328)
ineq(aux329, aux105, 0)
ineq(aux330, aux84, 0)
ineq(aux331, aux56, 0)
reifyimply(ineq(3, actionTo_00003, 0), aux332)
reifyimply(w-literal(actionFrom_00003,2), aux333)
reifyimply(diseq(statePlaces_00002_00002,-1), aux334)
ineq(aux335, aux99, 0)
ineq(aux336, aux85, 0)
ineq(aux337, aux54, 0)
reifyimply(ineq(3, actionTo_00004, 0), aux338)
reifyimply(w-literal(actionFrom_00004,2), aux339)
reifyimply(diseq(statePlaces_00002_00003,-1), aux340)
ineq(aux341, aux100, 0)
ineq(aux342, aux86, 0)
ineq(aux343, aux55, 0)
reifyimply(ineq(3, actionTo_00005, 0), aux344)
reifyimply(w-literal(actionFrom_00005,2), aux345)
reifyimply(diseq(statePlaces_00002_00004,-1), aux346)
ineq(aux347, aux97, 0)
ineq(aux348, aux87, 0)
ineq(aux349, aux59, 0)
reifyimply(ineq(3, actionTo_00006, 0), aux350)
reifyimply(w-literal(actionFrom_00006,2), aux351)
reifyimply(diseq(statePlaces_00002_00005,-1), aux352)
ineq(aux353, aux98, 0)
ineq(aux354, aux88, 0)
ineq(aux355, aux60, 0)
reifyimply(ineq(3, actionTo_00007, 0), aux356)
reifyimply(w-literal(actionFrom_00007,2), aux357)
reifyimply(diseq(statePlaces_00002_00006,-1), aux358)
ineq(aux359, aux101, 0)
ineq(aux360, aux89, 0)
ineq(aux361, aux57, 0)
reifyimply(ineq(3, actionTo_00008, 0), aux362)
reifyimply(w-literal(actionFrom_00008,2), aux363)
reifyimply(diseq(statePlaces_00002_00007,-1), aux364)
ineq(aux365, aux102, 0)
ineq(aux366, aux90, 0)
ineq(aux367, aux58, 0)
reifyimply(ineq(3, actionTo_00009, 0), aux368)
reifyimply(w-literal(actionFrom_00009,2), aux369)
reifyimply(diseq(statePlaces_00002_00008,-1), aux370)
ineq(aux371, aux103, 0)
ineq(aux372, aux91, 0)
ineq(aux373, aux53, 0)
reifyimply(ineq(3, actionTo_00010, 0), aux374)
reifyimply(w-literal(actionFrom_00010,2), aux375)
reifyimply(diseq(statePlaces_00002_00009,-1), aux376)
ineq(aux377, aux104, 0)
ineq(aux378, aux92, 0)
ineq(aux379, aux52, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux380)
reifyimply(diseq(aux61,-1), aux381)
reifyimply(diseq(aux383,-1), aux382)
reifyimply(w-literal(actionTo_00002,2), aux384)
ineq(aux385, aux84, 0)
ineq(aux386, aux105, 0)
reifyimply(diseq(aux388,-1), aux387)
reifyimply(ineq(3, actionFrom_00003, 0), aux390)
reifyimply(diseq(aux63,-1), aux391)
reifyimply(diseq(aux393,-1), aux392)
reifyimply(w-literal(actionTo_00003,2), aux394)
ineq(aux395, aux85, 0)
ineq(aux396, aux99, 0)
reifyimply(diseq(aux398,-1), aux397)
reifyimply(ineq(3, actionFrom_00004, 0), aux400)
reifyimply(diseq(aux69,-1), aux401)
reifyimply(diseq(aux403,-1), aux402)
reifyimply(w-literal(actionTo_00004,2), aux404)
ineq(aux405, aux86, 0)
ineq(aux406, aux100, 0)
reifyimply(diseq(aux408,-1), aux407)
reifyimply(ineq(3, actionFrom_00005, 0), aux410)
reifyimply(diseq(aux67,-1), aux411)
reifyimply(diseq(aux413,-1), aux412)
reifyimply(w-literal(actionTo_00005,2), aux414)
ineq(aux415, aux87, 0)
ineq(aux416, aux97, 0)
reifyimply(diseq(aux418,-1), aux417)
reifyimply(ineq(3, actionFrom_00006, 0), aux420)
reifyimply(diseq(aux64,-1), aux421)
reifyimply(diseq(aux423,-1), aux422)
reifyimply(w-literal(actionTo_00006,2), aux424)
ineq(aux425, aux88, 0)
ineq(aux426, aux98, 0)
reifyimply(diseq(aux428,-1), aux427)
reifyimply(ineq(3, actionFrom_00007, 0), aux430)
reifyimply(diseq(aux62,-1), aux431)
reifyimply(diseq(aux433,-1), aux432)
reifyimply(w-literal(actionTo_00007,2), aux434)
ineq(aux435, aux89, 0)
ineq(aux436, aux101, 0)
reifyimply(diseq(aux438,-1), aux437)
reifyimply(ineq(3, actionFrom_00008, 0), aux440)
reifyimply(diseq(aux68,-1), aux441)
reifyimply(diseq(aux443,-1), aux442)
reifyimply(w-literal(actionTo_00008,2), aux444)
ineq(aux445, aux90, 0)
ineq(aux446, aux102, 0)
reifyimply(diseq(aux448,-1), aux447)
reifyimply(ineq(3, actionFrom_00009, 0), aux450)
reifyimply(diseq(aux65,-1), aux451)
reifyimply(diseq(aux453,-1), aux452)
reifyimply(w-literal(actionTo_00009,2), aux454)
ineq(aux455, aux91, 0)
ineq(aux456, aux103, 0)
reifyimply(diseq(aux458,-1), aux457)
reifyimply(ineq(3, actionFrom_00010, 0), aux460)
reifyimply(diseq(aux66,-1), aux461)
reifyimply(diseq(aux463,-1), aux462)
reifyimply(w-literal(actionTo_00010,2), aux464)
ineq(aux465, aux92, 0)
ineq(aux466, aux104, 0)
reifyimply(diseq(aux468,-1), aux467)
sumleq([pointers_00000_00002,-1],aux147)
sumgeq([pointers_00000_00002,-1],aux147)
sumleq([pointers_00000_00003,-1],aux153)
sumgeq([pointers_00000_00003,-1],aux153)
sumleq([pointers_00000_00004,-1],aux159)
sumgeq([pointers_00000_00004,-1],aux159)
sumleq([pointers_00000_00005,-1],aux165)
sumgeq([pointers_00000_00005,-1],aux165)
sumleq([pointers_00000_00006,-1],aux171)
sumgeq([pointers_00000_00006,-1],aux171)
sumleq([pointers_00000_00007,-1],aux177)
sumgeq([pointers_00000_00007,-1],aux177)
sumleq([pointers_00000_00008,-1],aux183)
sumgeq([pointers_00000_00008,-1],aux183)
sumleq([pointers_00000_00009,-1],aux189)
sumgeq([pointers_00000_00009,-1],aux189)
sumleq([pointers_00000_00010,-1],aux195)
sumgeq([pointers_00000_00010,-1],aux195)
sumleq([pointers_00001_00002,-1],aux203)
sumgeq([pointers_00001_00002,-1],aux203)
sumleq([pointers_00001_00003,-1],aux212)
sumgeq([pointers_00001_00003,-1],aux212)
sumleq([pointers_00001_00004,-1],aux221)
sumgeq([pointers_00001_00004,-1],aux221)
sumleq([pointers_00001_00005,-1],aux230)
sumgeq([pointers_00001_00005,-1],aux230)
sumleq([pointers_00001_00006,-1],aux239)
sumgeq([pointers_00001_00006,-1],aux239)
sumleq([pointers_00001_00007,-1],aux248)
sumgeq([pointers_00001_00007,-1],aux248)
sumleq([pointers_00001_00008,-1],aux257)
sumgeq([pointers_00001_00008,-1],aux257)
sumleq([pointers_00001_00009,-1],aux266)
sumgeq([pointers_00001_00009,-1],aux266)
sumleq([actionFrom_00005,-2],aux70)
sumgeq([actionFrom_00005,-2],aux70)
sumleq([actionFrom_00004,-2],aux71)
sumgeq([actionFrom_00004,-2],aux71)
sumleq([actionTo_00007,-2],aux72)
sumgeq([actionTo_00007,-2],aux72)
sumleq([actionTo_00006,-2],aux73)
sumgeq([actionTo_00006,-2],aux73)
sumleq([actionTo_00009,-2],aux74)
sumgeq([actionTo_00009,-2],aux74)
sumleq([actionTo_00008,-2],aux75)
sumgeq([actionTo_00008,-2],aux75)
sumleq([actionTo_00003,-2],aux76)
sumgeq([actionTo_00003,-2],aux76)
sumleq([actionTo_00002,-2],aux77)
sumgeq([actionTo_00002,-2],aux77)
sumleq([actionTo_00005,-2],aux78)
sumgeq([actionTo_00005,-2],aux78)
sumleq([actionTo_00004,-2],aux79)
sumgeq([actionTo_00004,-2],aux79)
sumleq([actionTo_00010,-2],aux80)
sumgeq([actionTo_00010,-2],aux80)
sumleq([actionFrom_00009,-2],aux81)
sumgeq([actionFrom_00009,-2],aux81)
sumleq([actionFrom_00010,-2],aux82)
sumgeq([actionFrom_00010,-2],aux82)
sumleq([actionFrom_00008,-2],aux83)
sumgeq([actionFrom_00008,-2],aux83)
sumleq([actionFrom_00003,-2],aux93)
sumgeq([actionFrom_00003,-2],aux93)
sumleq([actionFrom_00006,-2],aux94)
sumgeq([actionFrom_00006,-2],aux94)
sumleq([actionFrom_00007,-2],aux95)
sumgeq([actionFrom_00007,-2],aux95)
sumleq([actionFrom_00002,-2],aux96)
sumgeq([actionFrom_00002,-2],aux96)
reifyimply(sumleq([pointers_00000_00002,1],pointers_00000_00003), aux148)
reifyimply(sumgeq([pointers_00000_00002,1],pointers_00000_00003), aux148)
reifyimply(sumleq([pointers_00000_00003,1],pointers_00000_00004), aux154)
reifyimply(sumgeq([pointers_00000_00003,1],pointers_00000_00004), aux154)
reifyimply(sumleq([pointers_00000_00004,1],pointers_00000_00005), aux160)
reifyimply(sumgeq([pointers_00000_00004,1],pointers_00000_00005), aux160)
reifyimply(sumleq([pointers_00000_00005,1],pointers_00000_00006), aux166)
reifyimply(sumgeq([pointers_00000_00005,1],pointers_00000_00006), aux166)
reifyimply(sumleq([pointers_00000_00006,1],pointers_00000_00007), aux172)
reifyimply(sumgeq([pointers_00000_00006,1],pointers_00000_00007), aux172)
reifyimply(sumleq([pointers_00000_00007,1],pointers_00000_00008), aux178)
reifyimply(sumgeq([pointers_00000_00007,1],pointers_00000_00008), aux178)
reifyimply(sumleq([pointers_00000_00008,1],pointers_00000_00009), aux184)
reifyimply(sumgeq([pointers_00000_00008,1],pointers_00000_00009), aux184)
reifyimply(sumleq([pointers_00000_00009,1],pointers_00000_00010), aux190)
reifyimply(sumgeq([pointers_00000_00009,1],pointers_00000_00010), aux190)
reifyimply(sumleq([pointers_00001_00002,1],pointers_00001_00003), aux207)
reifyimply(sumgeq([pointers_00001_00002,1],pointers_00001_00003), aux207)
reifyimply(sumleq([pointers_00001_00003,1],pointers_00001_00004), aux216)
reifyimply(sumgeq([pointers_00001_00003,1],pointers_00001_00004), aux216)
reifyimply(sumleq([pointers_00001_00004,1],pointers_00001_00005), aux225)
reifyimply(sumgeq([pointers_00001_00004,1],pointers_00001_00005), aux225)
reifyimply(sumleq([pointers_00001_00005,1],pointers_00001_00006), aux234)
reifyimply(sumgeq([pointers_00001_00005,1],pointers_00001_00006), aux234)
reifyimply(sumleq([pointers_00001_00006,1],pointers_00001_00007), aux243)
reifyimply(sumgeq([pointers_00001_00006,1],pointers_00001_00007), aux243)
reifyimply(sumleq([pointers_00001_00007,1],pointers_00001_00008), aux252)
reifyimply(sumgeq([pointers_00001_00007,1],pointers_00001_00008), aux252)
reifyimply(sumleq([pointers_00001_00008,1],pointers_00001_00009), aux261)
reifyimply(sumgeq([pointers_00001_00008,1],pointers_00001_00009), aux261)
reifyimply(sumleq([3,aux61],statePlaces_00002_00002), aux389)
reifyimply(sumgeq([3,aux61],statePlaces_00002_00002), aux389)
reifyimply(sumleq([statePlaces_00002_00002,aux63],statePlaces_00002_00003), aux399)
reifyimply(sumgeq([statePlaces_00002_00002,aux63],statePlaces_00002_00003), aux399)
reifyimply(sumleq([statePlaces_00002_00003,aux69],statePlaces_00002_00004), aux409)
reifyimply(sumgeq([statePlaces_00002_00003,aux69],statePlaces_00002_00004), aux409)
reifyimply(sumleq([statePlaces_00002_00004,aux67],statePlaces_00002_00005), aux419)
reifyimply(sumgeq([statePlaces_00002_00004,aux67],statePlaces_00002_00005), aux419)
reifyimply(sumleq([statePlaces_00002_00005,aux64],statePlaces_00002_00006), aux429)
reifyimply(sumgeq([statePlaces_00002_00005,aux64],statePlaces_00002_00006), aux429)
reifyimply(sumleq([statePlaces_00002_00006,aux62],statePlaces_00002_00007), aux439)
reifyimply(sumgeq([statePlaces_00002_00006,aux62],statePlaces_00002_00007), aux439)
reifyimply(sumleq([statePlaces_00002_00007,aux68],statePlaces_00002_00008), aux449)
reifyimply(sumgeq([statePlaces_00002_00007,aux68],statePlaces_00002_00008), aux449)
reifyimply(sumleq([statePlaces_00002_00008,aux65],statePlaces_00002_00009), aux459)
reifyimply(sumgeq([statePlaces_00002_00008,aux65],statePlaces_00002_00009), aux459)
reifyimply(sumleq([statePlaces_00002_00009,aux66],statePlaces_00002_00010), aux469)
reifyimply(sumgeq([statePlaces_00002_00009,aux66],statePlaces_00002_00010), aux469)
**EOF**
