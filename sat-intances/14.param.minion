MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 139
# CSE_active_eliminated_expressions = 613
# CSE_active_total_size = 986
**VARIABLES**
DISCRETE statePlaces_00002_00002 #
{-1..100}
DISCRETE statePlaces_00002_00003 #
{-1..100}
DISCRETE statePlaces_00002_00004 #
{-1..100}
DISCRETE statePlaces_00002_00005 #
{-1..100}
DISCRETE statePlaces_00002_00006 #
{-1..100}
DISCRETE statePlaces_00002_00007 #
{-1..100}
DISCRETE statePlaces_00002_00008 #
{-1..100}
DISCRETE statePlaces_00002_00009 #
{-1..100}
DISCRETE statePlaces_00002_00010 #
{-1..100}
DISCRETE statePlaces_00002_00011 #
{-1..100}
DISCRETE statePlaces_00002_00012 #
{-1..100}
DISCRETE statePlaces_00002_00013 #
{-1..100}
DISCRETE statePlaces_00002_00014 #
{-1..100}
DISCRETE statePlaces_00003_00002 #
{-1..100}
DISCRETE statePlaces_00003_00003 #
{-1..100}
DISCRETE statePlaces_00003_00004 #
{-1..100}
DISCRETE statePlaces_00003_00005 #
{-1..100}
DISCRETE statePlaces_00003_00006 #
{-1..100}
DISCRETE statePlaces_00003_00007 #
{-1..100}
DISCRETE statePlaces_00003_00008 #
{-1..100}
DISCRETE statePlaces_00003_00009 #
{-1..100}
DISCRETE statePlaces_00003_00010 #
{-1..100}
DISCRETE statePlaces_00003_00011 #
{-1..100}
DISCRETE statePlaces_00003_00012 #
{-1..100}
DISCRETE statePlaces_00003_00013 #
{-1..100}
DISCRETE statePlaces_00003_00014 #
{-1..100}
DISCRETE statePlaces_00003_00015 #
{-1..100}
DISCRETE actionTypes_00002 #
{1..9}
DISCRETE actionTypes_00003 #
{1..9}
DISCRETE actionTypes_00004 #
{1..9}
DISCRETE actionTypes_00005 #
{1..9}
DISCRETE actionTypes_00006 #
{1..9}
DISCRETE actionTypes_00007 #
{1..9}
DISCRETE actionTypes_00008 #
{1..9}
DISCRETE actionTypes_00009 #
{1..9}
DISCRETE actionTypes_00010 #
{1..9}
DISCRETE actionTypes_00011 #
{1..9}
DISCRETE actionTypes_00012 #
{1..9}
DISCRETE actionTypes_00013 #
{1..9}
DISCRETE actionTypes_00014 #
{1..9}
DISCRETE actionTypes_00015 #
{1..9}
DISCRETE actionFrom_00002 #
{0..3}
DISCRETE actionFrom_00003 #
{0..3}
DISCRETE actionFrom_00004 #
{0..3}
DISCRETE actionFrom_00005 #
{0..3}
DISCRETE actionFrom_00006 #
{0..3}
DISCRETE actionFrom_00007 #
{0..3}
DISCRETE actionFrom_00008 #
{0..3}
DISCRETE actionFrom_00009 #
{0..3}
DISCRETE actionFrom_00010 #
{0..3}
DISCRETE actionFrom_00011 #
{0..3}
DISCRETE actionFrom_00012 #
{0..3}
DISCRETE actionFrom_00013 #
{0..3}
DISCRETE actionFrom_00014 #
{0..3}
DISCRETE actionFrom_00015 #
{0..3}
DISCRETE actionTo_00002 #
{0..3}
DISCRETE actionTo_00003 #
{0..3}
DISCRETE actionTo_00004 #
{0..3}
DISCRETE actionTo_00005 #
{0..3}
DISCRETE actionTo_00006 #
{0..3}
DISCRETE actionTo_00007 #
{0..3}
DISCRETE actionTo_00008 #
{0..3}
DISCRETE actionTo_00009 #
{0..3}
DISCRETE actionTo_00010 #
{0..3}
DISCRETE actionTo_00011 #
{0..3}
DISCRETE actionTo_00012 #
{0..3}
DISCRETE actionTo_00013 #
{0..3}
DISCRETE actionTo_00014 #
{0..3}
DISCRETE actionTo_00015 #
{0..3}
DISCRETE pointers_00000_00002 #
{0..10}
DISCRETE pointers_00000_00003 #
{0..10}
DISCRETE pointers_00000_00004 #
{0..10}
DISCRETE pointers_00000_00005 #
{0..10}
DISCRETE pointers_00000_00006 #
{0..10}
DISCRETE pointers_00000_00007 #
{0..10}
DISCRETE pointers_00000_00008 #
{0..10}
DISCRETE pointers_00000_00009 #
{0..10}
DISCRETE pointers_00000_00010 #
{0..10}
DISCRETE pointers_00000_00011 #
{0..10}
DISCRETE pointers_00000_00012 #
{0..10}
DISCRETE pointers_00000_00013 #
{0..10}
DISCRETE pointers_00000_00014 #
{0..10}
DISCRETE pointers_00000_00015 #
{0..10}
DISCRETE pointers_00001_00002 #
{0..10}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00002, [0,2,4,10])
**VARIABLES**
DISCRETE pointers_00001_00003 #
{0..10}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00003, [0,2,4,10])
**VARIABLES**
DISCRETE pointers_00001_00004 #
{0..10}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00004, [0,2,4,10])
**VARIABLES**
DISCRETE pointers_00001_00005 #
{0..10}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00005, [0,2,4,10])
**VARIABLES**
DISCRETE pointers_00001_00006 #
{0..10}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00006, [0,2,4,10])
**VARIABLES**
DISCRETE pointers_00001_00007 #
{0..10}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00007, [0,2,4,10])
**VARIABLES**
DISCRETE pointers_00001_00008 #
{0..10}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00008, [0,2,4,10])
**VARIABLES**
DISCRETE pointers_00001_00009 #
{0..10}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00009, [0,2,4,10])
**VARIABLES**
DISCRETE pointers_00001_00010 #
{0..10}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00010, [0,2,4,10])
**VARIABLES**
DISCRETE pointers_00001_00011 #
{0..10}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00011, [0,2,4,10])
**VARIABLES**
DISCRETE pointers_00001_00012 #
{0..10}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00012, [0,2,4,10])
**VARIABLES**
DISCRETE pointers_00001_00013 #
{0..10}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00013, [0,2,4,10])
**VARIABLES**
DISCRETE pointers_00001_00014 #
{0..10}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00014, [0,2,4,10])
**VARIABLES**
BOOL aux59 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00014, statePlaces_00003_00014], (actionTo_00014 + -2))=SafeElement([statePlaces_00002_00014, statePlaces_00003_00014], (actionFrom_00014 + -2)))
BOOL aux60 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00013, statePlaces_00003_00013], (actionTo_00013 + -2))=SafeElement([statePlaces_00002_00013, statePlaces_00003_00013], (actionFrom_00013 + -2)))
BOOL aux61 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionTo_00010 + -2))=SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionFrom_00010 + -2)))
BOOL aux62 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionTo_00012 + -2))=SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionFrom_00012 + -2)))
BOOL aux63 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionTo_00011 + -2))=SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionFrom_00011 + -2)))
BOOL aux64 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([5, statePlaces_00003_00015], (actionFrom_00015 + -2))=SafeElement([5, statePlaces_00003_00015], (actionTo_00015 + -2)))
BOOL aux65 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionTo_00006 + -2))=SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionFrom_00006 + -2)))
BOOL aux66 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionTo_00005 + -2))=SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionFrom_00005 + -2)))
BOOL aux67 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionTo_00009 + -2))=SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionFrom_00009 + -2)))
BOOL aux68 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionTo_00008 + -2))=SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionFrom_00008 + -2)))
BOOL aux69 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionTo_00007 + -2))=SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionFrom_00007 + -2)))
BOOL aux70 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionTo_00002 + -2))=SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionFrom_00002 + -2)))
BOOL aux71 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionTo_00004 + -2))=SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionFrom_00004 + -2)))
BOOL aux72 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionTo_00003 + -2))=SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionFrom_00003 + -2)))
BOOL aux73 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionFrom_00002 + -2))=statePlaces_00002_00002)
BOOL aux74 #Active-CSE: 2 occurrences of this expression or equivalent: ([5, statePlaces_00003_00015;int(2..3)] <lex [statePlaces_00002_00002, statePlaces_00003_00002;int(2..3)])
BOOL aux75 #Active-CSE: 2 occurrences of this expression or equivalent: ([5, statePlaces_00003_00015;int(2..3)] <lex [statePlaces_00002_00003, statePlaces_00003_00003;int(2..3)])
BOOL aux76 #Active-CSE: 2 occurrences of this expression or equivalent: ([5, statePlaces_00003_00015;int(2..3)] <lex [statePlaces_00002_00006, statePlaces_00003_00006;int(2..3)])
BOOL aux77 #Active-CSE: 2 occurrences of this expression or equivalent: ([5, statePlaces_00003_00015;int(2..3)] <lex [statePlaces_00002_00007, statePlaces_00003_00007;int(2..3)])
BOOL aux78 #Active-CSE: 2 occurrences of this expression or equivalent: ([5, statePlaces_00003_00015;int(2..3)] <lex [statePlaces_00002_00004, statePlaces_00003_00004;int(2..3)])
BOOL aux79 #Active-CSE: 2 occurrences of this expression or equivalent: ([5, statePlaces_00003_00015;int(2..3)] <lex [statePlaces_00002_00005, statePlaces_00003_00005;int(2..3)])
BOOL aux80 #Active-CSE: 2 occurrences of this expression or equivalent: ([5, statePlaces_00003_00015;int(2..3)] <lex [statePlaces_00002_00008, statePlaces_00003_00008;int(2..3)])
BOOL aux81 #Active-CSE: 2 occurrences of this expression or equivalent: ([5, statePlaces_00003_00015;int(2..3)] <lex [statePlaces_00002_00009, statePlaces_00003_00009;int(2..3)])
BOOL aux82 #Active-CSE: 2 occurrences of this expression or equivalent: ([5, statePlaces_00003_00015;int(2..3)] <lex [statePlaces_00002_00010, statePlaces_00003_00010;int(2..3)])
BOOL aux83 #Active-CSE: 2 occurrences of this expression or equivalent: ([5, statePlaces_00003_00015;int(2..3)] <lex [statePlaces_00002_00014, statePlaces_00003_00014;int(2..3)])
BOOL aux84 #Active-CSE: 2 occurrences of this expression or equivalent: ([5, statePlaces_00003_00015;int(2..3)] <lex [statePlaces_00002_00013, statePlaces_00003_00013;int(2..3)])
BOOL aux85 #Active-CSE: 2 occurrences of this expression or equivalent: ([5, statePlaces_00003_00015;int(2..3)] <lex [statePlaces_00002_00012, statePlaces_00003_00012;int(2..3)])
BOOL aux86 #Active-CSE: 2 occurrences of this expression or equivalent: ([5, statePlaces_00003_00015;int(2..3)] <lex [statePlaces_00002_00011, statePlaces_00003_00011;int(2..3)])
BOOL aux87 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00011, statePlaces_00003_00011;int(2..3)] <lex [5, statePlaces_00003_00015;int(2..3)])
BOOL aux88 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00012, statePlaces_00003_00012;int(2..3)] <lex [5, statePlaces_00003_00015;int(2..3)])
BOOL aux89 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00013, statePlaces_00003_00013;int(2..3)] <lex [5, statePlaces_00003_00015;int(2..3)])
BOOL aux90 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00014, statePlaces_00003_00014;int(2..3)] <lex [5, statePlaces_00003_00015;int(2..3)])
BOOL aux91 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00010, statePlaces_00003_00010;int(2..3)] <lex [5, statePlaces_00003_00015;int(2..3)])
BOOL aux92 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00009, statePlaces_00003_00009;int(2..3)] <lex [5, statePlaces_00003_00015;int(2..3)])
BOOL aux93 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00008, statePlaces_00003_00008;int(2..3)] <lex [5, statePlaces_00003_00015;int(2..3)])
BOOL aux94 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00007, statePlaces_00003_00007;int(2..3)] <lex [5, statePlaces_00003_00015;int(2..3)])
BOOL aux95 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00006, statePlaces_00003_00006;int(2..3)] <lex [5, statePlaces_00003_00015;int(2..3)])
BOOL aux96 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00005, statePlaces_00003_00005;int(2..3)] <lex [5, statePlaces_00003_00015;int(2..3)])
BOOL aux97 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00004, statePlaces_00003_00004;int(2..3)] <lex [5, statePlaces_00003_00015;int(2..3)])
BOOL aux98 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00003, statePlaces_00003_00003;int(2..3)] <lex [5, statePlaces_00003_00015;int(2..3)])
BOOL aux99 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00002, statePlaces_00003_00002;int(2..3)] <lex [5, statePlaces_00003_00015;int(2..3)])
DISCRETE aux100 #Active-CSE: 11 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionFrom_00011 + -2))
{-1..100}
DISCRETE aux101 #Active-CSE: 6 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00014, statePlaces_00003_00014], (actionFrom_00015 + -2))
{-1..100}
DISCRETE aux102 #Active-CSE: 11 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionFrom_00009 + -2))
{-1..100}
DISCRETE aux103 #Active-CSE: 6 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00013, statePlaces_00003_00013], (actionFrom_00014 + -2))
{-1..100}
DISCRETE aux104 #Active-CSE: 11 occurrences of this expression or equivalent: SafeElement([5, statePlaces_00003_00015], (actionFrom_00015 + -2))
{-1..100}
DISCRETE aux105 #Active-CSE: 3 occurrences of this expression or equivalent: SafeElement([1, -1], (actionTo_00002 + -2))
{-1..1}
DISCRETE aux106 #Active-CSE: 11 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionFrom_00012 + -2))
{-1..100}
DISCRETE aux107 #Active-CSE: 11 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00013, statePlaces_00003_00013], (actionFrom_00013 + -2))
{-1..100}
DISCRETE aux108 #Active-CSE: 6 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionFrom_00009 + -2))
{-1..100}
DISCRETE aux109 #Active-CSE: 11 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionFrom_00006 + -2))
{-1..100}
DISCRETE aux110 #Active-CSE: 6 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionFrom_00008 + -2))
{-1..100}
DISCRETE aux111 #Active-CSE: 6 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionFrom_00011 + -2))
{-1..100}
DISCRETE aux112 #Active-CSE: 6 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionFrom_00012 + -2))
{-1..100}
DISCRETE aux113 #Active-CSE: 11 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionFrom_00007 + -2))
{-1..100}
DISCRETE aux114 #Active-CSE: 11 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionFrom_00008 + -2))
{-1..100}
DISCRETE aux115 #Active-CSE: 6 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionFrom_00013 + -2))
{-1..100}
DISCRETE aux116 #Active-CSE: 11 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionFrom_00010 + -2))
{-1..100}
DISCRETE aux117 #Active-CSE: 11 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionFrom_00003 + -2))
{-1..100}
DISCRETE aux118 #Active-CSE: 6 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionFrom_00003 + -2))
{-1..100}
DISCRETE aux119 #Active-CSE: 6 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionFrom_00005 + -2))
{-1..100}
DISCRETE aux120 #Active-CSE: 6 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionFrom_00004 + -2))
{-1..100}
DISCRETE aux121 #Active-CSE: 6 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionFrom_00006 + -2))
{-1..100}
DISCRETE aux122 #Active-CSE: 6 occurrences of this expression or equivalent: SafeElement([1, -1], (actionFrom_00002 + -2))
{-1..1}
DISCRETE aux123 #Active-CSE: 11 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionFrom_00004 + -2))
{-1..100}
DISCRETE aux124 #Active-CSE: 6 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionFrom_00007 + -2))
{-1..100}
DISCRETE aux125 #Active-CSE: 11 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionFrom_00005 + -2))
{-1..100}
DISCRETE aux126 #Active-CSE: 11 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00014, statePlaces_00003_00014], (actionFrom_00014 + -2))
{-1..100}
DISCRETE aux127 #Active-CSE: 6 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionFrom_00010 + -2))
{-1..100}
DISCRETE aux128 #Active-CSE: 3 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00014, statePlaces_00003_00014], (actionTo_00015 + -2))
{-1..100}
DISCRETE aux129 #Active-CSE: 3 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00013, statePlaces_00003_00013], (actionTo_00014 + -2))
{-1..100}
DISCRETE aux130 #Active-CSE: 3 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionTo_00013 + -2))
{-1..100}
DISCRETE aux131 #Active-CSE: 3 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionTo_00012 + -2))
{-1..100}
DISCRETE aux132 #Active-CSE: 3 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionTo_00011 + -2))
{-1..100}
DISCRETE aux133 #Active-CSE: 3 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionTo_00004 + -2))
{-1..100}
DISCRETE aux134 #Active-CSE: 3 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionTo_00003 + -2))
{-1..100}
DISCRETE aux135 #Active-CSE: 3 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionTo_00010 + -2))
{-1..100}
DISCRETE aux136 #Active-CSE: 3 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionTo_00009 + -2))
{-1..100}
DISCRETE aux137 #Active-CSE: 3 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionTo_00008 + -2))
{-1..100}
DISCRETE aux138 #Active-CSE: 3 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionTo_00007 + -2))
{-1..100}
DISCRETE aux139 #Active-CSE: 3 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionTo_00006 + -2))
{-1..100}
DISCRETE aux140 #Active-CSE: 3 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionTo_00005 + -2))
{-1..100}
DISCRETE aux141 #Active-CSE: 10 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionFrom_00002 + -2))
{-1..100}
DISCRETE aux142 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00006 + -2)
{-2..1}
DISCRETE aux143 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00010 + -2)
{-2..1}
BOOL aux144 #Active-CSE: 7 occurrences of this expression or equivalent: (actionFrom_00012 in int(2..3))
DISCRETE aux145 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00015 + -2)
{-2..1}
DISCRETE aux146 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00003 + -2)
{-2..1}
BOOL aux147 #Active-CSE: 6 occurrences of this expression or equivalent: (actionTo_00009 in int(2..3))
BOOL aux148 #Active-CSE: 7 occurrences of this expression or equivalent: (actionFrom_00002 in int(2..3))
DISCRETE aux149 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00008 + -2)
{-2..1}
BOOL aux150 #Active-CSE: 6 occurrences of this expression or equivalent: (actionTo_00005 in int(2..3))
BOOL aux151 #Active-CSE: 7 occurrences of this expression or equivalent: (actionFrom_00015 in int(2..3))
DISCRETE aux152 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00010 + -2)
{-2..1}
BOOL aux153 #Active-CSE: 7 occurrences of this expression or equivalent: (actionFrom_00007 in int(2..3))
DISCRETE aux154 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00015 + -2)
{-2..1}
BOOL aux155 #Active-CSE: 6 occurrences of this expression or equivalent: (actionTo_00012 in int(2..3))
BOOL aux156 #Active-CSE: 6 occurrences of this expression or equivalent: (actionTo_00013 in int(2..3))
DISCRETE aux157 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00002 + -2)
{-2..1}
BOOL aux158 #Active-CSE: 7 occurrences of this expression or equivalent: (actionFrom_00014 in int(2..3))
BOOL aux159 #Active-CSE: 7 occurrences of this expression or equivalent: (actionFrom_00006 in int(2..3))
DISCRETE aux160 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00007 + -2)
{-2..1}
DISCRETE aux161 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00014 + -2)
{-2..1}
BOOL aux162 #Active-CSE: 7 occurrences of this expression or equivalent: (actionFrom_00004 in int(2..3))
DISCRETE aux163 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00013 + -2)
{-2..1}
BOOL aux164 #Active-CSE: 6 occurrences of this expression or equivalent: (actionTo_00006 in int(2..3))
DISCRETE aux165 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00009 + -2)
{-2..1}
BOOL aux166 #Active-CSE: 7 occurrences of this expression or equivalent: (actionFrom_00009 in int(2..3))
DISCRETE aux167 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00004 + -2)
{-2..1}
BOOL aux168 #Active-CSE: 7 occurrences of this expression or equivalent: (actionFrom_00003 in int(2..3))
BOOL aux169 #Active-CSE: 6 occurrences of this expression or equivalent: (actionTo_00014 in int(2..3))
BOOL aux170 #Active-CSE: 6 occurrences of this expression or equivalent: (actionTo_00007 in int(2..3))
DISCRETE aux171 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00005 + -2)
{-2..1}
DISCRETE aux172 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00014 + -2)
{-2..1}
BOOL aux173 #Active-CSE: 7 occurrences of this expression or equivalent: (actionFrom_00008 in int(2..3))
BOOL aux174 #Active-CSE: 6 occurrences of this expression or equivalent: (actionTo_00002 in int(2..3))
DISCRETE aux175 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00011 + -2)
{-2..1}
BOOL aux176 #Active-CSE: 6 occurrences of this expression or equivalent: (actionTo_00003 in int(2..3))
DISCRETE aux177 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00007 + -2)
{-2..1}
DISCRETE aux178 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00002 + -2)
{-2..1}
BOOL aux179 #Active-CSE: 6 occurrences of this expression or equivalent: (actionTo_00010 in int(2..3))
DISCRETE aux180 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00006 + -2)
{-2..1}
DISCRETE aux181 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00013 + -2)
{-2..1}
BOOL aux182 #Active-CSE: 7 occurrences of this expression or equivalent: (actionFrom_00011 in int(2..3))
BOOL aux183 #Active-CSE: 7 occurrences of this expression or equivalent: (actionFrom_00005 in int(2..3))
DISCRETE aux184 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00004 + -2)
{-2..1}
DISCRETE aux185 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00011 + -2)
{-2..1}
DISCRETE aux186 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00012 + -2)
{-2..1}
DISCRETE aux187 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00003 + -2)
{-2..1}
BOOL aux188 #Active-CSE: 6 occurrences of this expression or equivalent: (actionTo_00015 in int(2..3))
DISCRETE aux189 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00009 + -2)
{-2..1}
DISCRETE aux190 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00008 + -2)
{-2..1}
BOOL aux191 #Active-CSE: 6 occurrences of this expression or equivalent: (actionTo_00008 in int(2..3))
BOOL aux192 #Active-CSE: 7 occurrences of this expression or equivalent: (actionFrom_00010 in int(2..3))
DISCRETE aux193 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00005 + -2)
{-2..1}
BOOL aux194 #Active-CSE: 6 occurrences of this expression or equivalent: (actionTo_00004 in int(2..3))
BOOL aux195 #Active-CSE: 7 occurrences of this expression or equivalent: (actionFrom_00013 in int(2..3))
DISCRETE aux196 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00012 + -2)
{-2..1}
BOOL aux197 #Active-CSE: 6 occurrences of this expression or equivalent: (actionTo_00011 in int(2..3))
BOOL aux198 #(1 != actionTypes_00002)
BOOL aux199 #(1 != actionTypes_00003)
BOOL aux200 #(1 != actionTypes_00004)
BOOL aux201 #(1 != actionTypes_00005)
BOOL aux202 #(1 != actionTypes_00006)
BOOL aux203 #(1 != actionTypes_00007)
BOOL aux204 #(1 != actionTypes_00008)
BOOL aux205 #(1 != actionTypes_00009)
BOOL aux206 #(1 != actionTypes_00010)
BOOL aux207 #(1 != actionTypes_00011)
BOOL aux208 #(1 != actionTypes_00012)
BOOL aux209 #(1 != actionTypes_00013)
BOOL aux210 #(1 != actionTypes_00014)
BOOL aux211 #(1 != actionTypes_00015)
BOOL aux212 #(2 != actionTypes_00002)
BOOL aux213 #(2 != actionTypes_00003)
BOOL aux214 #(2 != actionTypes_00004)
BOOL aux215 #(2 != actionTypes_00005)
BOOL aux216 #(2 != actionTypes_00006)
BOOL aux217 #(2 != actionTypes_00007)
BOOL aux218 #(2 != actionTypes_00008)
BOOL aux219 #(2 != actionTypes_00009)
BOOL aux220 #(2 != actionTypes_00010)
BOOL aux221 #(2 != actionTypes_00011)
BOOL aux222 #(2 != actionTypes_00012)
BOOL aux223 #(2 != actionTypes_00013)
BOOL aux224 #(2 != actionTypes_00014)
BOOL aux225 #(2 != actionTypes_00015)
BOOL aux226 #(((7=actionTypes_00002) /\ (actionFrom_00002 != 3)) \/ ((8=actionTypes_00002) /\ (actionFrom_00002 != 3)) \/ (1=actionTypes_00002) \/ (2=actionTypes_00002) \/ (3=actionTypes_00002) \/ (5=actionTypes_00002) \/ (6=actionTypes_00002) \/ (9=actionTypes_00002) \/ ((4=actionTypes_00002) /\ (actionTo_00002 != 3)))
BOOL aux227 #(((7=actionTypes_00003) /\ (actionFrom_00003 != 3)) \/ ((8=actionTypes_00003) /\ (actionFrom_00003 != 3)) \/ (1=actionTypes_00003) \/ (2=actionTypes_00003) \/ (3=actionTypes_00003) \/ (5=actionTypes_00003) \/ (6=actionTypes_00003) \/ (9=actionTypes_00003) \/ ((4=actionTypes_00003) /\ (actionTo_00003 != 3)))
BOOL aux228 #(((7=actionTypes_00004) /\ (actionFrom_00004 != 3)) \/ ((8=actionTypes_00004) /\ (actionFrom_00004 != 3)) \/ (1=actionTypes_00004) \/ (2=actionTypes_00004) \/ (3=actionTypes_00004) \/ (5=actionTypes_00004) \/ (6=actionTypes_00004) \/ (9=actionTypes_00004) \/ ((4=actionTypes_00004) /\ (actionTo_00004 != 3)))
BOOL aux229 #(((7=actionTypes_00005) /\ (actionFrom_00005 != 3)) \/ ((8=actionTypes_00005) /\ (actionFrom_00005 != 3)) \/ (1=actionTypes_00005) \/ (2=actionTypes_00005) \/ (3=actionTypes_00005) \/ (5=actionTypes_00005) \/ (6=actionTypes_00005) \/ (9=actionTypes_00005) \/ ((4=actionTypes_00005) /\ (actionTo_00005 != 3)))
BOOL aux230 #(((7=actionTypes_00006) /\ (actionFrom_00006 != 3)) \/ ((8=actionTypes_00006) /\ (actionFrom_00006 != 3)) \/ (1=actionTypes_00006) \/ (2=actionTypes_00006) \/ (3=actionTypes_00006) \/ (5=actionTypes_00006) \/ (6=actionTypes_00006) \/ (9=actionTypes_00006) \/ ((4=actionTypes_00006) /\ (actionTo_00006 != 3)))
BOOL aux231 #(((7=actionTypes_00007) /\ (actionFrom_00007 != 3)) \/ ((8=actionTypes_00007) /\ (actionFrom_00007 != 3)) \/ (1=actionTypes_00007) \/ (2=actionTypes_00007) \/ (3=actionTypes_00007) \/ (5=actionTypes_00007) \/ (6=actionTypes_00007) \/ (9=actionTypes_00007) \/ ((4=actionTypes_00007) /\ (actionTo_00007 != 3)))
BOOL aux232 #(((7=actionTypes_00008) /\ (actionFrom_00008 != 3)) \/ ((8=actionTypes_00008) /\ (actionFrom_00008 != 3)) \/ (1=actionTypes_00008) \/ (2=actionTypes_00008) \/ (3=actionTypes_00008) \/ (5=actionTypes_00008) \/ (6=actionTypes_00008) \/ (9=actionTypes_00008) \/ ((4=actionTypes_00008) /\ (actionTo_00008 != 3)))
BOOL aux233 #(((7=actionTypes_00009) /\ (actionFrom_00009 != 3)) \/ ((8=actionTypes_00009) /\ (actionFrom_00009 != 3)) \/ (1=actionTypes_00009) \/ (2=actionTypes_00009) \/ (3=actionTypes_00009) \/ (5=actionTypes_00009) \/ (6=actionTypes_00009) \/ (9=actionTypes_00009) \/ ((4=actionTypes_00009) /\ (actionTo_00009 != 3)))
BOOL aux234 #(((7=actionTypes_00010) /\ (actionFrom_00010 != 3)) \/ ((8=actionTypes_00010) /\ (actionFrom_00010 != 3)) \/ (1=actionTypes_00010) \/ (2=actionTypes_00010) \/ (3=actionTypes_00010) \/ (5=actionTypes_00010) \/ (6=actionTypes_00010) \/ (9=actionTypes_00010) \/ ((4=actionTypes_00010) /\ (actionTo_00010 != 3)))
BOOL aux235 #(((7=actionTypes_00011) /\ (actionFrom_00011 != 3)) \/ ((8=actionTypes_00011) /\ (actionFrom_00011 != 3)) \/ (1=actionTypes_00011) \/ (2=actionTypes_00011) \/ (3=actionTypes_00011) \/ (5=actionTypes_00011) \/ (6=actionTypes_00011) \/ (9=actionTypes_00011) \/ ((4=actionTypes_00011) /\ (actionTo_00011 != 3)))
BOOL aux236 #(((7=actionTypes_00012) /\ (actionFrom_00012 != 3)) \/ ((8=actionTypes_00012) /\ (actionFrom_00012 != 3)) \/ (1=actionTypes_00012) \/ (2=actionTypes_00012) \/ (3=actionTypes_00012) \/ (5=actionTypes_00012) \/ (6=actionTypes_00012) \/ (9=actionTypes_00012) \/ ((4=actionTypes_00012) /\ (actionTo_00012 != 3)))
BOOL aux237 #(((7=actionTypes_00013) /\ (actionFrom_00013 != 3)) \/ ((8=actionTypes_00013) /\ (actionFrom_00013 != 3)) \/ (1=actionTypes_00013) \/ (2=actionTypes_00013) \/ (3=actionTypes_00013) \/ (5=actionTypes_00013) \/ (6=actionTypes_00013) \/ (9=actionTypes_00013) \/ ((4=actionTypes_00013) /\ (actionTo_00013 != 3)))
BOOL aux238 #(((7=actionTypes_00014) /\ (actionFrom_00014 != 3)) \/ ((8=actionTypes_00014) /\ (actionFrom_00014 != 3)) \/ (1=actionTypes_00014) \/ (2=actionTypes_00014) \/ (3=actionTypes_00014) \/ (5=actionTypes_00014) \/ (6=actionTypes_00014) \/ (9=actionTypes_00014) \/ ((4=actionTypes_00014) /\ (actionTo_00014 != 3)))
BOOL aux239 #(((7=actionTypes_00015) /\ (actionFrom_00015 != 3)) \/ ((8=actionTypes_00015) /\ (actionFrom_00015 != 3)) \/ (1=actionTypes_00015) \/ (2=actionTypes_00015) \/ (3=actionTypes_00015) \/ (5=actionTypes_00015) \/ (6=actionTypes_00015) \/ (9=actionTypes_00015) \/ ((4=actionTypes_00015) /\ (actionTo_00015 != 3)))
BOOL aux240 #((2=actionTypes_00002) \/ (4=actionTypes_00002))
BOOL aux241 #((2=actionTypes_00003) \/ (4=actionTypes_00003))
BOOL aux242 #((2=actionTypes_00004) \/ (4=actionTypes_00004))
BOOL aux243 #((2=actionTypes_00005) \/ (4=actionTypes_00005))
BOOL aux244 #((2=actionTypes_00006) \/ (4=actionTypes_00006))
BOOL aux245 #((2=actionTypes_00007) \/ (4=actionTypes_00007))
BOOL aux246 #((2=actionTypes_00008) \/ (4=actionTypes_00008))
BOOL aux247 #((2=actionTypes_00009) \/ (4=actionTypes_00009))
BOOL aux248 #((2=actionTypes_00010) \/ (4=actionTypes_00010))
BOOL aux249 #((2=actionTypes_00011) \/ (4=actionTypes_00011))
BOOL aux250 #((2=actionTypes_00012) \/ (4=actionTypes_00012))
BOOL aux251 #((2=actionTypes_00013) \/ (4=actionTypes_00013))
BOOL aux252 #((2=actionTypes_00014) \/ (4=actionTypes_00014))
BOOL aux253 #((2=actionTypes_00015) \/ (4=actionTypes_00015))
BOOL aux254 #(1=actionTypes_00002)
BOOL aux255 #(1=actionTypes_00002)
BOOL aux256 #(1=actionTypes_00002)
BOOL aux257 #(1=actionTypes_00002)
BOOL aux258 #(1=actionTypes_00002)
DISCRETE aux259 #(pointers_00000_00002 + -1)
{-1..9}
BOOL aux260 #(1=actionTypes_00003)
BOOL aux261 #(1=actionTypes_00003)
BOOL aux262 #(1=actionTypes_00003)
BOOL aux263 #(1=actionTypes_00003)
BOOL aux264 #(1=actionTypes_00003)
DISCRETE aux265 #(pointers_00000_00003 + -1)
{-1..9}
BOOL aux266 #(1=actionTypes_00004)
BOOL aux267 #(1=actionTypes_00004)
BOOL aux268 #(1=actionTypes_00004)
BOOL aux269 #(1=actionTypes_00004)
BOOL aux270 #(1=actionTypes_00004)
DISCRETE aux271 #(pointers_00000_00004 + -1)
{-1..9}
BOOL aux272 #(1=actionTypes_00005)
BOOL aux273 #(1=actionTypes_00005)
BOOL aux274 #(1=actionTypes_00005)
BOOL aux275 #(1=actionTypes_00005)
BOOL aux276 #(1=actionTypes_00005)
DISCRETE aux277 #(pointers_00000_00005 + -1)
{-1..9}
BOOL aux278 #(1=actionTypes_00006)
BOOL aux279 #(1=actionTypes_00006)
BOOL aux280 #(1=actionTypes_00006)
BOOL aux281 #(1=actionTypes_00006)
BOOL aux282 #(1=actionTypes_00006)
DISCRETE aux283 #(pointers_00000_00006 + -1)
{-1..9}
BOOL aux284 #(1=actionTypes_00007)
BOOL aux285 #(1=actionTypes_00007)
BOOL aux286 #(1=actionTypes_00007)
BOOL aux287 #(1=actionTypes_00007)
BOOL aux288 #(1=actionTypes_00007)
DISCRETE aux289 #(pointers_00000_00007 + -1)
{-1..9}
BOOL aux290 #(1=actionTypes_00008)
BOOL aux291 #(1=actionTypes_00008)
BOOL aux292 #(1=actionTypes_00008)
BOOL aux293 #(1=actionTypes_00008)
BOOL aux294 #(1=actionTypes_00008)
DISCRETE aux295 #(pointers_00000_00008 + -1)
{-1..9}
BOOL aux296 #(1=actionTypes_00009)
BOOL aux297 #(1=actionTypes_00009)
BOOL aux298 #(1=actionTypes_00009)
BOOL aux299 #(1=actionTypes_00009)
BOOL aux300 #(1=actionTypes_00009)
DISCRETE aux301 #(pointers_00000_00009 + -1)
{-1..9}
BOOL aux302 #(1=actionTypes_00010)
BOOL aux303 #(1=actionTypes_00010)
BOOL aux304 #(1=actionTypes_00010)
BOOL aux305 #(1=actionTypes_00010)
BOOL aux306 #(1=actionTypes_00010)
DISCRETE aux307 #(pointers_00000_00010 + -1)
{-1..9}
BOOL aux308 #(1=actionTypes_00011)
BOOL aux309 #(1=actionTypes_00011)
BOOL aux310 #(1=actionTypes_00011)
BOOL aux311 #(1=actionTypes_00011)
BOOL aux312 #(1=actionTypes_00011)
DISCRETE aux313 #(pointers_00000_00011 + -1)
{-1..9}
BOOL aux314 #(1=actionTypes_00012)
BOOL aux315 #(1=actionTypes_00012)
BOOL aux316 #(1=actionTypes_00012)
BOOL aux317 #(1=actionTypes_00012)
BOOL aux318 #(1=actionTypes_00012)
DISCRETE aux319 #(pointers_00000_00012 + -1)
{-1..9}
BOOL aux320 #(1=actionTypes_00013)
BOOL aux321 #(1=actionTypes_00013)
BOOL aux322 #(1=actionTypes_00013)
BOOL aux323 #(1=actionTypes_00013)
BOOL aux324 #(1=actionTypes_00013)
DISCRETE aux325 #(pointers_00000_00013 + -1)
{-1..9}
BOOL aux326 #(1=actionTypes_00014)
BOOL aux327 #(1=actionTypes_00014)
BOOL aux328 #(1=actionTypes_00014)
BOOL aux329 #(1=actionTypes_00014)
BOOL aux330 #(1=actionTypes_00014)
DISCRETE aux331 #(pointers_00000_00014 + -1)
{-1..9}
BOOL aux332 #(1=actionTypes_00015)
BOOL aux333 #(1=actionTypes_00015)
BOOL aux334 #(1=actionTypes_00015)
BOOL aux335 #(1=actionTypes_00015)
BOOL aux336 #(1=actionTypes_00015)
DISCRETE aux337 #(pointers_00000_00015 + -1)
{-1..9}
BOOL aux338 #(2=actionTypes_00002)
BOOL aux339 #(2=actionTypes_00002)
BOOL aux340 #(2=actionTypes_00002)
BOOL aux341 #(2=actionTypes_00002)
BOOL aux342 #(2=actionTypes_00002)
BOOL aux343 #(2=actionTypes_00002)
BOOL aux344 #(2=actionTypes_00002)
DISCRETE aux345 #(pointers_00001_00002 + -1)
{-1..9}
**CONSTRAINTS**
w-inintervalset(aux345, [-1,1,3,9])
**VARIABLES**
BOOL aux346 #(2=actionTypes_00003)
BOOL aux347 #(2=actionTypes_00003)
BOOL aux348 #(2=actionTypes_00003)
BOOL aux349 #(2=actionTypes_00003)
BOOL aux350 #(2=actionTypes_00003)
BOOL aux351 #(2=actionTypes_00003)
BOOL aux352 #(2=actionTypes_00003)
BOOL aux353 #(2=actionTypes_00003)
DISCRETE aux354 #(pointers_00001_00003 + -1)
{-1..9}
**CONSTRAINTS**
w-inintervalset(aux354, [-1,1,3,9])
**VARIABLES**
BOOL aux355 #(2=actionTypes_00004)
BOOL aux356 #(2=actionTypes_00004)
BOOL aux357 #(2=actionTypes_00004)
BOOL aux358 #(2=actionTypes_00004)
BOOL aux359 #(2=actionTypes_00004)
BOOL aux360 #(2=actionTypes_00004)
BOOL aux361 #(2=actionTypes_00004)
BOOL aux362 #(2=actionTypes_00004)
DISCRETE aux363 #(pointers_00001_00004 + -1)
{-1..9}
**CONSTRAINTS**
w-inintervalset(aux363, [-1,1,3,9])
**VARIABLES**
BOOL aux364 #(2=actionTypes_00005)
BOOL aux365 #(2=actionTypes_00005)
BOOL aux366 #(2=actionTypes_00005)
BOOL aux367 #(2=actionTypes_00005)
BOOL aux368 #(2=actionTypes_00005)
BOOL aux369 #(2=actionTypes_00005)
BOOL aux370 #(2=actionTypes_00005)
BOOL aux371 #(2=actionTypes_00005)
DISCRETE aux372 #(pointers_00001_00005 + -1)
{-1..9}
**CONSTRAINTS**
w-inintervalset(aux372, [-1,1,3,9])
**VARIABLES**
BOOL aux373 #(2=actionTypes_00006)
BOOL aux374 #(2=actionTypes_00006)
BOOL aux375 #(2=actionTypes_00006)
BOOL aux376 #(2=actionTypes_00006)
BOOL aux377 #(2=actionTypes_00006)
BOOL aux378 #(2=actionTypes_00006)
BOOL aux379 #(2=actionTypes_00006)
BOOL aux380 #(2=actionTypes_00006)
DISCRETE aux381 #(pointers_00001_00006 + -1)
{-1..9}
**CONSTRAINTS**
w-inintervalset(aux381, [-1,1,3,9])
**VARIABLES**
BOOL aux382 #(2=actionTypes_00007)
BOOL aux383 #(2=actionTypes_00007)
BOOL aux384 #(2=actionTypes_00007)
BOOL aux385 #(2=actionTypes_00007)
BOOL aux386 #(2=actionTypes_00007)
BOOL aux387 #(2=actionTypes_00007)
BOOL aux388 #(2=actionTypes_00007)
BOOL aux389 #(2=actionTypes_00007)
DISCRETE aux390 #(pointers_00001_00007 + -1)
{-1..9}
**CONSTRAINTS**
w-inintervalset(aux390, [-1,1,3,9])
**VARIABLES**
BOOL aux391 #(2=actionTypes_00008)
BOOL aux392 #(2=actionTypes_00008)
BOOL aux393 #(2=actionTypes_00008)
BOOL aux394 #(2=actionTypes_00008)
BOOL aux395 #(2=actionTypes_00008)
BOOL aux396 #(2=actionTypes_00008)
BOOL aux397 #(2=actionTypes_00008)
BOOL aux398 #(2=actionTypes_00008)
DISCRETE aux399 #(pointers_00001_00008 + -1)
{-1..9}
**CONSTRAINTS**
w-inintervalset(aux399, [-1,1,3,9])
**VARIABLES**
BOOL aux400 #(2=actionTypes_00009)
BOOL aux401 #(2=actionTypes_00009)
BOOL aux402 #(2=actionTypes_00009)
BOOL aux403 #(2=actionTypes_00009)
BOOL aux404 #(2=actionTypes_00009)
BOOL aux405 #(2=actionTypes_00009)
BOOL aux406 #(2=actionTypes_00009)
BOOL aux407 #(2=actionTypes_00009)
DISCRETE aux408 #(pointers_00001_00009 + -1)
{-1..9}
**CONSTRAINTS**
w-inintervalset(aux408, [-1,1,3,9])
**VARIABLES**
BOOL aux409 #(2=actionTypes_00010)
BOOL aux410 #(2=actionTypes_00010)
BOOL aux411 #(2=actionTypes_00010)
BOOL aux412 #(2=actionTypes_00010)
BOOL aux413 #(2=actionTypes_00010)
BOOL aux414 #(2=actionTypes_00010)
BOOL aux415 #(2=actionTypes_00010)
BOOL aux416 #(2=actionTypes_00010)
DISCRETE aux417 #(pointers_00001_00010 + -1)
{-1..9}
**CONSTRAINTS**
w-inintervalset(aux417, [-1,1,3,9])
**VARIABLES**
BOOL aux418 #(2=actionTypes_00011)
BOOL aux419 #(2=actionTypes_00011)
BOOL aux420 #(2=actionTypes_00011)
BOOL aux421 #(2=actionTypes_00011)
BOOL aux422 #(2=actionTypes_00011)
BOOL aux423 #(2=actionTypes_00011)
BOOL aux424 #(2=actionTypes_00011)
BOOL aux425 #(2=actionTypes_00011)
DISCRETE aux426 #(pointers_00001_00011 + -1)
{-1..9}
**CONSTRAINTS**
w-inintervalset(aux426, [-1,1,3,9])
**VARIABLES**
BOOL aux427 #(2=actionTypes_00012)
BOOL aux428 #(2=actionTypes_00012)
BOOL aux429 #(2=actionTypes_00012)
BOOL aux430 #(2=actionTypes_00012)
BOOL aux431 #(2=actionTypes_00012)
BOOL aux432 #(2=actionTypes_00012)
BOOL aux433 #(2=actionTypes_00012)
BOOL aux434 #(2=actionTypes_00012)
DISCRETE aux435 #(pointers_00001_00012 + -1)
{-1..9}
**CONSTRAINTS**
w-inintervalset(aux435, [-1,1,3,9])
**VARIABLES**
BOOL aux436 #(2=actionTypes_00013)
BOOL aux437 #(2=actionTypes_00013)
BOOL aux438 #(2=actionTypes_00013)
BOOL aux439 #(2=actionTypes_00013)
BOOL aux440 #(2=actionTypes_00013)
BOOL aux441 #(2=actionTypes_00013)
BOOL aux442 #(2=actionTypes_00013)
BOOL aux443 #(2=actionTypes_00013)
DISCRETE aux444 #(pointers_00001_00013 + -1)
{-1..9}
**CONSTRAINTS**
w-inintervalset(aux444, [-1,1,3,9])
**VARIABLES**
BOOL aux445 #(2=actionTypes_00014)
BOOL aux446 #(2=actionTypes_00014)
BOOL aux447 #(2=actionTypes_00014)
BOOL aux448 #(2=actionTypes_00014)
BOOL aux449 #(2=actionTypes_00014)
BOOL aux450 #(2=actionTypes_00014)
BOOL aux451 #(2=actionTypes_00014)
BOOL aux452 #(2=actionTypes_00014)
DISCRETE aux453 #(pointers_00001_00014 + -1)
{-1..9}
**CONSTRAINTS**
w-inintervalset(aux453, [-1,1,3,9])
**VARIABLES**
BOOL aux454 #(2=actionTypes_00015)
BOOL aux455 #(2=actionTypes_00015)
BOOL aux456 #(2=actionTypes_00015)
BOOL aux457 #(2=actionTypes_00015)
BOOL aux458 #(2=actionTypes_00015)
BOOL aux459 #(3=actionTypes_00002)
BOOL aux460 #(3=actionTypes_00002)
BOOL aux461 #(3=actionTypes_00002)
BOOL aux462 #(3=actionTypes_00002)
BOOL aux463 #(3=actionTypes_00002)
BOOL aux464 #(3=actionTypes_00002)
BOOL aux465 #(3=actionTypes_00003)
BOOL aux466 #(3=actionTypes_00003)
BOOL aux467 #(3=actionTypes_00003)
BOOL aux468 #(3=actionTypes_00003)
BOOL aux469 #(3=actionTypes_00003)
BOOL aux470 #(3=actionTypes_00003)
BOOL aux471 #(3=actionTypes_00004)
BOOL aux472 #(3=actionTypes_00004)
BOOL aux473 #(3=actionTypes_00004)
BOOL aux474 #(3=actionTypes_00004)
BOOL aux475 #(3=actionTypes_00004)
BOOL aux476 #(3=actionTypes_00004)
BOOL aux477 #(3=actionTypes_00005)
BOOL aux478 #(3=actionTypes_00005)
BOOL aux479 #(3=actionTypes_00005)
BOOL aux480 #(3=actionTypes_00005)
BOOL aux481 #(3=actionTypes_00005)
BOOL aux482 #(3=actionTypes_00005)
BOOL aux483 #(3=actionTypes_00006)
BOOL aux484 #(3=actionTypes_00006)
BOOL aux485 #(3=actionTypes_00006)
BOOL aux486 #(3=actionTypes_00006)
BOOL aux487 #(3=actionTypes_00006)
BOOL aux488 #(3=actionTypes_00006)
BOOL aux489 #(3=actionTypes_00007)
BOOL aux490 #(3=actionTypes_00007)
BOOL aux491 #(3=actionTypes_00007)
BOOL aux492 #(3=actionTypes_00007)
BOOL aux493 #(3=actionTypes_00007)
BOOL aux494 #(3=actionTypes_00007)
BOOL aux495 #(3=actionTypes_00008)
BOOL aux496 #(3=actionTypes_00008)
BOOL aux497 #(3=actionTypes_00008)
BOOL aux498 #(3=actionTypes_00008)
BOOL aux499 #(3=actionTypes_00008)
BOOL aux500 #(3=actionTypes_00008)
BOOL aux501 #(3=actionTypes_00009)
BOOL aux502 #(3=actionTypes_00009)
BOOL aux503 #(3=actionTypes_00009)
BOOL aux504 #(3=actionTypes_00009)
BOOL aux505 #(3=actionTypes_00009)
BOOL aux506 #(3=actionTypes_00009)
BOOL aux507 #(3=actionTypes_00010)
BOOL aux508 #(3=actionTypes_00010)
BOOL aux509 #(3=actionTypes_00010)
BOOL aux510 #(3=actionTypes_00010)
BOOL aux511 #(3=actionTypes_00010)
BOOL aux512 #(3=actionTypes_00010)
BOOL aux513 #(3=actionTypes_00011)
BOOL aux514 #(3=actionTypes_00011)
BOOL aux515 #(3=actionTypes_00011)
BOOL aux516 #(3=actionTypes_00011)
BOOL aux517 #(3=actionTypes_00011)
BOOL aux518 #(3=actionTypes_00011)
BOOL aux519 #(3=actionTypes_00012)
BOOL aux520 #(3=actionTypes_00012)
BOOL aux521 #(3=actionTypes_00012)
BOOL aux522 #(3=actionTypes_00012)
BOOL aux523 #(3=actionTypes_00012)
BOOL aux524 #(3=actionTypes_00012)
BOOL aux525 #(3=actionTypes_00013)
BOOL aux526 #(3=actionTypes_00013)
BOOL aux527 #(3=actionTypes_00013)
BOOL aux528 #(3=actionTypes_00013)
BOOL aux529 #(3=actionTypes_00013)
BOOL aux530 #(3=actionTypes_00013)
BOOL aux531 #(3=actionTypes_00014)
BOOL aux532 #(3=actionTypes_00014)
BOOL aux533 #(3=actionTypes_00014)
BOOL aux534 #(3=actionTypes_00014)
BOOL aux535 #(3=actionTypes_00014)
BOOL aux536 #(3=actionTypes_00014)
BOOL aux537 #(3=actionTypes_00015)
BOOL aux538 #(3=actionTypes_00015)
BOOL aux539 #(3=actionTypes_00015)
BOOL aux540 #(3=actionTypes_00015)
BOOL aux541 #(3=actionTypes_00015)
BOOL aux542 #(3=actionTypes_00015)
BOOL aux543 #(4=actionTypes_00002)
BOOL aux544 #(4=actionTypes_00002)
BOOL aux545 #(4=actionTypes_00002)
BOOL aux546 #(4=actionTypes_00002)
BOOL aux547 #(4=actionTypes_00002)
BOOL aux548 #(4=actionTypes_00003)
BOOL aux549 #(4=actionTypes_00003)
BOOL aux550 #(4=actionTypes_00003)
BOOL aux551 #(4=actionTypes_00003)
BOOL aux552 #(4=actionTypes_00003)
BOOL aux553 #(4=actionTypes_00003)
BOOL aux554 #(4=actionTypes_00004)
BOOL aux555 #(4=actionTypes_00004)
BOOL aux556 #(4=actionTypes_00004)
BOOL aux557 #(4=actionTypes_00004)
BOOL aux558 #(4=actionTypes_00004)
BOOL aux559 #(4=actionTypes_00004)
BOOL aux560 #(4=actionTypes_00005)
BOOL aux561 #(4=actionTypes_00005)
BOOL aux562 #(4=actionTypes_00005)
BOOL aux563 #(4=actionTypes_00005)
BOOL aux564 #(4=actionTypes_00005)
BOOL aux565 #(4=actionTypes_00005)
BOOL aux566 #(4=actionTypes_00006)
BOOL aux567 #(4=actionTypes_00006)
BOOL aux568 #(4=actionTypes_00006)
BOOL aux569 #(4=actionTypes_00006)
BOOL aux570 #(4=actionTypes_00006)
BOOL aux571 #(4=actionTypes_00006)
BOOL aux572 #(4=actionTypes_00007)
BOOL aux573 #(4=actionTypes_00007)
BOOL aux574 #(4=actionTypes_00007)
BOOL aux575 #(4=actionTypes_00007)
BOOL aux576 #(4=actionTypes_00007)
BOOL aux577 #(4=actionTypes_00007)
BOOL aux578 #(4=actionTypes_00008)
BOOL aux579 #(4=actionTypes_00008)
BOOL aux580 #(4=actionTypes_00008)
BOOL aux581 #(4=actionTypes_00008)
BOOL aux582 #(4=actionTypes_00008)
BOOL aux583 #(4=actionTypes_00008)
BOOL aux584 #(4=actionTypes_00009)
BOOL aux585 #(4=actionTypes_00009)
BOOL aux586 #(4=actionTypes_00009)
BOOL aux587 #(4=actionTypes_00009)
BOOL aux588 #(4=actionTypes_00009)
BOOL aux589 #(4=actionTypes_00009)
BOOL aux590 #(4=actionTypes_00010)
BOOL aux591 #(4=actionTypes_00010)
BOOL aux592 #(4=actionTypes_00010)
BOOL aux593 #(4=actionTypes_00010)
BOOL aux594 #(4=actionTypes_00010)
BOOL aux595 #(4=actionTypes_00010)
BOOL aux596 #(4=actionTypes_00011)
BOOL aux597 #(4=actionTypes_00011)
BOOL aux598 #(4=actionTypes_00011)
BOOL aux599 #(4=actionTypes_00011)
BOOL aux600 #(4=actionTypes_00011)
BOOL aux601 #(4=actionTypes_00011)
BOOL aux602 #(4=actionTypes_00012)
BOOL aux603 #(4=actionTypes_00012)
BOOL aux604 #(4=actionTypes_00012)
BOOL aux605 #(4=actionTypes_00012)
BOOL aux606 #(4=actionTypes_00012)
BOOL aux607 #(4=actionTypes_00012)
BOOL aux608 #(4=actionTypes_00013)
BOOL aux609 #(4=actionTypes_00013)
BOOL aux610 #(4=actionTypes_00013)
BOOL aux611 #(4=actionTypes_00013)
BOOL aux612 #(4=actionTypes_00013)
BOOL aux613 #(4=actionTypes_00013)
BOOL aux614 #(4=actionTypes_00014)
BOOL aux615 #(4=actionTypes_00014)
BOOL aux616 #(4=actionTypes_00014)
BOOL aux617 #(4=actionTypes_00014)
BOOL aux618 #(4=actionTypes_00014)
BOOL aux619 #(4=actionTypes_00014)
BOOL aux620 #(4=actionTypes_00015)
BOOL aux621 #(4=actionTypes_00015)
BOOL aux622 #(4=actionTypes_00015)
BOOL aux623 #(4=actionTypes_00015)
BOOL aux624 #(4=actionTypes_00015)
BOOL aux625 #(4=actionTypes_00015)
BOOL aux626 #(5=actionTypes_00002)
BOOL aux627 #(5=actionTypes_00002)
BOOL aux628 #(5=actionTypes_00002)
BOOL aux629 #(5=actionTypes_00002)
BOOL aux630 #(5=actionTypes_00002)
BOOL aux631 #(5=actionTypes_00002)
BOOL aux632 #(5=actionTypes_00002)
BOOL aux633 #(5=actionTypes_00002)
BOOL aux634 #(5=actionTypes_00003)
BOOL aux635 #(5=actionTypes_00003)
BOOL aux636 #(5=actionTypes_00003)
BOOL aux637 #(5=actionTypes_00003)
BOOL aux638 #(5=actionTypes_00003)
BOOL aux639 #(5=actionTypes_00003)
BOOL aux640 #(5=actionTypes_00003)
BOOL aux641 #(5=actionTypes_00003)
BOOL aux642 #(5=actionTypes_00004)
BOOL aux643 #(5=actionTypes_00004)
BOOL aux644 #(5=actionTypes_00004)
BOOL aux645 #(5=actionTypes_00004)
BOOL aux646 #(5=actionTypes_00004)
BOOL aux647 #(5=actionTypes_00004)
BOOL aux648 #(5=actionTypes_00004)
BOOL aux649 #(5=actionTypes_00004)
BOOL aux650 #(5=actionTypes_00005)
BOOL aux651 #(5=actionTypes_00005)
BOOL aux652 #(5=actionTypes_00005)
BOOL aux653 #(5=actionTypes_00005)
BOOL aux654 #(5=actionTypes_00005)
BOOL aux655 #(5=actionTypes_00005)
BOOL aux656 #(5=actionTypes_00005)
BOOL aux657 #(5=actionTypes_00005)
BOOL aux658 #(5=actionTypes_00006)
BOOL aux659 #(5=actionTypes_00006)
BOOL aux660 #(5=actionTypes_00006)
BOOL aux661 #(5=actionTypes_00006)
BOOL aux662 #(5=actionTypes_00006)
BOOL aux663 #(5=actionTypes_00006)
BOOL aux664 #(5=actionTypes_00006)
BOOL aux665 #(5=actionTypes_00006)
BOOL aux666 #(5=actionTypes_00007)
BOOL aux667 #(5=actionTypes_00007)
BOOL aux668 #(5=actionTypes_00007)
BOOL aux669 #(5=actionTypes_00007)
BOOL aux670 #(5=actionTypes_00007)
BOOL aux671 #(5=actionTypes_00007)
BOOL aux672 #(5=actionTypes_00007)
BOOL aux673 #(5=actionTypes_00007)
BOOL aux674 #(5=actionTypes_00008)
BOOL aux675 #(5=actionTypes_00008)
BOOL aux676 #(5=actionTypes_00008)
BOOL aux677 #(5=actionTypes_00008)
BOOL aux678 #(5=actionTypes_00008)
BOOL aux679 #(5=actionTypes_00008)
BOOL aux680 #(5=actionTypes_00008)
BOOL aux681 #(5=actionTypes_00008)
BOOL aux682 #(5=actionTypes_00009)
BOOL aux683 #(5=actionTypes_00009)
BOOL aux684 #(5=actionTypes_00009)
BOOL aux685 #(5=actionTypes_00009)
BOOL aux686 #(5=actionTypes_00009)
BOOL aux687 #(5=actionTypes_00009)
BOOL aux688 #(5=actionTypes_00009)
BOOL aux689 #(5=actionTypes_00009)
BOOL aux690 #(5=actionTypes_00010)
BOOL aux691 #(5=actionTypes_00010)
BOOL aux692 #(5=actionTypes_00010)
BOOL aux693 #(5=actionTypes_00010)
BOOL aux694 #(5=actionTypes_00010)
BOOL aux695 #(5=actionTypes_00010)
BOOL aux696 #(5=actionTypes_00010)
BOOL aux697 #(5=actionTypes_00010)
BOOL aux698 #(5=actionTypes_00011)
BOOL aux699 #(5=actionTypes_00011)
BOOL aux700 #(5=actionTypes_00011)
BOOL aux701 #(5=actionTypes_00011)
BOOL aux702 #(5=actionTypes_00011)
BOOL aux703 #(5=actionTypes_00011)
BOOL aux704 #(5=actionTypes_00011)
BOOL aux705 #(5=actionTypes_00011)
BOOL aux706 #(5=actionTypes_00012)
BOOL aux707 #(5=actionTypes_00012)
BOOL aux708 #(5=actionTypes_00012)
BOOL aux709 #(5=actionTypes_00012)
BOOL aux710 #(5=actionTypes_00012)
BOOL aux711 #(5=actionTypes_00012)
BOOL aux712 #(5=actionTypes_00012)
BOOL aux713 #(5=actionTypes_00012)
BOOL aux714 #(5=actionTypes_00013)
BOOL aux715 #(5=actionTypes_00013)
BOOL aux716 #(5=actionTypes_00013)
BOOL aux717 #(5=actionTypes_00013)
BOOL aux718 #(5=actionTypes_00013)
BOOL aux719 #(5=actionTypes_00013)
BOOL aux720 #(5=actionTypes_00013)
BOOL aux721 #(5=actionTypes_00013)
BOOL aux722 #(5=actionTypes_00014)
BOOL aux723 #(5=actionTypes_00014)
BOOL aux724 #(5=actionTypes_00014)
BOOL aux725 #(5=actionTypes_00014)
BOOL aux726 #(5=actionTypes_00014)
BOOL aux727 #(5=actionTypes_00014)
BOOL aux728 #(5=actionTypes_00014)
BOOL aux729 #(5=actionTypes_00014)
BOOL aux730 #(5=actionTypes_00015)
BOOL aux731 #(5=actionTypes_00015)
BOOL aux732 #(5=actionTypes_00015)
BOOL aux733 #(5=actionTypes_00015)
BOOL aux734 #(5=actionTypes_00015)
BOOL aux735 #(5=actionTypes_00015)
BOOL aux736 #(5=actionTypes_00015)
BOOL aux737 #(5=actionTypes_00015)
BOOL aux738 #(6=actionTypes_00002)
BOOL aux739 #(6=actionTypes_00002)
BOOL aux740 #(6=actionTypes_00002)
BOOL aux741 #(6=actionTypes_00002)
BOOL aux742 #(6=actionTypes_00002)
BOOL aux743 #(6=actionTypes_00002)
BOOL aux744 #(6=actionTypes_00002)
BOOL aux745 #(6=actionTypes_00003)
BOOL aux746 #(6=actionTypes_00003)
BOOL aux747 #(6=actionTypes_00003)
BOOL aux748 #(6=actionTypes_00003)
BOOL aux749 #(6=actionTypes_00003)
BOOL aux750 #(6=actionTypes_00003)
BOOL aux751 #(6=actionTypes_00003)
BOOL aux752 #(6=actionTypes_00004)
BOOL aux753 #(6=actionTypes_00004)
BOOL aux754 #(6=actionTypes_00004)
BOOL aux755 #(6=actionTypes_00004)
BOOL aux756 #(6=actionTypes_00004)
BOOL aux757 #(6=actionTypes_00004)
BOOL aux758 #(6=actionTypes_00004)
BOOL aux759 #(6=actionTypes_00005)
BOOL aux760 #(6=actionTypes_00005)
BOOL aux761 #(6=actionTypes_00005)
BOOL aux762 #(6=actionTypes_00005)
BOOL aux763 #(6=actionTypes_00005)
BOOL aux764 #(6=actionTypes_00005)
BOOL aux765 #(6=actionTypes_00005)
BOOL aux766 #(6=actionTypes_00006)
BOOL aux767 #(6=actionTypes_00006)
BOOL aux768 #(6=actionTypes_00006)
BOOL aux769 #(6=actionTypes_00006)
BOOL aux770 #(6=actionTypes_00006)
BOOL aux771 #(6=actionTypes_00006)
BOOL aux772 #(6=actionTypes_00006)
BOOL aux773 #(6=actionTypes_00007)
BOOL aux774 #(6=actionTypes_00007)
BOOL aux775 #(6=actionTypes_00007)
BOOL aux776 #(6=actionTypes_00007)
BOOL aux777 #(6=actionTypes_00007)
BOOL aux778 #(6=actionTypes_00007)
BOOL aux779 #(6=actionTypes_00007)
BOOL aux780 #(6=actionTypes_00008)
BOOL aux781 #(6=actionTypes_00008)
BOOL aux782 #(6=actionTypes_00008)
BOOL aux783 #(6=actionTypes_00008)
BOOL aux784 #(6=actionTypes_00008)
BOOL aux785 #(6=actionTypes_00008)
BOOL aux786 #(6=actionTypes_00008)
BOOL aux787 #(6=actionTypes_00009)
BOOL aux788 #(6=actionTypes_00009)
BOOL aux789 #(6=actionTypes_00009)
BOOL aux790 #(6=actionTypes_00009)
BOOL aux791 #(6=actionTypes_00009)
BOOL aux792 #(6=actionTypes_00009)
BOOL aux793 #(6=actionTypes_00009)
BOOL aux794 #(6=actionTypes_00010)
BOOL aux795 #(6=actionTypes_00010)
BOOL aux796 #(6=actionTypes_00010)
BOOL aux797 #(6=actionTypes_00010)
BOOL aux798 #(6=actionTypes_00010)
BOOL aux799 #(6=actionTypes_00010)
BOOL aux800 #(6=actionTypes_00010)
BOOL aux801 #(6=actionTypes_00011)
BOOL aux802 #(6=actionTypes_00011)
BOOL aux803 #(6=actionTypes_00011)
BOOL aux804 #(6=actionTypes_00011)
BOOL aux805 #(6=actionTypes_00011)
BOOL aux806 #(6=actionTypes_00011)
BOOL aux807 #(6=actionTypes_00011)
BOOL aux808 #(6=actionTypes_00012)
BOOL aux809 #(6=actionTypes_00012)
BOOL aux810 #(6=actionTypes_00012)
BOOL aux811 #(6=actionTypes_00012)
BOOL aux812 #(6=actionTypes_00012)
BOOL aux813 #(6=actionTypes_00012)
BOOL aux814 #(6=actionTypes_00012)
BOOL aux815 #(6=actionTypes_00013)
BOOL aux816 #(6=actionTypes_00013)
BOOL aux817 #(6=actionTypes_00013)
BOOL aux818 #(6=actionTypes_00013)
BOOL aux819 #(6=actionTypes_00013)
BOOL aux820 #(6=actionTypes_00013)
BOOL aux821 #(6=actionTypes_00013)
BOOL aux822 #(6=actionTypes_00014)
BOOL aux823 #(6=actionTypes_00014)
BOOL aux824 #(6=actionTypes_00014)
BOOL aux825 #(6=actionTypes_00014)
BOOL aux826 #(6=actionTypes_00014)
BOOL aux827 #(6=actionTypes_00014)
BOOL aux828 #(6=actionTypes_00014)
BOOL aux829 #(6=actionTypes_00015)
BOOL aux830 #(6=actionTypes_00015)
BOOL aux831 #(6=actionTypes_00015)
BOOL aux832 #(6=actionTypes_00015)
BOOL aux833 #(6=actionTypes_00015)
BOOL aux834 #(6=actionTypes_00015)
BOOL aux835 #(6=actionTypes_00015)
BOOL aux836 #(7=actionTypes_00002)
BOOL aux837 #(7=actionTypes_00002)
BOOL aux838 #(7=actionTypes_00002)
BOOL aux839 #(7=actionTypes_00002)
BOOL aux840 #(7=actionTypes_00002)
BOOL aux841 #(7=actionTypes_00002)
BOOL aux842 #(7=actionTypes_00002)
BOOL aux843 #(7=actionTypes_00003)
BOOL aux844 #(7=actionTypes_00003)
BOOL aux845 #(7=actionTypes_00003)
BOOL aux846 #(7=actionTypes_00003)
BOOL aux847 #(7=actionTypes_00003)
BOOL aux848 #(7=actionTypes_00003)
BOOL aux849 #(7=actionTypes_00003)
BOOL aux850 #(7=actionTypes_00004)
BOOL aux851 #(7=actionTypes_00004)
BOOL aux852 #(7=actionTypes_00004)
BOOL aux853 #(7=actionTypes_00004)
BOOL aux854 #(7=actionTypes_00004)
BOOL aux855 #(7=actionTypes_00004)
BOOL aux856 #(7=actionTypes_00004)
BOOL aux857 #(7=actionTypes_00005)
BOOL aux858 #(7=actionTypes_00005)
BOOL aux859 #(7=actionTypes_00005)
BOOL aux860 #(7=actionTypes_00005)
BOOL aux861 #(7=actionTypes_00005)
BOOL aux862 #(7=actionTypes_00005)
BOOL aux863 #(7=actionTypes_00005)
BOOL aux864 #(7=actionTypes_00006)
BOOL aux865 #(7=actionTypes_00006)
BOOL aux866 #(7=actionTypes_00006)
BOOL aux867 #(7=actionTypes_00006)
BOOL aux868 #(7=actionTypes_00006)
BOOL aux869 #(7=actionTypes_00006)
BOOL aux870 #(7=actionTypes_00006)
BOOL aux871 #(7=actionTypes_00007)
BOOL aux872 #(7=actionTypes_00007)
BOOL aux873 #(7=actionTypes_00007)
BOOL aux874 #(7=actionTypes_00007)
BOOL aux875 #(7=actionTypes_00007)
BOOL aux876 #(7=actionTypes_00007)
BOOL aux877 #(7=actionTypes_00007)
BOOL aux878 #(7=actionTypes_00008)
BOOL aux879 #(7=actionTypes_00008)
BOOL aux880 #(7=actionTypes_00008)
BOOL aux881 #(7=actionTypes_00008)
BOOL aux882 #(7=actionTypes_00008)
BOOL aux883 #(7=actionTypes_00008)
BOOL aux884 #(7=actionTypes_00008)
BOOL aux885 #(7=actionTypes_00009)
BOOL aux886 #(7=actionTypes_00009)
BOOL aux887 #(7=actionTypes_00009)
BOOL aux888 #(7=actionTypes_00009)
BOOL aux889 #(7=actionTypes_00009)
BOOL aux890 #(7=actionTypes_00009)
BOOL aux891 #(7=actionTypes_00009)
BOOL aux892 #(7=actionTypes_00010)
BOOL aux893 #(7=actionTypes_00010)
BOOL aux894 #(7=actionTypes_00010)
BOOL aux895 #(7=actionTypes_00010)
BOOL aux896 #(7=actionTypes_00010)
BOOL aux897 #(7=actionTypes_00010)
BOOL aux898 #(7=actionTypes_00010)
BOOL aux899 #(7=actionTypes_00011)
BOOL aux900 #(7=actionTypes_00011)
BOOL aux901 #(7=actionTypes_00011)
BOOL aux902 #(7=actionTypes_00011)
BOOL aux903 #(7=actionTypes_00011)
BOOL aux904 #(7=actionTypes_00011)
BOOL aux905 #(7=actionTypes_00011)
BOOL aux906 #(7=actionTypes_00012)
BOOL aux907 #(7=actionTypes_00012)
BOOL aux908 #(7=actionTypes_00012)
BOOL aux909 #(7=actionTypes_00012)
BOOL aux910 #(7=actionTypes_00012)
BOOL aux911 #(7=actionTypes_00012)
BOOL aux912 #(7=actionTypes_00012)
BOOL aux913 #(7=actionTypes_00013)
BOOL aux914 #(7=actionTypes_00013)
BOOL aux915 #(7=actionTypes_00013)
BOOL aux916 #(7=actionTypes_00013)
BOOL aux917 #(7=actionTypes_00013)
BOOL aux918 #(7=actionTypes_00013)
BOOL aux919 #(7=actionTypes_00013)
BOOL aux920 #(7=actionTypes_00014)
BOOL aux921 #(7=actionTypes_00014)
BOOL aux922 #(7=actionTypes_00014)
BOOL aux923 #(7=actionTypes_00014)
BOOL aux924 #(7=actionTypes_00014)
BOOL aux925 #(7=actionTypes_00014)
BOOL aux926 #(7=actionTypes_00014)
BOOL aux927 #(7=actionTypes_00015)
BOOL aux928 #(7=actionTypes_00015)
BOOL aux929 #(7=actionTypes_00015)
BOOL aux930 #(7=actionTypes_00015)
BOOL aux931 #(7=actionTypes_00015)
BOOL aux932 #(7=actionTypes_00015)
BOOL aux933 #(7=actionTypes_00015)
BOOL aux934 #(8=actionTypes_00002)
BOOL aux935 #(8=actionTypes_00002)
BOOL aux936 #(8=actionTypes_00002)
BOOL aux937 #(8=actionTypes_00002)
BOOL aux938 #(8=actionTypes_00002)
BOOL aux939 #(8=actionTypes_00002)
BOOL aux940 #(8=actionTypes_00003)
BOOL aux941 #(8=actionTypes_00003)
BOOL aux942 #(8=actionTypes_00003)
BOOL aux943 #(8=actionTypes_00003)
BOOL aux944 #(8=actionTypes_00003)
BOOL aux945 #(8=actionTypes_00003)
BOOL aux946 #(8=actionTypes_00004)
BOOL aux947 #(8=actionTypes_00004)
BOOL aux948 #(8=actionTypes_00004)
BOOL aux949 #(8=actionTypes_00004)
BOOL aux950 #(8=actionTypes_00004)
BOOL aux951 #(8=actionTypes_00004)
BOOL aux952 #(8=actionTypes_00005)
BOOL aux953 #(8=actionTypes_00005)
BOOL aux954 #(8=actionTypes_00005)
BOOL aux955 #(8=actionTypes_00005)
BOOL aux956 #(8=actionTypes_00005)
BOOL aux957 #(8=actionTypes_00005)
BOOL aux958 #(8=actionTypes_00006)
BOOL aux959 #(8=actionTypes_00006)
BOOL aux960 #(8=actionTypes_00006)
BOOL aux961 #(8=actionTypes_00006)
BOOL aux962 #(8=actionTypes_00006)
BOOL aux963 #(8=actionTypes_00006)
BOOL aux964 #(8=actionTypes_00007)
BOOL aux965 #(8=actionTypes_00007)
BOOL aux966 #(8=actionTypes_00007)
BOOL aux967 #(8=actionTypes_00007)
BOOL aux968 #(8=actionTypes_00007)
BOOL aux969 #(8=actionTypes_00007)
BOOL aux970 #(8=actionTypes_00008)
BOOL aux971 #(8=actionTypes_00008)
BOOL aux972 #(8=actionTypes_00008)
BOOL aux973 #(8=actionTypes_00008)
BOOL aux974 #(8=actionTypes_00008)
BOOL aux975 #(8=actionTypes_00008)
BOOL aux976 #(8=actionTypes_00009)
BOOL aux977 #(8=actionTypes_00009)
BOOL aux978 #(8=actionTypes_00009)
BOOL aux979 #(8=actionTypes_00009)
BOOL aux980 #(8=actionTypes_00009)
BOOL aux981 #(8=actionTypes_00009)
BOOL aux982 #(8=actionTypes_00010)
BOOL aux983 #(8=actionTypes_00010)
BOOL aux984 #(8=actionTypes_00010)
BOOL aux985 #(8=actionTypes_00010)
BOOL aux986 #(8=actionTypes_00010)
BOOL aux987 #(8=actionTypes_00010)
BOOL aux988 #(8=actionTypes_00011)
BOOL aux989 #(8=actionTypes_00011)
BOOL aux990 #(8=actionTypes_00011)
BOOL aux991 #(8=actionTypes_00011)
BOOL aux992 #(8=actionTypes_00011)
BOOL aux993 #(8=actionTypes_00011)
BOOL aux994 #(8=actionTypes_00012)
BOOL aux995 #(8=actionTypes_00012)
BOOL aux996 #(8=actionTypes_00012)
BOOL aux997 #(8=actionTypes_00012)
BOOL aux998 #(8=actionTypes_00012)
BOOL aux999 #(8=actionTypes_00012)
BOOL aux1000 #(8=actionTypes_00013)
BOOL aux1001 #(8=actionTypes_00013)
BOOL aux1002 #(8=actionTypes_00013)
BOOL aux1003 #(8=actionTypes_00013)
BOOL aux1004 #(8=actionTypes_00013)
BOOL aux1005 #(8=actionTypes_00013)
BOOL aux1006 #(8=actionTypes_00014)
BOOL aux1007 #(8=actionTypes_00014)
BOOL aux1008 #(8=actionTypes_00014)
BOOL aux1009 #(8=actionTypes_00014)
BOOL aux1010 #(8=actionTypes_00014)
BOOL aux1011 #(8=actionTypes_00014)
BOOL aux1012 #(8=actionTypes_00015)
BOOL aux1013 #(8=actionTypes_00015)
BOOL aux1014 #(8=actionTypes_00015)
BOOL aux1015 #(8=actionTypes_00015)
BOOL aux1016 #(8=actionTypes_00015)
BOOL aux1017 #(8=actionTypes_00015)
BOOL aux1018 #(9=actionTypes_00002)
BOOL aux1019 #(9=actionTypes_00002)
BOOL aux1020 #(9=actionTypes_00002)
BOOL aux1021 #(9=actionTypes_00002)
BOOL aux1022 #(9=actionTypes_00002)
BOOL aux1023 #(9=actionTypes_00002)
BOOL aux1024 #(9=actionTypes_00002)
BOOL aux1025 #(9=actionTypes_00002)
BOOL aux1026 #(9=actionTypes_00003)
BOOL aux1027 #(9=actionTypes_00003)
BOOL aux1028 #(9=actionTypes_00003)
BOOL aux1029 #(9=actionTypes_00003)
BOOL aux1030 #(9=actionTypes_00003)
BOOL aux1031 #(9=actionTypes_00003)
BOOL aux1032 #(9=actionTypes_00003)
BOOL aux1033 #(9=actionTypes_00003)
BOOL aux1034 #(9=actionTypes_00004)
BOOL aux1035 #(9=actionTypes_00004)
BOOL aux1036 #(9=actionTypes_00004)
BOOL aux1037 #(9=actionTypes_00004)
BOOL aux1038 #(9=actionTypes_00004)
BOOL aux1039 #(9=actionTypes_00004)
BOOL aux1040 #(9=actionTypes_00004)
BOOL aux1041 #(9=actionTypes_00004)
BOOL aux1042 #(9=actionTypes_00005)
BOOL aux1043 #(9=actionTypes_00005)
BOOL aux1044 #(9=actionTypes_00005)
BOOL aux1045 #(9=actionTypes_00005)
BOOL aux1046 #(9=actionTypes_00005)
BOOL aux1047 #(9=actionTypes_00005)
BOOL aux1048 #(9=actionTypes_00005)
BOOL aux1049 #(9=actionTypes_00005)
BOOL aux1050 #(9=actionTypes_00006)
BOOL aux1051 #(9=actionTypes_00006)
BOOL aux1052 #(9=actionTypes_00006)
BOOL aux1053 #(9=actionTypes_00006)
BOOL aux1054 #(9=actionTypes_00006)
BOOL aux1055 #(9=actionTypes_00006)
BOOL aux1056 #(9=actionTypes_00006)
BOOL aux1057 #(9=actionTypes_00006)
BOOL aux1058 #(9=actionTypes_00007)
BOOL aux1059 #(9=actionTypes_00007)
BOOL aux1060 #(9=actionTypes_00007)
BOOL aux1061 #(9=actionTypes_00007)
BOOL aux1062 #(9=actionTypes_00007)
BOOL aux1063 #(9=actionTypes_00007)
BOOL aux1064 #(9=actionTypes_00007)
BOOL aux1065 #(9=actionTypes_00007)
BOOL aux1066 #(9=actionTypes_00008)
BOOL aux1067 #(9=actionTypes_00008)
BOOL aux1068 #(9=actionTypes_00008)
BOOL aux1069 #(9=actionTypes_00008)
BOOL aux1070 #(9=actionTypes_00008)
BOOL aux1071 #(9=actionTypes_00008)
BOOL aux1072 #(9=actionTypes_00008)
BOOL aux1073 #(9=actionTypes_00008)
BOOL aux1074 #(9=actionTypes_00009)
BOOL aux1075 #(9=actionTypes_00009)
BOOL aux1076 #(9=actionTypes_00009)
BOOL aux1077 #(9=actionTypes_00009)
BOOL aux1078 #(9=actionTypes_00009)
BOOL aux1079 #(9=actionTypes_00009)
BOOL aux1080 #(9=actionTypes_00009)
BOOL aux1081 #(9=actionTypes_00009)
BOOL aux1082 #(9=actionTypes_00010)
BOOL aux1083 #(9=actionTypes_00010)
BOOL aux1084 #(9=actionTypes_00010)
BOOL aux1085 #(9=actionTypes_00010)
BOOL aux1086 #(9=actionTypes_00010)
BOOL aux1087 #(9=actionTypes_00010)
BOOL aux1088 #(9=actionTypes_00010)
BOOL aux1089 #(9=actionTypes_00010)
BOOL aux1090 #(9=actionTypes_00011)
BOOL aux1091 #(9=actionTypes_00011)
BOOL aux1092 #(9=actionTypes_00011)
BOOL aux1093 #(9=actionTypes_00011)
BOOL aux1094 #(9=actionTypes_00011)
BOOL aux1095 #(9=actionTypes_00011)
BOOL aux1096 #(9=actionTypes_00011)
BOOL aux1097 #(9=actionTypes_00011)
BOOL aux1098 #(9=actionTypes_00012)
BOOL aux1099 #(9=actionTypes_00012)
BOOL aux1100 #(9=actionTypes_00012)
BOOL aux1101 #(9=actionTypes_00012)
BOOL aux1102 #(9=actionTypes_00012)
BOOL aux1103 #(9=actionTypes_00012)
BOOL aux1104 #(9=actionTypes_00012)
BOOL aux1105 #(9=actionTypes_00012)
BOOL aux1106 #(9=actionTypes_00013)
BOOL aux1107 #(9=actionTypes_00013)
BOOL aux1108 #(9=actionTypes_00013)
BOOL aux1109 #(9=actionTypes_00013)
BOOL aux1110 #(9=actionTypes_00013)
BOOL aux1111 #(9=actionTypes_00013)
BOOL aux1112 #(9=actionTypes_00013)
BOOL aux1113 #(9=actionTypes_00013)
BOOL aux1114 #(9=actionTypes_00014)
BOOL aux1115 #(9=actionTypes_00014)
BOOL aux1116 #(9=actionTypes_00014)
BOOL aux1117 #(9=actionTypes_00014)
BOOL aux1118 #(9=actionTypes_00014)
BOOL aux1119 #(9=actionTypes_00014)
BOOL aux1120 #(9=actionTypes_00014)
BOOL aux1121 #(9=actionTypes_00014)
BOOL aux1122 #(9=actionTypes_00015)
BOOL aux1123 #(9=actionTypes_00015)
BOOL aux1124 #(9=actionTypes_00015)
BOOL aux1125 #(9=actionTypes_00015)
BOOL aux1126 #(9=actionTypes_00015)
BOOL aux1127 #(9=actionTypes_00015)
BOOL aux1128 #(9=actionTypes_00015)
BOOL aux1129 #(9=actionTypes_00015)
**VARIABLES**
ALIAS output[3]=[6, 36, 5]
**VARIABLES**
ALIAS input[10]=[1, 2, 3, 0, 12, 12, 12, 0, 5, 0]
**SEARCH**
PRINT[[statePlaces_00002_00002],[statePlaces_00002_00003],[statePlaces_00002_00004],[statePlaces_00002_00005],[statePlaces_00002_00006],[statePlaces_00002_00007],[statePlaces_00002_00008],[statePlaces_00002_00009],[statePlaces_00002_00010],[statePlaces_00002_00011],[statePlaces_00002_00012],[statePlaces_00002_00013],[statePlaces_00002_00014],[statePlaces_00003_00002],[statePlaces_00003_00003],[statePlaces_00003_00004],[statePlaces_00003_00005],[statePlaces_00003_00006],[statePlaces_00003_00007],[statePlaces_00003_00008],[statePlaces_00003_00009],[statePlaces_00003_00010],[statePlaces_00003_00011],[statePlaces_00003_00012],[statePlaces_00003_00013],[statePlaces_00003_00014],[statePlaces_00003_00015],[actionTypes_00002],[actionTypes_00003],[actionTypes_00004],[actionTypes_00005],[actionTypes_00006],[actionTypes_00007],[actionTypes_00008],[actionTypes_00009],[actionTypes_00010],[actionTypes_00011],[actionTypes_00012],[actionTypes_00013],[actionTypes_00014],[actionTypes_00015],[actionFrom_00002],[actionFrom_00003],[actionFrom_00004],[actionFrom_00005],[actionFrom_00006],[actionFrom_00007],[actionFrom_00008],[actionFrom_00009],[actionFrom_00010],[actionFrom_00011],[actionFrom_00012],[actionFrom_00013],[actionFrom_00014],[actionFrom_00015],[actionTo_00002],[actionTo_00003],[actionTo_00004],[actionTo_00005],[actionTo_00006],[actionTo_00007],[actionTo_00008],[actionTo_00009],[actionTo_00010],[actionTo_00011],[actionTo_00012],[actionTo_00013],[actionTo_00014],[actionTo_00015],[pointers_00000_00002],[pointers_00000_00003],[pointers_00000_00004],[pointers_00000_00005],[pointers_00000_00006],[pointers_00000_00007],[pointers_00000_00008],[pointers_00000_00009],[pointers_00000_00010],[pointers_00000_00011],[pointers_00000_00012],[pointers_00000_00013],[pointers_00000_00014],[pointers_00000_00015],[pointers_00001_00002],[pointers_00001_00003],[pointers_00001_00004],[pointers_00001_00005],[pointers_00001_00006],[pointers_00001_00007],[pointers_00001_00008],[pointers_00001_00009],[pointers_00001_00010],[pointers_00001_00011],[pointers_00001_00012],[pointers_00001_00013],[pointers_00001_00014]]
**CONSTRAINTS**
reify(diseq(1,actionTypes_00002), aux198)
reify(diseq(1,actionTypes_00003), aux199)
reify(diseq(1,actionTypes_00004), aux200)
reify(diseq(1,actionTypes_00005), aux201)
reify(diseq(1,actionTypes_00006), aux202)
reify(diseq(1,actionTypes_00007), aux203)
reify(diseq(1,actionTypes_00008), aux204)
reify(diseq(1,actionTypes_00009), aux205)
reify(diseq(1,actionTypes_00010), aux206)
reify(diseq(1,actionTypes_00011), aux207)
reify(diseq(1,actionTypes_00012), aux208)
reify(diseq(1,actionTypes_00013), aux209)
reify(diseq(1,actionTypes_00014), aux210)
reify(diseq(1,actionTypes_00015), aux211)
reify(diseq(2,actionTypes_00002), aux212)
reify(diseq(2,actionTypes_00003), aux213)
reify(diseq(2,actionTypes_00004), aux214)
reify(diseq(2,actionTypes_00005), aux215)
reify(diseq(2,actionTypes_00006), aux216)
reify(diseq(2,actionTypes_00007), aux217)
reify(diseq(2,actionTypes_00008), aux218)
reify(diseq(2,actionTypes_00009), aux219)
reify(diseq(2,actionTypes_00010), aux220)
reify(diseq(2,actionTypes_00011), aux221)
reify(diseq(2,actionTypes_00012), aux222)
reify(diseq(2,actionTypes_00013), aux223)
reify(diseq(2,actionTypes_00014), aux224)
reify(diseq(2,actionTypes_00015), aux225)
reify(watched-or({watched-and({w-literal(actionTypes_00002,7),diseq(actionFrom_00002,3)}),watched-and({w-literal(actionTypes_00002,8),diseq(actionFrom_00002,3)}),w-literal(actionTypes_00002,1),w-literal(actionTypes_00002,2),w-literal(actionTypes_00002,3),w-literal(actionTypes_00002,5),w-literal(actionTypes_00002,6),w-literal(actionTypes_00002,9),watched-and({w-literal(actionTypes_00002,4),diseq(actionTo_00002,3)})}), aux226)
reify(watched-or({watched-and({w-literal(actionTypes_00003,7),diseq(actionFrom_00003,3)}),watched-and({w-literal(actionTypes_00003,8),diseq(actionFrom_00003,3)}),w-literal(actionTypes_00003,1),w-literal(actionTypes_00003,2),w-literal(actionTypes_00003,3),w-literal(actionTypes_00003,5),w-literal(actionTypes_00003,6),w-literal(actionTypes_00003,9),watched-and({w-literal(actionTypes_00003,4),diseq(actionTo_00003,3)})}), aux227)
reify(watched-or({watched-and({w-literal(actionTypes_00004,7),diseq(actionFrom_00004,3)}),watched-and({w-literal(actionTypes_00004,8),diseq(actionFrom_00004,3)}),w-literal(actionTypes_00004,1),w-literal(actionTypes_00004,2),w-literal(actionTypes_00004,3),w-literal(actionTypes_00004,5),w-literal(actionTypes_00004,6),w-literal(actionTypes_00004,9),watched-and({w-literal(actionTypes_00004,4),diseq(actionTo_00004,3)})}), aux228)
reify(watched-or({watched-and({w-literal(actionTypes_00005,7),diseq(actionFrom_00005,3)}),watched-and({w-literal(actionTypes_00005,8),diseq(actionFrom_00005,3)}),w-literal(actionTypes_00005,1),w-literal(actionTypes_00005,2),w-literal(actionTypes_00005,3),w-literal(actionTypes_00005,5),w-literal(actionTypes_00005,6),w-literal(actionTypes_00005,9),watched-and({w-literal(actionTypes_00005,4),diseq(actionTo_00005,3)})}), aux229)
reify(watched-or({watched-and({w-literal(actionTypes_00006,7),diseq(actionFrom_00006,3)}),watched-and({w-literal(actionTypes_00006,8),diseq(actionFrom_00006,3)}),w-literal(actionTypes_00006,1),w-literal(actionTypes_00006,2),w-literal(actionTypes_00006,3),w-literal(actionTypes_00006,5),w-literal(actionTypes_00006,6),w-literal(actionTypes_00006,9),watched-and({w-literal(actionTypes_00006,4),diseq(actionTo_00006,3)})}), aux230)
reify(watched-or({watched-and({w-literal(actionTypes_00007,7),diseq(actionFrom_00007,3)}),watched-and({w-literal(actionTypes_00007,8),diseq(actionFrom_00007,3)}),w-literal(actionTypes_00007,1),w-literal(actionTypes_00007,2),w-literal(actionTypes_00007,3),w-literal(actionTypes_00007,5),w-literal(actionTypes_00007,6),w-literal(actionTypes_00007,9),watched-and({w-literal(actionTypes_00007,4),diseq(actionTo_00007,3)})}), aux231)
reify(watched-or({watched-and({w-literal(actionTypes_00008,7),diseq(actionFrom_00008,3)}),watched-and({w-literal(actionTypes_00008,8),diseq(actionFrom_00008,3)}),w-literal(actionTypes_00008,1),w-literal(actionTypes_00008,2),w-literal(actionTypes_00008,3),w-literal(actionTypes_00008,5),w-literal(actionTypes_00008,6),w-literal(actionTypes_00008,9),watched-and({w-literal(actionTypes_00008,4),diseq(actionTo_00008,3)})}), aux232)
reify(watched-or({watched-and({w-literal(actionTypes_00009,7),diseq(actionFrom_00009,3)}),watched-and({w-literal(actionTypes_00009,8),diseq(actionFrom_00009,3)}),w-literal(actionTypes_00009,1),w-literal(actionTypes_00009,2),w-literal(actionTypes_00009,3),w-literal(actionTypes_00009,5),w-literal(actionTypes_00009,6),w-literal(actionTypes_00009,9),watched-and({w-literal(actionTypes_00009,4),diseq(actionTo_00009,3)})}), aux233)
reify(watched-or({watched-and({w-literal(actionTypes_00010,7),diseq(actionFrom_00010,3)}),watched-and({w-literal(actionTypes_00010,8),diseq(actionFrom_00010,3)}),w-literal(actionTypes_00010,1),w-literal(actionTypes_00010,2),w-literal(actionTypes_00010,3),w-literal(actionTypes_00010,5),w-literal(actionTypes_00010,6),w-literal(actionTypes_00010,9),watched-and({w-literal(actionTypes_00010,4),diseq(actionTo_00010,3)})}), aux234)
reify(watched-or({watched-and({w-literal(actionTypes_00011,7),diseq(actionFrom_00011,3)}),watched-and({w-literal(actionTypes_00011,8),diseq(actionFrom_00011,3)}),w-literal(actionTypes_00011,1),w-literal(actionTypes_00011,2),w-literal(actionTypes_00011,3),w-literal(actionTypes_00011,5),w-literal(actionTypes_00011,6),w-literal(actionTypes_00011,9),watched-and({w-literal(actionTypes_00011,4),diseq(actionTo_00011,3)})}), aux235)
reify(watched-or({watched-and({w-literal(actionTypes_00012,7),diseq(actionFrom_00012,3)}),watched-and({w-literal(actionTypes_00012,8),diseq(actionFrom_00012,3)}),w-literal(actionTypes_00012,1),w-literal(actionTypes_00012,2),w-literal(actionTypes_00012,3),w-literal(actionTypes_00012,5),w-literal(actionTypes_00012,6),w-literal(actionTypes_00012,9),watched-and({w-literal(actionTypes_00012,4),diseq(actionTo_00012,3)})}), aux236)
reify(watched-or({watched-and({w-literal(actionTypes_00013,7),diseq(actionFrom_00013,3)}),watched-and({w-literal(actionTypes_00013,8),diseq(actionFrom_00013,3)}),w-literal(actionTypes_00013,1),w-literal(actionTypes_00013,2),w-literal(actionTypes_00013,3),w-literal(actionTypes_00013,5),w-literal(actionTypes_00013,6),w-literal(actionTypes_00013,9),watched-and({w-literal(actionTypes_00013,4),diseq(actionTo_00013,3)})}), aux237)
reify(watched-or({watched-and({w-literal(actionTypes_00014,7),diseq(actionFrom_00014,3)}),watched-and({w-literal(actionTypes_00014,8),diseq(actionFrom_00014,3)}),w-literal(actionTypes_00014,1),w-literal(actionTypes_00014,2),w-literal(actionTypes_00014,3),w-literal(actionTypes_00014,5),w-literal(actionTypes_00014,6),w-literal(actionTypes_00014,9),watched-and({w-literal(actionTypes_00014,4),diseq(actionTo_00014,3)})}), aux238)
reify(watched-or({watched-and({w-literal(actionTypes_00015,7),diseq(actionFrom_00015,3)}),watched-and({w-literal(actionTypes_00015,8),diseq(actionFrom_00015,3)}),w-literal(actionTypes_00015,1),w-literal(actionTypes_00015,2),w-literal(actionTypes_00015,3),w-literal(actionTypes_00015,5),w-literal(actionTypes_00015,6),w-literal(actionTypes_00015,9),watched-and({w-literal(actionTypes_00015,4),diseq(actionTo_00015,3)})}), aux239)
reify(watched-or({w-literal(actionTypes_00002,2),w-literal(actionTypes_00002,4)}), aux240)
reify(watched-or({w-literal(actionTypes_00003,2),w-literal(actionTypes_00003,4)}), aux241)
reify(watched-or({w-literal(actionTypes_00004,2),w-literal(actionTypes_00004,4)}), aux242)
reify(watched-or({w-literal(actionTypes_00005,2),w-literal(actionTypes_00005,4)}), aux243)
reify(watched-or({w-literal(actionTypes_00006,2),w-literal(actionTypes_00006,4)}), aux244)
reify(watched-or({w-literal(actionTypes_00007,2),w-literal(actionTypes_00007,4)}), aux245)
reify(watched-or({w-literal(actionTypes_00008,2),w-literal(actionTypes_00008,4)}), aux246)
reify(watched-or({w-literal(actionTypes_00009,2),w-literal(actionTypes_00009,4)}), aux247)
reify(watched-or({w-literal(actionTypes_00010,2),w-literal(actionTypes_00010,4)}), aux248)
reify(watched-or({w-literal(actionTypes_00011,2),w-literal(actionTypes_00011,4)}), aux249)
reify(watched-or({w-literal(actionTypes_00012,2),w-literal(actionTypes_00012,4)}), aux250)
reify(watched-or({w-literal(actionTypes_00013,2),w-literal(actionTypes_00013,4)}), aux251)
reify(watched-or({w-literal(actionTypes_00014,2),w-literal(actionTypes_00014,4)}), aux252)
reify(watched-or({w-literal(actionTypes_00015,2),w-literal(actionTypes_00015,4)}), aux253)
reify(w-literal(actionTypes_00002,1), aux254)
reify(w-literal(actionTypes_00002,1), aux255)
reify(w-literal(actionTypes_00002,1), aux256)
reify(w-literal(actionTypes_00002,1), aux257)
reify(w-literal(actionTypes_00002,1), aux258)
reify(w-literal(actionTypes_00003,1), aux260)
reify(w-literal(actionTypes_00003,1), aux261)
reify(w-literal(actionTypes_00003,1), aux262)
reify(w-literal(actionTypes_00003,1), aux263)
reify(w-literal(actionTypes_00003,1), aux264)
reify(w-literal(actionTypes_00004,1), aux266)
reify(w-literal(actionTypes_00004,1), aux267)
reify(w-literal(actionTypes_00004,1), aux268)
reify(w-literal(actionTypes_00004,1), aux269)
reify(w-literal(actionTypes_00004,1), aux270)
reify(w-literal(actionTypes_00005,1), aux272)
reify(w-literal(actionTypes_00005,1), aux273)
reify(w-literal(actionTypes_00005,1), aux274)
reify(w-literal(actionTypes_00005,1), aux275)
reify(w-literal(actionTypes_00005,1), aux276)
reify(w-literal(actionTypes_00006,1), aux278)
reify(w-literal(actionTypes_00006,1), aux279)
reify(w-literal(actionTypes_00006,1), aux280)
reify(w-literal(actionTypes_00006,1), aux281)
reify(w-literal(actionTypes_00006,1), aux282)
reify(w-literal(actionTypes_00007,1), aux284)
reify(w-literal(actionTypes_00007,1), aux285)
reify(w-literal(actionTypes_00007,1), aux286)
reify(w-literal(actionTypes_00007,1), aux287)
reify(w-literal(actionTypes_00007,1), aux288)
reify(w-literal(actionTypes_00008,1), aux290)
reify(w-literal(actionTypes_00008,1), aux291)
reify(w-literal(actionTypes_00008,1), aux292)
reify(w-literal(actionTypes_00008,1), aux293)
reify(w-literal(actionTypes_00008,1), aux294)
reify(w-literal(actionTypes_00009,1), aux296)
reify(w-literal(actionTypes_00009,1), aux297)
reify(w-literal(actionTypes_00009,1), aux298)
reify(w-literal(actionTypes_00009,1), aux299)
reify(w-literal(actionTypes_00009,1), aux300)
reify(w-literal(actionTypes_00010,1), aux302)
reify(w-literal(actionTypes_00010,1), aux303)
reify(w-literal(actionTypes_00010,1), aux304)
reify(w-literal(actionTypes_00010,1), aux305)
reify(w-literal(actionTypes_00010,1), aux306)
reify(w-literal(actionTypes_00011,1), aux308)
reify(w-literal(actionTypes_00011,1), aux309)
reify(w-literal(actionTypes_00011,1), aux310)
reify(w-literal(actionTypes_00011,1), aux311)
reify(w-literal(actionTypes_00011,1), aux312)
reify(w-literal(actionTypes_00012,1), aux314)
reify(w-literal(actionTypes_00012,1), aux315)
reify(w-literal(actionTypes_00012,1), aux316)
reify(w-literal(actionTypes_00012,1), aux317)
reify(w-literal(actionTypes_00012,1), aux318)
reify(w-literal(actionTypes_00013,1), aux320)
reify(w-literal(actionTypes_00013,1), aux321)
reify(w-literal(actionTypes_00013,1), aux322)
reify(w-literal(actionTypes_00013,1), aux323)
reify(w-literal(actionTypes_00013,1), aux324)
reify(w-literal(actionTypes_00014,1), aux326)
reify(w-literal(actionTypes_00014,1), aux327)
reify(w-literal(actionTypes_00014,1), aux328)
reify(w-literal(actionTypes_00014,1), aux329)
reify(w-literal(actionTypes_00014,1), aux330)
reify(w-literal(actionTypes_00015,1), aux332)
reify(w-literal(actionTypes_00015,1), aux333)
reify(w-literal(actionTypes_00015,1), aux334)
reify(w-literal(actionTypes_00015,1), aux335)
reify(w-literal(actionTypes_00015,1), aux336)
reify(w-literal(actionTypes_00002,2), aux338)
reify(w-literal(actionTypes_00002,2), aux339)
reify(w-literal(actionTypes_00002,2), aux340)
reify(w-literal(actionTypes_00002,2), aux341)
reify(w-literal(actionTypes_00002,2), aux342)
reify(w-literal(actionTypes_00002,2), aux343)
reify(w-literal(actionTypes_00002,2), aux344)
reify(w-literal(actionTypes_00003,2), aux346)
reify(w-literal(actionTypes_00003,2), aux347)
reify(w-literal(actionTypes_00003,2), aux348)
reify(w-literal(actionTypes_00003,2), aux349)
reify(w-literal(actionTypes_00003,2), aux350)
reify(w-literal(actionTypes_00003,2), aux351)
reify(w-literal(actionTypes_00003,2), aux352)
reify(w-literal(actionTypes_00003,2), aux353)
reify(w-literal(actionTypes_00004,2), aux355)
reify(w-literal(actionTypes_00004,2), aux356)
reify(w-literal(actionTypes_00004,2), aux357)
reify(w-literal(actionTypes_00004,2), aux358)
reify(w-literal(actionTypes_00004,2), aux359)
reify(w-literal(actionTypes_00004,2), aux360)
reify(w-literal(actionTypes_00004,2), aux361)
reify(w-literal(actionTypes_00004,2), aux362)
reify(w-literal(actionTypes_00005,2), aux364)
reify(w-literal(actionTypes_00005,2), aux365)
reify(w-literal(actionTypes_00005,2), aux366)
reify(w-literal(actionTypes_00005,2), aux367)
reify(w-literal(actionTypes_00005,2), aux368)
reify(w-literal(actionTypes_00005,2), aux369)
reify(w-literal(actionTypes_00005,2), aux370)
reify(w-literal(actionTypes_00005,2), aux371)
reify(w-literal(actionTypes_00006,2), aux373)
reify(w-literal(actionTypes_00006,2), aux374)
reify(w-literal(actionTypes_00006,2), aux375)
reify(w-literal(actionTypes_00006,2), aux376)
reify(w-literal(actionTypes_00006,2), aux377)
reify(w-literal(actionTypes_00006,2), aux378)
reify(w-literal(actionTypes_00006,2), aux379)
reify(w-literal(actionTypes_00006,2), aux380)
reify(w-literal(actionTypes_00007,2), aux382)
reify(w-literal(actionTypes_00007,2), aux383)
reify(w-literal(actionTypes_00007,2), aux384)
reify(w-literal(actionTypes_00007,2), aux385)
reify(w-literal(actionTypes_00007,2), aux386)
reify(w-literal(actionTypes_00007,2), aux387)
reify(w-literal(actionTypes_00007,2), aux388)
reify(w-literal(actionTypes_00007,2), aux389)
reify(w-literal(actionTypes_00008,2), aux391)
reify(w-literal(actionTypes_00008,2), aux392)
reify(w-literal(actionTypes_00008,2), aux393)
reify(w-literal(actionTypes_00008,2), aux394)
reify(w-literal(actionTypes_00008,2), aux395)
reify(w-literal(actionTypes_00008,2), aux396)
reify(w-literal(actionTypes_00008,2), aux397)
reify(w-literal(actionTypes_00008,2), aux398)
reify(w-literal(actionTypes_00009,2), aux400)
reify(w-literal(actionTypes_00009,2), aux401)
reify(w-literal(actionTypes_00009,2), aux402)
reify(w-literal(actionTypes_00009,2), aux403)
reify(w-literal(actionTypes_00009,2), aux404)
reify(w-literal(actionTypes_00009,2), aux405)
reify(w-literal(actionTypes_00009,2), aux406)
reify(w-literal(actionTypes_00009,2), aux407)
reify(w-literal(actionTypes_00010,2), aux409)
reify(w-literal(actionTypes_00010,2), aux410)
reify(w-literal(actionTypes_00010,2), aux411)
reify(w-literal(actionTypes_00010,2), aux412)
reify(w-literal(actionTypes_00010,2), aux413)
reify(w-literal(actionTypes_00010,2), aux414)
reify(w-literal(actionTypes_00010,2), aux415)
reify(w-literal(actionTypes_00010,2), aux416)
reify(w-literal(actionTypes_00011,2), aux418)
reify(w-literal(actionTypes_00011,2), aux419)
reify(w-literal(actionTypes_00011,2), aux420)
reify(w-literal(actionTypes_00011,2), aux421)
reify(w-literal(actionTypes_00011,2), aux422)
reify(w-literal(actionTypes_00011,2), aux423)
reify(w-literal(actionTypes_00011,2), aux424)
reify(w-literal(actionTypes_00011,2), aux425)
reify(w-literal(actionTypes_00012,2), aux427)
reify(w-literal(actionTypes_00012,2), aux428)
reify(w-literal(actionTypes_00012,2), aux429)
reify(w-literal(actionTypes_00012,2), aux430)
reify(w-literal(actionTypes_00012,2), aux431)
reify(w-literal(actionTypes_00012,2), aux432)
reify(w-literal(actionTypes_00012,2), aux433)
reify(w-literal(actionTypes_00012,2), aux434)
reify(w-literal(actionTypes_00013,2), aux436)
reify(w-literal(actionTypes_00013,2), aux437)
reify(w-literal(actionTypes_00013,2), aux438)
reify(w-literal(actionTypes_00013,2), aux439)
reify(w-literal(actionTypes_00013,2), aux440)
reify(w-literal(actionTypes_00013,2), aux441)
reify(w-literal(actionTypes_00013,2), aux442)
reify(w-literal(actionTypes_00013,2), aux443)
reify(w-literal(actionTypes_00014,2), aux445)
reify(w-literal(actionTypes_00014,2), aux446)
reify(w-literal(actionTypes_00014,2), aux447)
reify(w-literal(actionTypes_00014,2), aux448)
reify(w-literal(actionTypes_00014,2), aux449)
reify(w-literal(actionTypes_00014,2), aux450)
reify(w-literal(actionTypes_00014,2), aux451)
reify(w-literal(actionTypes_00014,2), aux452)
reify(w-literal(actionTypes_00015,2), aux454)
reify(w-literal(actionTypes_00015,2), aux455)
reify(w-literal(actionTypes_00015,2), aux456)
reify(w-literal(actionTypes_00015,2), aux457)
reify(w-literal(actionTypes_00015,2), aux458)
reify(w-literal(actionTypes_00002,3), aux459)
reify(w-literal(actionTypes_00002,3), aux460)
reify(w-literal(actionTypes_00002,3), aux461)
reify(w-literal(actionTypes_00002,3), aux462)
reify(w-literal(actionTypes_00002,3), aux463)
reify(w-literal(actionTypes_00002,3), aux464)
reify(w-literal(actionTypes_00003,3), aux465)
reify(w-literal(actionTypes_00003,3), aux466)
reify(w-literal(actionTypes_00003,3), aux467)
reify(w-literal(actionTypes_00003,3), aux468)
reify(w-literal(actionTypes_00003,3), aux469)
reify(w-literal(actionTypes_00003,3), aux470)
reify(w-literal(actionTypes_00004,3), aux471)
reify(w-literal(actionTypes_00004,3), aux472)
reify(w-literal(actionTypes_00004,3), aux473)
reify(w-literal(actionTypes_00004,3), aux474)
reify(w-literal(actionTypes_00004,3), aux475)
reify(w-literal(actionTypes_00004,3), aux476)
reify(w-literal(actionTypes_00005,3), aux477)
reify(w-literal(actionTypes_00005,3), aux478)
reify(w-literal(actionTypes_00005,3), aux479)
reify(w-literal(actionTypes_00005,3), aux480)
reify(w-literal(actionTypes_00005,3), aux481)
reify(w-literal(actionTypes_00005,3), aux482)
reify(w-literal(actionTypes_00006,3), aux483)
reify(w-literal(actionTypes_00006,3), aux484)
reify(w-literal(actionTypes_00006,3), aux485)
reify(w-literal(actionTypes_00006,3), aux486)
reify(w-literal(actionTypes_00006,3), aux487)
reify(w-literal(actionTypes_00006,3), aux488)
reify(w-literal(actionTypes_00007,3), aux489)
reify(w-literal(actionTypes_00007,3), aux490)
reify(w-literal(actionTypes_00007,3), aux491)
reify(w-literal(actionTypes_00007,3), aux492)
reify(w-literal(actionTypes_00007,3), aux493)
reify(w-literal(actionTypes_00007,3), aux494)
reify(w-literal(actionTypes_00008,3), aux495)
reify(w-literal(actionTypes_00008,3), aux496)
reify(w-literal(actionTypes_00008,3), aux497)
reify(w-literal(actionTypes_00008,3), aux498)
reify(w-literal(actionTypes_00008,3), aux499)
reify(w-literal(actionTypes_00008,3), aux500)
reify(w-literal(actionTypes_00009,3), aux501)
reify(w-literal(actionTypes_00009,3), aux502)
reify(w-literal(actionTypes_00009,3), aux503)
reify(w-literal(actionTypes_00009,3), aux504)
reify(w-literal(actionTypes_00009,3), aux505)
reify(w-literal(actionTypes_00009,3), aux506)
reify(w-literal(actionTypes_00010,3), aux507)
reify(w-literal(actionTypes_00010,3), aux508)
reify(w-literal(actionTypes_00010,3), aux509)
reify(w-literal(actionTypes_00010,3), aux510)
reify(w-literal(actionTypes_00010,3), aux511)
reify(w-literal(actionTypes_00010,3), aux512)
reify(w-literal(actionTypes_00011,3), aux513)
reify(w-literal(actionTypes_00011,3), aux514)
reify(w-literal(actionTypes_00011,3), aux515)
reify(w-literal(actionTypes_00011,3), aux516)
reify(w-literal(actionTypes_00011,3), aux517)
reify(w-literal(actionTypes_00011,3), aux518)
reify(w-literal(actionTypes_00012,3), aux519)
reify(w-literal(actionTypes_00012,3), aux520)
reify(w-literal(actionTypes_00012,3), aux521)
reify(w-literal(actionTypes_00012,3), aux522)
reify(w-literal(actionTypes_00012,3), aux523)
reify(w-literal(actionTypes_00012,3), aux524)
reify(w-literal(actionTypes_00013,3), aux525)
reify(w-literal(actionTypes_00013,3), aux526)
reify(w-literal(actionTypes_00013,3), aux527)
reify(w-literal(actionTypes_00013,3), aux528)
reify(w-literal(actionTypes_00013,3), aux529)
reify(w-literal(actionTypes_00013,3), aux530)
reify(w-literal(actionTypes_00014,3), aux531)
reify(w-literal(actionTypes_00014,3), aux532)
reify(w-literal(actionTypes_00014,3), aux533)
reify(w-literal(actionTypes_00014,3), aux534)
reify(w-literal(actionTypes_00014,3), aux535)
reify(w-literal(actionTypes_00014,3), aux536)
reify(w-literal(actionTypes_00015,3), aux537)
reify(w-literal(actionTypes_00015,3), aux538)
reify(w-literal(actionTypes_00015,3), aux539)
reify(w-literal(actionTypes_00015,3), aux540)
reify(w-literal(actionTypes_00015,3), aux541)
reify(w-literal(actionTypes_00015,3), aux542)
reify(w-literal(actionTypes_00002,4), aux543)
reify(w-literal(actionTypes_00002,4), aux544)
reify(w-literal(actionTypes_00002,4), aux545)
reify(w-literal(actionTypes_00002,4), aux546)
reify(w-literal(actionTypes_00002,4), aux547)
reify(w-literal(actionTypes_00003,4), aux548)
reify(w-literal(actionTypes_00003,4), aux549)
reify(w-literal(actionTypes_00003,4), aux550)
reify(w-literal(actionTypes_00003,4), aux551)
reify(w-literal(actionTypes_00003,4), aux552)
reify(w-literal(actionTypes_00003,4), aux553)
reify(w-literal(actionTypes_00004,4), aux554)
reify(w-literal(actionTypes_00004,4), aux555)
reify(w-literal(actionTypes_00004,4), aux556)
reify(w-literal(actionTypes_00004,4), aux557)
reify(w-literal(actionTypes_00004,4), aux558)
reify(w-literal(actionTypes_00004,4), aux559)
reify(w-literal(actionTypes_00005,4), aux560)
reify(w-literal(actionTypes_00005,4), aux561)
reify(w-literal(actionTypes_00005,4), aux562)
reify(w-literal(actionTypes_00005,4), aux563)
reify(w-literal(actionTypes_00005,4), aux564)
reify(w-literal(actionTypes_00005,4), aux565)
reify(w-literal(actionTypes_00006,4), aux566)
reify(w-literal(actionTypes_00006,4), aux567)
reify(w-literal(actionTypes_00006,4), aux568)
reify(w-literal(actionTypes_00006,4), aux569)
reify(w-literal(actionTypes_00006,4), aux570)
reify(w-literal(actionTypes_00006,4), aux571)
reify(w-literal(actionTypes_00007,4), aux572)
reify(w-literal(actionTypes_00007,4), aux573)
reify(w-literal(actionTypes_00007,4), aux574)
reify(w-literal(actionTypes_00007,4), aux575)
reify(w-literal(actionTypes_00007,4), aux576)
reify(w-literal(actionTypes_00007,4), aux577)
reify(w-literal(actionTypes_00008,4), aux578)
reify(w-literal(actionTypes_00008,4), aux579)
reify(w-literal(actionTypes_00008,4), aux580)
reify(w-literal(actionTypes_00008,4), aux581)
reify(w-literal(actionTypes_00008,4), aux582)
reify(w-literal(actionTypes_00008,4), aux583)
reify(w-literal(actionTypes_00009,4), aux584)
reify(w-literal(actionTypes_00009,4), aux585)
reify(w-literal(actionTypes_00009,4), aux586)
reify(w-literal(actionTypes_00009,4), aux587)
reify(w-literal(actionTypes_00009,4), aux588)
reify(w-literal(actionTypes_00009,4), aux589)
reify(w-literal(actionTypes_00010,4), aux590)
reify(w-literal(actionTypes_00010,4), aux591)
reify(w-literal(actionTypes_00010,4), aux592)
reify(w-literal(actionTypes_00010,4), aux593)
reify(w-literal(actionTypes_00010,4), aux594)
reify(w-literal(actionTypes_00010,4), aux595)
reify(w-literal(actionTypes_00011,4), aux596)
reify(w-literal(actionTypes_00011,4), aux597)
reify(w-literal(actionTypes_00011,4), aux598)
reify(w-literal(actionTypes_00011,4), aux599)
reify(w-literal(actionTypes_00011,4), aux600)
reify(w-literal(actionTypes_00011,4), aux601)
reify(w-literal(actionTypes_00012,4), aux602)
reify(w-literal(actionTypes_00012,4), aux603)
reify(w-literal(actionTypes_00012,4), aux604)
reify(w-literal(actionTypes_00012,4), aux605)
reify(w-literal(actionTypes_00012,4), aux606)
reify(w-literal(actionTypes_00012,4), aux607)
reify(w-literal(actionTypes_00013,4), aux608)
reify(w-literal(actionTypes_00013,4), aux609)
reify(w-literal(actionTypes_00013,4), aux610)
reify(w-literal(actionTypes_00013,4), aux611)
reify(w-literal(actionTypes_00013,4), aux612)
reify(w-literal(actionTypes_00013,4), aux613)
reify(w-literal(actionTypes_00014,4), aux614)
reify(w-literal(actionTypes_00014,4), aux615)
reify(w-literal(actionTypes_00014,4), aux616)
reify(w-literal(actionTypes_00014,4), aux617)
reify(w-literal(actionTypes_00014,4), aux618)
reify(w-literal(actionTypes_00014,4), aux619)
reify(w-literal(actionTypes_00015,4), aux620)
reify(w-literal(actionTypes_00015,4), aux621)
reify(w-literal(actionTypes_00015,4), aux622)
reify(w-literal(actionTypes_00015,4), aux623)
reify(w-literal(actionTypes_00015,4), aux624)
reify(w-literal(actionTypes_00015,4), aux625)
reify(w-literal(actionTypes_00002,5), aux626)
reify(w-literal(actionTypes_00002,5), aux627)
reify(w-literal(actionTypes_00002,5), aux628)
reify(w-literal(actionTypes_00002,5), aux629)
reify(w-literal(actionTypes_00002,5), aux630)
reify(w-literal(actionTypes_00002,5), aux631)
reify(w-literal(actionTypes_00002,5), aux632)
reify(w-literal(actionTypes_00002,5), aux633)
reify(w-literal(actionTypes_00003,5), aux634)
reify(w-literal(actionTypes_00003,5), aux635)
reify(w-literal(actionTypes_00003,5), aux636)
reify(w-literal(actionTypes_00003,5), aux637)
reify(w-literal(actionTypes_00003,5), aux638)
reify(w-literal(actionTypes_00003,5), aux639)
reify(w-literal(actionTypes_00003,5), aux640)
reify(w-literal(actionTypes_00003,5), aux641)
reify(w-literal(actionTypes_00004,5), aux642)
reify(w-literal(actionTypes_00004,5), aux643)
reify(w-literal(actionTypes_00004,5), aux644)
reify(w-literal(actionTypes_00004,5), aux645)
reify(w-literal(actionTypes_00004,5), aux646)
reify(w-literal(actionTypes_00004,5), aux647)
reify(w-literal(actionTypes_00004,5), aux648)
reify(w-literal(actionTypes_00004,5), aux649)
reify(w-literal(actionTypes_00005,5), aux650)
reify(w-literal(actionTypes_00005,5), aux651)
reify(w-literal(actionTypes_00005,5), aux652)
reify(w-literal(actionTypes_00005,5), aux653)
reify(w-literal(actionTypes_00005,5), aux654)
reify(w-literal(actionTypes_00005,5), aux655)
reify(w-literal(actionTypes_00005,5), aux656)
reify(w-literal(actionTypes_00005,5), aux657)
reify(w-literal(actionTypes_00006,5), aux658)
reify(w-literal(actionTypes_00006,5), aux659)
reify(w-literal(actionTypes_00006,5), aux660)
reify(w-literal(actionTypes_00006,5), aux661)
reify(w-literal(actionTypes_00006,5), aux662)
reify(w-literal(actionTypes_00006,5), aux663)
reify(w-literal(actionTypes_00006,5), aux664)
reify(w-literal(actionTypes_00006,5), aux665)
reify(w-literal(actionTypes_00007,5), aux666)
reify(w-literal(actionTypes_00007,5), aux667)
reify(w-literal(actionTypes_00007,5), aux668)
reify(w-literal(actionTypes_00007,5), aux669)
reify(w-literal(actionTypes_00007,5), aux670)
reify(w-literal(actionTypes_00007,5), aux671)
reify(w-literal(actionTypes_00007,5), aux672)
reify(w-literal(actionTypes_00007,5), aux673)
reify(w-literal(actionTypes_00008,5), aux674)
reify(w-literal(actionTypes_00008,5), aux675)
reify(w-literal(actionTypes_00008,5), aux676)
reify(w-literal(actionTypes_00008,5), aux677)
reify(w-literal(actionTypes_00008,5), aux678)
reify(w-literal(actionTypes_00008,5), aux679)
reify(w-literal(actionTypes_00008,5), aux680)
reify(w-literal(actionTypes_00008,5), aux681)
reify(w-literal(actionTypes_00009,5), aux682)
reify(w-literal(actionTypes_00009,5), aux683)
reify(w-literal(actionTypes_00009,5), aux684)
reify(w-literal(actionTypes_00009,5), aux685)
reify(w-literal(actionTypes_00009,5), aux686)
reify(w-literal(actionTypes_00009,5), aux687)
reify(w-literal(actionTypes_00009,5), aux688)
reify(w-literal(actionTypes_00009,5), aux689)
reify(w-literal(actionTypes_00010,5), aux690)
reify(w-literal(actionTypes_00010,5), aux691)
reify(w-literal(actionTypes_00010,5), aux692)
reify(w-literal(actionTypes_00010,5), aux693)
reify(w-literal(actionTypes_00010,5), aux694)
reify(w-literal(actionTypes_00010,5), aux695)
reify(w-literal(actionTypes_00010,5), aux696)
reify(w-literal(actionTypes_00010,5), aux697)
reify(w-literal(actionTypes_00011,5), aux698)
reify(w-literal(actionTypes_00011,5), aux699)
reify(w-literal(actionTypes_00011,5), aux700)
reify(w-literal(actionTypes_00011,5), aux701)
reify(w-literal(actionTypes_00011,5), aux702)
reify(w-literal(actionTypes_00011,5), aux703)
reify(w-literal(actionTypes_00011,5), aux704)
reify(w-literal(actionTypes_00011,5), aux705)
reify(w-literal(actionTypes_00012,5), aux706)
reify(w-literal(actionTypes_00012,5), aux707)
reify(w-literal(actionTypes_00012,5), aux708)
reify(w-literal(actionTypes_00012,5), aux709)
reify(w-literal(actionTypes_00012,5), aux710)
reify(w-literal(actionTypes_00012,5), aux711)
reify(w-literal(actionTypes_00012,5), aux712)
reify(w-literal(actionTypes_00012,5), aux713)
reify(w-literal(actionTypes_00013,5), aux714)
reify(w-literal(actionTypes_00013,5), aux715)
reify(w-literal(actionTypes_00013,5), aux716)
reify(w-literal(actionTypes_00013,5), aux717)
reify(w-literal(actionTypes_00013,5), aux718)
reify(w-literal(actionTypes_00013,5), aux719)
reify(w-literal(actionTypes_00013,5), aux720)
reify(w-literal(actionTypes_00013,5), aux721)
reify(w-literal(actionTypes_00014,5), aux722)
reify(w-literal(actionTypes_00014,5), aux723)
reify(w-literal(actionTypes_00014,5), aux724)
reify(w-literal(actionTypes_00014,5), aux725)
reify(w-literal(actionTypes_00014,5), aux726)
reify(w-literal(actionTypes_00014,5), aux727)
reify(w-literal(actionTypes_00014,5), aux728)
reify(w-literal(actionTypes_00014,5), aux729)
reify(w-literal(actionTypes_00015,5), aux730)
reify(w-literal(actionTypes_00015,5), aux731)
reify(w-literal(actionTypes_00015,5), aux732)
reify(w-literal(actionTypes_00015,5), aux733)
reify(w-literal(actionTypes_00015,5), aux734)
reify(w-literal(actionTypes_00015,5), aux735)
reify(w-literal(actionTypes_00015,5), aux736)
reify(w-literal(actionTypes_00015,5), aux737)
reify(w-literal(actionTypes_00002,6), aux738)
reify(w-literal(actionTypes_00002,6), aux739)
reify(w-literal(actionTypes_00002,6), aux740)
reify(w-literal(actionTypes_00002,6), aux741)
reify(w-literal(actionTypes_00002,6), aux742)
reify(w-literal(actionTypes_00002,6), aux743)
reify(w-literal(actionTypes_00002,6), aux744)
reify(w-literal(actionTypes_00003,6), aux745)
reify(w-literal(actionTypes_00003,6), aux746)
reify(w-literal(actionTypes_00003,6), aux747)
reify(w-literal(actionTypes_00003,6), aux748)
reify(w-literal(actionTypes_00003,6), aux749)
reify(w-literal(actionTypes_00003,6), aux750)
reify(w-literal(actionTypes_00003,6), aux751)
reify(w-literal(actionTypes_00004,6), aux752)
reify(w-literal(actionTypes_00004,6), aux753)
reify(w-literal(actionTypes_00004,6), aux754)
reify(w-literal(actionTypes_00004,6), aux755)
reify(w-literal(actionTypes_00004,6), aux756)
reify(w-literal(actionTypes_00004,6), aux757)
reify(w-literal(actionTypes_00004,6), aux758)
reify(w-literal(actionTypes_00005,6), aux759)
reify(w-literal(actionTypes_00005,6), aux760)
reify(w-literal(actionTypes_00005,6), aux761)
reify(w-literal(actionTypes_00005,6), aux762)
reify(w-literal(actionTypes_00005,6), aux763)
reify(w-literal(actionTypes_00005,6), aux764)
reify(w-literal(actionTypes_00005,6), aux765)
reify(w-literal(actionTypes_00006,6), aux766)
reify(w-literal(actionTypes_00006,6), aux767)
reify(w-literal(actionTypes_00006,6), aux768)
reify(w-literal(actionTypes_00006,6), aux769)
reify(w-literal(actionTypes_00006,6), aux770)
reify(w-literal(actionTypes_00006,6), aux771)
reify(w-literal(actionTypes_00006,6), aux772)
reify(w-literal(actionTypes_00007,6), aux773)
reify(w-literal(actionTypes_00007,6), aux774)
reify(w-literal(actionTypes_00007,6), aux775)
reify(w-literal(actionTypes_00007,6), aux776)
reify(w-literal(actionTypes_00007,6), aux777)
reify(w-literal(actionTypes_00007,6), aux778)
reify(w-literal(actionTypes_00007,6), aux779)
reify(w-literal(actionTypes_00008,6), aux780)
reify(w-literal(actionTypes_00008,6), aux781)
reify(w-literal(actionTypes_00008,6), aux782)
reify(w-literal(actionTypes_00008,6), aux783)
reify(w-literal(actionTypes_00008,6), aux784)
reify(w-literal(actionTypes_00008,6), aux785)
reify(w-literal(actionTypes_00008,6), aux786)
reify(w-literal(actionTypes_00009,6), aux787)
reify(w-literal(actionTypes_00009,6), aux788)
reify(w-literal(actionTypes_00009,6), aux789)
reify(w-literal(actionTypes_00009,6), aux790)
reify(w-literal(actionTypes_00009,6), aux791)
reify(w-literal(actionTypes_00009,6), aux792)
reify(w-literal(actionTypes_00009,6), aux793)
reify(w-literal(actionTypes_00010,6), aux794)
reify(w-literal(actionTypes_00010,6), aux795)
reify(w-literal(actionTypes_00010,6), aux796)
reify(w-literal(actionTypes_00010,6), aux797)
reify(w-literal(actionTypes_00010,6), aux798)
reify(w-literal(actionTypes_00010,6), aux799)
reify(w-literal(actionTypes_00010,6), aux800)
reify(w-literal(actionTypes_00011,6), aux801)
reify(w-literal(actionTypes_00011,6), aux802)
reify(w-literal(actionTypes_00011,6), aux803)
reify(w-literal(actionTypes_00011,6), aux804)
reify(w-literal(actionTypes_00011,6), aux805)
reify(w-literal(actionTypes_00011,6), aux806)
reify(w-literal(actionTypes_00011,6), aux807)
reify(w-literal(actionTypes_00012,6), aux808)
reify(w-literal(actionTypes_00012,6), aux809)
reify(w-literal(actionTypes_00012,6), aux810)
reify(w-literal(actionTypes_00012,6), aux811)
reify(w-literal(actionTypes_00012,6), aux812)
reify(w-literal(actionTypes_00012,6), aux813)
reify(w-literal(actionTypes_00012,6), aux814)
reify(w-literal(actionTypes_00013,6), aux815)
reify(w-literal(actionTypes_00013,6), aux816)
reify(w-literal(actionTypes_00013,6), aux817)
reify(w-literal(actionTypes_00013,6), aux818)
reify(w-literal(actionTypes_00013,6), aux819)
reify(w-literal(actionTypes_00013,6), aux820)
reify(w-literal(actionTypes_00013,6), aux821)
reify(w-literal(actionTypes_00014,6), aux822)
reify(w-literal(actionTypes_00014,6), aux823)
reify(w-literal(actionTypes_00014,6), aux824)
reify(w-literal(actionTypes_00014,6), aux825)
reify(w-literal(actionTypes_00014,6), aux826)
reify(w-literal(actionTypes_00014,6), aux827)
reify(w-literal(actionTypes_00014,6), aux828)
reify(w-literal(actionTypes_00015,6), aux829)
reify(w-literal(actionTypes_00015,6), aux830)
reify(w-literal(actionTypes_00015,6), aux831)
reify(w-literal(actionTypes_00015,6), aux832)
reify(w-literal(actionTypes_00015,6), aux833)
reify(w-literal(actionTypes_00015,6), aux834)
reify(w-literal(actionTypes_00015,6), aux835)
reify(w-literal(actionTypes_00002,7), aux836)
reify(w-literal(actionTypes_00002,7), aux837)
reify(w-literal(actionTypes_00002,7), aux838)
reify(w-literal(actionTypes_00002,7), aux839)
reify(w-literal(actionTypes_00002,7), aux840)
reify(w-literal(actionTypes_00002,7), aux841)
reify(w-literal(actionTypes_00002,7), aux842)
reify(w-literal(actionTypes_00003,7), aux843)
reify(w-literal(actionTypes_00003,7), aux844)
reify(w-literal(actionTypes_00003,7), aux845)
reify(w-literal(actionTypes_00003,7), aux846)
reify(w-literal(actionTypes_00003,7), aux847)
reify(w-literal(actionTypes_00003,7), aux848)
reify(w-literal(actionTypes_00003,7), aux849)
reify(w-literal(actionTypes_00004,7), aux850)
reify(w-literal(actionTypes_00004,7), aux851)
reify(w-literal(actionTypes_00004,7), aux852)
reify(w-literal(actionTypes_00004,7), aux853)
reify(w-literal(actionTypes_00004,7), aux854)
reify(w-literal(actionTypes_00004,7), aux855)
reify(w-literal(actionTypes_00004,7), aux856)
reify(w-literal(actionTypes_00005,7), aux857)
reify(w-literal(actionTypes_00005,7), aux858)
reify(w-literal(actionTypes_00005,7), aux859)
reify(w-literal(actionTypes_00005,7), aux860)
reify(w-literal(actionTypes_00005,7), aux861)
reify(w-literal(actionTypes_00005,7), aux862)
reify(w-literal(actionTypes_00005,7), aux863)
reify(w-literal(actionTypes_00006,7), aux864)
reify(w-literal(actionTypes_00006,7), aux865)
reify(w-literal(actionTypes_00006,7), aux866)
reify(w-literal(actionTypes_00006,7), aux867)
reify(w-literal(actionTypes_00006,7), aux868)
reify(w-literal(actionTypes_00006,7), aux869)
reify(w-literal(actionTypes_00006,7), aux870)
reify(w-literal(actionTypes_00007,7), aux871)
reify(w-literal(actionTypes_00007,7), aux872)
reify(w-literal(actionTypes_00007,7), aux873)
reify(w-literal(actionTypes_00007,7), aux874)
reify(w-literal(actionTypes_00007,7), aux875)
reify(w-literal(actionTypes_00007,7), aux876)
reify(w-literal(actionTypes_00007,7), aux877)
reify(w-literal(actionTypes_00008,7), aux878)
reify(w-literal(actionTypes_00008,7), aux879)
reify(w-literal(actionTypes_00008,7), aux880)
reify(w-literal(actionTypes_00008,7), aux881)
reify(w-literal(actionTypes_00008,7), aux882)
reify(w-literal(actionTypes_00008,7), aux883)
reify(w-literal(actionTypes_00008,7), aux884)
reify(w-literal(actionTypes_00009,7), aux885)
reify(w-literal(actionTypes_00009,7), aux886)
reify(w-literal(actionTypes_00009,7), aux887)
reify(w-literal(actionTypes_00009,7), aux888)
reify(w-literal(actionTypes_00009,7), aux889)
reify(w-literal(actionTypes_00009,7), aux890)
reify(w-literal(actionTypes_00009,7), aux891)
reify(w-literal(actionTypes_00010,7), aux892)
reify(w-literal(actionTypes_00010,7), aux893)
reify(w-literal(actionTypes_00010,7), aux894)
reify(w-literal(actionTypes_00010,7), aux895)
reify(w-literal(actionTypes_00010,7), aux896)
reify(w-literal(actionTypes_00010,7), aux897)
reify(w-literal(actionTypes_00010,7), aux898)
reify(w-literal(actionTypes_00011,7), aux899)
reify(w-literal(actionTypes_00011,7), aux900)
reify(w-literal(actionTypes_00011,7), aux901)
reify(w-literal(actionTypes_00011,7), aux902)
reify(w-literal(actionTypes_00011,7), aux903)
reify(w-literal(actionTypes_00011,7), aux904)
reify(w-literal(actionTypes_00011,7), aux905)
reify(w-literal(actionTypes_00012,7), aux906)
reify(w-literal(actionTypes_00012,7), aux907)
reify(w-literal(actionTypes_00012,7), aux908)
reify(w-literal(actionTypes_00012,7), aux909)
reify(w-literal(actionTypes_00012,7), aux910)
reify(w-literal(actionTypes_00012,7), aux911)
reify(w-literal(actionTypes_00012,7), aux912)
reify(w-literal(actionTypes_00013,7), aux913)
reify(w-literal(actionTypes_00013,7), aux914)
reify(w-literal(actionTypes_00013,7), aux915)
reify(w-literal(actionTypes_00013,7), aux916)
reify(w-literal(actionTypes_00013,7), aux917)
reify(w-literal(actionTypes_00013,7), aux918)
reify(w-literal(actionTypes_00013,7), aux919)
reify(w-literal(actionTypes_00014,7), aux920)
reify(w-literal(actionTypes_00014,7), aux921)
reify(w-literal(actionTypes_00014,7), aux922)
reify(w-literal(actionTypes_00014,7), aux923)
reify(w-literal(actionTypes_00014,7), aux924)
reify(w-literal(actionTypes_00014,7), aux925)
reify(w-literal(actionTypes_00014,7), aux926)
reify(w-literal(actionTypes_00015,7), aux927)
reify(w-literal(actionTypes_00015,7), aux928)
reify(w-literal(actionTypes_00015,7), aux929)
reify(w-literal(actionTypes_00015,7), aux930)
reify(w-literal(actionTypes_00015,7), aux931)
reify(w-literal(actionTypes_00015,7), aux932)
reify(w-literal(actionTypes_00015,7), aux933)
reify(w-literal(actionTypes_00002,8), aux934)
reify(w-literal(actionTypes_00002,8), aux935)
reify(w-literal(actionTypes_00002,8), aux936)
reify(w-literal(actionTypes_00002,8), aux937)
reify(w-literal(actionTypes_00002,8), aux938)
reify(w-literal(actionTypes_00002,8), aux939)
reify(w-literal(actionTypes_00003,8), aux940)
reify(w-literal(actionTypes_00003,8), aux941)
reify(w-literal(actionTypes_00003,8), aux942)
reify(w-literal(actionTypes_00003,8), aux943)
reify(w-literal(actionTypes_00003,8), aux944)
reify(w-literal(actionTypes_00003,8), aux945)
reify(w-literal(actionTypes_00004,8), aux946)
reify(w-literal(actionTypes_00004,8), aux947)
reify(w-literal(actionTypes_00004,8), aux948)
reify(w-literal(actionTypes_00004,8), aux949)
reify(w-literal(actionTypes_00004,8), aux950)
reify(w-literal(actionTypes_00004,8), aux951)
reify(w-literal(actionTypes_00005,8), aux952)
reify(w-literal(actionTypes_00005,8), aux953)
reify(w-literal(actionTypes_00005,8), aux954)
reify(w-literal(actionTypes_00005,8), aux955)
reify(w-literal(actionTypes_00005,8), aux956)
reify(w-literal(actionTypes_00005,8), aux957)
reify(w-literal(actionTypes_00006,8), aux958)
reify(w-literal(actionTypes_00006,8), aux959)
reify(w-literal(actionTypes_00006,8), aux960)
reify(w-literal(actionTypes_00006,8), aux961)
reify(w-literal(actionTypes_00006,8), aux962)
reify(w-literal(actionTypes_00006,8), aux963)
reify(w-literal(actionTypes_00007,8), aux964)
reify(w-literal(actionTypes_00007,8), aux965)
reify(w-literal(actionTypes_00007,8), aux966)
reify(w-literal(actionTypes_00007,8), aux967)
reify(w-literal(actionTypes_00007,8), aux968)
reify(w-literal(actionTypes_00007,8), aux969)
reify(w-literal(actionTypes_00008,8), aux970)
reify(w-literal(actionTypes_00008,8), aux971)
reify(w-literal(actionTypes_00008,8), aux972)
reify(w-literal(actionTypes_00008,8), aux973)
reify(w-literal(actionTypes_00008,8), aux974)
reify(w-literal(actionTypes_00008,8), aux975)
reify(w-literal(actionTypes_00009,8), aux976)
reify(w-literal(actionTypes_00009,8), aux977)
reify(w-literal(actionTypes_00009,8), aux978)
reify(w-literal(actionTypes_00009,8), aux979)
reify(w-literal(actionTypes_00009,8), aux980)
reify(w-literal(actionTypes_00009,8), aux981)
reify(w-literal(actionTypes_00010,8), aux982)
reify(w-literal(actionTypes_00010,8), aux983)
reify(w-literal(actionTypes_00010,8), aux984)
reify(w-literal(actionTypes_00010,8), aux985)
reify(w-literal(actionTypes_00010,8), aux986)
reify(w-literal(actionTypes_00010,8), aux987)
reify(w-literal(actionTypes_00011,8), aux988)
reify(w-literal(actionTypes_00011,8), aux989)
reify(w-literal(actionTypes_00011,8), aux990)
reify(w-literal(actionTypes_00011,8), aux991)
reify(w-literal(actionTypes_00011,8), aux992)
reify(w-literal(actionTypes_00011,8), aux993)
reify(w-literal(actionTypes_00012,8), aux994)
reify(w-literal(actionTypes_00012,8), aux995)
reify(w-literal(actionTypes_00012,8), aux996)
reify(w-literal(actionTypes_00012,8), aux997)
reify(w-literal(actionTypes_00012,8), aux998)
reify(w-literal(actionTypes_00012,8), aux999)
reify(w-literal(actionTypes_00013,8), aux1000)
reify(w-literal(actionTypes_00013,8), aux1001)
reify(w-literal(actionTypes_00013,8), aux1002)
reify(w-literal(actionTypes_00013,8), aux1003)
reify(w-literal(actionTypes_00013,8), aux1004)
reify(w-literal(actionTypes_00013,8), aux1005)
reify(w-literal(actionTypes_00014,8), aux1006)
reify(w-literal(actionTypes_00014,8), aux1007)
reify(w-literal(actionTypes_00014,8), aux1008)
reify(w-literal(actionTypes_00014,8), aux1009)
reify(w-literal(actionTypes_00014,8), aux1010)
reify(w-literal(actionTypes_00014,8), aux1011)
reify(w-literal(actionTypes_00015,8), aux1012)
reify(w-literal(actionTypes_00015,8), aux1013)
reify(w-literal(actionTypes_00015,8), aux1014)
reify(w-literal(actionTypes_00015,8), aux1015)
reify(w-literal(actionTypes_00015,8), aux1016)
reify(w-literal(actionTypes_00015,8), aux1017)
reify(w-literal(actionTypes_00002,9), aux1018)
reify(w-literal(actionTypes_00002,9), aux1019)
reify(w-literal(actionTypes_00002,9), aux1020)
reify(w-literal(actionTypes_00002,9), aux1021)
reify(w-literal(actionTypes_00002,9), aux1022)
reify(w-literal(actionTypes_00002,9), aux1023)
reify(w-literal(actionTypes_00002,9), aux1024)
reify(w-literal(actionTypes_00002,9), aux1025)
reify(w-literal(actionTypes_00003,9), aux1026)
reify(w-literal(actionTypes_00003,9), aux1027)
reify(w-literal(actionTypes_00003,9), aux1028)
reify(w-literal(actionTypes_00003,9), aux1029)
reify(w-literal(actionTypes_00003,9), aux1030)
reify(w-literal(actionTypes_00003,9), aux1031)
reify(w-literal(actionTypes_00003,9), aux1032)
reify(w-literal(actionTypes_00003,9), aux1033)
reify(w-literal(actionTypes_00004,9), aux1034)
reify(w-literal(actionTypes_00004,9), aux1035)
reify(w-literal(actionTypes_00004,9), aux1036)
reify(w-literal(actionTypes_00004,9), aux1037)
reify(w-literal(actionTypes_00004,9), aux1038)
reify(w-literal(actionTypes_00004,9), aux1039)
reify(w-literal(actionTypes_00004,9), aux1040)
reify(w-literal(actionTypes_00004,9), aux1041)
reify(w-literal(actionTypes_00005,9), aux1042)
reify(w-literal(actionTypes_00005,9), aux1043)
reify(w-literal(actionTypes_00005,9), aux1044)
reify(w-literal(actionTypes_00005,9), aux1045)
reify(w-literal(actionTypes_00005,9), aux1046)
reify(w-literal(actionTypes_00005,9), aux1047)
reify(w-literal(actionTypes_00005,9), aux1048)
reify(w-literal(actionTypes_00005,9), aux1049)
reify(w-literal(actionTypes_00006,9), aux1050)
reify(w-literal(actionTypes_00006,9), aux1051)
reify(w-literal(actionTypes_00006,9), aux1052)
reify(w-literal(actionTypes_00006,9), aux1053)
reify(w-literal(actionTypes_00006,9), aux1054)
reify(w-literal(actionTypes_00006,9), aux1055)
reify(w-literal(actionTypes_00006,9), aux1056)
reify(w-literal(actionTypes_00006,9), aux1057)
reify(w-literal(actionTypes_00007,9), aux1058)
reify(w-literal(actionTypes_00007,9), aux1059)
reify(w-literal(actionTypes_00007,9), aux1060)
reify(w-literal(actionTypes_00007,9), aux1061)
reify(w-literal(actionTypes_00007,9), aux1062)
reify(w-literal(actionTypes_00007,9), aux1063)
reify(w-literal(actionTypes_00007,9), aux1064)
reify(w-literal(actionTypes_00007,9), aux1065)
reify(w-literal(actionTypes_00008,9), aux1066)
reify(w-literal(actionTypes_00008,9), aux1067)
reify(w-literal(actionTypes_00008,9), aux1068)
reify(w-literal(actionTypes_00008,9), aux1069)
reify(w-literal(actionTypes_00008,9), aux1070)
reify(w-literal(actionTypes_00008,9), aux1071)
reify(w-literal(actionTypes_00008,9), aux1072)
reify(w-literal(actionTypes_00008,9), aux1073)
reify(w-literal(actionTypes_00009,9), aux1074)
reify(w-literal(actionTypes_00009,9), aux1075)
reify(w-literal(actionTypes_00009,9), aux1076)
reify(w-literal(actionTypes_00009,9), aux1077)
reify(w-literal(actionTypes_00009,9), aux1078)
reify(w-literal(actionTypes_00009,9), aux1079)
reify(w-literal(actionTypes_00009,9), aux1080)
reify(w-literal(actionTypes_00009,9), aux1081)
reify(w-literal(actionTypes_00010,9), aux1082)
reify(w-literal(actionTypes_00010,9), aux1083)
reify(w-literal(actionTypes_00010,9), aux1084)
reify(w-literal(actionTypes_00010,9), aux1085)
reify(w-literal(actionTypes_00010,9), aux1086)
reify(w-literal(actionTypes_00010,9), aux1087)
reify(w-literal(actionTypes_00010,9), aux1088)
reify(w-literal(actionTypes_00010,9), aux1089)
reify(w-literal(actionTypes_00011,9), aux1090)
reify(w-literal(actionTypes_00011,9), aux1091)
reify(w-literal(actionTypes_00011,9), aux1092)
reify(w-literal(actionTypes_00011,9), aux1093)
reify(w-literal(actionTypes_00011,9), aux1094)
reify(w-literal(actionTypes_00011,9), aux1095)
reify(w-literal(actionTypes_00011,9), aux1096)
reify(w-literal(actionTypes_00011,9), aux1097)
reify(w-literal(actionTypes_00012,9), aux1098)
reify(w-literal(actionTypes_00012,9), aux1099)
reify(w-literal(actionTypes_00012,9), aux1100)
reify(w-literal(actionTypes_00012,9), aux1101)
reify(w-literal(actionTypes_00012,9), aux1102)
reify(w-literal(actionTypes_00012,9), aux1103)
reify(w-literal(actionTypes_00012,9), aux1104)
reify(w-literal(actionTypes_00012,9), aux1105)
reify(w-literal(actionTypes_00013,9), aux1106)
reify(w-literal(actionTypes_00013,9), aux1107)
reify(w-literal(actionTypes_00013,9), aux1108)
reify(w-literal(actionTypes_00013,9), aux1109)
reify(w-literal(actionTypes_00013,9), aux1110)
reify(w-literal(actionTypes_00013,9), aux1111)
reify(w-literal(actionTypes_00013,9), aux1112)
reify(w-literal(actionTypes_00013,9), aux1113)
reify(w-literal(actionTypes_00014,9), aux1114)
reify(w-literal(actionTypes_00014,9), aux1115)
reify(w-literal(actionTypes_00014,9), aux1116)
reify(w-literal(actionTypes_00014,9), aux1117)
reify(w-literal(actionTypes_00014,9), aux1118)
reify(w-literal(actionTypes_00014,9), aux1119)
reify(w-literal(actionTypes_00014,9), aux1120)
reify(w-literal(actionTypes_00014,9), aux1121)
reify(w-literal(actionTypes_00015,9), aux1122)
reify(w-literal(actionTypes_00015,9), aux1123)
reify(w-literal(actionTypes_00015,9), aux1124)
reify(w-literal(actionTypes_00015,9), aux1125)
reify(w-literal(actionTypes_00015,9), aux1126)
reify(w-literal(actionTypes_00015,9), aux1127)
reify(w-literal(actionTypes_00015,9), aux1128)
reify(w-literal(actionTypes_00015,9), aux1129)
reify(watchelement_undefzero([statePlaces_00002_00014, statePlaces_00003_00014], aux161, aux126), aux59)
reify(watchelement_undefzero([statePlaces_00002_00013, statePlaces_00003_00013], aux181, aux107), aux60)
reify(watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux143, aux116), aux61)
reify(watchelement_undefzero([statePlaces_00002_00012, statePlaces_00003_00012], aux196, aux106), aux62)
reify(watchelement_undefzero([statePlaces_00002_00011, statePlaces_00003_00011], aux185, aux100), aux63)
reify(watchelement_undefzero([5, statePlaces_00003_00015], aux145, aux104), aux64)
reify(watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux180, aux109), aux65)
reify(watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux171, aux125), aux66)
reify(watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux189, aux102), aux67)
reify(watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux149, aux114), aux68)
reify(watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux160, aux113), aux69)
reify(watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux157, aux141), aux70)
reify(watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux184, aux123), aux71)
reify(watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux146, aux117), aux72)
reify(gaceq(aux141,statePlaces_00002_00002), aux73)
reify(lexless([5, statePlaces_00003_00015],[statePlaces_00002_00002, statePlaces_00003_00002]), aux74)
reify(lexless([5, statePlaces_00003_00015],[statePlaces_00002_00003, statePlaces_00003_00003]), aux75)
reify(lexless([5, statePlaces_00003_00015],[statePlaces_00002_00006, statePlaces_00003_00006]), aux76)
reify(lexless([5, statePlaces_00003_00015],[statePlaces_00002_00007, statePlaces_00003_00007]), aux77)
reify(lexless([5, statePlaces_00003_00015],[statePlaces_00002_00004, statePlaces_00003_00004]), aux78)
reify(lexless([5, statePlaces_00003_00015],[statePlaces_00002_00005, statePlaces_00003_00005]), aux79)
reify(lexless([5, statePlaces_00003_00015],[statePlaces_00002_00008, statePlaces_00003_00008]), aux80)
reify(lexless([5, statePlaces_00003_00015],[statePlaces_00002_00009, statePlaces_00003_00009]), aux81)
reify(lexless([5, statePlaces_00003_00015],[statePlaces_00002_00010, statePlaces_00003_00010]), aux82)
reify(lexless([5, statePlaces_00003_00015],[statePlaces_00002_00014, statePlaces_00003_00014]), aux83)
reify(lexless([5, statePlaces_00003_00015],[statePlaces_00002_00013, statePlaces_00003_00013]), aux84)
reify(lexless([5, statePlaces_00003_00015],[statePlaces_00002_00012, statePlaces_00003_00012]), aux85)
reify(lexless([5, statePlaces_00003_00015],[statePlaces_00002_00011, statePlaces_00003_00011]), aux86)
reify(lexless([statePlaces_00002_00011, statePlaces_00003_00011],[5, statePlaces_00003_00015]), aux87)
reify(lexless([statePlaces_00002_00012, statePlaces_00003_00012],[5, statePlaces_00003_00015]), aux88)
reify(lexless([statePlaces_00002_00013, statePlaces_00003_00013],[5, statePlaces_00003_00015]), aux89)
reify(lexless([statePlaces_00002_00014, statePlaces_00003_00014],[5, statePlaces_00003_00015]), aux90)
reify(lexless([statePlaces_00002_00010, statePlaces_00003_00010],[5, statePlaces_00003_00015]), aux91)
reify(lexless([statePlaces_00002_00009, statePlaces_00003_00009],[5, statePlaces_00003_00015]), aux92)
reify(lexless([statePlaces_00002_00008, statePlaces_00003_00008],[5, statePlaces_00003_00015]), aux93)
reify(lexless([statePlaces_00002_00007, statePlaces_00003_00007],[5, statePlaces_00003_00015]), aux94)
reify(lexless([statePlaces_00002_00006, statePlaces_00003_00006],[5, statePlaces_00003_00015]), aux95)
reify(lexless([statePlaces_00002_00005, statePlaces_00003_00005],[5, statePlaces_00003_00015]), aux96)
reify(lexless([statePlaces_00002_00004, statePlaces_00003_00004],[5, statePlaces_00003_00015]), aux97)
reify(lexless([statePlaces_00002_00003, statePlaces_00003_00003],[5, statePlaces_00003_00015]), aux98)
reify(lexless([statePlaces_00002_00002, statePlaces_00003_00002],[5, statePlaces_00003_00015]), aux99)
watchelement_undefzero([statePlaces_00002_00011, statePlaces_00003_00011], aux175, aux100)
watchelement_undefzero([statePlaces_00002_00014, statePlaces_00003_00014], aux154, aux101)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux165, aux102)
watchelement_undefzero([statePlaces_00002_00013, statePlaces_00003_00013], aux172, aux103)
watchelement_undefzero([5, statePlaces_00003_00015], aux154, aux104)
watchelement_undefzero([1, -1], aux157, aux105)
watchelement_undefzero([statePlaces_00002_00012, statePlaces_00003_00012], aux186, aux106)
watchelement_undefzero([statePlaces_00002_00013, statePlaces_00003_00013], aux163, aux107)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux165, aux108)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux142, aux109)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux190, aux110)
watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux175, aux111)
watchelement_undefzero([statePlaces_00002_00011, statePlaces_00003_00011], aux186, aux112)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux177, aux113)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux190, aux114)
watchelement_undefzero([statePlaces_00002_00012, statePlaces_00003_00012], aux163, aux115)
watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux152, aux116)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux187, aux117)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux187, aux118)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux193, aux119)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux167, aux120)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux142, aux121)
watchelement_undefzero([1, -1], aux178, aux122)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux167, aux123)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux177, aux124)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux193, aux125)
watchelement_undefzero([statePlaces_00002_00014, statePlaces_00003_00014], aux172, aux126)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux152, aux127)
watchelement_undefzero([statePlaces_00002_00014, statePlaces_00003_00014], aux145, aux128)
watchelement_undefzero([statePlaces_00002_00013, statePlaces_00003_00013], aux161, aux129)
watchelement_undefzero([statePlaces_00002_00012, statePlaces_00003_00012], aux181, aux130)
watchelement_undefzero([statePlaces_00002_00011, statePlaces_00003_00011], aux196, aux131)
watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux185, aux132)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux184, aux133)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux146, aux134)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux143, aux135)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux189, aux136)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux149, aux137)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux160, aux138)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux180, aux139)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux171, aux140)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux178, aux141)
reify(w-inintervalset(actionFrom_00012,[2,3]), aux144)
reify(w-inintervalset(actionTo_00009,[2,3]), aux147)
reify(w-inintervalset(actionFrom_00002,[2,3]), aux148)
reify(w-inintervalset(actionTo_00005,[2,3]), aux150)
reify(w-inintervalset(actionFrom_00015,[2,3]), aux151)
reify(w-inintervalset(actionFrom_00007,[2,3]), aux153)
reify(w-inintervalset(actionTo_00012,[2,3]), aux155)
reify(w-inintervalset(actionTo_00013,[2,3]), aux156)
reify(w-inintervalset(actionFrom_00014,[2,3]), aux158)
reify(w-inintervalset(actionFrom_00006,[2,3]), aux159)
reify(w-inintervalset(actionFrom_00004,[2,3]), aux162)
reify(w-inintervalset(actionTo_00006,[2,3]), aux164)
reify(w-inintervalset(actionFrom_00009,[2,3]), aux166)
reify(w-inintervalset(actionFrom_00003,[2,3]), aux168)
reify(w-inintervalset(actionTo_00014,[2,3]), aux169)
reify(w-inintervalset(actionTo_00007,[2,3]), aux170)
reify(w-inintervalset(actionFrom_00008,[2,3]), aux173)
reify(w-inintervalset(actionTo_00002,[2,3]), aux174)
reify(w-inintervalset(actionTo_00003,[2,3]), aux176)
reify(w-inintervalset(actionTo_00010,[2,3]), aux179)
reify(w-inintervalset(actionFrom_00011,[2,3]), aux182)
reify(w-inintervalset(actionFrom_00005,[2,3]), aux183)
reify(w-inintervalset(actionTo_00015,[2,3]), aux188)
reify(w-inintervalset(actionTo_00008,[2,3]), aux191)
reify(w-inintervalset(actionFrom_00010,[2,3]), aux192)
reify(w-inintervalset(actionTo_00004,[2,3]), aux194)
reify(w-inintervalset(actionFrom_00013,[2,3]), aux195)
reify(w-inintervalset(actionTo_00011,[2,3]), aux197)
watched-or({ineq(statePlaces_00002_00002, 1, -1),lexless([1, 0],[pointers_00000_00002, pointers_00001_00002]),lexless([1, -1],[statePlaces_00002_00002, statePlaces_00003_00002])})
watched-or({ineq(statePlaces_00002_00003, 1, -1),lexless([1, 0],[pointers_00000_00003, pointers_00001_00003]),lexless([1, -1],[statePlaces_00002_00003, statePlaces_00003_00003])})
watched-or({ineq(statePlaces_00002_00004, 1, -1),lexless([1, 0],[pointers_00000_00004, pointers_00001_00004]),lexless([1, -1],[statePlaces_00002_00004, statePlaces_00003_00004])})
watched-or({ineq(statePlaces_00002_00005, 1, -1),lexless([1, 0],[pointers_00000_00005, pointers_00001_00005]),lexless([1, -1],[statePlaces_00002_00005, statePlaces_00003_00005])})
watched-or({ineq(statePlaces_00002_00006, 1, -1),lexless([1, 0],[pointers_00000_00006, pointers_00001_00006]),lexless([1, -1],[statePlaces_00002_00006, statePlaces_00003_00006])})
watched-or({ineq(statePlaces_00002_00007, 1, -1),lexless([1, 0],[pointers_00000_00007, pointers_00001_00007]),lexless([1, -1],[statePlaces_00002_00007, statePlaces_00003_00007])})
watched-or({ineq(statePlaces_00002_00008, 1, -1),lexless([1, 0],[pointers_00000_00008, pointers_00001_00008]),lexless([1, -1],[statePlaces_00002_00008, statePlaces_00003_00008])})
watched-or({ineq(statePlaces_00002_00009, 1, -1),lexless([1, 0],[pointers_00000_00009, pointers_00001_00009]),lexless([1, -1],[statePlaces_00002_00009, statePlaces_00003_00009])})
watched-or({ineq(statePlaces_00002_00010, 1, -1),lexless([1, 0],[pointers_00000_00010, pointers_00001_00010]),lexless([1, -1],[statePlaces_00002_00010, statePlaces_00003_00010])})
watched-or({ineq(statePlaces_00002_00011, 1, -1),lexless([1, 0],[pointers_00000_00011, pointers_00001_00011]),lexless([1, -1],[statePlaces_00002_00011, statePlaces_00003_00011])})
watched-or({ineq(statePlaces_00002_00012, 1, -1),lexless([1, 0],[pointers_00000_00012, pointers_00001_00012]),lexless([1, -1],[statePlaces_00002_00012, statePlaces_00003_00012])})
watched-or({ineq(statePlaces_00002_00013, 1, -1),lexless([1, 0],[pointers_00000_00013, pointers_00001_00013]),lexless([1, -1],[statePlaces_00002_00013, statePlaces_00003_00013])})
watched-or({ineq(statePlaces_00002_00014, 1, -1),lexless([1, 0],[pointers_00000_00014, pointers_00001_00014]),lexless([1, -1],[statePlaces_00002_00014, statePlaces_00003_00014])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00003, pointers_00001_00003])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00004, pointers_00001_00004])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00014, pointers_00001_00014])})
watched-or({w-literal(aux99,1),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00015, 2]),w-literal(aux74,1)})
watched-or({w-literal(aux99,1),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00015, 3]),w-literal(aux74,1)})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00004, pointers_00001_00004])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00014, pointers_00001_00014])})
watched-or({w-literal(aux98,1),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00015, 2]),w-literal(aux75,1)})
watched-or({w-literal(aux98,1),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00015, 3]),w-literal(aux75,1)})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00014, pointers_00001_00014])})
watched-or({w-literal(aux97,1),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00015, 2]),w-literal(aux78,1)})
watched-or({w-literal(aux97,1),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00015, 3]),w-literal(aux78,1)})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00014, pointers_00001_00014])})
watched-or({w-literal(aux96,1),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00015, 2]),w-literal(aux79,1)})
watched-or({w-literal(aux96,1),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00015, 3]),w-literal(aux79,1)})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00014, pointers_00001_00014])})
watched-or({w-literal(aux95,1),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00015, 2]),w-literal(aux76,1)})
watched-or({w-literal(aux95,1),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00015, 3]),w-literal(aux76,1)})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00014, pointers_00001_00014])})
watched-or({w-literal(aux94,1),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00015, 2]),w-literal(aux77,1)})
watched-or({w-literal(aux94,1),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00015, 3]),w-literal(aux77,1)})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00014, pointers_00001_00014])})
watched-or({w-literal(aux93,1),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00015, 2]),w-literal(aux80,1)})
watched-or({w-literal(aux93,1),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00015, 3]),w-literal(aux80,1)})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00014, pointers_00001_00014])})
watched-or({w-literal(aux92,1),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00015, 2]),w-literal(aux81,1)})
watched-or({w-literal(aux92,1),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00015, 3]),w-literal(aux81,1)})
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00014, pointers_00001_00014])})
watched-or({w-literal(aux91,1),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00015, 2]),w-literal(aux82,1)})
watched-or({w-literal(aux91,1),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00015, 3]),w-literal(aux82,1)})
watched-or({lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([pointers_00000_00011, pointers_00001_00011],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([pointers_00000_00011, pointers_00001_00011],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([pointers_00000_00011, pointers_00001_00011],[pointers_00000_00014, pointers_00001_00014])})
watched-or({w-literal(aux87,1),lexless([pointers_00000_00011, pointers_00001_00011],[pointers_00000_00015, 2]),w-literal(aux86,1)})
watched-or({w-literal(aux87,1),lexless([pointers_00000_00011, pointers_00001_00011],[pointers_00000_00015, 3]),w-literal(aux86,1)})
watched-or({lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([pointers_00000_00012, pointers_00001_00012],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([pointers_00000_00012, pointers_00001_00012],[pointers_00000_00014, pointers_00001_00014])})
watched-or({w-literal(aux88,1),lexless([pointers_00000_00012, pointers_00001_00012],[pointers_00000_00015, 2]),w-literal(aux85,1)})
watched-or({w-literal(aux88,1),lexless([pointers_00000_00012, pointers_00001_00012],[pointers_00000_00015, 3]),w-literal(aux85,1)})
watched-or({lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([pointers_00000_00013, pointers_00001_00013],[pointers_00000_00014, pointers_00001_00014])})
watched-or({w-literal(aux89,1),lexless([pointers_00000_00013, pointers_00001_00013],[pointers_00000_00015, 2]),w-literal(aux84,1)})
watched-or({w-literal(aux89,1),lexless([pointers_00000_00013, pointers_00001_00013],[pointers_00000_00015, 3]),w-literal(aux84,1)})
watched-or({w-literal(aux90,1),lexless([pointers_00000_00014, pointers_00001_00014],[pointers_00000_00015, 2]),w-literal(aux83,1)})
watched-or({w-literal(aux90,1),lexless([pointers_00000_00014, pointers_00001_00014],[pointers_00000_00015, 3]),w-literal(aux83,1)})
reifyimply(w-literal(pointers_00000_00002,1), aux198)
reifyimply(gaceq(pointers_00000_00002,pointers_00000_00003), aux199)
reifyimply(gaceq(pointers_00000_00003,pointers_00000_00004), aux200)
reifyimply(gaceq(pointers_00000_00004,pointers_00000_00005), aux201)
reifyimply(gaceq(pointers_00000_00005,pointers_00000_00006), aux202)
reifyimply(gaceq(pointers_00000_00006,pointers_00000_00007), aux203)
reifyimply(gaceq(pointers_00000_00007,pointers_00000_00008), aux204)
reifyimply(gaceq(pointers_00000_00008,pointers_00000_00009), aux205)
reifyimply(gaceq(pointers_00000_00009,pointers_00000_00010), aux206)
reifyimply(gaceq(pointers_00000_00010,pointers_00000_00011), aux207)
reifyimply(gaceq(pointers_00000_00011,pointers_00000_00012), aux208)
reifyimply(gaceq(pointers_00000_00012,pointers_00000_00013), aux209)
reifyimply(gaceq(pointers_00000_00013,pointers_00000_00014), aux210)
reifyimply(gaceq(pointers_00000_00014,pointers_00000_00015), aux211)
reifyimply(w-literal(pointers_00001_00002,0), aux212)
reifyimply(gaceq(pointers_00001_00002,pointers_00001_00003), aux213)
reifyimply(gaceq(pointers_00001_00003,pointers_00001_00004), aux214)
reifyimply(gaceq(pointers_00001_00004,pointers_00001_00005), aux215)
reifyimply(gaceq(pointers_00001_00005,pointers_00001_00006), aux216)
reifyimply(gaceq(pointers_00001_00006,pointers_00001_00007), aux217)
reifyimply(gaceq(pointers_00001_00007,pointers_00001_00008), aux218)
reifyimply(gaceq(pointers_00001_00008,pointers_00001_00009), aux219)
reifyimply(gaceq(pointers_00001_00009,pointers_00001_00010), aux220)
reifyimply(gaceq(pointers_00001_00010,pointers_00001_00011), aux221)
reifyimply(gaceq(pointers_00001_00011,pointers_00001_00012), aux222)
reifyimply(gaceq(pointers_00001_00012,pointers_00001_00013), aux223)
reifyimply(gaceq(pointers_00001_00013,pointers_00001_00014), aux224)
reifyimply(w-literal(pointers_00001_00014,2), aux225)
reifyimply(w-literal(statePlaces_00003_00002,-1), aux226)
reifyimply(gaceq(statePlaces_00003_00002,statePlaces_00003_00003), aux227)
reifyimply(gaceq(statePlaces_00003_00003,statePlaces_00003_00004), aux228)
reifyimply(gaceq(statePlaces_00003_00004,statePlaces_00003_00005), aux229)
reifyimply(gaceq(statePlaces_00003_00005,statePlaces_00003_00006), aux230)
reifyimply(gaceq(statePlaces_00003_00006,statePlaces_00003_00007), aux231)
reifyimply(gaceq(statePlaces_00003_00007,statePlaces_00003_00008), aux232)
reifyimply(gaceq(statePlaces_00003_00008,statePlaces_00003_00009), aux233)
reifyimply(gaceq(statePlaces_00003_00009,statePlaces_00003_00010), aux234)
reifyimply(gaceq(statePlaces_00003_00010,statePlaces_00003_00011), aux235)
reifyimply(gaceq(statePlaces_00003_00011,statePlaces_00003_00012), aux236)
reifyimply(gaceq(statePlaces_00003_00012,statePlaces_00003_00013), aux237)
reifyimply(gaceq(statePlaces_00003_00013,statePlaces_00003_00014), aux238)
reifyimply(gaceq(statePlaces_00003_00014,statePlaces_00003_00015), aux239)
reifyimply(w-literal(statePlaces_00002_00002,1), aux240)
reifyimply(gaceq(statePlaces_00002_00002,statePlaces_00002_00003), aux241)
reifyimply(gaceq(statePlaces_00002_00003,statePlaces_00002_00004), aux242)
reifyimply(gaceq(statePlaces_00002_00004,statePlaces_00002_00005), aux243)
reifyimply(gaceq(statePlaces_00002_00005,statePlaces_00002_00006), aux244)
reifyimply(gaceq(statePlaces_00002_00006,statePlaces_00002_00007), aux245)
reifyimply(gaceq(statePlaces_00002_00007,statePlaces_00002_00008), aux246)
reifyimply(gaceq(statePlaces_00002_00008,statePlaces_00002_00009), aux247)
reifyimply(gaceq(statePlaces_00002_00009,statePlaces_00002_00010), aux248)
reifyimply(gaceq(statePlaces_00002_00010,statePlaces_00002_00011), aux249)
reifyimply(gaceq(statePlaces_00002_00011,statePlaces_00002_00012), aux250)
reifyimply(gaceq(statePlaces_00002_00012,statePlaces_00002_00013), aux251)
reifyimply(gaceq(statePlaces_00002_00013,statePlaces_00002_00014), aux252)
reifyimply(w-literal(statePlaces_00002_00014,5), aux253)
reifyimply(w-literal(pointers_00000_00002,2), aux254)
reifyimply(w-literal(actionFrom_00002,0), aux255)
reifyimply(w-literal(actionTo_00002,2), aux256)
reifyimply(w-inintervalset(pointers_00000_00002,[1,10]), aux257)
reifyimply(watchelement_undefzero([1, 2, 3, 0, 12, 12, 12, 0, 5, 0], aux259, statePlaces_00002_00002), aux258)
reifyimply(w-literal(actionFrom_00003,0), aux261)
reifyimply(w-literal(actionTo_00003,2), aux262)
reifyimply(w-inintervalset(pointers_00000_00003,[1,10]), aux263)
reifyimply(watchelement_undefzero([1, 2, 3, 0, 12, 12, 12, 0, 5, 0], aux265, statePlaces_00002_00003), aux264)
reifyimply(w-literal(actionFrom_00004,0), aux267)
reifyimply(w-literal(actionTo_00004,2), aux268)
reifyimply(w-inintervalset(pointers_00000_00004,[1,10]), aux269)
reifyimply(watchelement_undefzero([1, 2, 3, 0, 12, 12, 12, 0, 5, 0], aux271, statePlaces_00002_00004), aux270)
reifyimply(w-literal(actionFrom_00005,0), aux273)
reifyimply(w-literal(actionTo_00005,2), aux274)
reifyimply(w-inintervalset(pointers_00000_00005,[1,10]), aux275)
reifyimply(watchelement_undefzero([1, 2, 3, 0, 12, 12, 12, 0, 5, 0], aux277, statePlaces_00002_00005), aux276)
reifyimply(w-literal(actionFrom_00006,0), aux279)
reifyimply(w-literal(actionTo_00006,2), aux280)
reifyimply(w-inintervalset(pointers_00000_00006,[1,10]), aux281)
reifyimply(watchelement_undefzero([1, 2, 3, 0, 12, 12, 12, 0, 5, 0], aux283, statePlaces_00002_00006), aux282)
reifyimply(w-literal(actionFrom_00007,0), aux285)
reifyimply(w-literal(actionTo_00007,2), aux286)
reifyimply(w-inintervalset(pointers_00000_00007,[1,10]), aux287)
reifyimply(watchelement_undefzero([1, 2, 3, 0, 12, 12, 12, 0, 5, 0], aux289, statePlaces_00002_00007), aux288)
reifyimply(w-literal(actionFrom_00008,0), aux291)
reifyimply(w-literal(actionTo_00008,2), aux292)
reifyimply(w-inintervalset(pointers_00000_00008,[1,10]), aux293)
reifyimply(watchelement_undefzero([1, 2, 3, 0, 12, 12, 12, 0, 5, 0], aux295, statePlaces_00002_00008), aux294)
reifyimply(w-literal(actionFrom_00009,0), aux297)
reifyimply(w-literal(actionTo_00009,2), aux298)
reifyimply(w-inintervalset(pointers_00000_00009,[1,10]), aux299)
reifyimply(watchelement_undefzero([1, 2, 3, 0, 12, 12, 12, 0, 5, 0], aux301, statePlaces_00002_00009), aux300)
reifyimply(w-literal(actionFrom_00010,0), aux303)
reifyimply(w-literal(actionTo_00010,2), aux304)
reifyimply(w-inintervalset(pointers_00000_00010,[1,10]), aux305)
reifyimply(watchelement_undefzero([1, 2, 3, 0, 12, 12, 12, 0, 5, 0], aux307, statePlaces_00002_00010), aux306)
reifyimply(w-literal(actionFrom_00011,0), aux309)
reifyimply(w-literal(actionTo_00011,2), aux310)
reifyimply(w-inintervalset(pointers_00000_00011,[1,10]), aux311)
reifyimply(watchelement_undefzero([1, 2, 3, 0, 12, 12, 12, 0, 5, 0], aux313, statePlaces_00002_00011), aux312)
reifyimply(w-literal(actionFrom_00012,0), aux315)
reifyimply(w-literal(actionTo_00012,2), aux316)
reifyimply(w-inintervalset(pointers_00000_00012,[1,10]), aux317)
reifyimply(watchelement_undefzero([1, 2, 3, 0, 12, 12, 12, 0, 5, 0], aux319, statePlaces_00002_00012), aux318)
reifyimply(w-literal(actionFrom_00013,0), aux321)
reifyimply(w-literal(actionTo_00013,2), aux322)
reifyimply(w-inintervalset(pointers_00000_00013,[1,10]), aux323)
reifyimply(watchelement_undefzero([1, 2, 3, 0, 12, 12, 12, 0, 5, 0], aux325, statePlaces_00002_00013), aux324)
reifyimply(w-literal(actionFrom_00014,0), aux327)
reifyimply(w-literal(actionTo_00014,2), aux328)
reifyimply(w-inintervalset(pointers_00000_00014,[1,10]), aux329)
reifyimply(watchelement_undefzero([1, 2, 3, 0, 12, 12, 12, 0, 5, 0], aux331, statePlaces_00002_00014), aux330)
reifyimply(w-literal(actionFrom_00015,0), aux333)
reifyimply(w-literal(actionTo_00015,2), aux334)
reifyimply(w-inintervalset(pointers_00000_00015,[1,10]), aux335)
reifyimply(watchelement_undefzero([1, 2, 3, 0, 12, 12, 12, 0, 5, 0], aux337, 5), aux336)
reifyimply(diseq(statePlaces_00002_00002,-1), aux338)
reifyimply(ineq(pointers_00001_00002, 3, 0), aux339)
reifyimply(w-literal(pointers_00001_00002,1), aux340)
reifyimply(w-literal(actionFrom_00002,2), aux341)
reifyimply(w-literal(actionTo_00002,1), aux342)
reifyimply(w-inintervalset(pointers_00001_00002,[1,3]), aux343)
reifyimply(watchelement_undefzero([6, 36, 5], aux345, 1), aux344)
reifyimply(diseq(statePlaces_00002_00003,-1), aux346)
reifyimply(diseq(statePlaces_00002_00002,-1), aux347)
reifyimply(ineq(pointers_00001_00003, 3, 0), aux348)
reifyimply(w-literal(actionFrom_00003,2), aux350)
reifyimply(w-literal(actionTo_00003,1), aux351)
reifyimply(w-inintervalset(pointers_00001_00003,[1,3]), aux352)
reifyimply(watchelement_undefzero([6, 36, 5], aux354, statePlaces_00002_00002), aux353)
reifyimply(diseq(statePlaces_00002_00004,-1), aux355)
reifyimply(diseq(statePlaces_00002_00003,-1), aux356)
reifyimply(ineq(pointers_00001_00004, 3, 0), aux357)
reifyimply(w-literal(actionFrom_00004,2), aux359)
reifyimply(w-literal(actionTo_00004,1), aux360)
reifyimply(w-inintervalset(pointers_00001_00004,[1,3]), aux361)
reifyimply(watchelement_undefzero([6, 36, 5], aux363, statePlaces_00002_00003), aux362)
reifyimply(diseq(statePlaces_00002_00005,-1), aux364)
reifyimply(diseq(statePlaces_00002_00004,-1), aux365)
reifyimply(ineq(pointers_00001_00005, 3, 0), aux366)
reifyimply(w-literal(actionFrom_00005,2), aux368)
reifyimply(w-literal(actionTo_00005,1), aux369)
reifyimply(w-inintervalset(pointers_00001_00005,[1,3]), aux370)
reifyimply(watchelement_undefzero([6, 36, 5], aux372, statePlaces_00002_00004), aux371)
reifyimply(diseq(statePlaces_00002_00006,-1), aux373)
reifyimply(diseq(statePlaces_00002_00005,-1), aux374)
reifyimply(ineq(pointers_00001_00006, 3, 0), aux375)
reifyimply(w-literal(actionFrom_00006,2), aux377)
reifyimply(w-literal(actionTo_00006,1), aux378)
reifyimply(w-inintervalset(pointers_00001_00006,[1,3]), aux379)
reifyimply(watchelement_undefzero([6, 36, 5], aux381, statePlaces_00002_00005), aux380)
reifyimply(diseq(statePlaces_00002_00007,-1), aux382)
reifyimply(diseq(statePlaces_00002_00006,-1), aux383)
reifyimply(ineq(pointers_00001_00007, 3, 0), aux384)
reifyimply(w-literal(actionFrom_00007,2), aux386)
reifyimply(w-literal(actionTo_00007,1), aux387)
reifyimply(w-inintervalset(pointers_00001_00007,[1,3]), aux388)
reifyimply(watchelement_undefzero([6, 36, 5], aux390, statePlaces_00002_00006), aux389)
reifyimply(diseq(statePlaces_00002_00008,-1), aux391)
reifyimply(diseq(statePlaces_00002_00007,-1), aux392)
reifyimply(ineq(pointers_00001_00008, 3, 0), aux393)
reifyimply(w-literal(actionFrom_00008,2), aux395)
reifyimply(w-literal(actionTo_00008,1), aux396)
reifyimply(w-inintervalset(pointers_00001_00008,[1,3]), aux397)
reifyimply(watchelement_undefzero([6, 36, 5], aux399, statePlaces_00002_00007), aux398)
reifyimply(diseq(statePlaces_00002_00009,-1), aux400)
reifyimply(diseq(statePlaces_00002_00008,-1), aux401)
reifyimply(ineq(pointers_00001_00009, 3, 0), aux402)
reifyimply(w-literal(actionFrom_00009,2), aux404)
reifyimply(w-literal(actionTo_00009,1), aux405)
reifyimply(w-inintervalset(pointers_00001_00009,[1,3]), aux406)
reifyimply(watchelement_undefzero([6, 36, 5], aux408, statePlaces_00002_00008), aux407)
reifyimply(diseq(statePlaces_00002_00010,-1), aux409)
reifyimply(diseq(statePlaces_00002_00009,-1), aux410)
reifyimply(ineq(pointers_00001_00010, 3, 0), aux411)
reifyimply(w-literal(actionFrom_00010,2), aux413)
reifyimply(w-literal(actionTo_00010,1), aux414)
reifyimply(w-inintervalset(pointers_00001_00010,[1,3]), aux415)
reifyimply(watchelement_undefzero([6, 36, 5], aux417, statePlaces_00002_00009), aux416)
reifyimply(diseq(statePlaces_00002_00011,-1), aux418)
reifyimply(diseq(statePlaces_00002_00010,-1), aux419)
reifyimply(ineq(pointers_00001_00011, 3, 0), aux420)
reifyimply(w-literal(actionFrom_00011,2), aux422)
reifyimply(w-literal(actionTo_00011,1), aux423)
reifyimply(w-inintervalset(pointers_00001_00011,[1,3]), aux424)
reifyimply(watchelement_undefzero([6, 36, 5], aux426, statePlaces_00002_00010), aux425)
reifyimply(diseq(statePlaces_00002_00012,-1), aux427)
reifyimply(diseq(statePlaces_00002_00011,-1), aux428)
reifyimply(ineq(pointers_00001_00012, 3, 0), aux429)
reifyimply(w-literal(actionFrom_00012,2), aux431)
reifyimply(w-literal(actionTo_00012,1), aux432)
reifyimply(w-inintervalset(pointers_00001_00012,[1,3]), aux433)
reifyimply(watchelement_undefzero([6, 36, 5], aux435, statePlaces_00002_00011), aux434)
reifyimply(diseq(statePlaces_00002_00013,-1), aux436)
reifyimply(diseq(statePlaces_00002_00012,-1), aux437)
reifyimply(ineq(pointers_00001_00013, 3, 0), aux438)
reifyimply(w-literal(actionFrom_00013,2), aux440)
reifyimply(w-literal(actionTo_00013,1), aux441)
reifyimply(w-inintervalset(pointers_00001_00013,[1,3]), aux442)
reifyimply(watchelement_undefzero([6, 36, 5], aux444, statePlaces_00002_00012), aux443)
reifyimply(diseq(statePlaces_00002_00014,-1), aux445)
reifyimply(diseq(statePlaces_00002_00013,-1), aux446)
reifyimply(ineq(pointers_00001_00014, 3, 0), aux447)
reifyimply(w-literal(actionFrom_00014,2), aux449)
reifyimply(w-literal(actionTo_00014,1), aux450)
reifyimply(w-inintervalset(pointers_00001_00014,[1,3]), aux451)
reifyimply(watchelement_undefzero([6, 36, 5], aux453, statePlaces_00002_00013), aux452)
reifyimply(diseq(statePlaces_00002_00014,-1), aux454)
reifyimply(w-literal(pointers_00001_00014,1), aux455)
reifyimply(w-literal(actionFrom_00015,2), aux456)
reifyimply(w-literal(actionTo_00015,1), aux457)
reifyimply(w-literal(statePlaces_00002_00014,36), aux458)
ineq(aux459, aux70, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux460)
reifyimply(diseq(aux141,-1), aux461)
reifyimply(w-literal(actionTo_00002,2), aux462)
ineq(aux463, aux174, 0)
ineq(aux464, aux148, 0)
ineq(aux465, aux72, 0)
reifyimply(ineq(3, actionFrom_00003, 0), aux466)
reifyimply(diseq(aux117,-1), aux467)
reifyimply(w-literal(actionTo_00003,2), aux468)
ineq(aux469, aux176, 0)
ineq(aux470, aux168, 0)
ineq(aux471, aux71, 0)
reifyimply(ineq(3, actionFrom_00004, 0), aux472)
reifyimply(diseq(aux123,-1), aux473)
reifyimply(w-literal(actionTo_00004,2), aux474)
ineq(aux475, aux194, 0)
ineq(aux476, aux162, 0)
ineq(aux477, aux66, 0)
reifyimply(ineq(3, actionFrom_00005, 0), aux478)
reifyimply(diseq(aux125,-1), aux479)
reifyimply(w-literal(actionTo_00005,2), aux480)
ineq(aux481, aux150, 0)
ineq(aux482, aux183, 0)
ineq(aux483, aux65, 0)
reifyimply(ineq(3, actionFrom_00006, 0), aux484)
reifyimply(diseq(aux109,-1), aux485)
reifyimply(w-literal(actionTo_00006,2), aux486)
ineq(aux487, aux164, 0)
ineq(aux488, aux159, 0)
ineq(aux489, aux69, 0)
reifyimply(ineq(3, actionFrom_00007, 0), aux490)
reifyimply(diseq(aux113,-1), aux491)
reifyimply(w-literal(actionTo_00007,2), aux492)
ineq(aux493, aux170, 0)
ineq(aux494, aux153, 0)
ineq(aux495, aux68, 0)
reifyimply(ineq(3, actionFrom_00008, 0), aux496)
reifyimply(diseq(aux114,-1), aux497)
reifyimply(w-literal(actionTo_00008,2), aux498)
ineq(aux499, aux191, 0)
ineq(aux500, aux173, 0)
ineq(aux501, aux67, 0)
reifyimply(ineq(3, actionFrom_00009, 0), aux502)
reifyimply(diseq(aux102,-1), aux503)
reifyimply(w-literal(actionTo_00009,2), aux504)
ineq(aux505, aux147, 0)
ineq(aux506, aux166, 0)
ineq(aux507, aux61, 0)
reifyimply(ineq(3, actionFrom_00010, 0), aux508)
reifyimply(diseq(aux116,-1), aux509)
reifyimply(w-literal(actionTo_00010,2), aux510)
ineq(aux511, aux179, 0)
ineq(aux512, aux192, 0)
ineq(aux513, aux63, 0)
reifyimply(ineq(3, actionFrom_00011, 0), aux514)
reifyimply(diseq(aux100,-1), aux515)
reifyimply(w-literal(actionTo_00011,2), aux516)
ineq(aux517, aux197, 0)
ineq(aux518, aux182, 0)
ineq(aux519, aux62, 0)
reifyimply(ineq(3, actionFrom_00012, 0), aux520)
reifyimply(diseq(aux106,-1), aux521)
reifyimply(w-literal(actionTo_00012,2), aux522)
ineq(aux523, aux155, 0)
ineq(aux524, aux144, 0)
ineq(aux525, aux60, 0)
reifyimply(ineq(3, actionFrom_00013, 0), aux526)
reifyimply(diseq(aux107,-1), aux527)
reifyimply(w-literal(actionTo_00013,2), aux528)
ineq(aux529, aux156, 0)
ineq(aux530, aux195, 0)
ineq(aux531, aux59, 0)
reifyimply(ineq(3, actionFrom_00014, 0), aux532)
reifyimply(diseq(aux126,-1), aux533)
reifyimply(w-literal(actionTo_00014,2), aux534)
ineq(aux535, aux169, 0)
ineq(aux536, aux158, 0)
ineq(aux537, aux64, 0)
reifyimply(ineq(3, actionFrom_00015, 0), aux538)
reifyimply(diseq(aux104,-1), aux539)
reifyimply(w-literal(actionTo_00015,2), aux540)
ineq(aux541, aux188, 0)
ineq(aux542, aux151, 0)
reifyimply(ineq(3, actionTo_00002, 0), aux543)
reifyimply(w-literal(actionFrom_00002,2), aux544)
ineq(aux545, aux148, 0)
ineq(aux546, aux174, 0)
ineq(aux547, aux70, 0)
reifyimply(ineq(3, actionTo_00003, 0), aux548)
reifyimply(w-literal(actionFrom_00003,2), aux549)
reifyimply(diseq(statePlaces_00002_00002,-1), aux550)
ineq(aux551, aux168, 0)
ineq(aux552, aux176, 0)
ineq(aux553, aux72, 0)
reifyimply(ineq(3, actionTo_00004, 0), aux554)
reifyimply(w-literal(actionFrom_00004,2), aux555)
reifyimply(diseq(statePlaces_00002_00003,-1), aux556)
ineq(aux557, aux162, 0)
ineq(aux558, aux194, 0)
ineq(aux559, aux71, 0)
reifyimply(ineq(3, actionTo_00005, 0), aux560)
reifyimply(w-literal(actionFrom_00005,2), aux561)
reifyimply(diseq(statePlaces_00002_00004,-1), aux562)
ineq(aux563, aux183, 0)
ineq(aux564, aux150, 0)
ineq(aux565, aux66, 0)
reifyimply(ineq(3, actionTo_00006, 0), aux566)
reifyimply(w-literal(actionFrom_00006,2), aux567)
reifyimply(diseq(statePlaces_00002_00005,-1), aux568)
ineq(aux569, aux159, 0)
ineq(aux570, aux164, 0)
ineq(aux571, aux65, 0)
reifyimply(ineq(3, actionTo_00007, 0), aux572)
reifyimply(w-literal(actionFrom_00007,2), aux573)
reifyimply(diseq(statePlaces_00002_00006,-1), aux574)
ineq(aux575, aux153, 0)
ineq(aux576, aux170, 0)
ineq(aux577, aux69, 0)
reifyimply(ineq(3, actionTo_00008, 0), aux578)
reifyimply(w-literal(actionFrom_00008,2), aux579)
reifyimply(diseq(statePlaces_00002_00007,-1), aux580)
ineq(aux581, aux173, 0)
ineq(aux582, aux191, 0)
ineq(aux583, aux68, 0)
reifyimply(ineq(3, actionTo_00009, 0), aux584)
reifyimply(w-literal(actionFrom_00009,2), aux585)
reifyimply(diseq(statePlaces_00002_00008,-1), aux586)
ineq(aux587, aux166, 0)
ineq(aux588, aux147, 0)
ineq(aux589, aux67, 0)
reifyimply(ineq(3, actionTo_00010, 0), aux590)
reifyimply(w-literal(actionFrom_00010,2), aux591)
reifyimply(diseq(statePlaces_00002_00009,-1), aux592)
ineq(aux593, aux192, 0)
ineq(aux594, aux179, 0)
ineq(aux595, aux61, 0)
reifyimply(ineq(3, actionTo_00011, 0), aux596)
reifyimply(w-literal(actionFrom_00011,2), aux597)
reifyimply(diseq(statePlaces_00002_00010,-1), aux598)
ineq(aux599, aux182, 0)
ineq(aux600, aux197, 0)
ineq(aux601, aux63, 0)
reifyimply(ineq(3, actionTo_00012, 0), aux602)
reifyimply(w-literal(actionFrom_00012,2), aux603)
reifyimply(diseq(statePlaces_00002_00011,-1), aux604)
ineq(aux605, aux144, 0)
ineq(aux606, aux155, 0)
ineq(aux607, aux62, 0)
reifyimply(ineq(3, actionTo_00013, 0), aux608)
reifyimply(w-literal(actionFrom_00013,2), aux609)
reifyimply(diseq(statePlaces_00002_00012,-1), aux610)
ineq(aux611, aux195, 0)
ineq(aux612, aux156, 0)
ineq(aux613, aux60, 0)
reifyimply(ineq(3, actionTo_00014, 0), aux614)
reifyimply(w-literal(actionFrom_00014,2), aux615)
reifyimply(diseq(statePlaces_00002_00013,-1), aux616)
ineq(aux617, aux158, 0)
ineq(aux618, aux169, 0)
ineq(aux619, aux59, 0)
reifyimply(ineq(3, actionTo_00015, 0), aux620)
reifyimply(w-literal(actionFrom_00015,2), aux621)
reifyimply(diseq(statePlaces_00002_00014,-1), aux622)
ineq(aux623, aux151, 0)
ineq(aux624, aux188, 0)
ineq(aux625, aux64, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux626)
reifyimply(diseq(aux141,-1), aux627)
reifyimply(diseq(aux105,-1), aux628)
reifyimply(w-literal(actionTo_00002,2), aux629)
ineq(aux630, aux174, 0)
ineq(aux631, aux148, 0)
reifyimply(diseq(aux122,-1), aux632)
reifyimply(ineq(3, actionFrom_00003, 0), aux634)
reifyimply(diseq(aux117,-1), aux635)
reifyimply(diseq(aux134,-1), aux636)
reifyimply(w-literal(actionTo_00003,2), aux637)
ineq(aux638, aux176, 0)
ineq(aux639, aux168, 0)
reifyimply(diseq(aux118,-1), aux640)
reifyimply(ineq(3, actionFrom_00004, 0), aux642)
reifyimply(diseq(aux123,-1), aux643)
reifyimply(diseq(aux133,-1), aux644)
reifyimply(w-literal(actionTo_00004,2), aux645)
ineq(aux646, aux194, 0)
ineq(aux647, aux162, 0)
reifyimply(diseq(aux120,-1), aux648)
reifyimply(ineq(3, actionFrom_00005, 0), aux650)
reifyimply(diseq(aux125,-1), aux651)
reifyimply(diseq(aux140,-1), aux652)
reifyimply(w-literal(actionTo_00005,2), aux653)
ineq(aux654, aux150, 0)
ineq(aux655, aux183, 0)
reifyimply(diseq(aux119,-1), aux656)
reifyimply(ineq(3, actionFrom_00006, 0), aux658)
reifyimply(diseq(aux109,-1), aux659)
reifyimply(diseq(aux139,-1), aux660)
reifyimply(w-literal(actionTo_00006,2), aux661)
ineq(aux662, aux164, 0)
ineq(aux663, aux159, 0)
reifyimply(diseq(aux121,-1), aux664)
reifyimply(ineq(3, actionFrom_00007, 0), aux666)
reifyimply(diseq(aux113,-1), aux667)
reifyimply(diseq(aux138,-1), aux668)
reifyimply(w-literal(actionTo_00007,2), aux669)
ineq(aux670, aux170, 0)
ineq(aux671, aux153, 0)
reifyimply(diseq(aux124,-1), aux672)
reifyimply(ineq(3, actionFrom_00008, 0), aux674)
reifyimply(diseq(aux114,-1), aux675)
reifyimply(diseq(aux137,-1), aux676)
reifyimply(w-literal(actionTo_00008,2), aux677)
ineq(aux678, aux191, 0)
ineq(aux679, aux173, 0)
reifyimply(diseq(aux110,-1), aux680)
reifyimply(ineq(3, actionFrom_00009, 0), aux682)
reifyimply(diseq(aux102,-1), aux683)
reifyimply(diseq(aux136,-1), aux684)
reifyimply(w-literal(actionTo_00009,2), aux685)
ineq(aux686, aux147, 0)
ineq(aux687, aux166, 0)
reifyimply(diseq(aux108,-1), aux688)
reifyimply(ineq(3, actionFrom_00010, 0), aux690)
reifyimply(diseq(aux116,-1), aux691)
reifyimply(diseq(aux135,-1), aux692)
reifyimply(w-literal(actionTo_00010,2), aux693)
ineq(aux694, aux179, 0)
ineq(aux695, aux192, 0)
reifyimply(diseq(aux127,-1), aux696)
reifyimply(ineq(3, actionFrom_00011, 0), aux698)
reifyimply(diseq(aux100,-1), aux699)
reifyimply(diseq(aux132,-1), aux700)
reifyimply(w-literal(actionTo_00011,2), aux701)
ineq(aux702, aux197, 0)
ineq(aux703, aux182, 0)
reifyimply(diseq(aux111,-1), aux704)
reifyimply(ineq(3, actionFrom_00012, 0), aux706)
reifyimply(diseq(aux106,-1), aux707)
reifyimply(diseq(aux131,-1), aux708)
reifyimply(w-literal(actionTo_00012,2), aux709)
ineq(aux710, aux155, 0)
ineq(aux711, aux144, 0)
reifyimply(diseq(aux112,-1), aux712)
reifyimply(ineq(3, actionFrom_00013, 0), aux714)
reifyimply(diseq(aux107,-1), aux715)
reifyimply(diseq(aux130,-1), aux716)
reifyimply(w-literal(actionTo_00013,2), aux717)
ineq(aux718, aux156, 0)
ineq(aux719, aux195, 0)
reifyimply(diseq(aux115,-1), aux720)
reifyimply(ineq(3, actionFrom_00014, 0), aux722)
reifyimply(diseq(aux126,-1), aux723)
reifyimply(diseq(aux129,-1), aux724)
reifyimply(w-literal(actionTo_00014,2), aux725)
ineq(aux726, aux169, 0)
ineq(aux727, aux158, 0)
reifyimply(diseq(aux103,-1), aux728)
reifyimply(ineq(3, actionFrom_00015, 0), aux730)
reifyimply(diseq(aux104,-1), aux731)
reifyimply(diseq(aux128,-1), aux732)
reifyimply(w-literal(actionTo_00015,2), aux733)
ineq(aux734, aux188, 0)
ineq(aux735, aux151, 0)
reifyimply(diseq(aux101,-1), aux736)
reifyimply(ineq(3, actionFrom_00002, 0), aux738)
reifyimply(diseq(aux141,-1), aux739)
reifyimply(diseq(aux105,-1), aux740)
reifyimply(w-literal(actionTo_00002,2), aux741)
ineq(aux743, aux174, 0)
ineq(aux744, aux148, 0)
reifyimply(ineq(3, actionFrom_00003, 0), aux745)
reifyimply(diseq(aux117,-1), aux746)
reifyimply(diseq(aux134,-1), aux747)
reifyimply(w-literal(actionTo_00003,2), aux748)
ineq(aux750, aux176, 0)
ineq(aux751, aux168, 0)
reifyimply(ineq(3, actionFrom_00004, 0), aux752)
reifyimply(diseq(aux123,-1), aux753)
reifyimply(diseq(aux133,-1), aux754)
reifyimply(w-literal(actionTo_00004,2), aux755)
ineq(aux757, aux194, 0)
ineq(aux758, aux162, 0)
reifyimply(ineq(3, actionFrom_00005, 0), aux759)
reifyimply(diseq(aux125,-1), aux760)
reifyimply(diseq(aux140,-1), aux761)
reifyimply(w-literal(actionTo_00005,2), aux762)
ineq(aux764, aux150, 0)
ineq(aux765, aux183, 0)
reifyimply(ineq(3, actionFrom_00006, 0), aux766)
reifyimply(diseq(aux109,-1), aux767)
reifyimply(diseq(aux139,-1), aux768)
reifyimply(w-literal(actionTo_00006,2), aux769)
ineq(aux771, aux164, 0)
ineq(aux772, aux159, 0)
reifyimply(ineq(3, actionFrom_00007, 0), aux773)
reifyimply(diseq(aux113,-1), aux774)
reifyimply(diseq(aux138,-1), aux775)
reifyimply(w-literal(actionTo_00007,2), aux776)
ineq(aux778, aux170, 0)
ineq(aux779, aux153, 0)
reifyimply(ineq(3, actionFrom_00008, 0), aux780)
reifyimply(diseq(aux114,-1), aux781)
reifyimply(diseq(aux137,-1), aux782)
reifyimply(w-literal(actionTo_00008,2), aux783)
ineq(aux785, aux191, 0)
ineq(aux786, aux173, 0)
reifyimply(ineq(3, actionFrom_00009, 0), aux787)
reifyimply(diseq(aux102,-1), aux788)
reifyimply(diseq(aux136,-1), aux789)
reifyimply(w-literal(actionTo_00009,2), aux790)
ineq(aux792, aux147, 0)
ineq(aux793, aux166, 0)
reifyimply(ineq(3, actionFrom_00010, 0), aux794)
reifyimply(diseq(aux116,-1), aux795)
reifyimply(diseq(aux135,-1), aux796)
reifyimply(w-literal(actionTo_00010,2), aux797)
ineq(aux799, aux179, 0)
ineq(aux800, aux192, 0)
reifyimply(ineq(3, actionFrom_00011, 0), aux801)
reifyimply(diseq(aux100,-1), aux802)
reifyimply(diseq(aux132,-1), aux803)
reifyimply(w-literal(actionTo_00011,2), aux804)
ineq(aux806, aux197, 0)
ineq(aux807, aux182, 0)
reifyimply(ineq(3, actionFrom_00012, 0), aux808)
reifyimply(diseq(aux106,-1), aux809)
reifyimply(diseq(aux131,-1), aux810)
reifyimply(w-literal(actionTo_00012,2), aux811)
ineq(aux813, aux155, 0)
ineq(aux814, aux144, 0)
reifyimply(ineq(3, actionFrom_00013, 0), aux815)
reifyimply(diseq(aux107,-1), aux816)
reifyimply(diseq(aux130,-1), aux817)
reifyimply(w-literal(actionTo_00013,2), aux818)
ineq(aux820, aux156, 0)
ineq(aux821, aux195, 0)
reifyimply(ineq(3, actionFrom_00014, 0), aux822)
reifyimply(diseq(aux126,-1), aux823)
reifyimply(diseq(aux129,-1), aux824)
reifyimply(w-literal(actionTo_00014,2), aux825)
ineq(aux827, aux169, 0)
ineq(aux828, aux158, 0)
reifyimply(ineq(3, actionFrom_00015, 0), aux829)
reifyimply(diseq(aux104,-1), aux830)
reifyimply(diseq(aux128,-1), aux831)
reifyimply(w-literal(actionTo_00015,2), aux832)
ineq(aux834, aux188, 0)
ineq(aux835, aux151, 0)
ineq(aux836, aux70, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux837)
reifyimply(w-literal(actionTo_00002,2), aux838)
ineq(aux839, aux174, 0)
ineq(aux840, aux148, 0)
reifyimply(diseq(aux122,-1), aux841)
ineq(aux843, aux72, 0)
reifyimply(ineq(3, actionFrom_00003, 0), aux844)
reifyimply(w-literal(actionTo_00003,2), aux845)
ineq(aux846, aux176, 0)
ineq(aux847, aux168, 0)
reifyimply(diseq(aux118,-1), aux848)
ineq(aux850, aux71, 0)
reifyimply(ineq(3, actionFrom_00004, 0), aux851)
reifyimply(w-literal(actionTo_00004,2), aux852)
ineq(aux853, aux194, 0)
ineq(aux854, aux162, 0)
reifyimply(diseq(aux120,-1), aux855)
ineq(aux857, aux66, 0)
reifyimply(ineq(3, actionFrom_00005, 0), aux858)
reifyimply(w-literal(actionTo_00005,2), aux859)
ineq(aux860, aux150, 0)
ineq(aux861, aux183, 0)
reifyimply(diseq(aux119,-1), aux862)
ineq(aux864, aux65, 0)
reifyimply(ineq(3, actionFrom_00006, 0), aux865)
reifyimply(w-literal(actionTo_00006,2), aux866)
ineq(aux867, aux164, 0)
ineq(aux868, aux159, 0)
reifyimply(diseq(aux121,-1), aux869)
ineq(aux871, aux69, 0)
reifyimply(ineq(3, actionFrom_00007, 0), aux872)
reifyimply(w-literal(actionTo_00007,2), aux873)
ineq(aux874, aux170, 0)
ineq(aux875, aux153, 0)
reifyimply(diseq(aux124,-1), aux876)
ineq(aux878, aux68, 0)
reifyimply(ineq(3, actionFrom_00008, 0), aux879)
reifyimply(w-literal(actionTo_00008,2), aux880)
ineq(aux881, aux191, 0)
ineq(aux882, aux173, 0)
reifyimply(diseq(aux110,-1), aux883)
ineq(aux885, aux67, 0)
reifyimply(ineq(3, actionFrom_00009, 0), aux886)
reifyimply(w-literal(actionTo_00009,2), aux887)
ineq(aux888, aux147, 0)
ineq(aux889, aux166, 0)
reifyimply(diseq(aux108,-1), aux890)
ineq(aux892, aux61, 0)
reifyimply(ineq(3, actionFrom_00010, 0), aux893)
reifyimply(w-literal(actionTo_00010,2), aux894)
ineq(aux895, aux179, 0)
ineq(aux896, aux192, 0)
reifyimply(diseq(aux127,-1), aux897)
ineq(aux899, aux63, 0)
reifyimply(ineq(3, actionFrom_00011, 0), aux900)
reifyimply(w-literal(actionTo_00011,2), aux901)
ineq(aux902, aux197, 0)
ineq(aux903, aux182, 0)
reifyimply(diseq(aux111,-1), aux904)
ineq(aux906, aux62, 0)
reifyimply(ineq(3, actionFrom_00012, 0), aux907)
reifyimply(w-literal(actionTo_00012,2), aux908)
ineq(aux909, aux155, 0)
ineq(aux910, aux144, 0)
reifyimply(diseq(aux112,-1), aux911)
ineq(aux913, aux60, 0)
reifyimply(ineq(3, actionFrom_00013, 0), aux914)
reifyimply(w-literal(actionTo_00013,2), aux915)
ineq(aux916, aux156, 0)
ineq(aux917, aux195, 0)
reifyimply(diseq(aux115,-1), aux918)
ineq(aux920, aux59, 0)
reifyimply(ineq(3, actionFrom_00014, 0), aux921)
reifyimply(w-literal(actionTo_00014,2), aux922)
ineq(aux923, aux169, 0)
ineq(aux924, aux158, 0)
reifyimply(diseq(aux103,-1), aux925)
ineq(aux927, aux64, 0)
reifyimply(ineq(3, actionFrom_00015, 0), aux928)
reifyimply(w-literal(actionTo_00015,2), aux929)
ineq(aux930, aux188, 0)
ineq(aux931, aux151, 0)
reifyimply(diseq(aux101,-1), aux932)
ineq(aux934, aux73, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux935)
reifyimply(w-literal(actionTo_00002,2), aux936)
ineq(aux938, aux148, 0)
reifyimply(diseq(aux122,-1), aux939)
reifyimply(gaceq(aux117,statePlaces_00002_00003), aux940)
reifyimply(ineq(3, actionFrom_00003, 0), aux941)
reifyimply(w-literal(actionTo_00003,2), aux942)
ineq(aux944, aux168, 0)
reifyimply(diseq(aux118,-1), aux945)
reifyimply(gaceq(aux123,statePlaces_00002_00004), aux946)
reifyimply(ineq(3, actionFrom_00004, 0), aux947)
reifyimply(w-literal(actionTo_00004,2), aux948)
ineq(aux950, aux162, 0)
reifyimply(diseq(aux120,-1), aux951)
reifyimply(gaceq(aux125,statePlaces_00002_00005), aux952)
reifyimply(ineq(3, actionFrom_00005, 0), aux953)
reifyimply(w-literal(actionTo_00005,2), aux954)
ineq(aux956, aux183, 0)
reifyimply(diseq(aux119,-1), aux957)
reifyimply(gaceq(aux109,statePlaces_00002_00006), aux958)
reifyimply(ineq(3, actionFrom_00006, 0), aux959)
reifyimply(w-literal(actionTo_00006,2), aux960)
ineq(aux962, aux159, 0)
reifyimply(diseq(aux121,-1), aux963)
reifyimply(gaceq(aux113,statePlaces_00002_00007), aux964)
reifyimply(ineq(3, actionFrom_00007, 0), aux965)
reifyimply(w-literal(actionTo_00007,2), aux966)
ineq(aux968, aux153, 0)
reifyimply(diseq(aux124,-1), aux969)
reifyimply(gaceq(aux114,statePlaces_00002_00008), aux970)
reifyimply(ineq(3, actionFrom_00008, 0), aux971)
reifyimply(w-literal(actionTo_00008,2), aux972)
ineq(aux974, aux173, 0)
reifyimply(diseq(aux110,-1), aux975)
reifyimply(gaceq(aux102,statePlaces_00002_00009), aux976)
reifyimply(ineq(3, actionFrom_00009, 0), aux977)
reifyimply(w-literal(actionTo_00009,2), aux978)
ineq(aux980, aux166, 0)
reifyimply(diseq(aux108,-1), aux981)
reifyimply(gaceq(aux116,statePlaces_00002_00010), aux982)
reifyimply(ineq(3, actionFrom_00010, 0), aux983)
reifyimply(w-literal(actionTo_00010,2), aux984)
ineq(aux986, aux192, 0)
reifyimply(diseq(aux127,-1), aux987)
reifyimply(gaceq(aux100,statePlaces_00002_00011), aux988)
reifyimply(ineq(3, actionFrom_00011, 0), aux989)
reifyimply(w-literal(actionTo_00011,2), aux990)
ineq(aux992, aux182, 0)
reifyimply(diseq(aux111,-1), aux993)
reifyimply(gaceq(aux106,statePlaces_00002_00012), aux994)
reifyimply(ineq(3, actionFrom_00012, 0), aux995)
reifyimply(w-literal(actionTo_00012,2), aux996)
ineq(aux998, aux144, 0)
reifyimply(diseq(aux112,-1), aux999)
reifyimply(gaceq(aux107,statePlaces_00002_00013), aux1000)
reifyimply(ineq(3, actionFrom_00013, 0), aux1001)
reifyimply(w-literal(actionTo_00013,2), aux1002)
ineq(aux1004, aux195, 0)
reifyimply(diseq(aux115,-1), aux1005)
reifyimply(gaceq(aux126,statePlaces_00002_00014), aux1006)
reifyimply(ineq(3, actionFrom_00014, 0), aux1007)
reifyimply(w-literal(actionTo_00014,2), aux1008)
ineq(aux1010, aux158, 0)
reifyimply(diseq(aux103,-1), aux1011)
reifyimply(w-literal(aux104,5), aux1012)
reifyimply(ineq(3, actionFrom_00015, 0), aux1013)
reifyimply(w-literal(actionTo_00015,2), aux1014)
ineq(aux1016, aux151, 0)
reifyimply(diseq(aux101,-1), aux1017)
reifyimply(ineq(3, actionFrom_00002, 0), aux1018)
reifyimply(diseq(aux141,-1), aux1019)
reifyimply(diseq(aux105,-1), aux1020)
ineq(aux1021, aux73, 0)
reifyimply(w-literal(actionTo_00002,2), aux1022)
ineq(aux1023, aux174, 0)
ineq(aux1024, aux148, 0)
reifyimply(diseq(aux122,-1), aux1025)
reifyimply(ineq(3, actionFrom_00003, 0), aux1026)
reifyimply(diseq(aux117,-1), aux1027)
reifyimply(diseq(aux134,-1), aux1028)
reifyimply(product(aux117, statePlaces_00002_00002, statePlaces_00002_00003), aux1029)
reifyimply(w-literal(actionTo_00003,2), aux1030)
ineq(aux1031, aux176, 0)
ineq(aux1032, aux168, 0)
reifyimply(diseq(aux118,-1), aux1033)
reifyimply(ineq(3, actionFrom_00004, 0), aux1034)
reifyimply(diseq(aux123,-1), aux1035)
reifyimply(diseq(aux133,-1), aux1036)
reifyimply(product(aux123, statePlaces_00002_00003, statePlaces_00002_00004), aux1037)
reifyimply(w-literal(actionTo_00004,2), aux1038)
ineq(aux1039, aux194, 0)
ineq(aux1040, aux162, 0)
reifyimply(diseq(aux120,-1), aux1041)
reifyimply(ineq(3, actionFrom_00005, 0), aux1042)
reifyimply(diseq(aux125,-1), aux1043)
reifyimply(diseq(aux140,-1), aux1044)
reifyimply(product(aux125, statePlaces_00002_00004, statePlaces_00002_00005), aux1045)
reifyimply(w-literal(actionTo_00005,2), aux1046)
ineq(aux1047, aux150, 0)
ineq(aux1048, aux183, 0)
reifyimply(diseq(aux119,-1), aux1049)
reifyimply(ineq(3, actionFrom_00006, 0), aux1050)
reifyimply(diseq(aux109,-1), aux1051)
reifyimply(diseq(aux139,-1), aux1052)
reifyimply(product(aux109, statePlaces_00002_00005, statePlaces_00002_00006), aux1053)
reifyimply(w-literal(actionTo_00006,2), aux1054)
ineq(aux1055, aux164, 0)
ineq(aux1056, aux159, 0)
reifyimply(diseq(aux121,-1), aux1057)
reifyimply(ineq(3, actionFrom_00007, 0), aux1058)
reifyimply(diseq(aux113,-1), aux1059)
reifyimply(diseq(aux138,-1), aux1060)
reifyimply(product(aux113, statePlaces_00002_00006, statePlaces_00002_00007), aux1061)
reifyimply(w-literal(actionTo_00007,2), aux1062)
ineq(aux1063, aux170, 0)
ineq(aux1064, aux153, 0)
reifyimply(diseq(aux124,-1), aux1065)
reifyimply(ineq(3, actionFrom_00008, 0), aux1066)
reifyimply(diseq(aux114,-1), aux1067)
reifyimply(diseq(aux137,-1), aux1068)
reifyimply(product(aux114, statePlaces_00002_00007, statePlaces_00002_00008), aux1069)
reifyimply(w-literal(actionTo_00008,2), aux1070)
ineq(aux1071, aux191, 0)
ineq(aux1072, aux173, 0)
reifyimply(diseq(aux110,-1), aux1073)
reifyimply(ineq(3, actionFrom_00009, 0), aux1074)
reifyimply(diseq(aux102,-1), aux1075)
reifyimply(diseq(aux136,-1), aux1076)
reifyimply(product(aux102, statePlaces_00002_00008, statePlaces_00002_00009), aux1077)
reifyimply(w-literal(actionTo_00009,2), aux1078)
ineq(aux1079, aux147, 0)
ineq(aux1080, aux166, 0)
reifyimply(diseq(aux108,-1), aux1081)
reifyimply(ineq(3, actionFrom_00010, 0), aux1082)
reifyimply(diseq(aux116,-1), aux1083)
reifyimply(diseq(aux135,-1), aux1084)
reifyimply(product(aux116, statePlaces_00002_00009, statePlaces_00002_00010), aux1085)
reifyimply(w-literal(actionTo_00010,2), aux1086)
ineq(aux1087, aux179, 0)
ineq(aux1088, aux192, 0)
reifyimply(diseq(aux127,-1), aux1089)
reifyimply(ineq(3, actionFrom_00011, 0), aux1090)
reifyimply(diseq(aux100,-1), aux1091)
reifyimply(diseq(aux132,-1), aux1092)
reifyimply(product(aux100, statePlaces_00002_00010, statePlaces_00002_00011), aux1093)
reifyimply(w-literal(actionTo_00011,2), aux1094)
ineq(aux1095, aux197, 0)
ineq(aux1096, aux182, 0)
reifyimply(diseq(aux111,-1), aux1097)
reifyimply(ineq(3, actionFrom_00012, 0), aux1098)
reifyimply(diseq(aux106,-1), aux1099)
reifyimply(diseq(aux131,-1), aux1100)
reifyimply(product(aux106, statePlaces_00002_00011, statePlaces_00002_00012), aux1101)
reifyimply(w-literal(actionTo_00012,2), aux1102)
ineq(aux1103, aux155, 0)
ineq(aux1104, aux144, 0)
reifyimply(diseq(aux112,-1), aux1105)
reifyimply(ineq(3, actionFrom_00013, 0), aux1106)
reifyimply(diseq(aux107,-1), aux1107)
reifyimply(diseq(aux130,-1), aux1108)
reifyimply(product(aux107, statePlaces_00002_00012, statePlaces_00002_00013), aux1109)
reifyimply(w-literal(actionTo_00013,2), aux1110)
ineq(aux1111, aux156, 0)
ineq(aux1112, aux195, 0)
reifyimply(diseq(aux115,-1), aux1113)
reifyimply(ineq(3, actionFrom_00014, 0), aux1114)
reifyimply(diseq(aux126,-1), aux1115)
reifyimply(diseq(aux129,-1), aux1116)
reifyimply(product(aux126, statePlaces_00002_00013, statePlaces_00002_00014), aux1117)
reifyimply(w-literal(actionTo_00014,2), aux1118)
ineq(aux1119, aux169, 0)
ineq(aux1120, aux158, 0)
reifyimply(diseq(aux103,-1), aux1121)
reifyimply(ineq(3, actionFrom_00015, 0), aux1122)
reifyimply(diseq(aux104,-1), aux1123)
reifyimply(diseq(aux128,-1), aux1124)
reifyimply(product(aux104, statePlaces_00002_00014, 5), aux1125)
reifyimply(w-literal(actionTo_00015,2), aux1126)
ineq(aux1127, aux188, 0)
ineq(aux1128, aux151, 0)
reifyimply(diseq(aux101,-1), aux1129)
sumleq([pointers_00000_00002,-1],aux259)
sumgeq([pointers_00000_00002,-1],aux259)
sumleq([pointers_00000_00003,-1],aux265)
sumgeq([pointers_00000_00003,-1],aux265)
sumleq([pointers_00000_00004,-1],aux271)
sumgeq([pointers_00000_00004,-1],aux271)
sumleq([pointers_00000_00005,-1],aux277)
sumgeq([pointers_00000_00005,-1],aux277)
sumleq([pointers_00000_00006,-1],aux283)
sumgeq([pointers_00000_00006,-1],aux283)
sumleq([pointers_00000_00007,-1],aux289)
sumgeq([pointers_00000_00007,-1],aux289)
sumleq([pointers_00000_00008,-1],aux295)
sumgeq([pointers_00000_00008,-1],aux295)
sumleq([pointers_00000_00009,-1],aux301)
sumgeq([pointers_00000_00009,-1],aux301)
sumleq([pointers_00000_00010,-1],aux307)
sumgeq([pointers_00000_00010,-1],aux307)
sumleq([pointers_00000_00011,-1],aux313)
sumgeq([pointers_00000_00011,-1],aux313)
sumleq([pointers_00000_00012,-1],aux319)
sumgeq([pointers_00000_00012,-1],aux319)
sumleq([pointers_00000_00013,-1],aux325)
sumgeq([pointers_00000_00013,-1],aux325)
sumleq([pointers_00000_00014,-1],aux331)
sumgeq([pointers_00000_00014,-1],aux331)
sumleq([pointers_00000_00015,-1],aux337)
sumgeq([pointers_00000_00015,-1],aux337)
sumleq([pointers_00001_00002,-1],aux345)
sumgeq([pointers_00001_00002,-1],aux345)
sumleq([pointers_00001_00003,-1],aux354)
sumgeq([pointers_00001_00003,-1],aux354)
sumleq([pointers_00001_00004,-1],aux363)
sumgeq([pointers_00001_00004,-1],aux363)
sumleq([pointers_00001_00005,-1],aux372)
sumgeq([pointers_00001_00005,-1],aux372)
sumleq([pointers_00001_00006,-1],aux381)
sumgeq([pointers_00001_00006,-1],aux381)
sumleq([pointers_00001_00007,-1],aux390)
sumgeq([pointers_00001_00007,-1],aux390)
sumleq([pointers_00001_00008,-1],aux399)
sumgeq([pointers_00001_00008,-1],aux399)
sumleq([pointers_00001_00009,-1],aux408)
sumgeq([pointers_00001_00009,-1],aux408)
sumleq([pointers_00001_00010,-1],aux417)
sumgeq([pointers_00001_00010,-1],aux417)
sumleq([pointers_00001_00011,-1],aux426)
sumgeq([pointers_00001_00011,-1],aux426)
sumleq([pointers_00001_00012,-1],aux435)
sumgeq([pointers_00001_00012,-1],aux435)
sumleq([pointers_00001_00013,-1],aux444)
sumgeq([pointers_00001_00013,-1],aux444)
sumleq([pointers_00001_00014,-1],aux453)
sumgeq([pointers_00001_00014,-1],aux453)
sumleq([actionFrom_00006,-2],aux142)
sumgeq([actionFrom_00006,-2],aux142)
sumleq([actionTo_00010,-2],aux143)
sumgeq([actionTo_00010,-2],aux143)
sumleq([actionTo_00015,-2],aux145)
sumgeq([actionTo_00015,-2],aux145)
sumleq([actionTo_00003,-2],aux146)
sumgeq([actionTo_00003,-2],aux146)
sumleq([actionTo_00008,-2],aux149)
sumgeq([actionTo_00008,-2],aux149)
sumleq([actionFrom_00010,-2],aux152)
sumgeq([actionFrom_00010,-2],aux152)
sumleq([actionFrom_00015,-2],aux154)
sumgeq([actionFrom_00015,-2],aux154)
sumleq([actionTo_00002,-2],aux157)
sumgeq([actionTo_00002,-2],aux157)
sumleq([actionTo_00007,-2],aux160)
sumgeq([actionTo_00007,-2],aux160)
sumleq([actionTo_00014,-2],aux161)
sumgeq([actionTo_00014,-2],aux161)
sumleq([actionFrom_00013,-2],aux163)
sumgeq([actionFrom_00013,-2],aux163)
sumleq([actionFrom_00009,-2],aux165)
sumgeq([actionFrom_00009,-2],aux165)
sumleq([actionFrom_00004,-2],aux167)
sumgeq([actionFrom_00004,-2],aux167)
sumleq([actionTo_00005,-2],aux171)
sumgeq([actionTo_00005,-2],aux171)
sumleq([actionFrom_00014,-2],aux172)
sumgeq([actionFrom_00014,-2],aux172)
sumleq([actionFrom_00011,-2],aux175)
sumgeq([actionFrom_00011,-2],aux175)
sumleq([actionFrom_00007,-2],aux177)
sumgeq([actionFrom_00007,-2],aux177)
sumleq([actionFrom_00002,-2],aux178)
sumgeq([actionFrom_00002,-2],aux178)
sumleq([actionTo_00006,-2],aux180)
sumgeq([actionTo_00006,-2],aux180)
sumleq([actionTo_00013,-2],aux181)
sumgeq([actionTo_00013,-2],aux181)
sumleq([actionTo_00004,-2],aux184)
sumgeq([actionTo_00004,-2],aux184)
sumleq([actionTo_00011,-2],aux185)
sumgeq([actionTo_00011,-2],aux185)
sumleq([actionFrom_00012,-2],aux186)
sumgeq([actionFrom_00012,-2],aux186)
sumleq([actionFrom_00003,-2],aux187)
sumgeq([actionFrom_00003,-2],aux187)
sumleq([actionTo_00009,-2],aux189)
sumgeq([actionTo_00009,-2],aux189)
sumleq([actionFrom_00008,-2],aux190)
sumgeq([actionFrom_00008,-2],aux190)
sumleq([actionFrom_00005,-2],aux193)
sumgeq([actionFrom_00005,-2],aux193)
sumleq([actionTo_00012,-2],aux196)
sumgeq([actionTo_00012,-2],aux196)
reifyimply(sumleq([pointers_00000_00002,1],pointers_00000_00003), aux260)
reifyimply(sumgeq([pointers_00000_00002,1],pointers_00000_00003), aux260)
reifyimply(sumleq([pointers_00000_00003,1],pointers_00000_00004), aux266)
reifyimply(sumgeq([pointers_00000_00003,1],pointers_00000_00004), aux266)
reifyimply(sumleq([pointers_00000_00004,1],pointers_00000_00005), aux272)
reifyimply(sumgeq([pointers_00000_00004,1],pointers_00000_00005), aux272)
reifyimply(sumleq([pointers_00000_00005,1],pointers_00000_00006), aux278)
reifyimply(sumgeq([pointers_00000_00005,1],pointers_00000_00006), aux278)
reifyimply(sumleq([pointers_00000_00006,1],pointers_00000_00007), aux284)
reifyimply(sumgeq([pointers_00000_00006,1],pointers_00000_00007), aux284)
reifyimply(sumleq([pointers_00000_00007,1],pointers_00000_00008), aux290)
reifyimply(sumgeq([pointers_00000_00007,1],pointers_00000_00008), aux290)
reifyimply(sumleq([pointers_00000_00008,1],pointers_00000_00009), aux296)
reifyimply(sumgeq([pointers_00000_00008,1],pointers_00000_00009), aux296)
reifyimply(sumleq([pointers_00000_00009,1],pointers_00000_00010), aux302)
reifyimply(sumgeq([pointers_00000_00009,1],pointers_00000_00010), aux302)
reifyimply(sumleq([pointers_00000_00010,1],pointers_00000_00011), aux308)
reifyimply(sumgeq([pointers_00000_00010,1],pointers_00000_00011), aux308)
reifyimply(sumleq([pointers_00000_00011,1],pointers_00000_00012), aux314)
reifyimply(sumgeq([pointers_00000_00011,1],pointers_00000_00012), aux314)
reifyimply(sumleq([pointers_00000_00012,1],pointers_00000_00013), aux320)
reifyimply(sumgeq([pointers_00000_00012,1],pointers_00000_00013), aux320)
reifyimply(sumleq([pointers_00000_00013,1],pointers_00000_00014), aux326)
reifyimply(sumgeq([pointers_00000_00013,1],pointers_00000_00014), aux326)
reifyimply(sumleq([pointers_00000_00014,1],pointers_00000_00015), aux332)
reifyimply(sumgeq([pointers_00000_00014,1],pointers_00000_00015), aux332)
reifyimply(sumleq([pointers_00001_00002,1],pointers_00001_00003), aux349)
reifyimply(sumgeq([pointers_00001_00002,1],pointers_00001_00003), aux349)
reifyimply(sumleq([pointers_00001_00003,1],pointers_00001_00004), aux358)
reifyimply(sumgeq([pointers_00001_00003,1],pointers_00001_00004), aux358)
reifyimply(sumleq([pointers_00001_00004,1],pointers_00001_00005), aux367)
reifyimply(sumgeq([pointers_00001_00004,1],pointers_00001_00005), aux367)
reifyimply(sumleq([pointers_00001_00005,1],pointers_00001_00006), aux376)
reifyimply(sumgeq([pointers_00001_00005,1],pointers_00001_00006), aux376)
reifyimply(sumleq([pointers_00001_00006,1],pointers_00001_00007), aux385)
reifyimply(sumgeq([pointers_00001_00006,1],pointers_00001_00007), aux385)
reifyimply(sumleq([pointers_00001_00007,1],pointers_00001_00008), aux394)
reifyimply(sumgeq([pointers_00001_00007,1],pointers_00001_00008), aux394)
reifyimply(sumleq([pointers_00001_00008,1],pointers_00001_00009), aux403)
reifyimply(sumgeq([pointers_00001_00008,1],pointers_00001_00009), aux403)
reifyimply(sumleq([pointers_00001_00009,1],pointers_00001_00010), aux412)
reifyimply(sumgeq([pointers_00001_00009,1],pointers_00001_00010), aux412)
reifyimply(sumleq([pointers_00001_00010,1],pointers_00001_00011), aux421)
reifyimply(sumgeq([pointers_00001_00010,1],pointers_00001_00011), aux421)
reifyimply(sumleq([pointers_00001_00011,1],pointers_00001_00012), aux430)
reifyimply(sumgeq([pointers_00001_00011,1],pointers_00001_00012), aux430)
reifyimply(sumleq([pointers_00001_00012,1],pointers_00001_00013), aux439)
reifyimply(sumgeq([pointers_00001_00012,1],pointers_00001_00013), aux439)
reifyimply(sumleq([pointers_00001_00013,1],pointers_00001_00014), aux448)
reifyimply(sumgeq([pointers_00001_00013,1],pointers_00001_00014), aux448)
reifyimply(sumleq([aux141,1],statePlaces_00002_00002), aux633)
reifyimply(sumgeq([aux141,1],statePlaces_00002_00002), aux633)
reifyimply(sumleq([aux117,statePlaces_00002_00002],statePlaces_00002_00003), aux641)
reifyimply(sumgeq([aux117,statePlaces_00002_00002],statePlaces_00002_00003), aux641)
reifyimply(sumleq([aux123,statePlaces_00002_00003],statePlaces_00002_00004), aux649)
reifyimply(sumgeq([aux123,statePlaces_00002_00003],statePlaces_00002_00004), aux649)
reifyimply(sumleq([aux125,statePlaces_00002_00004],statePlaces_00002_00005), aux657)
reifyimply(sumgeq([aux125,statePlaces_00002_00004],statePlaces_00002_00005), aux657)
reifyimply(sumleq([aux109,statePlaces_00002_00005],statePlaces_00002_00006), aux665)
reifyimply(sumgeq([aux109,statePlaces_00002_00005],statePlaces_00002_00006), aux665)
reifyimply(sumleq([aux113,statePlaces_00002_00006],statePlaces_00002_00007), aux673)
reifyimply(sumgeq([aux113,statePlaces_00002_00006],statePlaces_00002_00007), aux673)
reifyimply(sumleq([aux114,statePlaces_00002_00007],statePlaces_00002_00008), aux681)
reifyimply(sumgeq([aux114,statePlaces_00002_00007],statePlaces_00002_00008), aux681)
reifyimply(sumleq([aux102,statePlaces_00002_00008],statePlaces_00002_00009), aux689)
reifyimply(sumgeq([aux102,statePlaces_00002_00008],statePlaces_00002_00009), aux689)
reifyimply(sumleq([aux116,statePlaces_00002_00009],statePlaces_00002_00010), aux697)
reifyimply(sumgeq([aux116,statePlaces_00002_00009],statePlaces_00002_00010), aux697)
reifyimply(sumleq([aux100,statePlaces_00002_00010],statePlaces_00002_00011), aux705)
reifyimply(sumgeq([aux100,statePlaces_00002_00010],statePlaces_00002_00011), aux705)
reifyimply(sumleq([aux106,statePlaces_00002_00011],statePlaces_00002_00012), aux713)
reifyimply(sumgeq([aux106,statePlaces_00002_00011],statePlaces_00002_00012), aux713)
reifyimply(sumleq([aux107,statePlaces_00002_00012],statePlaces_00002_00013), aux721)
reifyimply(sumgeq([aux107,statePlaces_00002_00012],statePlaces_00002_00013), aux721)
reifyimply(sumleq([aux126,statePlaces_00002_00013],statePlaces_00002_00014), aux729)
reifyimply(sumgeq([aux126,statePlaces_00002_00013],statePlaces_00002_00014), aux729)
reifyimply(sumleq([aux104,statePlaces_00002_00014],5), aux737)
reifyimply(sumgeq([aux104,statePlaces_00002_00014],5), aux737)
reifyimply(weightedsumleq([-1,1],[aux141,1],statePlaces_00002_00002), aux742)
reifyimply(weightedsumgeq([-1,1],[aux141,1],statePlaces_00002_00002), aux742)
reifyimply(weightedsumleq([-1,1],[aux117,statePlaces_00002_00002],statePlaces_00002_00003), aux749)
reifyimply(weightedsumgeq([-1,1],[aux117,statePlaces_00002_00002],statePlaces_00002_00003), aux749)
reifyimply(weightedsumleq([-1,1],[aux123,statePlaces_00002_00003],statePlaces_00002_00004), aux756)
reifyimply(weightedsumgeq([-1,1],[aux123,statePlaces_00002_00003],statePlaces_00002_00004), aux756)
reifyimply(weightedsumleq([-1,1],[aux125,statePlaces_00002_00004],statePlaces_00002_00005), aux763)
reifyimply(weightedsumgeq([-1,1],[aux125,statePlaces_00002_00004],statePlaces_00002_00005), aux763)
reifyimply(weightedsumleq([-1,1],[aux109,statePlaces_00002_00005],statePlaces_00002_00006), aux770)
reifyimply(weightedsumgeq([-1,1],[aux109,statePlaces_00002_00005],statePlaces_00002_00006), aux770)
reifyimply(weightedsumleq([-1,1],[aux113,statePlaces_00002_00006],statePlaces_00002_00007), aux777)
reifyimply(weightedsumgeq([-1,1],[aux113,statePlaces_00002_00006],statePlaces_00002_00007), aux777)
reifyimply(weightedsumleq([-1,1],[aux114,statePlaces_00002_00007],statePlaces_00002_00008), aux784)
reifyimply(weightedsumgeq([-1,1],[aux114,statePlaces_00002_00007],statePlaces_00002_00008), aux784)
reifyimply(weightedsumleq([-1,1],[aux102,statePlaces_00002_00008],statePlaces_00002_00009), aux791)
reifyimply(weightedsumgeq([-1,1],[aux102,statePlaces_00002_00008],statePlaces_00002_00009), aux791)
reifyimply(weightedsumleq([-1,1],[aux116,statePlaces_00002_00009],statePlaces_00002_00010), aux798)
reifyimply(weightedsumgeq([-1,1],[aux116,statePlaces_00002_00009],statePlaces_00002_00010), aux798)
reifyimply(weightedsumleq([-1,1],[aux100,statePlaces_00002_00010],statePlaces_00002_00011), aux805)
reifyimply(weightedsumgeq([-1,1],[aux100,statePlaces_00002_00010],statePlaces_00002_00011), aux805)
reifyimply(weightedsumleq([-1,1],[aux106,statePlaces_00002_00011],statePlaces_00002_00012), aux812)
reifyimply(weightedsumgeq([-1,1],[aux106,statePlaces_00002_00011],statePlaces_00002_00012), aux812)
reifyimply(weightedsumleq([-1,1],[aux107,statePlaces_00002_00012],statePlaces_00002_00013), aux819)
reifyimply(weightedsumgeq([-1,1],[aux107,statePlaces_00002_00012],statePlaces_00002_00013), aux819)
reifyimply(weightedsumleq([-1,1],[aux126,statePlaces_00002_00013],statePlaces_00002_00014), aux826)
reifyimply(weightedsumgeq([-1,1],[aux126,statePlaces_00002_00013],statePlaces_00002_00014), aux826)
reifyimply(weightedsumleq([-1,1],[aux104,statePlaces_00002_00014],5), aux833)
reifyimply(weightedsumgeq([-1,1],[aux104,statePlaces_00002_00014],5), aux833)
reifyimply(sumleq([aux122,1],aux141), aux842)
reifyimply(sumgeq([aux122,1],aux141), aux842)
reifyimply(sumleq([aux118,1],aux117), aux849)
reifyimply(sumgeq([aux118,1],aux117), aux849)
reifyimply(sumleq([aux120,1],aux123), aux856)
reifyimply(sumgeq([aux120,1],aux123), aux856)
reifyimply(sumleq([aux119,1],aux125), aux863)
reifyimply(sumgeq([aux119,1],aux125), aux863)
reifyimply(sumleq([aux121,1],aux109), aux870)
reifyimply(sumgeq([aux121,1],aux109), aux870)
reifyimply(sumleq([aux124,1],aux113), aux877)
reifyimply(sumgeq([aux124,1],aux113), aux877)
reifyimply(sumleq([aux110,1],aux114), aux884)
reifyimply(sumgeq([aux110,1],aux114), aux884)
reifyimply(sumleq([aux108,1],aux102), aux891)
reifyimply(sumgeq([aux108,1],aux102), aux891)
reifyimply(sumleq([aux127,1],aux116), aux898)
reifyimply(sumgeq([aux127,1],aux116), aux898)
reifyimply(sumleq([aux111,1],aux100), aux905)
reifyimply(sumgeq([aux111,1],aux100), aux905)
reifyimply(sumleq([aux112,1],aux106), aux912)
reifyimply(sumgeq([aux112,1],aux106), aux912)
reifyimply(sumleq([aux115,1],aux107), aux919)
reifyimply(sumgeq([aux115,1],aux107), aux919)
reifyimply(sumleq([aux103,1],aux126), aux926)
reifyimply(sumgeq([aux103,1],aux126), aux926)
reifyimply(sumleq([aux101,1],aux104), aux933)
reifyimply(sumgeq([aux101,1],aux104), aux933)
reifyimply(sumleq([aux122,-1],aux141), aux937)
reifyimply(sumgeq([aux122,-1],aux141), aux937)
reifyimply(sumleq([aux118,-1],aux117), aux943)
reifyimply(sumgeq([aux118,-1],aux117), aux943)
reifyimply(sumleq([aux120,-1],aux123), aux949)
reifyimply(sumgeq([aux120,-1],aux123), aux949)
reifyimply(sumleq([aux119,-1],aux125), aux955)
reifyimply(sumgeq([aux119,-1],aux125), aux955)
reifyimply(sumleq([aux121,-1],aux109), aux961)
reifyimply(sumgeq([aux121,-1],aux109), aux961)
reifyimply(sumleq([aux124,-1],aux113), aux967)
reifyimply(sumgeq([aux124,-1],aux113), aux967)
reifyimply(sumleq([aux110,-1],aux114), aux973)
reifyimply(sumgeq([aux110,-1],aux114), aux973)
reifyimply(sumleq([aux108,-1],aux102), aux979)
reifyimply(sumgeq([aux108,-1],aux102), aux979)
reifyimply(sumleq([aux127,-1],aux116), aux985)
reifyimply(sumgeq([aux127,-1],aux116), aux985)
reifyimply(sumleq([aux111,-1],aux100), aux991)
reifyimply(sumgeq([aux111,-1],aux100), aux991)
reifyimply(sumleq([aux112,-1],aux106), aux997)
reifyimply(sumgeq([aux112,-1],aux106), aux997)
reifyimply(sumleq([aux115,-1],aux107), aux1003)
reifyimply(sumgeq([aux115,-1],aux107), aux1003)
reifyimply(sumleq([aux103,-1],aux126), aux1009)
reifyimply(sumgeq([aux103,-1],aux126), aux1009)
reifyimply(sumleq([aux101,-1],aux104), aux1015)
reifyimply(sumgeq([aux101,-1],aux104), aux1015)
**EOF**
