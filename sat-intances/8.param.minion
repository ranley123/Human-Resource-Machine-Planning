MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 112
# CSE_active_eliminated_expressions = 476
# CSE_active_total_size = 742
**VARIABLES**
DISCRETE statePlaces_00002_00002 #
{-1..100}
DISCRETE statePlaces_00002_00003 #
{-1..100}
DISCRETE statePlaces_00002_00004 #
{-1..100}
DISCRETE statePlaces_00002_00005 #
{-1..100}
DISCRETE statePlaces_00002_00006 #
{-1..100}
DISCRETE statePlaces_00002_00007 #
{-1..100}
DISCRETE statePlaces_00002_00008 #
{-1..100}
DISCRETE statePlaces_00002_00009 #
{-1..100}
DISCRETE statePlaces_00002_00010 #
{-1..100}
DISCRETE statePlaces_00002_00011 #
{-1..100}
DISCRETE statePlaces_00002_00012 #
{-1..100}
DISCRETE statePlaces_00002_00013 #
{-1..100}
DISCRETE statePlaces_00002_00014 #
{-1..100}
DISCRETE statePlaces_00002_00015 #
{-1..100}
DISCRETE statePlaces_00003_00002 #
{-1..100}
DISCRETE statePlaces_00003_00003 #
{-1..100}
DISCRETE statePlaces_00003_00004 #
{-1..100}
DISCRETE statePlaces_00003_00005 #
{-1..100}
DISCRETE statePlaces_00003_00006 #
{-1..100}
DISCRETE statePlaces_00003_00007 #
{-1..100}
DISCRETE statePlaces_00003_00008 #
{-1..100}
DISCRETE statePlaces_00003_00009 #
{-1..100}
DISCRETE statePlaces_00003_00010 #
{-1..100}
DISCRETE statePlaces_00003_00011 #
{-1..100}
DISCRETE statePlaces_00003_00012 #
{-1..100}
DISCRETE statePlaces_00003_00013 #
{-1..100}
DISCRETE statePlaces_00003_00014 #
{-1..100}
DISCRETE statePlaces_00003_00015 #
{-1..100}
DISCRETE actionTypes_00002 #
{1..8}
DISCRETE actionTypes_00003 #
{1..8}
DISCRETE actionTypes_00004 #
{1..8}
DISCRETE actionTypes_00005 #
{1..8}
DISCRETE actionTypes_00006 #
{1..8}
DISCRETE actionTypes_00007 #
{1..8}
DISCRETE actionTypes_00008 #
{1..8}
DISCRETE actionTypes_00009 #
{1..8}
DISCRETE actionTypes_00010 #
{1..8}
DISCRETE actionTypes_00011 #
{1..8}
DISCRETE actionTypes_00012 #
{1..8}
DISCRETE actionTypes_00013 #
{1..8}
DISCRETE actionTypes_00014 #
{1..8}
DISCRETE actionTypes_00015 #
{1..8}
DISCRETE actionFrom_00002 #
{0..3}
DISCRETE actionFrom_00003 #
{0..3}
DISCRETE actionFrom_00004 #
{0..3}
DISCRETE actionFrom_00005 #
{0..3}
DISCRETE actionFrom_00006 #
{0..3}
DISCRETE actionFrom_00007 #
{0..3}
DISCRETE actionFrom_00008 #
{0..3}
DISCRETE actionFrom_00009 #
{0..3}
DISCRETE actionFrom_00010 #
{0..3}
DISCRETE actionFrom_00011 #
{0..3}
DISCRETE actionFrom_00012 #
{0..3}
DISCRETE actionFrom_00013 #
{0..3}
DISCRETE actionFrom_00014 #
{0..3}
DISCRETE actionFrom_00015 #
{0..3}
DISCRETE actionTo_00002 #
{0..3}
DISCRETE actionTo_00003 #
{0..3}
DISCRETE actionTo_00004 #
{0..3}
DISCRETE actionTo_00005 #
{0..3}
DISCRETE actionTo_00006 #
{0..3}
DISCRETE actionTo_00007 #
{0..3}
DISCRETE actionTo_00008 #
{0..3}
DISCRETE actionTo_00009 #
{0..3}
DISCRETE actionTo_00010 #
{0..3}
DISCRETE actionTo_00011 #
{0..3}
DISCRETE actionTo_00012 #
{0..3}
DISCRETE actionTo_00013 #
{0..3}
DISCRETE actionTo_00014 #
{0..3}
DISCRETE actionTo_00015 #
{0..3}
DISCRETE pointers_00000_00002 #
{0..12}
DISCRETE pointers_00000_00003 #
{0..12}
DISCRETE pointers_00000_00004 #
{0..12}
DISCRETE pointers_00000_00005 #
{0..12}
DISCRETE pointers_00000_00006 #
{0..12}
DISCRETE pointers_00000_00007 #
{0..12}
DISCRETE pointers_00000_00008 #
{0..12}
DISCRETE pointers_00000_00009 #
{0..12}
DISCRETE pointers_00000_00010 #
{0..12}
DISCRETE pointers_00000_00011 #
{0..12}
DISCRETE pointers_00000_00012 #
{0..12}
DISCRETE pointers_00000_00013 #
{0..12}
DISCRETE pointers_00000_00014 #
{0..12}
DISCRETE pointers_00000_00015 #
{0..12}
DISCRETE pointers_00001_00002 #
{0..12}
DISCRETE pointers_00001_00003 #
{0..12}
DISCRETE pointers_00001_00004 #
{0..12}
DISCRETE pointers_00001_00005 #
{0..12}
DISCRETE pointers_00001_00006 #
{0..12}
DISCRETE pointers_00001_00007 #
{0..12}
DISCRETE pointers_00001_00008 #
{0..12}
DISCRETE pointers_00001_00009 #
{0..12}
DISCRETE pointers_00001_00010 #
{0..12}
DISCRETE pointers_00001_00011 #
{0..12}
DISCRETE pointers_00001_00012 #
{0..12}
DISCRETE pointers_00001_00013 #
{0..12}
DISCRETE pointers_00001_00014 #
{0..12}
BOOL aux52 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00014, statePlaces_00003_00014], (actionTo_00014 + -2))=SafeElement([statePlaces_00002_00014, statePlaces_00003_00014], (actionFrom_00014 + -2)))
BOOL aux53 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00013, statePlaces_00003_00013], (actionTo_00013 + -2))=SafeElement([statePlaces_00002_00013, statePlaces_00003_00013], (actionFrom_00013 + -2)))
BOOL aux54 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00015, statePlaces_00003_00015], (actionTo_00015 + -2))=SafeElement([statePlaces_00002_00015, statePlaces_00003_00015], (actionFrom_00015 + -2)))
BOOL aux55 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionTo_00010 + -2))=SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionFrom_00010 + -2)))
BOOL aux56 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionTo_00012 + -2))=SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionFrom_00012 + -2)))
BOOL aux57 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionTo_00011 + -2))=SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionFrom_00011 + -2)))
BOOL aux58 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionTo_00006 + -2))=SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionFrom_00006 + -2)))
BOOL aux59 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionTo_00005 + -2))=SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionFrom_00005 + -2)))
BOOL aux60 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionTo_00009 + -2))=SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionFrom_00009 + -2)))
BOOL aux61 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionTo_00008 + -2))=SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionFrom_00008 + -2)))
BOOL aux62 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionTo_00007 + -2))=SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionFrom_00007 + -2)))
BOOL aux63 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionTo_00002 + -2))=SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionFrom_00002 + -2)))
BOOL aux64 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionTo_00004 + -2))=SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionFrom_00004 + -2)))
BOOL aux65 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionTo_00003 + -2))=SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionFrom_00003 + -2)))
DISCRETE aux66 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionFrom_00013 + -2))
{-1..100}
DISCRETE aux67 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionFrom_00010 + -2))
{-1..100}
DISCRETE aux68 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionFrom_00003 + -2))
{-1..100}
DISCRETE aux69 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([8, -1], (actionFrom_00002 + -2))
{-1..8}
**CONSTRAINTS**
w-inintervalset(aux69, [-1,0,8,8])
**VARIABLES**
DISCRETE aux70 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionFrom_00009 + -2))
{-1..100}
DISCRETE aux71 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00015, statePlaces_00003_00015], (actionFrom_00015 + -2))
{-1..100}
DISCRETE aux72 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionFrom_00008 + -2))
{-1..100}
DISCRETE aux73 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionFrom_00004 + -2))
{-1..100}
DISCRETE aux74 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionFrom_00005 + -2))
{-1..100}
DISCRETE aux75 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionFrom_00003 + -2))
{-1..100}
DISCRETE aux76 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionFrom_00012 + -2))
{-1..100}
DISCRETE aux77 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionFrom_00007 + -2))
{-1..100}
DISCRETE aux78 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionFrom_00008 + -2))
{-1..100}
DISCRETE aux79 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionFrom_00004 + -2))
{-1..100}
DISCRETE aux80 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00014, statePlaces_00003_00014], (actionFrom_00014 + -2))
{-1..100}
DISCRETE aux81 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionFrom_00002 + -2))
{-1..100}
DISCRETE aux82 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00014, statePlaces_00003_00014], (actionFrom_00015 + -2))
{-1..100}
DISCRETE aux83 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionFrom_00012 + -2))
{-1..100}
DISCRETE aux84 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionFrom_00011 + -2))
{-1..100}
DISCRETE aux85 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionFrom_00007 + -2))
{-1..100}
DISCRETE aux86 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00013, statePlaces_00003_00013], (actionFrom_00013 + -2))
{-1..100}
DISCRETE aux87 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionFrom_00010 + -2))
{-1..100}
DISCRETE aux88 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionFrom_00006 + -2))
{-1..100}
DISCRETE aux89 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00013, statePlaces_00003_00013], (actionFrom_00014 + -2))
{-1..100}
DISCRETE aux90 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionFrom_00011 + -2))
{-1..100}
DISCRETE aux91 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionFrom_00009 + -2))
{-1..100}
DISCRETE aux92 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionFrom_00006 + -2))
{-1..100}
DISCRETE aux93 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([8, -1], (actionTo_00002 + -2))
{-1..8}
**CONSTRAINTS**
w-inintervalset(aux93, [-1,0,8,8])
**VARIABLES**
DISCRETE aux94 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionTo_00011 + -2))
{-1..100}
DISCRETE aux95 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionTo_00012 + -2))
{-1..100}
DISCRETE aux96 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionTo_00013 + -2))
{-1..100}
DISCRETE aux97 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00013, statePlaces_00003_00013], (actionTo_00014 + -2))
{-1..100}
DISCRETE aux98 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00014, statePlaces_00003_00014], (actionTo_00015 + -2))
{-1..100}
DISCRETE aux99 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionTo_00009 + -2))
{-1..100}
DISCRETE aux100 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionTo_00010 + -2))
{-1..100}
DISCRETE aux101 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionTo_00004 + -2))
{-1..100}
DISCRETE aux102 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionTo_00003 + -2))
{-1..100}
DISCRETE aux103 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionTo_00008 + -2))
{-1..100}
DISCRETE aux104 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionTo_00007 + -2))
{-1..100}
DISCRETE aux105 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionTo_00006 + -2))
{-1..100}
DISCRETE aux106 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionTo_00005 + -2))
{-1..100}
DISCRETE aux107 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionFrom_00005 + -2))
{-1..100}
BOOL aux108 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00007 in int(2..3))
DISCRETE aux109 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00009 + -2)
{-2..1}
DISCRETE aux110 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00012 + -2)
{-2..1}
BOOL aux111 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00008 in int(2..3))
BOOL aux112 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00007 in int(2..3))
BOOL aux113 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00009 in int(2..3))
BOOL aux114 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00003 in int(2..3))
BOOL aux115 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00002 in int(2..3))
BOOL aux116 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00006 in int(2..3))
BOOL aux117 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00005 in int(2..3))
BOOL aux118 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00004 in int(2..3))
DISCRETE aux119 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00002 + -2)
{-2..1}
DISCRETE aux120 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00013 + -2)
{-2..1}
BOOL aux121 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00002 in int(2..3))
BOOL aux122 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00014 in int(2..3))
DISCRETE aux123 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00007 + -2)
{-2..1}
DISCRETE aux124 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00015 + -2)
{-2..1}
DISCRETE aux125 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00010 + -2)
{-2..1}
DISCRETE aux126 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00014 + -2)
{-2..1}
DISCRETE aux127 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00012 + -2)
{-2..1}
DISCRETE aux128 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00013 + -2)
{-2..1}
DISCRETE aux129 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00011 + -2)
{-2..1}
DISCRETE aux130 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00010 + -2)
{-2..1}
BOOL aux131 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00011 in int(2..3))
BOOL aux132 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00010 in int(2..3))
BOOL aux133 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00003 in int(2..3))
BOOL aux134 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00014 in int(2..3))
DISCRETE aux135 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00008 + -2)
{-2..1}
BOOL aux136 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00015 in int(2..3))
BOOL aux137 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00013 in int(2..3))
DISCRETE aux138 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00011 + -2)
{-2..1}
BOOL aux139 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00015 in int(2..3))
BOOL aux140 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00008 in int(2..3))
BOOL aux141 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00012 in int(2..3))
BOOL aux142 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00011 in int(2..3))
BOOL aux143 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00010 in int(2..3))
DISCRETE aux144 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00005 + -2)
{-2..1}
BOOL aux145 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00005 in int(2..3))
BOOL aux146 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00012 in int(2..3))
DISCRETE aux147 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00008 + -2)
{-2..1}
DISCRETE aux148 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00009 + -2)
{-2..1}
DISCRETE aux149 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00007 + -2)
{-2..1}
DISCRETE aux150 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00006 + -2)
{-2..1}
BOOL aux151 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00004 in int(2..3))
DISCRETE aux152 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00005 + -2)
{-2..1}
DISCRETE aux153 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00004 + -2)
{-2..1}
DISCRETE aux154 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00003 + -2)
{-2..1}
DISCRETE aux155 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00002 + -2)
{-2..1}
DISCRETE aux156 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00006 + -2)
{-2..1}
BOOL aux157 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00009 in int(2..3))
BOOL aux158 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00006 in int(2..3))
BOOL aux159 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00013 in int(2..3))
DISCRETE aux160 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00003 + -2)
{-2..1}
DISCRETE aux161 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00014 + -2)
{-2..1}
DISCRETE aux162 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00004 + -2)
{-2..1}
DISCRETE aux163 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00015 + -2)
{-2..1}
BOOL aux164 #(1 != actionTypes_00002)
BOOL aux165 #(1 != actionTypes_00003)
BOOL aux166 #(1 != actionTypes_00004)
BOOL aux167 #(1 != actionTypes_00005)
BOOL aux168 #(1 != actionTypes_00006)
BOOL aux169 #(1 != actionTypes_00007)
BOOL aux170 #(1 != actionTypes_00008)
BOOL aux171 #(1 != actionTypes_00009)
BOOL aux172 #(1 != actionTypes_00010)
BOOL aux173 #(1 != actionTypes_00011)
BOOL aux174 #(1 != actionTypes_00012)
BOOL aux175 #(1 != actionTypes_00013)
BOOL aux176 #(1 != actionTypes_00014)
BOOL aux177 #(1 != actionTypes_00015)
BOOL aux178 #(2 != actionTypes_00002)
BOOL aux179 #(2 != actionTypes_00003)
BOOL aux180 #(2 != actionTypes_00004)
BOOL aux181 #(2 != actionTypes_00005)
BOOL aux182 #(2 != actionTypes_00006)
BOOL aux183 #(2 != actionTypes_00007)
BOOL aux184 #(2 != actionTypes_00008)
BOOL aux185 #(2 != actionTypes_00009)
BOOL aux186 #(2 != actionTypes_00010)
BOOL aux187 #(2 != actionTypes_00011)
BOOL aux188 #(2 != actionTypes_00012)
BOOL aux189 #(2 != actionTypes_00013)
BOOL aux190 #(2 != actionTypes_00014)
BOOL aux191 #(2 != actionTypes_00015)
BOOL aux192 #(((7=actionTypes_00002) /\ (actionFrom_00002 != 3)) \/ ((8=actionTypes_00002) /\ (actionFrom_00002 != 3)) \/ (1=actionTypes_00002) \/ (2=actionTypes_00002) \/ (3=actionTypes_00002) \/ (5=actionTypes_00002) \/ (6=actionTypes_00002) \/ ((4=actionTypes_00002) /\ (actionTo_00002 != 3)))
BOOL aux193 #(((7=actionTypes_00003) /\ (actionFrom_00003 != 3)) \/ ((8=actionTypes_00003) /\ (actionFrom_00003 != 3)) \/ (1=actionTypes_00003) \/ (2=actionTypes_00003) \/ (3=actionTypes_00003) \/ (5=actionTypes_00003) \/ (6=actionTypes_00003) \/ ((4=actionTypes_00003) /\ (actionTo_00003 != 3)))
BOOL aux194 #(((7=actionTypes_00004) /\ (actionFrom_00004 != 3)) \/ ((8=actionTypes_00004) /\ (actionFrom_00004 != 3)) \/ (1=actionTypes_00004) \/ (2=actionTypes_00004) \/ (3=actionTypes_00004) \/ (5=actionTypes_00004) \/ (6=actionTypes_00004) \/ ((4=actionTypes_00004) /\ (actionTo_00004 != 3)))
BOOL aux195 #(((7=actionTypes_00005) /\ (actionFrom_00005 != 3)) \/ ((8=actionTypes_00005) /\ (actionFrom_00005 != 3)) \/ (1=actionTypes_00005) \/ (2=actionTypes_00005) \/ (3=actionTypes_00005) \/ (5=actionTypes_00005) \/ (6=actionTypes_00005) \/ ((4=actionTypes_00005) /\ (actionTo_00005 != 3)))
BOOL aux196 #(((7=actionTypes_00006) /\ (actionFrom_00006 != 3)) \/ ((8=actionTypes_00006) /\ (actionFrom_00006 != 3)) \/ (1=actionTypes_00006) \/ (2=actionTypes_00006) \/ (3=actionTypes_00006) \/ (5=actionTypes_00006) \/ (6=actionTypes_00006) \/ ((4=actionTypes_00006) /\ (actionTo_00006 != 3)))
BOOL aux197 #(((7=actionTypes_00007) /\ (actionFrom_00007 != 3)) \/ ((8=actionTypes_00007) /\ (actionFrom_00007 != 3)) \/ (1=actionTypes_00007) \/ (2=actionTypes_00007) \/ (3=actionTypes_00007) \/ (5=actionTypes_00007) \/ (6=actionTypes_00007) \/ ((4=actionTypes_00007) /\ (actionTo_00007 != 3)))
BOOL aux198 #(((7=actionTypes_00008) /\ (actionFrom_00008 != 3)) \/ ((8=actionTypes_00008) /\ (actionFrom_00008 != 3)) \/ (1=actionTypes_00008) \/ (2=actionTypes_00008) \/ (3=actionTypes_00008) \/ (5=actionTypes_00008) \/ (6=actionTypes_00008) \/ ((4=actionTypes_00008) /\ (actionTo_00008 != 3)))
BOOL aux199 #(((7=actionTypes_00009) /\ (actionFrom_00009 != 3)) \/ ((8=actionTypes_00009) /\ (actionFrom_00009 != 3)) \/ (1=actionTypes_00009) \/ (2=actionTypes_00009) \/ (3=actionTypes_00009) \/ (5=actionTypes_00009) \/ (6=actionTypes_00009) \/ ((4=actionTypes_00009) /\ (actionTo_00009 != 3)))
BOOL aux200 #(((7=actionTypes_00010) /\ (actionFrom_00010 != 3)) \/ ((8=actionTypes_00010) /\ (actionFrom_00010 != 3)) \/ (1=actionTypes_00010) \/ (2=actionTypes_00010) \/ (3=actionTypes_00010) \/ (5=actionTypes_00010) \/ (6=actionTypes_00010) \/ ((4=actionTypes_00010) /\ (actionTo_00010 != 3)))
BOOL aux201 #(((7=actionTypes_00011) /\ (actionFrom_00011 != 3)) \/ ((8=actionTypes_00011) /\ (actionFrom_00011 != 3)) \/ (1=actionTypes_00011) \/ (2=actionTypes_00011) \/ (3=actionTypes_00011) \/ (5=actionTypes_00011) \/ (6=actionTypes_00011) \/ ((4=actionTypes_00011) /\ (actionTo_00011 != 3)))
BOOL aux202 #(((7=actionTypes_00012) /\ (actionFrom_00012 != 3)) \/ ((8=actionTypes_00012) /\ (actionFrom_00012 != 3)) \/ (1=actionTypes_00012) \/ (2=actionTypes_00012) \/ (3=actionTypes_00012) \/ (5=actionTypes_00012) \/ (6=actionTypes_00012) \/ ((4=actionTypes_00012) /\ (actionTo_00012 != 3)))
BOOL aux203 #(((7=actionTypes_00013) /\ (actionFrom_00013 != 3)) \/ ((8=actionTypes_00013) /\ (actionFrom_00013 != 3)) \/ (1=actionTypes_00013) \/ (2=actionTypes_00013) \/ (3=actionTypes_00013) \/ (5=actionTypes_00013) \/ (6=actionTypes_00013) \/ ((4=actionTypes_00013) /\ (actionTo_00013 != 3)))
BOOL aux204 #(((7=actionTypes_00014) /\ (actionFrom_00014 != 3)) \/ ((8=actionTypes_00014) /\ (actionFrom_00014 != 3)) \/ (1=actionTypes_00014) \/ (2=actionTypes_00014) \/ (3=actionTypes_00014) \/ (5=actionTypes_00014) \/ (6=actionTypes_00014) \/ ((4=actionTypes_00014) /\ (actionTo_00014 != 3)))
BOOL aux205 #(((7=actionTypes_00015) /\ (actionFrom_00015 != 3)) \/ ((8=actionTypes_00015) /\ (actionFrom_00015 != 3)) \/ (1=actionTypes_00015) \/ (2=actionTypes_00015) \/ (3=actionTypes_00015) \/ (5=actionTypes_00015) \/ (6=actionTypes_00015) \/ ((4=actionTypes_00015) /\ (actionTo_00015 != 3)))
BOOL aux206 #((2=actionTypes_00002) \/ (4=actionTypes_00002))
BOOL aux207 #((2=actionTypes_00003) \/ (4=actionTypes_00003))
BOOL aux208 #((2=actionTypes_00004) \/ (4=actionTypes_00004))
BOOL aux209 #((2=actionTypes_00005) \/ (4=actionTypes_00005))
BOOL aux210 #((2=actionTypes_00006) \/ (4=actionTypes_00006))
BOOL aux211 #((2=actionTypes_00007) \/ (4=actionTypes_00007))
BOOL aux212 #((2=actionTypes_00008) \/ (4=actionTypes_00008))
BOOL aux213 #((2=actionTypes_00009) \/ (4=actionTypes_00009))
BOOL aux214 #((2=actionTypes_00010) \/ (4=actionTypes_00010))
BOOL aux215 #((2=actionTypes_00011) \/ (4=actionTypes_00011))
BOOL aux216 #((2=actionTypes_00012) \/ (4=actionTypes_00012))
BOOL aux217 #((2=actionTypes_00013) \/ (4=actionTypes_00013))
BOOL aux218 #((2=actionTypes_00014) \/ (4=actionTypes_00014))
BOOL aux219 #((2=actionTypes_00015) \/ (4=actionTypes_00015))
BOOL aux220 #(1=actionTypes_00002)
BOOL aux221 #(1=actionTypes_00002)
BOOL aux222 #(1=actionTypes_00002)
BOOL aux223 #(1=actionTypes_00002)
BOOL aux224 #(1=actionTypes_00002)
DISCRETE aux225 #(pointers_00000_00002 + -1)
{-1..11}
BOOL aux226 #(1=actionTypes_00003)
BOOL aux227 #(1=actionTypes_00003)
BOOL aux228 #(1=actionTypes_00003)
BOOL aux229 #(1=actionTypes_00003)
BOOL aux230 #(1=actionTypes_00003)
DISCRETE aux231 #(pointers_00000_00003 + -1)
{-1..11}
BOOL aux232 #(1=actionTypes_00004)
BOOL aux233 #(1=actionTypes_00004)
BOOL aux234 #(1=actionTypes_00004)
BOOL aux235 #(1=actionTypes_00004)
BOOL aux236 #(1=actionTypes_00004)
DISCRETE aux237 #(pointers_00000_00004 + -1)
{-1..11}
BOOL aux238 #(1=actionTypes_00005)
BOOL aux239 #(1=actionTypes_00005)
BOOL aux240 #(1=actionTypes_00005)
BOOL aux241 #(1=actionTypes_00005)
BOOL aux242 #(1=actionTypes_00005)
DISCRETE aux243 #(pointers_00000_00005 + -1)
{-1..11}
BOOL aux244 #(1=actionTypes_00006)
BOOL aux245 #(1=actionTypes_00006)
BOOL aux246 #(1=actionTypes_00006)
BOOL aux247 #(1=actionTypes_00006)
BOOL aux248 #(1=actionTypes_00006)
DISCRETE aux249 #(pointers_00000_00006 + -1)
{-1..11}
BOOL aux250 #(1=actionTypes_00007)
BOOL aux251 #(1=actionTypes_00007)
BOOL aux252 #(1=actionTypes_00007)
BOOL aux253 #(1=actionTypes_00007)
BOOL aux254 #(1=actionTypes_00007)
DISCRETE aux255 #(pointers_00000_00007 + -1)
{-1..11}
BOOL aux256 #(1=actionTypes_00008)
BOOL aux257 #(1=actionTypes_00008)
BOOL aux258 #(1=actionTypes_00008)
BOOL aux259 #(1=actionTypes_00008)
BOOL aux260 #(1=actionTypes_00008)
DISCRETE aux261 #(pointers_00000_00008 + -1)
{-1..11}
BOOL aux262 #(1=actionTypes_00009)
BOOL aux263 #(1=actionTypes_00009)
BOOL aux264 #(1=actionTypes_00009)
BOOL aux265 #(1=actionTypes_00009)
BOOL aux266 #(1=actionTypes_00009)
DISCRETE aux267 #(pointers_00000_00009 + -1)
{-1..11}
BOOL aux268 #(1=actionTypes_00010)
BOOL aux269 #(1=actionTypes_00010)
BOOL aux270 #(1=actionTypes_00010)
BOOL aux271 #(1=actionTypes_00010)
BOOL aux272 #(1=actionTypes_00010)
DISCRETE aux273 #(pointers_00000_00010 + -1)
{-1..11}
BOOL aux274 #(1=actionTypes_00011)
BOOL aux275 #(1=actionTypes_00011)
BOOL aux276 #(1=actionTypes_00011)
BOOL aux277 #(1=actionTypes_00011)
BOOL aux278 #(1=actionTypes_00011)
DISCRETE aux279 #(pointers_00000_00011 + -1)
{-1..11}
BOOL aux280 #(1=actionTypes_00012)
BOOL aux281 #(1=actionTypes_00012)
BOOL aux282 #(1=actionTypes_00012)
BOOL aux283 #(1=actionTypes_00012)
BOOL aux284 #(1=actionTypes_00012)
DISCRETE aux285 #(pointers_00000_00012 + -1)
{-1..11}
BOOL aux286 #(1=actionTypes_00013)
BOOL aux287 #(1=actionTypes_00013)
BOOL aux288 #(1=actionTypes_00013)
BOOL aux289 #(1=actionTypes_00013)
BOOL aux290 #(1=actionTypes_00013)
DISCRETE aux291 #(pointers_00000_00013 + -1)
{-1..11}
BOOL aux292 #(1=actionTypes_00014)
BOOL aux293 #(1=actionTypes_00014)
BOOL aux294 #(1=actionTypes_00014)
BOOL aux295 #(1=actionTypes_00014)
BOOL aux296 #(1=actionTypes_00014)
DISCRETE aux297 #(pointers_00000_00014 + -1)
{-1..11}
BOOL aux298 #(1=actionTypes_00015)
BOOL aux299 #(1=actionTypes_00015)
BOOL aux300 #(1=actionTypes_00015)
BOOL aux301 #(1=actionTypes_00015)
BOOL aux302 #(1=actionTypes_00015)
DISCRETE aux303 #(pointers_00000_00015 + -1)
{-1..11}
BOOL aux304 #(2=actionTypes_00002)
BOOL aux305 #(2=actionTypes_00002)
BOOL aux306 #(2=actionTypes_00002)
BOOL aux307 #(2=actionTypes_00002)
BOOL aux308 #(2=actionTypes_00002)
BOOL aux309 #(2=actionTypes_00002)
BOOL aux310 #(2=actionTypes_00002)
DISCRETE aux311 #(pointers_00001_00002 + -1)
{-1..11}
BOOL aux312 #(2=actionTypes_00003)
BOOL aux313 #(2=actionTypes_00003)
BOOL aux314 #(2=actionTypes_00003)
BOOL aux315 #(2=actionTypes_00003)
BOOL aux316 #(2=actionTypes_00003)
BOOL aux317 #(2=actionTypes_00003)
BOOL aux318 #(2=actionTypes_00003)
BOOL aux319 #(2=actionTypes_00003)
DISCRETE aux320 #(pointers_00001_00003 + -1)
{-1..11}
BOOL aux321 #(2=actionTypes_00004)
BOOL aux322 #(2=actionTypes_00004)
BOOL aux323 #(2=actionTypes_00004)
BOOL aux324 #(2=actionTypes_00004)
BOOL aux325 #(2=actionTypes_00004)
BOOL aux326 #(2=actionTypes_00004)
BOOL aux327 #(2=actionTypes_00004)
BOOL aux328 #(2=actionTypes_00004)
DISCRETE aux329 #(pointers_00001_00004 + -1)
{-1..11}
BOOL aux330 #(2=actionTypes_00005)
BOOL aux331 #(2=actionTypes_00005)
BOOL aux332 #(2=actionTypes_00005)
BOOL aux333 #(2=actionTypes_00005)
BOOL aux334 #(2=actionTypes_00005)
BOOL aux335 #(2=actionTypes_00005)
BOOL aux336 #(2=actionTypes_00005)
BOOL aux337 #(2=actionTypes_00005)
DISCRETE aux338 #(pointers_00001_00005 + -1)
{-1..11}
BOOL aux339 #(2=actionTypes_00006)
BOOL aux340 #(2=actionTypes_00006)
BOOL aux341 #(2=actionTypes_00006)
BOOL aux342 #(2=actionTypes_00006)
BOOL aux343 #(2=actionTypes_00006)
BOOL aux344 #(2=actionTypes_00006)
BOOL aux345 #(2=actionTypes_00006)
BOOL aux346 #(2=actionTypes_00006)
DISCRETE aux347 #(pointers_00001_00006 + -1)
{-1..11}
BOOL aux348 #(2=actionTypes_00007)
BOOL aux349 #(2=actionTypes_00007)
BOOL aux350 #(2=actionTypes_00007)
BOOL aux351 #(2=actionTypes_00007)
BOOL aux352 #(2=actionTypes_00007)
BOOL aux353 #(2=actionTypes_00007)
BOOL aux354 #(2=actionTypes_00007)
BOOL aux355 #(2=actionTypes_00007)
DISCRETE aux356 #(pointers_00001_00007 + -1)
{-1..11}
BOOL aux357 #(2=actionTypes_00008)
BOOL aux358 #(2=actionTypes_00008)
BOOL aux359 #(2=actionTypes_00008)
BOOL aux360 #(2=actionTypes_00008)
BOOL aux361 #(2=actionTypes_00008)
BOOL aux362 #(2=actionTypes_00008)
BOOL aux363 #(2=actionTypes_00008)
BOOL aux364 #(2=actionTypes_00008)
DISCRETE aux365 #(pointers_00001_00008 + -1)
{-1..11}
BOOL aux366 #(2=actionTypes_00009)
BOOL aux367 #(2=actionTypes_00009)
BOOL aux368 #(2=actionTypes_00009)
BOOL aux369 #(2=actionTypes_00009)
BOOL aux370 #(2=actionTypes_00009)
BOOL aux371 #(2=actionTypes_00009)
BOOL aux372 #(2=actionTypes_00009)
BOOL aux373 #(2=actionTypes_00009)
DISCRETE aux374 #(pointers_00001_00009 + -1)
{-1..11}
BOOL aux375 #(2=actionTypes_00010)
BOOL aux376 #(2=actionTypes_00010)
BOOL aux377 #(2=actionTypes_00010)
BOOL aux378 #(2=actionTypes_00010)
BOOL aux379 #(2=actionTypes_00010)
BOOL aux380 #(2=actionTypes_00010)
BOOL aux381 #(2=actionTypes_00010)
BOOL aux382 #(2=actionTypes_00010)
DISCRETE aux383 #(pointers_00001_00010 + -1)
{-1..11}
BOOL aux384 #(2=actionTypes_00011)
BOOL aux385 #(2=actionTypes_00011)
BOOL aux386 #(2=actionTypes_00011)
BOOL aux387 #(2=actionTypes_00011)
BOOL aux388 #(2=actionTypes_00011)
BOOL aux389 #(2=actionTypes_00011)
BOOL aux390 #(2=actionTypes_00011)
BOOL aux391 #(2=actionTypes_00011)
DISCRETE aux392 #(pointers_00001_00011 + -1)
{-1..11}
BOOL aux393 #(2=actionTypes_00012)
BOOL aux394 #(2=actionTypes_00012)
BOOL aux395 #(2=actionTypes_00012)
BOOL aux396 #(2=actionTypes_00012)
BOOL aux397 #(2=actionTypes_00012)
BOOL aux398 #(2=actionTypes_00012)
BOOL aux399 #(2=actionTypes_00012)
BOOL aux400 #(2=actionTypes_00012)
DISCRETE aux401 #(pointers_00001_00012 + -1)
{-1..11}
BOOL aux402 #(2=actionTypes_00013)
BOOL aux403 #(2=actionTypes_00013)
BOOL aux404 #(2=actionTypes_00013)
BOOL aux405 #(2=actionTypes_00013)
BOOL aux406 #(2=actionTypes_00013)
BOOL aux407 #(2=actionTypes_00013)
BOOL aux408 #(2=actionTypes_00013)
BOOL aux409 #(2=actionTypes_00013)
DISCRETE aux410 #(pointers_00001_00013 + -1)
{-1..11}
BOOL aux411 #(2=actionTypes_00014)
BOOL aux412 #(2=actionTypes_00014)
BOOL aux413 #(2=actionTypes_00014)
BOOL aux414 #(2=actionTypes_00014)
BOOL aux415 #(2=actionTypes_00014)
BOOL aux416 #(2=actionTypes_00014)
BOOL aux417 #(2=actionTypes_00014)
BOOL aux418 #(2=actionTypes_00014)
DISCRETE aux419 #(pointers_00001_00014 + -1)
{-1..11}
BOOL aux420 #(2=actionTypes_00015)
BOOL aux421 #(2=actionTypes_00015)
BOOL aux422 #(2=actionTypes_00015)
BOOL aux423 #(2=actionTypes_00015)
BOOL aux424 #(2=actionTypes_00015)
BOOL aux425 #(2=actionTypes_00015)
BOOL aux426 #(3=actionTypes_00002)
BOOL aux427 #(3=actionTypes_00002)
BOOL aux428 #(3=actionTypes_00002)
BOOL aux429 #(3=actionTypes_00002)
BOOL aux430 #(3=actionTypes_00002)
BOOL aux431 #(3=actionTypes_00002)
BOOL aux432 #(3=actionTypes_00003)
BOOL aux433 #(3=actionTypes_00003)
BOOL aux434 #(3=actionTypes_00003)
BOOL aux435 #(3=actionTypes_00003)
BOOL aux436 #(3=actionTypes_00003)
BOOL aux437 #(3=actionTypes_00003)
BOOL aux438 #(3=actionTypes_00004)
BOOL aux439 #(3=actionTypes_00004)
BOOL aux440 #(3=actionTypes_00004)
BOOL aux441 #(3=actionTypes_00004)
BOOL aux442 #(3=actionTypes_00004)
BOOL aux443 #(3=actionTypes_00004)
BOOL aux444 #(3=actionTypes_00005)
BOOL aux445 #(3=actionTypes_00005)
BOOL aux446 #(3=actionTypes_00005)
BOOL aux447 #(3=actionTypes_00005)
BOOL aux448 #(3=actionTypes_00005)
BOOL aux449 #(3=actionTypes_00005)
BOOL aux450 #(3=actionTypes_00006)
BOOL aux451 #(3=actionTypes_00006)
BOOL aux452 #(3=actionTypes_00006)
BOOL aux453 #(3=actionTypes_00006)
BOOL aux454 #(3=actionTypes_00006)
BOOL aux455 #(3=actionTypes_00006)
BOOL aux456 #(3=actionTypes_00007)
BOOL aux457 #(3=actionTypes_00007)
BOOL aux458 #(3=actionTypes_00007)
BOOL aux459 #(3=actionTypes_00007)
BOOL aux460 #(3=actionTypes_00007)
BOOL aux461 #(3=actionTypes_00007)
BOOL aux462 #(3=actionTypes_00008)
BOOL aux463 #(3=actionTypes_00008)
BOOL aux464 #(3=actionTypes_00008)
BOOL aux465 #(3=actionTypes_00008)
BOOL aux466 #(3=actionTypes_00008)
BOOL aux467 #(3=actionTypes_00008)
BOOL aux468 #(3=actionTypes_00009)
BOOL aux469 #(3=actionTypes_00009)
BOOL aux470 #(3=actionTypes_00009)
BOOL aux471 #(3=actionTypes_00009)
BOOL aux472 #(3=actionTypes_00009)
BOOL aux473 #(3=actionTypes_00009)
BOOL aux474 #(3=actionTypes_00010)
BOOL aux475 #(3=actionTypes_00010)
BOOL aux476 #(3=actionTypes_00010)
BOOL aux477 #(3=actionTypes_00010)
BOOL aux478 #(3=actionTypes_00010)
BOOL aux479 #(3=actionTypes_00010)
BOOL aux480 #(3=actionTypes_00011)
BOOL aux481 #(3=actionTypes_00011)
BOOL aux482 #(3=actionTypes_00011)
BOOL aux483 #(3=actionTypes_00011)
BOOL aux484 #(3=actionTypes_00011)
BOOL aux485 #(3=actionTypes_00011)
BOOL aux486 #(3=actionTypes_00012)
BOOL aux487 #(3=actionTypes_00012)
BOOL aux488 #(3=actionTypes_00012)
BOOL aux489 #(3=actionTypes_00012)
BOOL aux490 #(3=actionTypes_00012)
BOOL aux491 #(3=actionTypes_00012)
BOOL aux492 #(3=actionTypes_00013)
BOOL aux493 #(3=actionTypes_00013)
BOOL aux494 #(3=actionTypes_00013)
BOOL aux495 #(3=actionTypes_00013)
BOOL aux496 #(3=actionTypes_00013)
BOOL aux497 #(3=actionTypes_00013)
BOOL aux498 #(3=actionTypes_00014)
BOOL aux499 #(3=actionTypes_00014)
BOOL aux500 #(3=actionTypes_00014)
BOOL aux501 #(3=actionTypes_00014)
BOOL aux502 #(3=actionTypes_00014)
BOOL aux503 #(3=actionTypes_00014)
BOOL aux504 #(3=actionTypes_00015)
BOOL aux505 #(3=actionTypes_00015)
BOOL aux506 #(3=actionTypes_00015)
BOOL aux507 #(3=actionTypes_00015)
BOOL aux508 #(3=actionTypes_00015)
BOOL aux509 #(3=actionTypes_00015)
BOOL aux510 #(4=actionTypes_00002)
BOOL aux511 #(4=actionTypes_00002)
BOOL aux512 #(4=actionTypes_00002)
BOOL aux513 #(4=actionTypes_00002)
BOOL aux514 #(4=actionTypes_00002)
BOOL aux515 #(4=actionTypes_00003)
BOOL aux516 #(4=actionTypes_00003)
BOOL aux517 #(4=actionTypes_00003)
BOOL aux518 #(4=actionTypes_00003)
BOOL aux519 #(4=actionTypes_00003)
BOOL aux520 #(4=actionTypes_00003)
BOOL aux521 #(4=actionTypes_00004)
BOOL aux522 #(4=actionTypes_00004)
BOOL aux523 #(4=actionTypes_00004)
BOOL aux524 #(4=actionTypes_00004)
BOOL aux525 #(4=actionTypes_00004)
BOOL aux526 #(4=actionTypes_00004)
BOOL aux527 #(4=actionTypes_00005)
BOOL aux528 #(4=actionTypes_00005)
BOOL aux529 #(4=actionTypes_00005)
BOOL aux530 #(4=actionTypes_00005)
BOOL aux531 #(4=actionTypes_00005)
BOOL aux532 #(4=actionTypes_00005)
BOOL aux533 #(4=actionTypes_00006)
BOOL aux534 #(4=actionTypes_00006)
BOOL aux535 #(4=actionTypes_00006)
BOOL aux536 #(4=actionTypes_00006)
BOOL aux537 #(4=actionTypes_00006)
BOOL aux538 #(4=actionTypes_00006)
BOOL aux539 #(4=actionTypes_00007)
BOOL aux540 #(4=actionTypes_00007)
BOOL aux541 #(4=actionTypes_00007)
BOOL aux542 #(4=actionTypes_00007)
BOOL aux543 #(4=actionTypes_00007)
BOOL aux544 #(4=actionTypes_00007)
BOOL aux545 #(4=actionTypes_00008)
BOOL aux546 #(4=actionTypes_00008)
BOOL aux547 #(4=actionTypes_00008)
BOOL aux548 #(4=actionTypes_00008)
BOOL aux549 #(4=actionTypes_00008)
BOOL aux550 #(4=actionTypes_00008)
BOOL aux551 #(4=actionTypes_00009)
BOOL aux552 #(4=actionTypes_00009)
BOOL aux553 #(4=actionTypes_00009)
BOOL aux554 #(4=actionTypes_00009)
BOOL aux555 #(4=actionTypes_00009)
BOOL aux556 #(4=actionTypes_00009)
BOOL aux557 #(4=actionTypes_00010)
BOOL aux558 #(4=actionTypes_00010)
BOOL aux559 #(4=actionTypes_00010)
BOOL aux560 #(4=actionTypes_00010)
BOOL aux561 #(4=actionTypes_00010)
BOOL aux562 #(4=actionTypes_00010)
BOOL aux563 #(4=actionTypes_00011)
BOOL aux564 #(4=actionTypes_00011)
BOOL aux565 #(4=actionTypes_00011)
BOOL aux566 #(4=actionTypes_00011)
BOOL aux567 #(4=actionTypes_00011)
BOOL aux568 #(4=actionTypes_00011)
BOOL aux569 #(4=actionTypes_00012)
BOOL aux570 #(4=actionTypes_00012)
BOOL aux571 #(4=actionTypes_00012)
BOOL aux572 #(4=actionTypes_00012)
BOOL aux573 #(4=actionTypes_00012)
BOOL aux574 #(4=actionTypes_00012)
BOOL aux575 #(4=actionTypes_00013)
BOOL aux576 #(4=actionTypes_00013)
BOOL aux577 #(4=actionTypes_00013)
BOOL aux578 #(4=actionTypes_00013)
BOOL aux579 #(4=actionTypes_00013)
BOOL aux580 #(4=actionTypes_00013)
BOOL aux581 #(4=actionTypes_00014)
BOOL aux582 #(4=actionTypes_00014)
BOOL aux583 #(4=actionTypes_00014)
BOOL aux584 #(4=actionTypes_00014)
BOOL aux585 #(4=actionTypes_00014)
BOOL aux586 #(4=actionTypes_00014)
BOOL aux587 #(4=actionTypes_00015)
BOOL aux588 #(4=actionTypes_00015)
BOOL aux589 #(4=actionTypes_00015)
BOOL aux590 #(4=actionTypes_00015)
BOOL aux591 #(4=actionTypes_00015)
BOOL aux592 #(4=actionTypes_00015)
BOOL aux593 #(5=actionTypes_00002)
BOOL aux594 #(5=actionTypes_00002)
BOOL aux595 #(5=actionTypes_00002)
BOOL aux596 #(5=actionTypes_00002)
BOOL aux597 #(5=actionTypes_00002)
BOOL aux598 #(5=actionTypes_00002)
BOOL aux599 #(5=actionTypes_00002)
BOOL aux600 #(5=actionTypes_00002)
BOOL aux601 #(5=actionTypes_00003)
BOOL aux602 #(5=actionTypes_00003)
BOOL aux603 #(5=actionTypes_00003)
BOOL aux604 #(5=actionTypes_00003)
BOOL aux605 #(5=actionTypes_00003)
BOOL aux606 #(5=actionTypes_00003)
BOOL aux607 #(5=actionTypes_00003)
BOOL aux608 #(5=actionTypes_00003)
BOOL aux609 #(5=actionTypes_00004)
BOOL aux610 #(5=actionTypes_00004)
BOOL aux611 #(5=actionTypes_00004)
BOOL aux612 #(5=actionTypes_00004)
BOOL aux613 #(5=actionTypes_00004)
BOOL aux614 #(5=actionTypes_00004)
BOOL aux615 #(5=actionTypes_00004)
BOOL aux616 #(5=actionTypes_00004)
BOOL aux617 #(5=actionTypes_00005)
BOOL aux618 #(5=actionTypes_00005)
BOOL aux619 #(5=actionTypes_00005)
BOOL aux620 #(5=actionTypes_00005)
BOOL aux621 #(5=actionTypes_00005)
BOOL aux622 #(5=actionTypes_00005)
BOOL aux623 #(5=actionTypes_00005)
BOOL aux624 #(5=actionTypes_00005)
BOOL aux625 #(5=actionTypes_00006)
BOOL aux626 #(5=actionTypes_00006)
BOOL aux627 #(5=actionTypes_00006)
BOOL aux628 #(5=actionTypes_00006)
BOOL aux629 #(5=actionTypes_00006)
BOOL aux630 #(5=actionTypes_00006)
BOOL aux631 #(5=actionTypes_00006)
BOOL aux632 #(5=actionTypes_00006)
BOOL aux633 #(5=actionTypes_00007)
BOOL aux634 #(5=actionTypes_00007)
BOOL aux635 #(5=actionTypes_00007)
BOOL aux636 #(5=actionTypes_00007)
BOOL aux637 #(5=actionTypes_00007)
BOOL aux638 #(5=actionTypes_00007)
BOOL aux639 #(5=actionTypes_00007)
BOOL aux640 #(5=actionTypes_00007)
BOOL aux641 #(5=actionTypes_00008)
BOOL aux642 #(5=actionTypes_00008)
BOOL aux643 #(5=actionTypes_00008)
BOOL aux644 #(5=actionTypes_00008)
BOOL aux645 #(5=actionTypes_00008)
BOOL aux646 #(5=actionTypes_00008)
BOOL aux647 #(5=actionTypes_00008)
BOOL aux648 #(5=actionTypes_00008)
BOOL aux649 #(5=actionTypes_00009)
BOOL aux650 #(5=actionTypes_00009)
BOOL aux651 #(5=actionTypes_00009)
BOOL aux652 #(5=actionTypes_00009)
BOOL aux653 #(5=actionTypes_00009)
BOOL aux654 #(5=actionTypes_00009)
BOOL aux655 #(5=actionTypes_00009)
BOOL aux656 #(5=actionTypes_00009)
BOOL aux657 #(5=actionTypes_00010)
BOOL aux658 #(5=actionTypes_00010)
BOOL aux659 #(5=actionTypes_00010)
BOOL aux660 #(5=actionTypes_00010)
BOOL aux661 #(5=actionTypes_00010)
BOOL aux662 #(5=actionTypes_00010)
BOOL aux663 #(5=actionTypes_00010)
BOOL aux664 #(5=actionTypes_00010)
BOOL aux665 #(5=actionTypes_00011)
BOOL aux666 #(5=actionTypes_00011)
BOOL aux667 #(5=actionTypes_00011)
BOOL aux668 #(5=actionTypes_00011)
BOOL aux669 #(5=actionTypes_00011)
BOOL aux670 #(5=actionTypes_00011)
BOOL aux671 #(5=actionTypes_00011)
BOOL aux672 #(5=actionTypes_00011)
BOOL aux673 #(5=actionTypes_00012)
BOOL aux674 #(5=actionTypes_00012)
BOOL aux675 #(5=actionTypes_00012)
BOOL aux676 #(5=actionTypes_00012)
BOOL aux677 #(5=actionTypes_00012)
BOOL aux678 #(5=actionTypes_00012)
BOOL aux679 #(5=actionTypes_00012)
BOOL aux680 #(5=actionTypes_00012)
BOOL aux681 #(5=actionTypes_00013)
BOOL aux682 #(5=actionTypes_00013)
BOOL aux683 #(5=actionTypes_00013)
BOOL aux684 #(5=actionTypes_00013)
BOOL aux685 #(5=actionTypes_00013)
BOOL aux686 #(5=actionTypes_00013)
BOOL aux687 #(5=actionTypes_00013)
BOOL aux688 #(5=actionTypes_00013)
BOOL aux689 #(5=actionTypes_00014)
BOOL aux690 #(5=actionTypes_00014)
BOOL aux691 #(5=actionTypes_00014)
BOOL aux692 #(5=actionTypes_00014)
BOOL aux693 #(5=actionTypes_00014)
BOOL aux694 #(5=actionTypes_00014)
BOOL aux695 #(5=actionTypes_00014)
BOOL aux696 #(5=actionTypes_00014)
BOOL aux697 #(5=actionTypes_00015)
BOOL aux698 #(5=actionTypes_00015)
BOOL aux699 #(5=actionTypes_00015)
BOOL aux700 #(5=actionTypes_00015)
BOOL aux701 #(5=actionTypes_00015)
BOOL aux702 #(5=actionTypes_00015)
BOOL aux703 #(5=actionTypes_00015)
BOOL aux704 #(5=actionTypes_00015)
BOOL aux705 #(6=actionTypes_00002)
BOOL aux706 #(6=actionTypes_00002)
BOOL aux707 #(6=actionTypes_00002)
BOOL aux708 #(6=actionTypes_00002)
BOOL aux709 #(6=actionTypes_00002)
BOOL aux710 #(6=actionTypes_00002)
BOOL aux711 #(6=actionTypes_00002)
BOOL aux712 #(6=actionTypes_00003)
BOOL aux713 #(6=actionTypes_00003)
BOOL aux714 #(6=actionTypes_00003)
BOOL aux715 #(6=actionTypes_00003)
BOOL aux716 #(6=actionTypes_00003)
BOOL aux717 #(6=actionTypes_00003)
BOOL aux718 #(6=actionTypes_00003)
BOOL aux719 #(6=actionTypes_00004)
BOOL aux720 #(6=actionTypes_00004)
BOOL aux721 #(6=actionTypes_00004)
BOOL aux722 #(6=actionTypes_00004)
BOOL aux723 #(6=actionTypes_00004)
BOOL aux724 #(6=actionTypes_00004)
BOOL aux725 #(6=actionTypes_00004)
BOOL aux726 #(6=actionTypes_00005)
BOOL aux727 #(6=actionTypes_00005)
BOOL aux728 #(6=actionTypes_00005)
BOOL aux729 #(6=actionTypes_00005)
BOOL aux730 #(6=actionTypes_00005)
BOOL aux731 #(6=actionTypes_00005)
BOOL aux732 #(6=actionTypes_00005)
BOOL aux733 #(6=actionTypes_00006)
BOOL aux734 #(6=actionTypes_00006)
BOOL aux735 #(6=actionTypes_00006)
BOOL aux736 #(6=actionTypes_00006)
BOOL aux737 #(6=actionTypes_00006)
BOOL aux738 #(6=actionTypes_00006)
BOOL aux739 #(6=actionTypes_00006)
BOOL aux740 #(6=actionTypes_00007)
BOOL aux741 #(6=actionTypes_00007)
BOOL aux742 #(6=actionTypes_00007)
BOOL aux743 #(6=actionTypes_00007)
BOOL aux744 #(6=actionTypes_00007)
BOOL aux745 #(6=actionTypes_00007)
BOOL aux746 #(6=actionTypes_00007)
BOOL aux747 #(6=actionTypes_00008)
BOOL aux748 #(6=actionTypes_00008)
BOOL aux749 #(6=actionTypes_00008)
BOOL aux750 #(6=actionTypes_00008)
BOOL aux751 #(6=actionTypes_00008)
BOOL aux752 #(6=actionTypes_00008)
BOOL aux753 #(6=actionTypes_00008)
BOOL aux754 #(6=actionTypes_00009)
BOOL aux755 #(6=actionTypes_00009)
BOOL aux756 #(6=actionTypes_00009)
BOOL aux757 #(6=actionTypes_00009)
BOOL aux758 #(6=actionTypes_00009)
BOOL aux759 #(6=actionTypes_00009)
BOOL aux760 #(6=actionTypes_00009)
BOOL aux761 #(6=actionTypes_00010)
BOOL aux762 #(6=actionTypes_00010)
BOOL aux763 #(6=actionTypes_00010)
BOOL aux764 #(6=actionTypes_00010)
BOOL aux765 #(6=actionTypes_00010)
BOOL aux766 #(6=actionTypes_00010)
BOOL aux767 #(6=actionTypes_00010)
BOOL aux768 #(6=actionTypes_00011)
BOOL aux769 #(6=actionTypes_00011)
BOOL aux770 #(6=actionTypes_00011)
BOOL aux771 #(6=actionTypes_00011)
BOOL aux772 #(6=actionTypes_00011)
BOOL aux773 #(6=actionTypes_00011)
BOOL aux774 #(6=actionTypes_00011)
BOOL aux775 #(6=actionTypes_00012)
BOOL aux776 #(6=actionTypes_00012)
BOOL aux777 #(6=actionTypes_00012)
BOOL aux778 #(6=actionTypes_00012)
BOOL aux779 #(6=actionTypes_00012)
BOOL aux780 #(6=actionTypes_00012)
BOOL aux781 #(6=actionTypes_00012)
BOOL aux782 #(6=actionTypes_00013)
BOOL aux783 #(6=actionTypes_00013)
BOOL aux784 #(6=actionTypes_00013)
BOOL aux785 #(6=actionTypes_00013)
BOOL aux786 #(6=actionTypes_00013)
BOOL aux787 #(6=actionTypes_00013)
BOOL aux788 #(6=actionTypes_00013)
BOOL aux789 #(6=actionTypes_00014)
BOOL aux790 #(6=actionTypes_00014)
BOOL aux791 #(6=actionTypes_00014)
BOOL aux792 #(6=actionTypes_00014)
BOOL aux793 #(6=actionTypes_00014)
BOOL aux794 #(6=actionTypes_00014)
BOOL aux795 #(6=actionTypes_00014)
BOOL aux796 #(6=actionTypes_00015)
BOOL aux797 #(6=actionTypes_00015)
BOOL aux798 #(6=actionTypes_00015)
BOOL aux799 #(6=actionTypes_00015)
BOOL aux800 #(6=actionTypes_00015)
BOOL aux801 #(6=actionTypes_00015)
BOOL aux802 #(6=actionTypes_00015)
BOOL aux803 #(7=actionTypes_00002)
BOOL aux804 #(7=actionTypes_00002)
BOOL aux805 #(7=actionTypes_00002)
BOOL aux806 #(7=actionTypes_00002)
BOOL aux807 #(7=actionTypes_00002)
BOOL aux808 #(7=actionTypes_00002)
BOOL aux809 #(7=actionTypes_00002)
BOOL aux810 #(7=actionTypes_00003)
BOOL aux811 #(7=actionTypes_00003)
BOOL aux812 #(7=actionTypes_00003)
BOOL aux813 #(7=actionTypes_00003)
BOOL aux814 #(7=actionTypes_00003)
BOOL aux815 #(7=actionTypes_00003)
BOOL aux816 #(7=actionTypes_00003)
BOOL aux817 #(7=actionTypes_00004)
BOOL aux818 #(7=actionTypes_00004)
BOOL aux819 #(7=actionTypes_00004)
BOOL aux820 #(7=actionTypes_00004)
BOOL aux821 #(7=actionTypes_00004)
BOOL aux822 #(7=actionTypes_00004)
BOOL aux823 #(7=actionTypes_00004)
BOOL aux824 #(7=actionTypes_00005)
BOOL aux825 #(7=actionTypes_00005)
BOOL aux826 #(7=actionTypes_00005)
BOOL aux827 #(7=actionTypes_00005)
BOOL aux828 #(7=actionTypes_00005)
BOOL aux829 #(7=actionTypes_00005)
BOOL aux830 #(7=actionTypes_00005)
BOOL aux831 #(7=actionTypes_00006)
BOOL aux832 #(7=actionTypes_00006)
BOOL aux833 #(7=actionTypes_00006)
BOOL aux834 #(7=actionTypes_00006)
BOOL aux835 #(7=actionTypes_00006)
BOOL aux836 #(7=actionTypes_00006)
BOOL aux837 #(7=actionTypes_00006)
BOOL aux838 #(7=actionTypes_00007)
BOOL aux839 #(7=actionTypes_00007)
BOOL aux840 #(7=actionTypes_00007)
BOOL aux841 #(7=actionTypes_00007)
BOOL aux842 #(7=actionTypes_00007)
BOOL aux843 #(7=actionTypes_00007)
BOOL aux844 #(7=actionTypes_00007)
BOOL aux845 #(7=actionTypes_00008)
BOOL aux846 #(7=actionTypes_00008)
BOOL aux847 #(7=actionTypes_00008)
BOOL aux848 #(7=actionTypes_00008)
BOOL aux849 #(7=actionTypes_00008)
BOOL aux850 #(7=actionTypes_00008)
BOOL aux851 #(7=actionTypes_00008)
BOOL aux852 #(7=actionTypes_00009)
BOOL aux853 #(7=actionTypes_00009)
BOOL aux854 #(7=actionTypes_00009)
BOOL aux855 #(7=actionTypes_00009)
BOOL aux856 #(7=actionTypes_00009)
BOOL aux857 #(7=actionTypes_00009)
BOOL aux858 #(7=actionTypes_00009)
BOOL aux859 #(7=actionTypes_00010)
BOOL aux860 #(7=actionTypes_00010)
BOOL aux861 #(7=actionTypes_00010)
BOOL aux862 #(7=actionTypes_00010)
BOOL aux863 #(7=actionTypes_00010)
BOOL aux864 #(7=actionTypes_00010)
BOOL aux865 #(7=actionTypes_00010)
BOOL aux866 #(7=actionTypes_00011)
BOOL aux867 #(7=actionTypes_00011)
BOOL aux868 #(7=actionTypes_00011)
BOOL aux869 #(7=actionTypes_00011)
BOOL aux870 #(7=actionTypes_00011)
BOOL aux871 #(7=actionTypes_00011)
BOOL aux872 #(7=actionTypes_00011)
BOOL aux873 #(7=actionTypes_00012)
BOOL aux874 #(7=actionTypes_00012)
BOOL aux875 #(7=actionTypes_00012)
BOOL aux876 #(7=actionTypes_00012)
BOOL aux877 #(7=actionTypes_00012)
BOOL aux878 #(7=actionTypes_00012)
BOOL aux879 #(7=actionTypes_00012)
BOOL aux880 #(7=actionTypes_00013)
BOOL aux881 #(7=actionTypes_00013)
BOOL aux882 #(7=actionTypes_00013)
BOOL aux883 #(7=actionTypes_00013)
BOOL aux884 #(7=actionTypes_00013)
BOOL aux885 #(7=actionTypes_00013)
BOOL aux886 #(7=actionTypes_00013)
BOOL aux887 #(7=actionTypes_00014)
BOOL aux888 #(7=actionTypes_00014)
BOOL aux889 #(7=actionTypes_00014)
BOOL aux890 #(7=actionTypes_00014)
BOOL aux891 #(7=actionTypes_00014)
BOOL aux892 #(7=actionTypes_00014)
BOOL aux893 #(7=actionTypes_00014)
BOOL aux894 #(7=actionTypes_00015)
BOOL aux895 #(7=actionTypes_00015)
BOOL aux896 #(7=actionTypes_00015)
BOOL aux897 #(7=actionTypes_00015)
BOOL aux898 #(7=actionTypes_00015)
BOOL aux899 #(7=actionTypes_00015)
BOOL aux900 #(7=actionTypes_00015)
BOOL aux901 #(8=actionTypes_00002)
BOOL aux902 #(8=actionTypes_00002)
BOOL aux903 #(8=actionTypes_00002)
BOOL aux904 #(8=actionTypes_00002)
BOOL aux905 #(8=actionTypes_00002)
BOOL aux906 #(8=actionTypes_00002)
BOOL aux907 #(8=actionTypes_00003)
BOOL aux908 #(8=actionTypes_00003)
BOOL aux909 #(8=actionTypes_00003)
BOOL aux910 #(8=actionTypes_00003)
BOOL aux911 #(8=actionTypes_00003)
BOOL aux912 #(8=actionTypes_00003)
BOOL aux913 #(8=actionTypes_00004)
BOOL aux914 #(8=actionTypes_00004)
BOOL aux915 #(8=actionTypes_00004)
BOOL aux916 #(8=actionTypes_00004)
BOOL aux917 #(8=actionTypes_00004)
BOOL aux918 #(8=actionTypes_00004)
BOOL aux919 #(8=actionTypes_00005)
BOOL aux920 #(8=actionTypes_00005)
BOOL aux921 #(8=actionTypes_00005)
BOOL aux922 #(8=actionTypes_00005)
BOOL aux923 #(8=actionTypes_00005)
BOOL aux924 #(8=actionTypes_00005)
BOOL aux925 #(8=actionTypes_00006)
BOOL aux926 #(8=actionTypes_00006)
BOOL aux927 #(8=actionTypes_00006)
BOOL aux928 #(8=actionTypes_00006)
BOOL aux929 #(8=actionTypes_00006)
BOOL aux930 #(8=actionTypes_00006)
BOOL aux931 #(8=actionTypes_00007)
BOOL aux932 #(8=actionTypes_00007)
BOOL aux933 #(8=actionTypes_00007)
BOOL aux934 #(8=actionTypes_00007)
BOOL aux935 #(8=actionTypes_00007)
BOOL aux936 #(8=actionTypes_00007)
BOOL aux937 #(8=actionTypes_00008)
BOOL aux938 #(8=actionTypes_00008)
BOOL aux939 #(8=actionTypes_00008)
BOOL aux940 #(8=actionTypes_00008)
BOOL aux941 #(8=actionTypes_00008)
BOOL aux942 #(8=actionTypes_00008)
BOOL aux943 #(8=actionTypes_00009)
BOOL aux944 #(8=actionTypes_00009)
BOOL aux945 #(8=actionTypes_00009)
BOOL aux946 #(8=actionTypes_00009)
BOOL aux947 #(8=actionTypes_00009)
BOOL aux948 #(8=actionTypes_00009)
BOOL aux949 #(8=actionTypes_00010)
BOOL aux950 #(8=actionTypes_00010)
BOOL aux951 #(8=actionTypes_00010)
BOOL aux952 #(8=actionTypes_00010)
BOOL aux953 #(8=actionTypes_00010)
BOOL aux954 #(8=actionTypes_00010)
BOOL aux955 #(8=actionTypes_00011)
BOOL aux956 #(8=actionTypes_00011)
BOOL aux957 #(8=actionTypes_00011)
BOOL aux958 #(8=actionTypes_00011)
BOOL aux959 #(8=actionTypes_00011)
BOOL aux960 #(8=actionTypes_00011)
BOOL aux961 #(8=actionTypes_00012)
BOOL aux962 #(8=actionTypes_00012)
BOOL aux963 #(8=actionTypes_00012)
BOOL aux964 #(8=actionTypes_00012)
BOOL aux965 #(8=actionTypes_00012)
BOOL aux966 #(8=actionTypes_00012)
BOOL aux967 #(8=actionTypes_00013)
BOOL aux968 #(8=actionTypes_00013)
BOOL aux969 #(8=actionTypes_00013)
BOOL aux970 #(8=actionTypes_00013)
BOOL aux971 #(8=actionTypes_00013)
BOOL aux972 #(8=actionTypes_00013)
BOOL aux973 #(8=actionTypes_00014)
BOOL aux974 #(8=actionTypes_00014)
BOOL aux975 #(8=actionTypes_00014)
BOOL aux976 #(8=actionTypes_00014)
BOOL aux977 #(8=actionTypes_00014)
BOOL aux978 #(8=actionTypes_00014)
BOOL aux979 #(8=actionTypes_00015)
BOOL aux980 #(8=actionTypes_00015)
BOOL aux981 #(8=actionTypes_00015)
BOOL aux982 #(8=actionTypes_00015)
BOOL aux983 #(8=actionTypes_00015)
BOOL aux984 #(8=actionTypes_00015)
**VARIABLES**
ALIAS output[4]=[8, 4, 70, 12]
**VARIABLES**
ALIAS input[12]=[8, 8, 5, 3, 6, 4, 4, 70, 70, 3, 12, 12]
**SEARCH**
PRINT[[statePlaces_00002_00002],[statePlaces_00002_00003],[statePlaces_00002_00004],[statePlaces_00002_00005],[statePlaces_00002_00006],[statePlaces_00002_00007],[statePlaces_00002_00008],[statePlaces_00002_00009],[statePlaces_00002_00010],[statePlaces_00002_00011],[statePlaces_00002_00012],[statePlaces_00002_00013],[statePlaces_00002_00014],[statePlaces_00002_00015],[statePlaces_00003_00002],[statePlaces_00003_00003],[statePlaces_00003_00004],[statePlaces_00003_00005],[statePlaces_00003_00006],[statePlaces_00003_00007],[statePlaces_00003_00008],[statePlaces_00003_00009],[statePlaces_00003_00010],[statePlaces_00003_00011],[statePlaces_00003_00012],[statePlaces_00003_00013],[statePlaces_00003_00014],[statePlaces_00003_00015],[actionTypes_00002],[actionTypes_00003],[actionTypes_00004],[actionTypes_00005],[actionTypes_00006],[actionTypes_00007],[actionTypes_00008],[actionTypes_00009],[actionTypes_00010],[actionTypes_00011],[actionTypes_00012],[actionTypes_00013],[actionTypes_00014],[actionTypes_00015],[actionFrom_00002],[actionFrom_00003],[actionFrom_00004],[actionFrom_00005],[actionFrom_00006],[actionFrom_00007],[actionFrom_00008],[actionFrom_00009],[actionFrom_00010],[actionFrom_00011],[actionFrom_00012],[actionFrom_00013],[actionFrom_00014],[actionFrom_00015],[actionTo_00002],[actionTo_00003],[actionTo_00004],[actionTo_00005],[actionTo_00006],[actionTo_00007],[actionTo_00008],[actionTo_00009],[actionTo_00010],[actionTo_00011],[actionTo_00012],[actionTo_00013],[actionTo_00014],[actionTo_00015],[pointers_00000_00002],[pointers_00000_00003],[pointers_00000_00004],[pointers_00000_00005],[pointers_00000_00006],[pointers_00000_00007],[pointers_00000_00008],[pointers_00000_00009],[pointers_00000_00010],[pointers_00000_00011],[pointers_00000_00012],[pointers_00000_00013],[pointers_00000_00014],[pointers_00000_00015],[pointers_00001_00002],[pointers_00001_00003],[pointers_00001_00004],[pointers_00001_00005],[pointers_00001_00006],[pointers_00001_00007],[pointers_00001_00008],[pointers_00001_00009],[pointers_00001_00010],[pointers_00001_00011],[pointers_00001_00012],[pointers_00001_00013],[pointers_00001_00014]]
**CONSTRAINTS**
reify(diseq(1,actionTypes_00002), aux164)
reify(diseq(1,actionTypes_00003), aux165)
reify(diseq(1,actionTypes_00004), aux166)
reify(diseq(1,actionTypes_00005), aux167)
reify(diseq(1,actionTypes_00006), aux168)
reify(diseq(1,actionTypes_00007), aux169)
reify(diseq(1,actionTypes_00008), aux170)
reify(diseq(1,actionTypes_00009), aux171)
reify(diseq(1,actionTypes_00010), aux172)
reify(diseq(1,actionTypes_00011), aux173)
reify(diseq(1,actionTypes_00012), aux174)
reify(diseq(1,actionTypes_00013), aux175)
reify(diseq(1,actionTypes_00014), aux176)
reify(diseq(1,actionTypes_00015), aux177)
reify(diseq(2,actionTypes_00002), aux178)
reify(diseq(2,actionTypes_00003), aux179)
reify(diseq(2,actionTypes_00004), aux180)
reify(diseq(2,actionTypes_00005), aux181)
reify(diseq(2,actionTypes_00006), aux182)
reify(diseq(2,actionTypes_00007), aux183)
reify(diseq(2,actionTypes_00008), aux184)
reify(diseq(2,actionTypes_00009), aux185)
reify(diseq(2,actionTypes_00010), aux186)
reify(diseq(2,actionTypes_00011), aux187)
reify(diseq(2,actionTypes_00012), aux188)
reify(diseq(2,actionTypes_00013), aux189)
reify(diseq(2,actionTypes_00014), aux190)
reify(diseq(2,actionTypes_00015), aux191)
reify(watched-or({watched-and({w-literal(actionTypes_00002,7),diseq(actionFrom_00002,3)}),watched-and({w-literal(actionTypes_00002,8),diseq(actionFrom_00002,3)}),w-literal(actionTypes_00002,1),w-literal(actionTypes_00002,2),w-literal(actionTypes_00002,3),w-literal(actionTypes_00002,5),w-literal(actionTypes_00002,6),watched-and({w-literal(actionTypes_00002,4),diseq(actionTo_00002,3)})}), aux192)
reify(watched-or({watched-and({w-literal(actionTypes_00003,7),diseq(actionFrom_00003,3)}),watched-and({w-literal(actionTypes_00003,8),diseq(actionFrom_00003,3)}),w-literal(actionTypes_00003,1),w-literal(actionTypes_00003,2),w-literal(actionTypes_00003,3),w-literal(actionTypes_00003,5),w-literal(actionTypes_00003,6),watched-and({w-literal(actionTypes_00003,4),diseq(actionTo_00003,3)})}), aux193)
reify(watched-or({watched-and({w-literal(actionTypes_00004,7),diseq(actionFrom_00004,3)}),watched-and({w-literal(actionTypes_00004,8),diseq(actionFrom_00004,3)}),w-literal(actionTypes_00004,1),w-literal(actionTypes_00004,2),w-literal(actionTypes_00004,3),w-literal(actionTypes_00004,5),w-literal(actionTypes_00004,6),watched-and({w-literal(actionTypes_00004,4),diseq(actionTo_00004,3)})}), aux194)
reify(watched-or({watched-and({w-literal(actionTypes_00005,7),diseq(actionFrom_00005,3)}),watched-and({w-literal(actionTypes_00005,8),diseq(actionFrom_00005,3)}),w-literal(actionTypes_00005,1),w-literal(actionTypes_00005,2),w-literal(actionTypes_00005,3),w-literal(actionTypes_00005,5),w-literal(actionTypes_00005,6),watched-and({w-literal(actionTypes_00005,4),diseq(actionTo_00005,3)})}), aux195)
reify(watched-or({watched-and({w-literal(actionTypes_00006,7),diseq(actionFrom_00006,3)}),watched-and({w-literal(actionTypes_00006,8),diseq(actionFrom_00006,3)}),w-literal(actionTypes_00006,1),w-literal(actionTypes_00006,2),w-literal(actionTypes_00006,3),w-literal(actionTypes_00006,5),w-literal(actionTypes_00006,6),watched-and({w-literal(actionTypes_00006,4),diseq(actionTo_00006,3)})}), aux196)
reify(watched-or({watched-and({w-literal(actionTypes_00007,7),diseq(actionFrom_00007,3)}),watched-and({w-literal(actionTypes_00007,8),diseq(actionFrom_00007,3)}),w-literal(actionTypes_00007,1),w-literal(actionTypes_00007,2),w-literal(actionTypes_00007,3),w-literal(actionTypes_00007,5),w-literal(actionTypes_00007,6),watched-and({w-literal(actionTypes_00007,4),diseq(actionTo_00007,3)})}), aux197)
reify(watched-or({watched-and({w-literal(actionTypes_00008,7),diseq(actionFrom_00008,3)}),watched-and({w-literal(actionTypes_00008,8),diseq(actionFrom_00008,3)}),w-literal(actionTypes_00008,1),w-literal(actionTypes_00008,2),w-literal(actionTypes_00008,3),w-literal(actionTypes_00008,5),w-literal(actionTypes_00008,6),watched-and({w-literal(actionTypes_00008,4),diseq(actionTo_00008,3)})}), aux198)
reify(watched-or({watched-and({w-literal(actionTypes_00009,7),diseq(actionFrom_00009,3)}),watched-and({w-literal(actionTypes_00009,8),diseq(actionFrom_00009,3)}),w-literal(actionTypes_00009,1),w-literal(actionTypes_00009,2),w-literal(actionTypes_00009,3),w-literal(actionTypes_00009,5),w-literal(actionTypes_00009,6),watched-and({w-literal(actionTypes_00009,4),diseq(actionTo_00009,3)})}), aux199)
reify(watched-or({watched-and({w-literal(actionTypes_00010,7),diseq(actionFrom_00010,3)}),watched-and({w-literal(actionTypes_00010,8),diseq(actionFrom_00010,3)}),w-literal(actionTypes_00010,1),w-literal(actionTypes_00010,2),w-literal(actionTypes_00010,3),w-literal(actionTypes_00010,5),w-literal(actionTypes_00010,6),watched-and({w-literal(actionTypes_00010,4),diseq(actionTo_00010,3)})}), aux200)
reify(watched-or({watched-and({w-literal(actionTypes_00011,7),diseq(actionFrom_00011,3)}),watched-and({w-literal(actionTypes_00011,8),diseq(actionFrom_00011,3)}),w-literal(actionTypes_00011,1),w-literal(actionTypes_00011,2),w-literal(actionTypes_00011,3),w-literal(actionTypes_00011,5),w-literal(actionTypes_00011,6),watched-and({w-literal(actionTypes_00011,4),diseq(actionTo_00011,3)})}), aux201)
reify(watched-or({watched-and({w-literal(actionTypes_00012,7),diseq(actionFrom_00012,3)}),watched-and({w-literal(actionTypes_00012,8),diseq(actionFrom_00012,3)}),w-literal(actionTypes_00012,1),w-literal(actionTypes_00012,2),w-literal(actionTypes_00012,3),w-literal(actionTypes_00012,5),w-literal(actionTypes_00012,6),watched-and({w-literal(actionTypes_00012,4),diseq(actionTo_00012,3)})}), aux202)
reify(watched-or({watched-and({w-literal(actionTypes_00013,7),diseq(actionFrom_00013,3)}),watched-and({w-literal(actionTypes_00013,8),diseq(actionFrom_00013,3)}),w-literal(actionTypes_00013,1),w-literal(actionTypes_00013,2),w-literal(actionTypes_00013,3),w-literal(actionTypes_00013,5),w-literal(actionTypes_00013,6),watched-and({w-literal(actionTypes_00013,4),diseq(actionTo_00013,3)})}), aux203)
reify(watched-or({watched-and({w-literal(actionTypes_00014,7),diseq(actionFrom_00014,3)}),watched-and({w-literal(actionTypes_00014,8),diseq(actionFrom_00014,3)}),w-literal(actionTypes_00014,1),w-literal(actionTypes_00014,2),w-literal(actionTypes_00014,3),w-literal(actionTypes_00014,5),w-literal(actionTypes_00014,6),watched-and({w-literal(actionTypes_00014,4),diseq(actionTo_00014,3)})}), aux204)
reify(watched-or({watched-and({w-literal(actionTypes_00015,7),diseq(actionFrom_00015,3)}),watched-and({w-literal(actionTypes_00015,8),diseq(actionFrom_00015,3)}),w-literal(actionTypes_00015,1),w-literal(actionTypes_00015,2),w-literal(actionTypes_00015,3),w-literal(actionTypes_00015,5),w-literal(actionTypes_00015,6),watched-and({w-literal(actionTypes_00015,4),diseq(actionTo_00015,3)})}), aux205)
reify(watched-or({w-literal(actionTypes_00002,2),w-literal(actionTypes_00002,4)}), aux206)
reify(watched-or({w-literal(actionTypes_00003,2),w-literal(actionTypes_00003,4)}), aux207)
reify(watched-or({w-literal(actionTypes_00004,2),w-literal(actionTypes_00004,4)}), aux208)
reify(watched-or({w-literal(actionTypes_00005,2),w-literal(actionTypes_00005,4)}), aux209)
reify(watched-or({w-literal(actionTypes_00006,2),w-literal(actionTypes_00006,4)}), aux210)
reify(watched-or({w-literal(actionTypes_00007,2),w-literal(actionTypes_00007,4)}), aux211)
reify(watched-or({w-literal(actionTypes_00008,2),w-literal(actionTypes_00008,4)}), aux212)
reify(watched-or({w-literal(actionTypes_00009,2),w-literal(actionTypes_00009,4)}), aux213)
reify(watched-or({w-literal(actionTypes_00010,2),w-literal(actionTypes_00010,4)}), aux214)
reify(watched-or({w-literal(actionTypes_00011,2),w-literal(actionTypes_00011,4)}), aux215)
reify(watched-or({w-literal(actionTypes_00012,2),w-literal(actionTypes_00012,4)}), aux216)
reify(watched-or({w-literal(actionTypes_00013,2),w-literal(actionTypes_00013,4)}), aux217)
reify(watched-or({w-literal(actionTypes_00014,2),w-literal(actionTypes_00014,4)}), aux218)
reify(watched-or({w-literal(actionTypes_00015,2),w-literal(actionTypes_00015,4)}), aux219)
reify(w-literal(actionTypes_00002,1), aux220)
reify(w-literal(actionTypes_00002,1), aux221)
reify(w-literal(actionTypes_00002,1), aux222)
reify(w-literal(actionTypes_00002,1), aux223)
reify(w-literal(actionTypes_00002,1), aux224)
reify(w-literal(actionTypes_00003,1), aux226)
reify(w-literal(actionTypes_00003,1), aux227)
reify(w-literal(actionTypes_00003,1), aux228)
reify(w-literal(actionTypes_00003,1), aux229)
reify(w-literal(actionTypes_00003,1), aux230)
reify(w-literal(actionTypes_00004,1), aux232)
reify(w-literal(actionTypes_00004,1), aux233)
reify(w-literal(actionTypes_00004,1), aux234)
reify(w-literal(actionTypes_00004,1), aux235)
reify(w-literal(actionTypes_00004,1), aux236)
reify(w-literal(actionTypes_00005,1), aux238)
reify(w-literal(actionTypes_00005,1), aux239)
reify(w-literal(actionTypes_00005,1), aux240)
reify(w-literal(actionTypes_00005,1), aux241)
reify(w-literal(actionTypes_00005,1), aux242)
reify(w-literal(actionTypes_00006,1), aux244)
reify(w-literal(actionTypes_00006,1), aux245)
reify(w-literal(actionTypes_00006,1), aux246)
reify(w-literal(actionTypes_00006,1), aux247)
reify(w-literal(actionTypes_00006,1), aux248)
reify(w-literal(actionTypes_00007,1), aux250)
reify(w-literal(actionTypes_00007,1), aux251)
reify(w-literal(actionTypes_00007,1), aux252)
reify(w-literal(actionTypes_00007,1), aux253)
reify(w-literal(actionTypes_00007,1), aux254)
reify(w-literal(actionTypes_00008,1), aux256)
reify(w-literal(actionTypes_00008,1), aux257)
reify(w-literal(actionTypes_00008,1), aux258)
reify(w-literal(actionTypes_00008,1), aux259)
reify(w-literal(actionTypes_00008,1), aux260)
reify(w-literal(actionTypes_00009,1), aux262)
reify(w-literal(actionTypes_00009,1), aux263)
reify(w-literal(actionTypes_00009,1), aux264)
reify(w-literal(actionTypes_00009,1), aux265)
reify(w-literal(actionTypes_00009,1), aux266)
reify(w-literal(actionTypes_00010,1), aux268)
reify(w-literal(actionTypes_00010,1), aux269)
reify(w-literal(actionTypes_00010,1), aux270)
reify(w-literal(actionTypes_00010,1), aux271)
reify(w-literal(actionTypes_00010,1), aux272)
reify(w-literal(actionTypes_00011,1), aux274)
reify(w-literal(actionTypes_00011,1), aux275)
reify(w-literal(actionTypes_00011,1), aux276)
reify(w-literal(actionTypes_00011,1), aux277)
reify(w-literal(actionTypes_00011,1), aux278)
reify(w-literal(actionTypes_00012,1), aux280)
reify(w-literal(actionTypes_00012,1), aux281)
reify(w-literal(actionTypes_00012,1), aux282)
reify(w-literal(actionTypes_00012,1), aux283)
reify(w-literal(actionTypes_00012,1), aux284)
reify(w-literal(actionTypes_00013,1), aux286)
reify(w-literal(actionTypes_00013,1), aux287)
reify(w-literal(actionTypes_00013,1), aux288)
reify(w-literal(actionTypes_00013,1), aux289)
reify(w-literal(actionTypes_00013,1), aux290)
reify(w-literal(actionTypes_00014,1), aux292)
reify(w-literal(actionTypes_00014,1), aux293)
reify(w-literal(actionTypes_00014,1), aux294)
reify(w-literal(actionTypes_00014,1), aux295)
reify(w-literal(actionTypes_00014,1), aux296)
reify(w-literal(actionTypes_00015,1), aux298)
reify(w-literal(actionTypes_00015,1), aux299)
reify(w-literal(actionTypes_00015,1), aux300)
reify(w-literal(actionTypes_00015,1), aux301)
reify(w-literal(actionTypes_00015,1), aux302)
reify(w-literal(actionTypes_00002,2), aux304)
reify(w-literal(actionTypes_00002,2), aux305)
reify(w-literal(actionTypes_00002,2), aux306)
reify(w-literal(actionTypes_00002,2), aux307)
reify(w-literal(actionTypes_00002,2), aux308)
reify(w-literal(actionTypes_00002,2), aux309)
reify(w-literal(actionTypes_00002,2), aux310)
reify(w-literal(actionTypes_00003,2), aux312)
reify(w-literal(actionTypes_00003,2), aux313)
reify(w-literal(actionTypes_00003,2), aux314)
reify(w-literal(actionTypes_00003,2), aux315)
reify(w-literal(actionTypes_00003,2), aux316)
reify(w-literal(actionTypes_00003,2), aux317)
reify(w-literal(actionTypes_00003,2), aux318)
reify(w-literal(actionTypes_00003,2), aux319)
reify(w-literal(actionTypes_00004,2), aux321)
reify(w-literal(actionTypes_00004,2), aux322)
reify(w-literal(actionTypes_00004,2), aux323)
reify(w-literal(actionTypes_00004,2), aux324)
reify(w-literal(actionTypes_00004,2), aux325)
reify(w-literal(actionTypes_00004,2), aux326)
reify(w-literal(actionTypes_00004,2), aux327)
reify(w-literal(actionTypes_00004,2), aux328)
reify(w-literal(actionTypes_00005,2), aux330)
reify(w-literal(actionTypes_00005,2), aux331)
reify(w-literal(actionTypes_00005,2), aux332)
reify(w-literal(actionTypes_00005,2), aux333)
reify(w-literal(actionTypes_00005,2), aux334)
reify(w-literal(actionTypes_00005,2), aux335)
reify(w-literal(actionTypes_00005,2), aux336)
reify(w-literal(actionTypes_00005,2), aux337)
reify(w-literal(actionTypes_00006,2), aux339)
reify(w-literal(actionTypes_00006,2), aux340)
reify(w-literal(actionTypes_00006,2), aux341)
reify(w-literal(actionTypes_00006,2), aux342)
reify(w-literal(actionTypes_00006,2), aux343)
reify(w-literal(actionTypes_00006,2), aux344)
reify(w-literal(actionTypes_00006,2), aux345)
reify(w-literal(actionTypes_00006,2), aux346)
reify(w-literal(actionTypes_00007,2), aux348)
reify(w-literal(actionTypes_00007,2), aux349)
reify(w-literal(actionTypes_00007,2), aux350)
reify(w-literal(actionTypes_00007,2), aux351)
reify(w-literal(actionTypes_00007,2), aux352)
reify(w-literal(actionTypes_00007,2), aux353)
reify(w-literal(actionTypes_00007,2), aux354)
reify(w-literal(actionTypes_00007,2), aux355)
reify(w-literal(actionTypes_00008,2), aux357)
reify(w-literal(actionTypes_00008,2), aux358)
reify(w-literal(actionTypes_00008,2), aux359)
reify(w-literal(actionTypes_00008,2), aux360)
reify(w-literal(actionTypes_00008,2), aux361)
reify(w-literal(actionTypes_00008,2), aux362)
reify(w-literal(actionTypes_00008,2), aux363)
reify(w-literal(actionTypes_00008,2), aux364)
reify(w-literal(actionTypes_00009,2), aux366)
reify(w-literal(actionTypes_00009,2), aux367)
reify(w-literal(actionTypes_00009,2), aux368)
reify(w-literal(actionTypes_00009,2), aux369)
reify(w-literal(actionTypes_00009,2), aux370)
reify(w-literal(actionTypes_00009,2), aux371)
reify(w-literal(actionTypes_00009,2), aux372)
reify(w-literal(actionTypes_00009,2), aux373)
reify(w-literal(actionTypes_00010,2), aux375)
reify(w-literal(actionTypes_00010,2), aux376)
reify(w-literal(actionTypes_00010,2), aux377)
reify(w-literal(actionTypes_00010,2), aux378)
reify(w-literal(actionTypes_00010,2), aux379)
reify(w-literal(actionTypes_00010,2), aux380)
reify(w-literal(actionTypes_00010,2), aux381)
reify(w-literal(actionTypes_00010,2), aux382)
reify(w-literal(actionTypes_00011,2), aux384)
reify(w-literal(actionTypes_00011,2), aux385)
reify(w-literal(actionTypes_00011,2), aux386)
reify(w-literal(actionTypes_00011,2), aux387)
reify(w-literal(actionTypes_00011,2), aux388)
reify(w-literal(actionTypes_00011,2), aux389)
reify(w-literal(actionTypes_00011,2), aux390)
reify(w-literal(actionTypes_00011,2), aux391)
reify(w-literal(actionTypes_00012,2), aux393)
reify(w-literal(actionTypes_00012,2), aux394)
reify(w-literal(actionTypes_00012,2), aux395)
reify(w-literal(actionTypes_00012,2), aux396)
reify(w-literal(actionTypes_00012,2), aux397)
reify(w-literal(actionTypes_00012,2), aux398)
reify(w-literal(actionTypes_00012,2), aux399)
reify(w-literal(actionTypes_00012,2), aux400)
reify(w-literal(actionTypes_00013,2), aux402)
reify(w-literal(actionTypes_00013,2), aux403)
reify(w-literal(actionTypes_00013,2), aux404)
reify(w-literal(actionTypes_00013,2), aux405)
reify(w-literal(actionTypes_00013,2), aux406)
reify(w-literal(actionTypes_00013,2), aux407)
reify(w-literal(actionTypes_00013,2), aux408)
reify(w-literal(actionTypes_00013,2), aux409)
reify(w-literal(actionTypes_00014,2), aux411)
reify(w-literal(actionTypes_00014,2), aux412)
reify(w-literal(actionTypes_00014,2), aux413)
reify(w-literal(actionTypes_00014,2), aux414)
reify(w-literal(actionTypes_00014,2), aux415)
reify(w-literal(actionTypes_00014,2), aux416)
reify(w-literal(actionTypes_00014,2), aux417)
reify(w-literal(actionTypes_00014,2), aux418)
reify(w-literal(actionTypes_00015,2), aux420)
reify(w-literal(actionTypes_00015,2), aux421)
reify(w-literal(actionTypes_00015,2), aux422)
reify(w-literal(actionTypes_00015,2), aux423)
reify(w-literal(actionTypes_00015,2), aux424)
reify(w-literal(actionTypes_00015,2), aux425)
reify(w-literal(actionTypes_00002,3), aux426)
reify(w-literal(actionTypes_00002,3), aux427)
reify(w-literal(actionTypes_00002,3), aux428)
reify(w-literal(actionTypes_00002,3), aux429)
reify(w-literal(actionTypes_00002,3), aux430)
reify(w-literal(actionTypes_00002,3), aux431)
reify(w-literal(actionTypes_00003,3), aux432)
reify(w-literal(actionTypes_00003,3), aux433)
reify(w-literal(actionTypes_00003,3), aux434)
reify(w-literal(actionTypes_00003,3), aux435)
reify(w-literal(actionTypes_00003,3), aux436)
reify(w-literal(actionTypes_00003,3), aux437)
reify(w-literal(actionTypes_00004,3), aux438)
reify(w-literal(actionTypes_00004,3), aux439)
reify(w-literal(actionTypes_00004,3), aux440)
reify(w-literal(actionTypes_00004,3), aux441)
reify(w-literal(actionTypes_00004,3), aux442)
reify(w-literal(actionTypes_00004,3), aux443)
reify(w-literal(actionTypes_00005,3), aux444)
reify(w-literal(actionTypes_00005,3), aux445)
reify(w-literal(actionTypes_00005,3), aux446)
reify(w-literal(actionTypes_00005,3), aux447)
reify(w-literal(actionTypes_00005,3), aux448)
reify(w-literal(actionTypes_00005,3), aux449)
reify(w-literal(actionTypes_00006,3), aux450)
reify(w-literal(actionTypes_00006,3), aux451)
reify(w-literal(actionTypes_00006,3), aux452)
reify(w-literal(actionTypes_00006,3), aux453)
reify(w-literal(actionTypes_00006,3), aux454)
reify(w-literal(actionTypes_00006,3), aux455)
reify(w-literal(actionTypes_00007,3), aux456)
reify(w-literal(actionTypes_00007,3), aux457)
reify(w-literal(actionTypes_00007,3), aux458)
reify(w-literal(actionTypes_00007,3), aux459)
reify(w-literal(actionTypes_00007,3), aux460)
reify(w-literal(actionTypes_00007,3), aux461)
reify(w-literal(actionTypes_00008,3), aux462)
reify(w-literal(actionTypes_00008,3), aux463)
reify(w-literal(actionTypes_00008,3), aux464)
reify(w-literal(actionTypes_00008,3), aux465)
reify(w-literal(actionTypes_00008,3), aux466)
reify(w-literal(actionTypes_00008,3), aux467)
reify(w-literal(actionTypes_00009,3), aux468)
reify(w-literal(actionTypes_00009,3), aux469)
reify(w-literal(actionTypes_00009,3), aux470)
reify(w-literal(actionTypes_00009,3), aux471)
reify(w-literal(actionTypes_00009,3), aux472)
reify(w-literal(actionTypes_00009,3), aux473)
reify(w-literal(actionTypes_00010,3), aux474)
reify(w-literal(actionTypes_00010,3), aux475)
reify(w-literal(actionTypes_00010,3), aux476)
reify(w-literal(actionTypes_00010,3), aux477)
reify(w-literal(actionTypes_00010,3), aux478)
reify(w-literal(actionTypes_00010,3), aux479)
reify(w-literal(actionTypes_00011,3), aux480)
reify(w-literal(actionTypes_00011,3), aux481)
reify(w-literal(actionTypes_00011,3), aux482)
reify(w-literal(actionTypes_00011,3), aux483)
reify(w-literal(actionTypes_00011,3), aux484)
reify(w-literal(actionTypes_00011,3), aux485)
reify(w-literal(actionTypes_00012,3), aux486)
reify(w-literal(actionTypes_00012,3), aux487)
reify(w-literal(actionTypes_00012,3), aux488)
reify(w-literal(actionTypes_00012,3), aux489)
reify(w-literal(actionTypes_00012,3), aux490)
reify(w-literal(actionTypes_00012,3), aux491)
reify(w-literal(actionTypes_00013,3), aux492)
reify(w-literal(actionTypes_00013,3), aux493)
reify(w-literal(actionTypes_00013,3), aux494)
reify(w-literal(actionTypes_00013,3), aux495)
reify(w-literal(actionTypes_00013,3), aux496)
reify(w-literal(actionTypes_00013,3), aux497)
reify(w-literal(actionTypes_00014,3), aux498)
reify(w-literal(actionTypes_00014,3), aux499)
reify(w-literal(actionTypes_00014,3), aux500)
reify(w-literal(actionTypes_00014,3), aux501)
reify(w-literal(actionTypes_00014,3), aux502)
reify(w-literal(actionTypes_00014,3), aux503)
reify(w-literal(actionTypes_00015,3), aux504)
reify(w-literal(actionTypes_00015,3), aux505)
reify(w-literal(actionTypes_00015,3), aux506)
reify(w-literal(actionTypes_00015,3), aux507)
reify(w-literal(actionTypes_00015,3), aux508)
reify(w-literal(actionTypes_00015,3), aux509)
reify(w-literal(actionTypes_00002,4), aux510)
reify(w-literal(actionTypes_00002,4), aux511)
reify(w-literal(actionTypes_00002,4), aux512)
reify(w-literal(actionTypes_00002,4), aux513)
reify(w-literal(actionTypes_00002,4), aux514)
reify(w-literal(actionTypes_00003,4), aux515)
reify(w-literal(actionTypes_00003,4), aux516)
reify(w-literal(actionTypes_00003,4), aux517)
reify(w-literal(actionTypes_00003,4), aux518)
reify(w-literal(actionTypes_00003,4), aux519)
reify(w-literal(actionTypes_00003,4), aux520)
reify(w-literal(actionTypes_00004,4), aux521)
reify(w-literal(actionTypes_00004,4), aux522)
reify(w-literal(actionTypes_00004,4), aux523)
reify(w-literal(actionTypes_00004,4), aux524)
reify(w-literal(actionTypes_00004,4), aux525)
reify(w-literal(actionTypes_00004,4), aux526)
reify(w-literal(actionTypes_00005,4), aux527)
reify(w-literal(actionTypes_00005,4), aux528)
reify(w-literal(actionTypes_00005,4), aux529)
reify(w-literal(actionTypes_00005,4), aux530)
reify(w-literal(actionTypes_00005,4), aux531)
reify(w-literal(actionTypes_00005,4), aux532)
reify(w-literal(actionTypes_00006,4), aux533)
reify(w-literal(actionTypes_00006,4), aux534)
reify(w-literal(actionTypes_00006,4), aux535)
reify(w-literal(actionTypes_00006,4), aux536)
reify(w-literal(actionTypes_00006,4), aux537)
reify(w-literal(actionTypes_00006,4), aux538)
reify(w-literal(actionTypes_00007,4), aux539)
reify(w-literal(actionTypes_00007,4), aux540)
reify(w-literal(actionTypes_00007,4), aux541)
reify(w-literal(actionTypes_00007,4), aux542)
reify(w-literal(actionTypes_00007,4), aux543)
reify(w-literal(actionTypes_00007,4), aux544)
reify(w-literal(actionTypes_00008,4), aux545)
reify(w-literal(actionTypes_00008,4), aux546)
reify(w-literal(actionTypes_00008,4), aux547)
reify(w-literal(actionTypes_00008,4), aux548)
reify(w-literal(actionTypes_00008,4), aux549)
reify(w-literal(actionTypes_00008,4), aux550)
reify(w-literal(actionTypes_00009,4), aux551)
reify(w-literal(actionTypes_00009,4), aux552)
reify(w-literal(actionTypes_00009,4), aux553)
reify(w-literal(actionTypes_00009,4), aux554)
reify(w-literal(actionTypes_00009,4), aux555)
reify(w-literal(actionTypes_00009,4), aux556)
reify(w-literal(actionTypes_00010,4), aux557)
reify(w-literal(actionTypes_00010,4), aux558)
reify(w-literal(actionTypes_00010,4), aux559)
reify(w-literal(actionTypes_00010,4), aux560)
reify(w-literal(actionTypes_00010,4), aux561)
reify(w-literal(actionTypes_00010,4), aux562)
reify(w-literal(actionTypes_00011,4), aux563)
reify(w-literal(actionTypes_00011,4), aux564)
reify(w-literal(actionTypes_00011,4), aux565)
reify(w-literal(actionTypes_00011,4), aux566)
reify(w-literal(actionTypes_00011,4), aux567)
reify(w-literal(actionTypes_00011,4), aux568)
reify(w-literal(actionTypes_00012,4), aux569)
reify(w-literal(actionTypes_00012,4), aux570)
reify(w-literal(actionTypes_00012,4), aux571)
reify(w-literal(actionTypes_00012,4), aux572)
reify(w-literal(actionTypes_00012,4), aux573)
reify(w-literal(actionTypes_00012,4), aux574)
reify(w-literal(actionTypes_00013,4), aux575)
reify(w-literal(actionTypes_00013,4), aux576)
reify(w-literal(actionTypes_00013,4), aux577)
reify(w-literal(actionTypes_00013,4), aux578)
reify(w-literal(actionTypes_00013,4), aux579)
reify(w-literal(actionTypes_00013,4), aux580)
reify(w-literal(actionTypes_00014,4), aux581)
reify(w-literal(actionTypes_00014,4), aux582)
reify(w-literal(actionTypes_00014,4), aux583)
reify(w-literal(actionTypes_00014,4), aux584)
reify(w-literal(actionTypes_00014,4), aux585)
reify(w-literal(actionTypes_00014,4), aux586)
reify(w-literal(actionTypes_00015,4), aux587)
reify(w-literal(actionTypes_00015,4), aux588)
reify(w-literal(actionTypes_00015,4), aux589)
reify(w-literal(actionTypes_00015,4), aux590)
reify(w-literal(actionTypes_00015,4), aux591)
reify(w-literal(actionTypes_00015,4), aux592)
reify(w-literal(actionTypes_00002,5), aux593)
reify(w-literal(actionTypes_00002,5), aux594)
reify(w-literal(actionTypes_00002,5), aux595)
reify(w-literal(actionTypes_00002,5), aux596)
reify(w-literal(actionTypes_00002,5), aux597)
reify(w-literal(actionTypes_00002,5), aux598)
reify(w-literal(actionTypes_00002,5), aux599)
reify(w-literal(actionTypes_00002,5), aux600)
reify(w-literal(actionTypes_00003,5), aux601)
reify(w-literal(actionTypes_00003,5), aux602)
reify(w-literal(actionTypes_00003,5), aux603)
reify(w-literal(actionTypes_00003,5), aux604)
reify(w-literal(actionTypes_00003,5), aux605)
reify(w-literal(actionTypes_00003,5), aux606)
reify(w-literal(actionTypes_00003,5), aux607)
reify(w-literal(actionTypes_00003,5), aux608)
reify(w-literal(actionTypes_00004,5), aux609)
reify(w-literal(actionTypes_00004,5), aux610)
reify(w-literal(actionTypes_00004,5), aux611)
reify(w-literal(actionTypes_00004,5), aux612)
reify(w-literal(actionTypes_00004,5), aux613)
reify(w-literal(actionTypes_00004,5), aux614)
reify(w-literal(actionTypes_00004,5), aux615)
reify(w-literal(actionTypes_00004,5), aux616)
reify(w-literal(actionTypes_00005,5), aux617)
reify(w-literal(actionTypes_00005,5), aux618)
reify(w-literal(actionTypes_00005,5), aux619)
reify(w-literal(actionTypes_00005,5), aux620)
reify(w-literal(actionTypes_00005,5), aux621)
reify(w-literal(actionTypes_00005,5), aux622)
reify(w-literal(actionTypes_00005,5), aux623)
reify(w-literal(actionTypes_00005,5), aux624)
reify(w-literal(actionTypes_00006,5), aux625)
reify(w-literal(actionTypes_00006,5), aux626)
reify(w-literal(actionTypes_00006,5), aux627)
reify(w-literal(actionTypes_00006,5), aux628)
reify(w-literal(actionTypes_00006,5), aux629)
reify(w-literal(actionTypes_00006,5), aux630)
reify(w-literal(actionTypes_00006,5), aux631)
reify(w-literal(actionTypes_00006,5), aux632)
reify(w-literal(actionTypes_00007,5), aux633)
reify(w-literal(actionTypes_00007,5), aux634)
reify(w-literal(actionTypes_00007,5), aux635)
reify(w-literal(actionTypes_00007,5), aux636)
reify(w-literal(actionTypes_00007,5), aux637)
reify(w-literal(actionTypes_00007,5), aux638)
reify(w-literal(actionTypes_00007,5), aux639)
reify(w-literal(actionTypes_00007,5), aux640)
reify(w-literal(actionTypes_00008,5), aux641)
reify(w-literal(actionTypes_00008,5), aux642)
reify(w-literal(actionTypes_00008,5), aux643)
reify(w-literal(actionTypes_00008,5), aux644)
reify(w-literal(actionTypes_00008,5), aux645)
reify(w-literal(actionTypes_00008,5), aux646)
reify(w-literal(actionTypes_00008,5), aux647)
reify(w-literal(actionTypes_00008,5), aux648)
reify(w-literal(actionTypes_00009,5), aux649)
reify(w-literal(actionTypes_00009,5), aux650)
reify(w-literal(actionTypes_00009,5), aux651)
reify(w-literal(actionTypes_00009,5), aux652)
reify(w-literal(actionTypes_00009,5), aux653)
reify(w-literal(actionTypes_00009,5), aux654)
reify(w-literal(actionTypes_00009,5), aux655)
reify(w-literal(actionTypes_00009,5), aux656)
reify(w-literal(actionTypes_00010,5), aux657)
reify(w-literal(actionTypes_00010,5), aux658)
reify(w-literal(actionTypes_00010,5), aux659)
reify(w-literal(actionTypes_00010,5), aux660)
reify(w-literal(actionTypes_00010,5), aux661)
reify(w-literal(actionTypes_00010,5), aux662)
reify(w-literal(actionTypes_00010,5), aux663)
reify(w-literal(actionTypes_00010,5), aux664)
reify(w-literal(actionTypes_00011,5), aux665)
reify(w-literal(actionTypes_00011,5), aux666)
reify(w-literal(actionTypes_00011,5), aux667)
reify(w-literal(actionTypes_00011,5), aux668)
reify(w-literal(actionTypes_00011,5), aux669)
reify(w-literal(actionTypes_00011,5), aux670)
reify(w-literal(actionTypes_00011,5), aux671)
reify(w-literal(actionTypes_00011,5), aux672)
reify(w-literal(actionTypes_00012,5), aux673)
reify(w-literal(actionTypes_00012,5), aux674)
reify(w-literal(actionTypes_00012,5), aux675)
reify(w-literal(actionTypes_00012,5), aux676)
reify(w-literal(actionTypes_00012,5), aux677)
reify(w-literal(actionTypes_00012,5), aux678)
reify(w-literal(actionTypes_00012,5), aux679)
reify(w-literal(actionTypes_00012,5), aux680)
reify(w-literal(actionTypes_00013,5), aux681)
reify(w-literal(actionTypes_00013,5), aux682)
reify(w-literal(actionTypes_00013,5), aux683)
reify(w-literal(actionTypes_00013,5), aux684)
reify(w-literal(actionTypes_00013,5), aux685)
reify(w-literal(actionTypes_00013,5), aux686)
reify(w-literal(actionTypes_00013,5), aux687)
reify(w-literal(actionTypes_00013,5), aux688)
reify(w-literal(actionTypes_00014,5), aux689)
reify(w-literal(actionTypes_00014,5), aux690)
reify(w-literal(actionTypes_00014,5), aux691)
reify(w-literal(actionTypes_00014,5), aux692)
reify(w-literal(actionTypes_00014,5), aux693)
reify(w-literal(actionTypes_00014,5), aux694)
reify(w-literal(actionTypes_00014,5), aux695)
reify(w-literal(actionTypes_00014,5), aux696)
reify(w-literal(actionTypes_00015,5), aux697)
reify(w-literal(actionTypes_00015,5), aux698)
reify(w-literal(actionTypes_00015,5), aux699)
reify(w-literal(actionTypes_00015,5), aux700)
reify(w-literal(actionTypes_00015,5), aux701)
reify(w-literal(actionTypes_00015,5), aux702)
reify(w-literal(actionTypes_00015,5), aux703)
reify(w-literal(actionTypes_00015,5), aux704)
reify(w-literal(actionTypes_00002,6), aux705)
reify(w-literal(actionTypes_00002,6), aux706)
reify(w-literal(actionTypes_00002,6), aux707)
reify(w-literal(actionTypes_00002,6), aux708)
reify(w-literal(actionTypes_00002,6), aux709)
reify(w-literal(actionTypes_00002,6), aux710)
reify(w-literal(actionTypes_00002,6), aux711)
reify(w-literal(actionTypes_00003,6), aux712)
reify(w-literal(actionTypes_00003,6), aux713)
reify(w-literal(actionTypes_00003,6), aux714)
reify(w-literal(actionTypes_00003,6), aux715)
reify(w-literal(actionTypes_00003,6), aux716)
reify(w-literal(actionTypes_00003,6), aux717)
reify(w-literal(actionTypes_00003,6), aux718)
reify(w-literal(actionTypes_00004,6), aux719)
reify(w-literal(actionTypes_00004,6), aux720)
reify(w-literal(actionTypes_00004,6), aux721)
reify(w-literal(actionTypes_00004,6), aux722)
reify(w-literal(actionTypes_00004,6), aux723)
reify(w-literal(actionTypes_00004,6), aux724)
reify(w-literal(actionTypes_00004,6), aux725)
reify(w-literal(actionTypes_00005,6), aux726)
reify(w-literal(actionTypes_00005,6), aux727)
reify(w-literal(actionTypes_00005,6), aux728)
reify(w-literal(actionTypes_00005,6), aux729)
reify(w-literal(actionTypes_00005,6), aux730)
reify(w-literal(actionTypes_00005,6), aux731)
reify(w-literal(actionTypes_00005,6), aux732)
reify(w-literal(actionTypes_00006,6), aux733)
reify(w-literal(actionTypes_00006,6), aux734)
reify(w-literal(actionTypes_00006,6), aux735)
reify(w-literal(actionTypes_00006,6), aux736)
reify(w-literal(actionTypes_00006,6), aux737)
reify(w-literal(actionTypes_00006,6), aux738)
reify(w-literal(actionTypes_00006,6), aux739)
reify(w-literal(actionTypes_00007,6), aux740)
reify(w-literal(actionTypes_00007,6), aux741)
reify(w-literal(actionTypes_00007,6), aux742)
reify(w-literal(actionTypes_00007,6), aux743)
reify(w-literal(actionTypes_00007,6), aux744)
reify(w-literal(actionTypes_00007,6), aux745)
reify(w-literal(actionTypes_00007,6), aux746)
reify(w-literal(actionTypes_00008,6), aux747)
reify(w-literal(actionTypes_00008,6), aux748)
reify(w-literal(actionTypes_00008,6), aux749)
reify(w-literal(actionTypes_00008,6), aux750)
reify(w-literal(actionTypes_00008,6), aux751)
reify(w-literal(actionTypes_00008,6), aux752)
reify(w-literal(actionTypes_00008,6), aux753)
reify(w-literal(actionTypes_00009,6), aux754)
reify(w-literal(actionTypes_00009,6), aux755)
reify(w-literal(actionTypes_00009,6), aux756)
reify(w-literal(actionTypes_00009,6), aux757)
reify(w-literal(actionTypes_00009,6), aux758)
reify(w-literal(actionTypes_00009,6), aux759)
reify(w-literal(actionTypes_00009,6), aux760)
reify(w-literal(actionTypes_00010,6), aux761)
reify(w-literal(actionTypes_00010,6), aux762)
reify(w-literal(actionTypes_00010,6), aux763)
reify(w-literal(actionTypes_00010,6), aux764)
reify(w-literal(actionTypes_00010,6), aux765)
reify(w-literal(actionTypes_00010,6), aux766)
reify(w-literal(actionTypes_00010,6), aux767)
reify(w-literal(actionTypes_00011,6), aux768)
reify(w-literal(actionTypes_00011,6), aux769)
reify(w-literal(actionTypes_00011,6), aux770)
reify(w-literal(actionTypes_00011,6), aux771)
reify(w-literal(actionTypes_00011,6), aux772)
reify(w-literal(actionTypes_00011,6), aux773)
reify(w-literal(actionTypes_00011,6), aux774)
reify(w-literal(actionTypes_00012,6), aux775)
reify(w-literal(actionTypes_00012,6), aux776)
reify(w-literal(actionTypes_00012,6), aux777)
reify(w-literal(actionTypes_00012,6), aux778)
reify(w-literal(actionTypes_00012,6), aux779)
reify(w-literal(actionTypes_00012,6), aux780)
reify(w-literal(actionTypes_00012,6), aux781)
reify(w-literal(actionTypes_00013,6), aux782)
reify(w-literal(actionTypes_00013,6), aux783)
reify(w-literal(actionTypes_00013,6), aux784)
reify(w-literal(actionTypes_00013,6), aux785)
reify(w-literal(actionTypes_00013,6), aux786)
reify(w-literal(actionTypes_00013,6), aux787)
reify(w-literal(actionTypes_00013,6), aux788)
reify(w-literal(actionTypes_00014,6), aux789)
reify(w-literal(actionTypes_00014,6), aux790)
reify(w-literal(actionTypes_00014,6), aux791)
reify(w-literal(actionTypes_00014,6), aux792)
reify(w-literal(actionTypes_00014,6), aux793)
reify(w-literal(actionTypes_00014,6), aux794)
reify(w-literal(actionTypes_00014,6), aux795)
reify(w-literal(actionTypes_00015,6), aux796)
reify(w-literal(actionTypes_00015,6), aux797)
reify(w-literal(actionTypes_00015,6), aux798)
reify(w-literal(actionTypes_00015,6), aux799)
reify(w-literal(actionTypes_00015,6), aux800)
reify(w-literal(actionTypes_00015,6), aux801)
reify(w-literal(actionTypes_00015,6), aux802)
reify(w-literal(actionTypes_00002,7), aux803)
reify(w-literal(actionTypes_00002,7), aux804)
reify(w-literal(actionTypes_00002,7), aux805)
reify(w-literal(actionTypes_00002,7), aux806)
reify(w-literal(actionTypes_00002,7), aux807)
reify(w-literal(actionTypes_00002,7), aux808)
reify(w-literal(actionTypes_00002,7), aux809)
reify(w-literal(actionTypes_00003,7), aux810)
reify(w-literal(actionTypes_00003,7), aux811)
reify(w-literal(actionTypes_00003,7), aux812)
reify(w-literal(actionTypes_00003,7), aux813)
reify(w-literal(actionTypes_00003,7), aux814)
reify(w-literal(actionTypes_00003,7), aux815)
reify(w-literal(actionTypes_00003,7), aux816)
reify(w-literal(actionTypes_00004,7), aux817)
reify(w-literal(actionTypes_00004,7), aux818)
reify(w-literal(actionTypes_00004,7), aux819)
reify(w-literal(actionTypes_00004,7), aux820)
reify(w-literal(actionTypes_00004,7), aux821)
reify(w-literal(actionTypes_00004,7), aux822)
reify(w-literal(actionTypes_00004,7), aux823)
reify(w-literal(actionTypes_00005,7), aux824)
reify(w-literal(actionTypes_00005,7), aux825)
reify(w-literal(actionTypes_00005,7), aux826)
reify(w-literal(actionTypes_00005,7), aux827)
reify(w-literal(actionTypes_00005,7), aux828)
reify(w-literal(actionTypes_00005,7), aux829)
reify(w-literal(actionTypes_00005,7), aux830)
reify(w-literal(actionTypes_00006,7), aux831)
reify(w-literal(actionTypes_00006,7), aux832)
reify(w-literal(actionTypes_00006,7), aux833)
reify(w-literal(actionTypes_00006,7), aux834)
reify(w-literal(actionTypes_00006,7), aux835)
reify(w-literal(actionTypes_00006,7), aux836)
reify(w-literal(actionTypes_00006,7), aux837)
reify(w-literal(actionTypes_00007,7), aux838)
reify(w-literal(actionTypes_00007,7), aux839)
reify(w-literal(actionTypes_00007,7), aux840)
reify(w-literal(actionTypes_00007,7), aux841)
reify(w-literal(actionTypes_00007,7), aux842)
reify(w-literal(actionTypes_00007,7), aux843)
reify(w-literal(actionTypes_00007,7), aux844)
reify(w-literal(actionTypes_00008,7), aux845)
reify(w-literal(actionTypes_00008,7), aux846)
reify(w-literal(actionTypes_00008,7), aux847)
reify(w-literal(actionTypes_00008,7), aux848)
reify(w-literal(actionTypes_00008,7), aux849)
reify(w-literal(actionTypes_00008,7), aux850)
reify(w-literal(actionTypes_00008,7), aux851)
reify(w-literal(actionTypes_00009,7), aux852)
reify(w-literal(actionTypes_00009,7), aux853)
reify(w-literal(actionTypes_00009,7), aux854)
reify(w-literal(actionTypes_00009,7), aux855)
reify(w-literal(actionTypes_00009,7), aux856)
reify(w-literal(actionTypes_00009,7), aux857)
reify(w-literal(actionTypes_00009,7), aux858)
reify(w-literal(actionTypes_00010,7), aux859)
reify(w-literal(actionTypes_00010,7), aux860)
reify(w-literal(actionTypes_00010,7), aux861)
reify(w-literal(actionTypes_00010,7), aux862)
reify(w-literal(actionTypes_00010,7), aux863)
reify(w-literal(actionTypes_00010,7), aux864)
reify(w-literal(actionTypes_00010,7), aux865)
reify(w-literal(actionTypes_00011,7), aux866)
reify(w-literal(actionTypes_00011,7), aux867)
reify(w-literal(actionTypes_00011,7), aux868)
reify(w-literal(actionTypes_00011,7), aux869)
reify(w-literal(actionTypes_00011,7), aux870)
reify(w-literal(actionTypes_00011,7), aux871)
reify(w-literal(actionTypes_00011,7), aux872)
reify(w-literal(actionTypes_00012,7), aux873)
reify(w-literal(actionTypes_00012,7), aux874)
reify(w-literal(actionTypes_00012,7), aux875)
reify(w-literal(actionTypes_00012,7), aux876)
reify(w-literal(actionTypes_00012,7), aux877)
reify(w-literal(actionTypes_00012,7), aux878)
reify(w-literal(actionTypes_00012,7), aux879)
reify(w-literal(actionTypes_00013,7), aux880)
reify(w-literal(actionTypes_00013,7), aux881)
reify(w-literal(actionTypes_00013,7), aux882)
reify(w-literal(actionTypes_00013,7), aux883)
reify(w-literal(actionTypes_00013,7), aux884)
reify(w-literal(actionTypes_00013,7), aux885)
reify(w-literal(actionTypes_00013,7), aux886)
reify(w-literal(actionTypes_00014,7), aux887)
reify(w-literal(actionTypes_00014,7), aux888)
reify(w-literal(actionTypes_00014,7), aux889)
reify(w-literal(actionTypes_00014,7), aux890)
reify(w-literal(actionTypes_00014,7), aux891)
reify(w-literal(actionTypes_00014,7), aux892)
reify(w-literal(actionTypes_00014,7), aux893)
reify(w-literal(actionTypes_00015,7), aux894)
reify(w-literal(actionTypes_00015,7), aux895)
reify(w-literal(actionTypes_00015,7), aux896)
reify(w-literal(actionTypes_00015,7), aux897)
reify(w-literal(actionTypes_00015,7), aux898)
reify(w-literal(actionTypes_00015,7), aux899)
reify(w-literal(actionTypes_00015,7), aux900)
reify(w-literal(actionTypes_00002,8), aux901)
reify(w-literal(actionTypes_00002,8), aux902)
reify(w-literal(actionTypes_00002,8), aux903)
reify(w-literal(actionTypes_00002,8), aux904)
reify(w-literal(actionTypes_00002,8), aux905)
reify(w-literal(actionTypes_00002,8), aux906)
reify(w-literal(actionTypes_00003,8), aux907)
reify(w-literal(actionTypes_00003,8), aux908)
reify(w-literal(actionTypes_00003,8), aux909)
reify(w-literal(actionTypes_00003,8), aux910)
reify(w-literal(actionTypes_00003,8), aux911)
reify(w-literal(actionTypes_00003,8), aux912)
reify(w-literal(actionTypes_00004,8), aux913)
reify(w-literal(actionTypes_00004,8), aux914)
reify(w-literal(actionTypes_00004,8), aux915)
reify(w-literal(actionTypes_00004,8), aux916)
reify(w-literal(actionTypes_00004,8), aux917)
reify(w-literal(actionTypes_00004,8), aux918)
reify(w-literal(actionTypes_00005,8), aux919)
reify(w-literal(actionTypes_00005,8), aux920)
reify(w-literal(actionTypes_00005,8), aux921)
reify(w-literal(actionTypes_00005,8), aux922)
reify(w-literal(actionTypes_00005,8), aux923)
reify(w-literal(actionTypes_00005,8), aux924)
reify(w-literal(actionTypes_00006,8), aux925)
reify(w-literal(actionTypes_00006,8), aux926)
reify(w-literal(actionTypes_00006,8), aux927)
reify(w-literal(actionTypes_00006,8), aux928)
reify(w-literal(actionTypes_00006,8), aux929)
reify(w-literal(actionTypes_00006,8), aux930)
reify(w-literal(actionTypes_00007,8), aux931)
reify(w-literal(actionTypes_00007,8), aux932)
reify(w-literal(actionTypes_00007,8), aux933)
reify(w-literal(actionTypes_00007,8), aux934)
reify(w-literal(actionTypes_00007,8), aux935)
reify(w-literal(actionTypes_00007,8), aux936)
reify(w-literal(actionTypes_00008,8), aux937)
reify(w-literal(actionTypes_00008,8), aux938)
reify(w-literal(actionTypes_00008,8), aux939)
reify(w-literal(actionTypes_00008,8), aux940)
reify(w-literal(actionTypes_00008,8), aux941)
reify(w-literal(actionTypes_00008,8), aux942)
reify(w-literal(actionTypes_00009,8), aux943)
reify(w-literal(actionTypes_00009,8), aux944)
reify(w-literal(actionTypes_00009,8), aux945)
reify(w-literal(actionTypes_00009,8), aux946)
reify(w-literal(actionTypes_00009,8), aux947)
reify(w-literal(actionTypes_00009,8), aux948)
reify(w-literal(actionTypes_00010,8), aux949)
reify(w-literal(actionTypes_00010,8), aux950)
reify(w-literal(actionTypes_00010,8), aux951)
reify(w-literal(actionTypes_00010,8), aux952)
reify(w-literal(actionTypes_00010,8), aux953)
reify(w-literal(actionTypes_00010,8), aux954)
reify(w-literal(actionTypes_00011,8), aux955)
reify(w-literal(actionTypes_00011,8), aux956)
reify(w-literal(actionTypes_00011,8), aux957)
reify(w-literal(actionTypes_00011,8), aux958)
reify(w-literal(actionTypes_00011,8), aux959)
reify(w-literal(actionTypes_00011,8), aux960)
reify(w-literal(actionTypes_00012,8), aux961)
reify(w-literal(actionTypes_00012,8), aux962)
reify(w-literal(actionTypes_00012,8), aux963)
reify(w-literal(actionTypes_00012,8), aux964)
reify(w-literal(actionTypes_00012,8), aux965)
reify(w-literal(actionTypes_00012,8), aux966)
reify(w-literal(actionTypes_00013,8), aux967)
reify(w-literal(actionTypes_00013,8), aux968)
reify(w-literal(actionTypes_00013,8), aux969)
reify(w-literal(actionTypes_00013,8), aux970)
reify(w-literal(actionTypes_00013,8), aux971)
reify(w-literal(actionTypes_00013,8), aux972)
reify(w-literal(actionTypes_00014,8), aux973)
reify(w-literal(actionTypes_00014,8), aux974)
reify(w-literal(actionTypes_00014,8), aux975)
reify(w-literal(actionTypes_00014,8), aux976)
reify(w-literal(actionTypes_00014,8), aux977)
reify(w-literal(actionTypes_00014,8), aux978)
reify(w-literal(actionTypes_00015,8), aux979)
reify(w-literal(actionTypes_00015,8), aux980)
reify(w-literal(actionTypes_00015,8), aux981)
reify(w-literal(actionTypes_00015,8), aux982)
reify(w-literal(actionTypes_00015,8), aux983)
reify(w-literal(actionTypes_00015,8), aux984)
reify(watchelement_undefzero([statePlaces_00002_00014, statePlaces_00003_00014], aux126, aux80), aux52)
reify(watchelement_undefzero([statePlaces_00002_00013, statePlaces_00003_00013], aux128, aux86), aux53)
reify(watchelement_undefzero([statePlaces_00002_00015, statePlaces_00003_00015], aux124, aux71), aux54)
reify(watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux130, aux67), aux55)
reify(watchelement_undefzero([statePlaces_00002_00012, statePlaces_00003_00012], aux127, aux83), aux56)
reify(watchelement_undefzero([statePlaces_00002_00011, statePlaces_00003_00011], aux129, aux90), aux57)
reify(watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux150, aux92), aux58)
reify(watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux152, aux74), aux59)
reify(watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux148, aux70), aux60)
reify(watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux147, aux78), aux61)
reify(watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux149, aux85), aux62)
reify(watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux155, aux81), aux63)
reify(watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux153, aux79), aux64)
reify(watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux154, aux75), aux65)
watchelement_undefzero([statePlaces_00002_00012, statePlaces_00003_00012], aux120, aux66)
watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux125, aux67)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux160, aux68)
watchelement_undefzero([8, -1], aux119, aux69)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux109, aux70)
watchelement_undefzero([statePlaces_00002_00015, statePlaces_00003_00015], aux163, aux71)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux135, aux72)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux162, aux73)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux144, aux74)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux160, aux75)
watchelement_undefzero([statePlaces_00002_00011, statePlaces_00003_00011], aux110, aux76)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux123, aux77)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux135, aux78)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux162, aux79)
watchelement_undefzero([statePlaces_00002_00014, statePlaces_00003_00014], aux161, aux80)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux119, aux81)
watchelement_undefzero([statePlaces_00002_00014, statePlaces_00003_00014], aux163, aux82)
watchelement_undefzero([statePlaces_00002_00012, statePlaces_00003_00012], aux110, aux83)
watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux138, aux84)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux123, aux85)
watchelement_undefzero([statePlaces_00002_00013, statePlaces_00003_00013], aux120, aux86)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux125, aux87)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux156, aux88)
watchelement_undefzero([statePlaces_00002_00013, statePlaces_00003_00013], aux161, aux89)
watchelement_undefzero([statePlaces_00002_00011, statePlaces_00003_00011], aux138, aux90)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux109, aux91)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux156, aux92)
watchelement_undefzero([8, -1], aux155, aux93)
watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux129, aux94)
watchelement_undefzero([statePlaces_00002_00011, statePlaces_00003_00011], aux127, aux95)
watchelement_undefzero([statePlaces_00002_00012, statePlaces_00003_00012], aux128, aux96)
watchelement_undefzero([statePlaces_00002_00013, statePlaces_00003_00013], aux126, aux97)
watchelement_undefzero([statePlaces_00002_00014, statePlaces_00003_00014], aux124, aux98)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux148, aux99)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux130, aux100)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux153, aux101)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux154, aux102)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux147, aux103)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux149, aux104)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux150, aux105)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux152, aux106)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux144, aux107)
reify(w-inintervalset(actionFrom_00007,[2,3]), aux108)
reify(w-inintervalset(actionTo_00008,[2,3]), aux111)
reify(w-inintervalset(actionTo_00007,[2,3]), aux112)
reify(w-inintervalset(actionTo_00009,[2,3]), aux113)
reify(w-inintervalset(actionTo_00003,[2,3]), aux114)
reify(w-inintervalset(actionTo_00002,[2,3]), aux115)
reify(w-inintervalset(actionTo_00006,[2,3]), aux116)
reify(w-inintervalset(actionTo_00005,[2,3]), aux117)
reify(w-inintervalset(actionTo_00004,[2,3]), aux118)
reify(w-inintervalset(actionFrom_00002,[2,3]), aux121)
reify(w-inintervalset(actionFrom_00014,[2,3]), aux122)
reify(w-inintervalset(actionFrom_00011,[2,3]), aux131)
reify(w-inintervalset(actionFrom_00010,[2,3]), aux132)
reify(w-inintervalset(actionFrom_00003,[2,3]), aux133)
reify(w-inintervalset(actionTo_00014,[2,3]), aux134)
reify(w-inintervalset(actionFrom_00015,[2,3]), aux136)
reify(w-inintervalset(actionTo_00013,[2,3]), aux137)
reify(w-inintervalset(actionTo_00015,[2,3]), aux139)
reify(w-inintervalset(actionFrom_00008,[2,3]), aux140)
reify(w-inintervalset(actionTo_00012,[2,3]), aux141)
reify(w-inintervalset(actionTo_00011,[2,3]), aux142)
reify(w-inintervalset(actionTo_00010,[2,3]), aux143)
reify(w-inintervalset(actionFrom_00005,[2,3]), aux145)
reify(w-inintervalset(actionFrom_00012,[2,3]), aux146)
reify(w-inintervalset(actionFrom_00004,[2,3]), aux151)
reify(w-inintervalset(actionFrom_00009,[2,3]), aux157)
reify(w-inintervalset(actionFrom_00006,[2,3]), aux158)
reify(w-inintervalset(actionFrom_00013,[2,3]), aux159)
watched-or({lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([pointers_00000_00014, pointers_00001_00014],[pointers_00000_00015, 4])})
watched-or({ineq(statePlaces_00002_00002, 8, -1),lexless([1, 0],[pointers_00000_00002, pointers_00001_00002]),lexless([8, -1],[statePlaces_00002_00002, statePlaces_00003_00002])})
watched-or({ineq(statePlaces_00002_00003, 8, -1),lexless([1, 0],[pointers_00000_00003, pointers_00001_00003]),lexless([8, -1],[statePlaces_00002_00003, statePlaces_00003_00003])})
watched-or({ineq(statePlaces_00002_00004, 8, -1),lexless([1, 0],[pointers_00000_00004, pointers_00001_00004]),lexless([8, -1],[statePlaces_00002_00004, statePlaces_00003_00004])})
watched-or({ineq(statePlaces_00002_00005, 8, -1),lexless([1, 0],[pointers_00000_00005, pointers_00001_00005]),lexless([8, -1],[statePlaces_00002_00005, statePlaces_00003_00005])})
watched-or({ineq(statePlaces_00002_00006, 8, -1),lexless([1, 0],[pointers_00000_00006, pointers_00001_00006]),lexless([8, -1],[statePlaces_00002_00006, statePlaces_00003_00006])})
watched-or({ineq(statePlaces_00002_00007, 8, -1),lexless([1, 0],[pointers_00000_00007, pointers_00001_00007]),lexless([8, -1],[statePlaces_00002_00007, statePlaces_00003_00007])})
watched-or({ineq(statePlaces_00002_00008, 8, -1),lexless([1, 0],[pointers_00000_00008, pointers_00001_00008]),lexless([8, -1],[statePlaces_00002_00008, statePlaces_00003_00008])})
watched-or({ineq(statePlaces_00002_00009, 8, -1),lexless([1, 0],[pointers_00000_00009, pointers_00001_00009]),lexless([8, -1],[statePlaces_00002_00009, statePlaces_00003_00009])})
watched-or({ineq(statePlaces_00002_00010, 8, -1),lexless([1, 0],[pointers_00000_00010, pointers_00001_00010]),lexless([8, -1],[statePlaces_00002_00010, statePlaces_00003_00010])})
watched-or({ineq(statePlaces_00002_00011, 8, -1),lexless([1, 0],[pointers_00000_00011, pointers_00001_00011]),lexless([8, -1],[statePlaces_00002_00011, statePlaces_00003_00011])})
watched-or({ineq(statePlaces_00002_00012, 8, -1),lexless([1, 0],[pointers_00000_00012, pointers_00001_00012]),lexless([8, -1],[statePlaces_00002_00012, statePlaces_00003_00012])})
watched-or({ineq(statePlaces_00002_00013, 8, -1),lexless([1, 0],[pointers_00000_00013, pointers_00001_00013]),lexless([8, -1],[statePlaces_00002_00013, statePlaces_00003_00013])})
watched-or({ineq(statePlaces_00002_00014, 8, -1),lexless([1, 0],[pointers_00000_00014, pointers_00001_00014]),lexless([8, -1],[statePlaces_00002_00014, statePlaces_00003_00014])})
watched-or({ineq(statePlaces_00002_00015, 8, -1),lexless([1, 0],[pointers_00000_00015, 4]),lexless([8, -1],[statePlaces_00002_00015, statePlaces_00003_00015])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00003, pointers_00001_00003])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00004, pointers_00001_00004])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00014, pointers_00001_00014])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00015, 4])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00004, pointers_00001_00004])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00014, pointers_00001_00014])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00015, 4])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00014, pointers_00001_00014])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00015, 4])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00014, pointers_00001_00014])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00015, 4])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00014, pointers_00001_00014])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00015, 4])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00014, pointers_00001_00014])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00015, 4])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00014, pointers_00001_00014])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00015, 4])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00014, pointers_00001_00014])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00015, 4])})
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00014, pointers_00001_00014])})
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00015, 4])})
watched-or({lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([pointers_00000_00011, pointers_00001_00011],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([pointers_00000_00011, pointers_00001_00011],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([pointers_00000_00011, pointers_00001_00011],[pointers_00000_00014, pointers_00001_00014])})
watched-or({lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([pointers_00000_00011, pointers_00001_00011],[pointers_00000_00015, 4])})
watched-or({lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([pointers_00000_00012, pointers_00001_00012],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([pointers_00000_00012, pointers_00001_00012],[pointers_00000_00014, pointers_00001_00014])})
watched-or({lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([pointers_00000_00012, pointers_00001_00012],[pointers_00000_00015, 4])})
watched-or({lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([pointers_00000_00013, pointers_00001_00013],[pointers_00000_00014, pointers_00001_00014])})
watched-or({lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([pointers_00000_00013, pointers_00001_00013],[pointers_00000_00015, 4])})
reifyimply(w-literal(pointers_00000_00002,1), aux164)
reifyimply(gaceq(pointers_00000_00002,pointers_00000_00003), aux165)
reifyimply(gaceq(pointers_00000_00003,pointers_00000_00004), aux166)
reifyimply(gaceq(pointers_00000_00004,pointers_00000_00005), aux167)
reifyimply(gaceq(pointers_00000_00005,pointers_00000_00006), aux168)
reifyimply(gaceq(pointers_00000_00006,pointers_00000_00007), aux169)
reifyimply(gaceq(pointers_00000_00007,pointers_00000_00008), aux170)
reifyimply(gaceq(pointers_00000_00008,pointers_00000_00009), aux171)
reifyimply(gaceq(pointers_00000_00009,pointers_00000_00010), aux172)
reifyimply(gaceq(pointers_00000_00010,pointers_00000_00011), aux173)
reifyimply(gaceq(pointers_00000_00011,pointers_00000_00012), aux174)
reifyimply(gaceq(pointers_00000_00012,pointers_00000_00013), aux175)
reifyimply(gaceq(pointers_00000_00013,pointers_00000_00014), aux176)
reifyimply(gaceq(pointers_00000_00014,pointers_00000_00015), aux177)
reifyimply(w-literal(pointers_00001_00002,0), aux178)
reifyimply(gaceq(pointers_00001_00002,pointers_00001_00003), aux179)
reifyimply(gaceq(pointers_00001_00003,pointers_00001_00004), aux180)
reifyimply(gaceq(pointers_00001_00004,pointers_00001_00005), aux181)
reifyimply(gaceq(pointers_00001_00005,pointers_00001_00006), aux182)
reifyimply(gaceq(pointers_00001_00006,pointers_00001_00007), aux183)
reifyimply(gaceq(pointers_00001_00007,pointers_00001_00008), aux184)
reifyimply(gaceq(pointers_00001_00008,pointers_00001_00009), aux185)
reifyimply(gaceq(pointers_00001_00009,pointers_00001_00010), aux186)
reifyimply(gaceq(pointers_00001_00010,pointers_00001_00011), aux187)
reifyimply(gaceq(pointers_00001_00011,pointers_00001_00012), aux188)
reifyimply(gaceq(pointers_00001_00012,pointers_00001_00013), aux189)
reifyimply(gaceq(pointers_00001_00013,pointers_00001_00014), aux190)
reifyimply(w-literal(pointers_00001_00014,4), aux191)
reifyimply(w-literal(statePlaces_00003_00002,-1), aux192)
reifyimply(gaceq(statePlaces_00003_00002,statePlaces_00003_00003), aux193)
reifyimply(gaceq(statePlaces_00003_00003,statePlaces_00003_00004), aux194)
reifyimply(gaceq(statePlaces_00003_00004,statePlaces_00003_00005), aux195)
reifyimply(gaceq(statePlaces_00003_00005,statePlaces_00003_00006), aux196)
reifyimply(gaceq(statePlaces_00003_00006,statePlaces_00003_00007), aux197)
reifyimply(gaceq(statePlaces_00003_00007,statePlaces_00003_00008), aux198)
reifyimply(gaceq(statePlaces_00003_00008,statePlaces_00003_00009), aux199)
reifyimply(gaceq(statePlaces_00003_00009,statePlaces_00003_00010), aux200)
reifyimply(gaceq(statePlaces_00003_00010,statePlaces_00003_00011), aux201)
reifyimply(gaceq(statePlaces_00003_00011,statePlaces_00003_00012), aux202)
reifyimply(gaceq(statePlaces_00003_00012,statePlaces_00003_00013), aux203)
reifyimply(gaceq(statePlaces_00003_00013,statePlaces_00003_00014), aux204)
reifyimply(gaceq(statePlaces_00003_00014,statePlaces_00003_00015), aux205)
reifyimply(w-literal(statePlaces_00002_00002,8), aux206)
reifyimply(gaceq(statePlaces_00002_00002,statePlaces_00002_00003), aux207)
reifyimply(gaceq(statePlaces_00002_00003,statePlaces_00002_00004), aux208)
reifyimply(gaceq(statePlaces_00002_00004,statePlaces_00002_00005), aux209)
reifyimply(gaceq(statePlaces_00002_00005,statePlaces_00002_00006), aux210)
reifyimply(gaceq(statePlaces_00002_00006,statePlaces_00002_00007), aux211)
reifyimply(gaceq(statePlaces_00002_00007,statePlaces_00002_00008), aux212)
reifyimply(gaceq(statePlaces_00002_00008,statePlaces_00002_00009), aux213)
reifyimply(gaceq(statePlaces_00002_00009,statePlaces_00002_00010), aux214)
reifyimply(gaceq(statePlaces_00002_00010,statePlaces_00002_00011), aux215)
reifyimply(gaceq(statePlaces_00002_00011,statePlaces_00002_00012), aux216)
reifyimply(gaceq(statePlaces_00002_00012,statePlaces_00002_00013), aux217)
reifyimply(gaceq(statePlaces_00002_00013,statePlaces_00002_00014), aux218)
reifyimply(gaceq(statePlaces_00002_00014,statePlaces_00002_00015), aux219)
reifyimply(w-literal(pointers_00000_00002,2), aux220)
reifyimply(w-literal(actionFrom_00002,0), aux221)
reifyimply(w-literal(actionTo_00002,2), aux222)
reifyimply(w-inintervalset(pointers_00000_00002,[1,12]), aux223)
reifyimply(watchelement_undefzero([8, 8, 5, 3, 6, 4, 4, 70, 70, 3, 12, 12], aux225, statePlaces_00002_00002), aux224)
reifyimply(w-literal(actionFrom_00003,0), aux227)
reifyimply(w-literal(actionTo_00003,2), aux228)
reifyimply(w-inintervalset(pointers_00000_00003,[1,12]), aux229)
reifyimply(watchelement_undefzero([8, 8, 5, 3, 6, 4, 4, 70, 70, 3, 12, 12], aux231, statePlaces_00002_00003), aux230)
reifyimply(w-literal(actionFrom_00004,0), aux233)
reifyimply(w-literal(actionTo_00004,2), aux234)
reifyimply(w-inintervalset(pointers_00000_00004,[1,12]), aux235)
reifyimply(watchelement_undefzero([8, 8, 5, 3, 6, 4, 4, 70, 70, 3, 12, 12], aux237, statePlaces_00002_00004), aux236)
reifyimply(w-literal(actionFrom_00005,0), aux239)
reifyimply(w-literal(actionTo_00005,2), aux240)
reifyimply(w-inintervalset(pointers_00000_00005,[1,12]), aux241)
reifyimply(watchelement_undefzero([8, 8, 5, 3, 6, 4, 4, 70, 70, 3, 12, 12], aux243, statePlaces_00002_00005), aux242)
reifyimply(w-literal(actionFrom_00006,0), aux245)
reifyimply(w-literal(actionTo_00006,2), aux246)
reifyimply(w-inintervalset(pointers_00000_00006,[1,12]), aux247)
reifyimply(watchelement_undefzero([8, 8, 5, 3, 6, 4, 4, 70, 70, 3, 12, 12], aux249, statePlaces_00002_00006), aux248)
reifyimply(w-literal(actionFrom_00007,0), aux251)
reifyimply(w-literal(actionTo_00007,2), aux252)
reifyimply(w-inintervalset(pointers_00000_00007,[1,12]), aux253)
reifyimply(watchelement_undefzero([8, 8, 5, 3, 6, 4, 4, 70, 70, 3, 12, 12], aux255, statePlaces_00002_00007), aux254)
reifyimply(w-literal(actionFrom_00008,0), aux257)
reifyimply(w-literal(actionTo_00008,2), aux258)
reifyimply(w-inintervalset(pointers_00000_00008,[1,12]), aux259)
reifyimply(watchelement_undefzero([8, 8, 5, 3, 6, 4, 4, 70, 70, 3, 12, 12], aux261, statePlaces_00002_00008), aux260)
reifyimply(w-literal(actionFrom_00009,0), aux263)
reifyimply(w-literal(actionTo_00009,2), aux264)
reifyimply(w-inintervalset(pointers_00000_00009,[1,12]), aux265)
reifyimply(watchelement_undefzero([8, 8, 5, 3, 6, 4, 4, 70, 70, 3, 12, 12], aux267, statePlaces_00002_00009), aux266)
reifyimply(w-literal(actionFrom_00010,0), aux269)
reifyimply(w-literal(actionTo_00010,2), aux270)
reifyimply(w-inintervalset(pointers_00000_00010,[1,12]), aux271)
reifyimply(watchelement_undefzero([8, 8, 5, 3, 6, 4, 4, 70, 70, 3, 12, 12], aux273, statePlaces_00002_00010), aux272)
reifyimply(w-literal(actionFrom_00011,0), aux275)
reifyimply(w-literal(actionTo_00011,2), aux276)
reifyimply(w-inintervalset(pointers_00000_00011,[1,12]), aux277)
reifyimply(watchelement_undefzero([8, 8, 5, 3, 6, 4, 4, 70, 70, 3, 12, 12], aux279, statePlaces_00002_00011), aux278)
reifyimply(w-literal(actionFrom_00012,0), aux281)
reifyimply(w-literal(actionTo_00012,2), aux282)
reifyimply(w-inintervalset(pointers_00000_00012,[1,12]), aux283)
reifyimply(watchelement_undefzero([8, 8, 5, 3, 6, 4, 4, 70, 70, 3, 12, 12], aux285, statePlaces_00002_00012), aux284)
reifyimply(w-literal(actionFrom_00013,0), aux287)
reifyimply(w-literal(actionTo_00013,2), aux288)
reifyimply(w-inintervalset(pointers_00000_00013,[1,12]), aux289)
reifyimply(watchelement_undefzero([8, 8, 5, 3, 6, 4, 4, 70, 70, 3, 12, 12], aux291, statePlaces_00002_00013), aux290)
reifyimply(w-literal(actionFrom_00014,0), aux293)
reifyimply(w-literal(actionTo_00014,2), aux294)
reifyimply(w-inintervalset(pointers_00000_00014,[1,12]), aux295)
reifyimply(watchelement_undefzero([8, 8, 5, 3, 6, 4, 4, 70, 70, 3, 12, 12], aux297, statePlaces_00002_00014), aux296)
reifyimply(w-literal(actionFrom_00015,0), aux299)
reifyimply(w-literal(actionTo_00015,2), aux300)
reifyimply(w-inintervalset(pointers_00000_00015,[1,12]), aux301)
reifyimply(watchelement_undefzero([8, 8, 5, 3, 6, 4, 4, 70, 70, 3, 12, 12], aux303, statePlaces_00002_00015), aux302)
reifyimply(diseq(statePlaces_00002_00002,-1), aux304)
reifyimply(ineq(pointers_00001_00002, 4, 0), aux305)
reifyimply(w-literal(pointers_00001_00002,1), aux306)
reifyimply(w-literal(actionFrom_00002,2), aux307)
reifyimply(w-literal(actionTo_00002,1), aux308)
reifyimply(w-inintervalset(pointers_00001_00002,[1,4]), aux309)
reifyimply(watchelement_undefzero([8, 4, 70, 12], aux311, 8), aux310)
reifyimply(diseq(statePlaces_00002_00003,-1), aux312)
reifyimply(diseq(statePlaces_00002_00002,-1), aux313)
reifyimply(ineq(pointers_00001_00003, 4, 0), aux314)
reifyimply(w-literal(actionFrom_00003,2), aux316)
reifyimply(w-literal(actionTo_00003,1), aux317)
reifyimply(w-inintervalset(pointers_00001_00003,[1,4]), aux318)
reifyimply(watchelement_undefzero([8, 4, 70, 12], aux320, statePlaces_00002_00002), aux319)
reifyimply(diseq(statePlaces_00002_00004,-1), aux321)
reifyimply(diseq(statePlaces_00002_00003,-1), aux322)
reifyimply(ineq(pointers_00001_00004, 4, 0), aux323)
reifyimply(w-literal(actionFrom_00004,2), aux325)
reifyimply(w-literal(actionTo_00004,1), aux326)
reifyimply(w-inintervalset(pointers_00001_00004,[1,4]), aux327)
reifyimply(watchelement_undefzero([8, 4, 70, 12], aux329, statePlaces_00002_00003), aux328)
reifyimply(diseq(statePlaces_00002_00005,-1), aux330)
reifyimply(diseq(statePlaces_00002_00004,-1), aux331)
reifyimply(ineq(pointers_00001_00005, 4, 0), aux332)
reifyimply(w-literal(actionFrom_00005,2), aux334)
reifyimply(w-literal(actionTo_00005,1), aux335)
reifyimply(w-inintervalset(pointers_00001_00005,[1,4]), aux336)
reifyimply(watchelement_undefzero([8, 4, 70, 12], aux338, statePlaces_00002_00004), aux337)
reifyimply(diseq(statePlaces_00002_00006,-1), aux339)
reifyimply(diseq(statePlaces_00002_00005,-1), aux340)
reifyimply(ineq(pointers_00001_00006, 4, 0), aux341)
reifyimply(w-literal(actionFrom_00006,2), aux343)
reifyimply(w-literal(actionTo_00006,1), aux344)
reifyimply(w-inintervalset(pointers_00001_00006,[1,4]), aux345)
reifyimply(watchelement_undefzero([8, 4, 70, 12], aux347, statePlaces_00002_00005), aux346)
reifyimply(diseq(statePlaces_00002_00007,-1), aux348)
reifyimply(diseq(statePlaces_00002_00006,-1), aux349)
reifyimply(ineq(pointers_00001_00007, 4, 0), aux350)
reifyimply(w-literal(actionFrom_00007,2), aux352)
reifyimply(w-literal(actionTo_00007,1), aux353)
reifyimply(w-inintervalset(pointers_00001_00007,[1,4]), aux354)
reifyimply(watchelement_undefzero([8, 4, 70, 12], aux356, statePlaces_00002_00006), aux355)
reifyimply(diseq(statePlaces_00002_00008,-1), aux357)
reifyimply(diseq(statePlaces_00002_00007,-1), aux358)
reifyimply(ineq(pointers_00001_00008, 4, 0), aux359)
reifyimply(w-literal(actionFrom_00008,2), aux361)
reifyimply(w-literal(actionTo_00008,1), aux362)
reifyimply(w-inintervalset(pointers_00001_00008,[1,4]), aux363)
reifyimply(watchelement_undefzero([8, 4, 70, 12], aux365, statePlaces_00002_00007), aux364)
reifyimply(diseq(statePlaces_00002_00009,-1), aux366)
reifyimply(diseq(statePlaces_00002_00008,-1), aux367)
reifyimply(ineq(pointers_00001_00009, 4, 0), aux368)
reifyimply(w-literal(actionFrom_00009,2), aux370)
reifyimply(w-literal(actionTo_00009,1), aux371)
reifyimply(w-inintervalset(pointers_00001_00009,[1,4]), aux372)
reifyimply(watchelement_undefzero([8, 4, 70, 12], aux374, statePlaces_00002_00008), aux373)
reifyimply(diseq(statePlaces_00002_00010,-1), aux375)
reifyimply(diseq(statePlaces_00002_00009,-1), aux376)
reifyimply(ineq(pointers_00001_00010, 4, 0), aux377)
reifyimply(w-literal(actionFrom_00010,2), aux379)
reifyimply(w-literal(actionTo_00010,1), aux380)
reifyimply(w-inintervalset(pointers_00001_00010,[1,4]), aux381)
reifyimply(watchelement_undefzero([8, 4, 70, 12], aux383, statePlaces_00002_00009), aux382)
reifyimply(diseq(statePlaces_00002_00011,-1), aux384)
reifyimply(diseq(statePlaces_00002_00010,-1), aux385)
reifyimply(ineq(pointers_00001_00011, 4, 0), aux386)
reifyimply(w-literal(actionFrom_00011,2), aux388)
reifyimply(w-literal(actionTo_00011,1), aux389)
reifyimply(w-inintervalset(pointers_00001_00011,[1,4]), aux390)
reifyimply(watchelement_undefzero([8, 4, 70, 12], aux392, statePlaces_00002_00010), aux391)
reifyimply(diseq(statePlaces_00002_00012,-1), aux393)
reifyimply(diseq(statePlaces_00002_00011,-1), aux394)
reifyimply(ineq(pointers_00001_00012, 4, 0), aux395)
reifyimply(w-literal(actionFrom_00012,2), aux397)
reifyimply(w-literal(actionTo_00012,1), aux398)
reifyimply(w-inintervalset(pointers_00001_00012,[1,4]), aux399)
reifyimply(watchelement_undefzero([8, 4, 70, 12], aux401, statePlaces_00002_00011), aux400)
reifyimply(diseq(statePlaces_00002_00013,-1), aux402)
reifyimply(diseq(statePlaces_00002_00012,-1), aux403)
reifyimply(ineq(pointers_00001_00013, 4, 0), aux404)
reifyimply(w-literal(actionFrom_00013,2), aux406)
reifyimply(w-literal(actionTo_00013,1), aux407)
reifyimply(w-inintervalset(pointers_00001_00013,[1,4]), aux408)
reifyimply(watchelement_undefzero([8, 4, 70, 12], aux410, statePlaces_00002_00012), aux409)
reifyimply(diseq(statePlaces_00002_00014,-1), aux411)
reifyimply(diseq(statePlaces_00002_00013,-1), aux412)
reifyimply(ineq(pointers_00001_00014, 4, 0), aux413)
reifyimply(w-literal(actionFrom_00014,2), aux415)
reifyimply(w-literal(actionTo_00014,1), aux416)
reifyimply(w-inintervalset(pointers_00001_00014,[1,4]), aux417)
reifyimply(watchelement_undefzero([8, 4, 70, 12], aux419, statePlaces_00002_00013), aux418)
reifyimply(diseq(statePlaces_00002_00015,-1), aux420)
reifyimply(diseq(statePlaces_00002_00014,-1), aux421)
reifyimply(w-literal(pointers_00001_00014,3), aux422)
reifyimply(w-literal(actionFrom_00015,2), aux423)
reifyimply(w-literal(actionTo_00015,1), aux424)
reifyimply(w-literal(statePlaces_00002_00014,12), aux425)
ineq(aux426, aux63, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux427)
reifyimply(diseq(aux81,-1), aux428)
reifyimply(w-literal(actionTo_00002,2), aux429)
ineq(aux430, aux115, 0)
ineq(aux431, aux121, 0)
ineq(aux432, aux65, 0)
reifyimply(ineq(3, actionFrom_00003, 0), aux433)
reifyimply(diseq(aux75,-1), aux434)
reifyimply(w-literal(actionTo_00003,2), aux435)
ineq(aux436, aux114, 0)
ineq(aux437, aux133, 0)
ineq(aux438, aux64, 0)
reifyimply(ineq(3, actionFrom_00004, 0), aux439)
reifyimply(diseq(aux79,-1), aux440)
reifyimply(w-literal(actionTo_00004,2), aux441)
ineq(aux442, aux118, 0)
ineq(aux443, aux151, 0)
ineq(aux444, aux59, 0)
reifyimply(ineq(3, actionFrom_00005, 0), aux445)
reifyimply(diseq(aux74,-1), aux446)
reifyimply(w-literal(actionTo_00005,2), aux447)
ineq(aux448, aux117, 0)
ineq(aux449, aux145, 0)
ineq(aux450, aux58, 0)
reifyimply(ineq(3, actionFrom_00006, 0), aux451)
reifyimply(diseq(aux92,-1), aux452)
reifyimply(w-literal(actionTo_00006,2), aux453)
ineq(aux454, aux116, 0)
ineq(aux455, aux158, 0)
ineq(aux456, aux62, 0)
reifyimply(ineq(3, actionFrom_00007, 0), aux457)
reifyimply(diseq(aux85,-1), aux458)
reifyimply(w-literal(actionTo_00007,2), aux459)
ineq(aux460, aux112, 0)
ineq(aux461, aux108, 0)
ineq(aux462, aux61, 0)
reifyimply(ineq(3, actionFrom_00008, 0), aux463)
reifyimply(diseq(aux78,-1), aux464)
reifyimply(w-literal(actionTo_00008,2), aux465)
ineq(aux466, aux111, 0)
ineq(aux467, aux140, 0)
ineq(aux468, aux60, 0)
reifyimply(ineq(3, actionFrom_00009, 0), aux469)
reifyimply(diseq(aux70,-1), aux470)
reifyimply(w-literal(actionTo_00009,2), aux471)
ineq(aux472, aux113, 0)
ineq(aux473, aux157, 0)
ineq(aux474, aux55, 0)
reifyimply(ineq(3, actionFrom_00010, 0), aux475)
reifyimply(diseq(aux67,-1), aux476)
reifyimply(w-literal(actionTo_00010,2), aux477)
ineq(aux478, aux143, 0)
ineq(aux479, aux132, 0)
ineq(aux480, aux57, 0)
reifyimply(ineq(3, actionFrom_00011, 0), aux481)
reifyimply(diseq(aux90,-1), aux482)
reifyimply(w-literal(actionTo_00011,2), aux483)
ineq(aux484, aux142, 0)
ineq(aux485, aux131, 0)
ineq(aux486, aux56, 0)
reifyimply(ineq(3, actionFrom_00012, 0), aux487)
reifyimply(diseq(aux83,-1), aux488)
reifyimply(w-literal(actionTo_00012,2), aux489)
ineq(aux490, aux141, 0)
ineq(aux491, aux146, 0)
ineq(aux492, aux53, 0)
reifyimply(ineq(3, actionFrom_00013, 0), aux493)
reifyimply(diseq(aux86,-1), aux494)
reifyimply(w-literal(actionTo_00013,2), aux495)
ineq(aux496, aux137, 0)
ineq(aux497, aux159, 0)
ineq(aux498, aux52, 0)
reifyimply(ineq(3, actionFrom_00014, 0), aux499)
reifyimply(diseq(aux80,-1), aux500)
reifyimply(w-literal(actionTo_00014,2), aux501)
ineq(aux502, aux134, 0)
ineq(aux503, aux122, 0)
ineq(aux504, aux54, 0)
reifyimply(ineq(3, actionFrom_00015, 0), aux505)
reifyimply(diseq(aux71,-1), aux506)
reifyimply(w-literal(actionTo_00015,2), aux507)
ineq(aux508, aux139, 0)
ineq(aux509, aux136, 0)
reifyimply(ineq(3, actionTo_00002, 0), aux510)
reifyimply(w-literal(actionFrom_00002,2), aux511)
ineq(aux512, aux121, 0)
ineq(aux513, aux115, 0)
ineq(aux514, aux63, 0)
reifyimply(ineq(3, actionTo_00003, 0), aux515)
reifyimply(w-literal(actionFrom_00003,2), aux516)
reifyimply(diseq(statePlaces_00002_00002,-1), aux517)
ineq(aux518, aux133, 0)
ineq(aux519, aux114, 0)
ineq(aux520, aux65, 0)
reifyimply(ineq(3, actionTo_00004, 0), aux521)
reifyimply(w-literal(actionFrom_00004,2), aux522)
reifyimply(diseq(statePlaces_00002_00003,-1), aux523)
ineq(aux524, aux151, 0)
ineq(aux525, aux118, 0)
ineq(aux526, aux64, 0)
reifyimply(ineq(3, actionTo_00005, 0), aux527)
reifyimply(w-literal(actionFrom_00005,2), aux528)
reifyimply(diseq(statePlaces_00002_00004,-1), aux529)
ineq(aux530, aux145, 0)
ineq(aux531, aux117, 0)
ineq(aux532, aux59, 0)
reifyimply(ineq(3, actionTo_00006, 0), aux533)
reifyimply(w-literal(actionFrom_00006,2), aux534)
reifyimply(diseq(statePlaces_00002_00005,-1), aux535)
ineq(aux536, aux158, 0)
ineq(aux537, aux116, 0)
ineq(aux538, aux58, 0)
reifyimply(ineq(3, actionTo_00007, 0), aux539)
reifyimply(w-literal(actionFrom_00007,2), aux540)
reifyimply(diseq(statePlaces_00002_00006,-1), aux541)
ineq(aux542, aux108, 0)
ineq(aux543, aux112, 0)
ineq(aux544, aux62, 0)
reifyimply(ineq(3, actionTo_00008, 0), aux545)
reifyimply(w-literal(actionFrom_00008,2), aux546)
reifyimply(diseq(statePlaces_00002_00007,-1), aux547)
ineq(aux548, aux140, 0)
ineq(aux549, aux111, 0)
ineq(aux550, aux61, 0)
reifyimply(ineq(3, actionTo_00009, 0), aux551)
reifyimply(w-literal(actionFrom_00009,2), aux552)
reifyimply(diseq(statePlaces_00002_00008,-1), aux553)
ineq(aux554, aux157, 0)
ineq(aux555, aux113, 0)
ineq(aux556, aux60, 0)
reifyimply(ineq(3, actionTo_00010, 0), aux557)
reifyimply(w-literal(actionFrom_00010,2), aux558)
reifyimply(diseq(statePlaces_00002_00009,-1), aux559)
ineq(aux560, aux132, 0)
ineq(aux561, aux143, 0)
ineq(aux562, aux55, 0)
reifyimply(ineq(3, actionTo_00011, 0), aux563)
reifyimply(w-literal(actionFrom_00011,2), aux564)
reifyimply(diseq(statePlaces_00002_00010,-1), aux565)
ineq(aux566, aux131, 0)
ineq(aux567, aux142, 0)
ineq(aux568, aux57, 0)
reifyimply(ineq(3, actionTo_00012, 0), aux569)
reifyimply(w-literal(actionFrom_00012,2), aux570)
reifyimply(diseq(statePlaces_00002_00011,-1), aux571)
ineq(aux572, aux146, 0)
ineq(aux573, aux141, 0)
ineq(aux574, aux56, 0)
reifyimply(ineq(3, actionTo_00013, 0), aux575)
reifyimply(w-literal(actionFrom_00013,2), aux576)
reifyimply(diseq(statePlaces_00002_00012,-1), aux577)
ineq(aux578, aux159, 0)
ineq(aux579, aux137, 0)
ineq(aux580, aux53, 0)
reifyimply(ineq(3, actionTo_00014, 0), aux581)
reifyimply(w-literal(actionFrom_00014,2), aux582)
reifyimply(diseq(statePlaces_00002_00013,-1), aux583)
ineq(aux584, aux122, 0)
ineq(aux585, aux134, 0)
ineq(aux586, aux52, 0)
reifyimply(ineq(3, actionTo_00015, 0), aux587)
reifyimply(w-literal(actionFrom_00015,2), aux588)
reifyimply(diseq(statePlaces_00002_00014,-1), aux589)
ineq(aux590, aux136, 0)
ineq(aux591, aux139, 0)
ineq(aux592, aux54, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux593)
reifyimply(diseq(aux81,-1), aux594)
reifyimply(diseq(aux93,-1), aux595)
reifyimply(w-literal(actionTo_00002,2), aux596)
ineq(aux597, aux115, 0)
ineq(aux598, aux121, 0)
reifyimply(diseq(aux69,-1), aux599)
reifyimply(ineq(3, actionFrom_00003, 0), aux601)
reifyimply(diseq(aux75,-1), aux602)
reifyimply(diseq(aux102,-1), aux603)
reifyimply(w-literal(actionTo_00003,2), aux604)
ineq(aux605, aux114, 0)
ineq(aux606, aux133, 0)
reifyimply(diseq(aux68,-1), aux607)
reifyimply(ineq(3, actionFrom_00004, 0), aux609)
reifyimply(diseq(aux79,-1), aux610)
reifyimply(diseq(aux101,-1), aux611)
reifyimply(w-literal(actionTo_00004,2), aux612)
ineq(aux613, aux118, 0)
ineq(aux614, aux151, 0)
reifyimply(diseq(aux73,-1), aux615)
reifyimply(ineq(3, actionFrom_00005, 0), aux617)
reifyimply(diseq(aux74,-1), aux618)
reifyimply(diseq(aux106,-1), aux619)
reifyimply(w-literal(actionTo_00005,2), aux620)
ineq(aux621, aux117, 0)
ineq(aux622, aux145, 0)
reifyimply(diseq(aux107,-1), aux623)
reifyimply(ineq(3, actionFrom_00006, 0), aux625)
reifyimply(diseq(aux92,-1), aux626)
reifyimply(diseq(aux105,-1), aux627)
reifyimply(w-literal(actionTo_00006,2), aux628)
ineq(aux629, aux116, 0)
ineq(aux630, aux158, 0)
reifyimply(diseq(aux88,-1), aux631)
reifyimply(ineq(3, actionFrom_00007, 0), aux633)
reifyimply(diseq(aux85,-1), aux634)
reifyimply(diseq(aux104,-1), aux635)
reifyimply(w-literal(actionTo_00007,2), aux636)
ineq(aux637, aux112, 0)
ineq(aux638, aux108, 0)
reifyimply(diseq(aux77,-1), aux639)
reifyimply(ineq(3, actionFrom_00008, 0), aux641)
reifyimply(diseq(aux78,-1), aux642)
reifyimply(diseq(aux103,-1), aux643)
reifyimply(w-literal(actionTo_00008,2), aux644)
ineq(aux645, aux111, 0)
ineq(aux646, aux140, 0)
reifyimply(diseq(aux72,-1), aux647)
reifyimply(ineq(3, actionFrom_00009, 0), aux649)
reifyimply(diseq(aux70,-1), aux650)
reifyimply(diseq(aux99,-1), aux651)
reifyimply(w-literal(actionTo_00009,2), aux652)
ineq(aux653, aux113, 0)
ineq(aux654, aux157, 0)
reifyimply(diseq(aux91,-1), aux655)
reifyimply(ineq(3, actionFrom_00010, 0), aux657)
reifyimply(diseq(aux67,-1), aux658)
reifyimply(diseq(aux100,-1), aux659)
reifyimply(w-literal(actionTo_00010,2), aux660)
ineq(aux661, aux143, 0)
ineq(aux662, aux132, 0)
reifyimply(diseq(aux87,-1), aux663)
reifyimply(ineq(3, actionFrom_00011, 0), aux665)
reifyimply(diseq(aux90,-1), aux666)
reifyimply(diseq(aux94,-1), aux667)
reifyimply(w-literal(actionTo_00011,2), aux668)
ineq(aux669, aux142, 0)
ineq(aux670, aux131, 0)
reifyimply(diseq(aux84,-1), aux671)
reifyimply(ineq(3, actionFrom_00012, 0), aux673)
reifyimply(diseq(aux83,-1), aux674)
reifyimply(diseq(aux95,-1), aux675)
reifyimply(w-literal(actionTo_00012,2), aux676)
ineq(aux677, aux141, 0)
ineq(aux678, aux146, 0)
reifyimply(diseq(aux76,-1), aux679)
reifyimply(ineq(3, actionFrom_00013, 0), aux681)
reifyimply(diseq(aux86,-1), aux682)
reifyimply(diseq(aux96,-1), aux683)
reifyimply(w-literal(actionTo_00013,2), aux684)
ineq(aux685, aux137, 0)
ineq(aux686, aux159, 0)
reifyimply(diseq(aux66,-1), aux687)
reifyimply(ineq(3, actionFrom_00014, 0), aux689)
reifyimply(diseq(aux80,-1), aux690)
reifyimply(diseq(aux97,-1), aux691)
reifyimply(w-literal(actionTo_00014,2), aux692)
ineq(aux693, aux134, 0)
ineq(aux694, aux122, 0)
reifyimply(diseq(aux89,-1), aux695)
reifyimply(ineq(3, actionFrom_00015, 0), aux697)
reifyimply(diseq(aux71,-1), aux698)
reifyimply(diseq(aux98,-1), aux699)
reifyimply(w-literal(actionTo_00015,2), aux700)
ineq(aux701, aux139, 0)
ineq(aux702, aux136, 0)
reifyimply(diseq(aux82,-1), aux703)
reifyimply(ineq(3, actionFrom_00002, 0), aux705)
reifyimply(diseq(aux81,-1), aux706)
reifyimply(diseq(aux93,-1), aux707)
reifyimply(w-literal(actionTo_00002,2), aux708)
ineq(aux710, aux115, 0)
ineq(aux711, aux121, 0)
reifyimply(ineq(3, actionFrom_00003, 0), aux712)
reifyimply(diseq(aux75,-1), aux713)
reifyimply(diseq(aux102,-1), aux714)
reifyimply(w-literal(actionTo_00003,2), aux715)
ineq(aux717, aux114, 0)
ineq(aux718, aux133, 0)
reifyimply(ineq(3, actionFrom_00004, 0), aux719)
reifyimply(diseq(aux79,-1), aux720)
reifyimply(diseq(aux101,-1), aux721)
reifyimply(w-literal(actionTo_00004,2), aux722)
ineq(aux724, aux118, 0)
ineq(aux725, aux151, 0)
reifyimply(ineq(3, actionFrom_00005, 0), aux726)
reifyimply(diseq(aux74,-1), aux727)
reifyimply(diseq(aux106,-1), aux728)
reifyimply(w-literal(actionTo_00005,2), aux729)
ineq(aux731, aux117, 0)
ineq(aux732, aux145, 0)
reifyimply(ineq(3, actionFrom_00006, 0), aux733)
reifyimply(diseq(aux92,-1), aux734)
reifyimply(diseq(aux105,-1), aux735)
reifyimply(w-literal(actionTo_00006,2), aux736)
ineq(aux738, aux116, 0)
ineq(aux739, aux158, 0)
reifyimply(ineq(3, actionFrom_00007, 0), aux740)
reifyimply(diseq(aux85,-1), aux741)
reifyimply(diseq(aux104,-1), aux742)
reifyimply(w-literal(actionTo_00007,2), aux743)
ineq(aux745, aux112, 0)
ineq(aux746, aux108, 0)
reifyimply(ineq(3, actionFrom_00008, 0), aux747)
reifyimply(diseq(aux78,-1), aux748)
reifyimply(diseq(aux103,-1), aux749)
reifyimply(w-literal(actionTo_00008,2), aux750)
ineq(aux752, aux111, 0)
ineq(aux753, aux140, 0)
reifyimply(ineq(3, actionFrom_00009, 0), aux754)
reifyimply(diseq(aux70,-1), aux755)
reifyimply(diseq(aux99,-1), aux756)
reifyimply(w-literal(actionTo_00009,2), aux757)
ineq(aux759, aux113, 0)
ineq(aux760, aux157, 0)
reifyimply(ineq(3, actionFrom_00010, 0), aux761)
reifyimply(diseq(aux67,-1), aux762)
reifyimply(diseq(aux100,-1), aux763)
reifyimply(w-literal(actionTo_00010,2), aux764)
ineq(aux766, aux143, 0)
ineq(aux767, aux132, 0)
reifyimply(ineq(3, actionFrom_00011, 0), aux768)
reifyimply(diseq(aux90,-1), aux769)
reifyimply(diseq(aux94,-1), aux770)
reifyimply(w-literal(actionTo_00011,2), aux771)
ineq(aux773, aux142, 0)
ineq(aux774, aux131, 0)
reifyimply(ineq(3, actionFrom_00012, 0), aux775)
reifyimply(diseq(aux83,-1), aux776)
reifyimply(diseq(aux95,-1), aux777)
reifyimply(w-literal(actionTo_00012,2), aux778)
ineq(aux780, aux141, 0)
ineq(aux781, aux146, 0)
reifyimply(ineq(3, actionFrom_00013, 0), aux782)
reifyimply(diseq(aux86,-1), aux783)
reifyimply(diseq(aux96,-1), aux784)
reifyimply(w-literal(actionTo_00013,2), aux785)
ineq(aux787, aux137, 0)
ineq(aux788, aux159, 0)
reifyimply(ineq(3, actionFrom_00014, 0), aux789)
reifyimply(diseq(aux80,-1), aux790)
reifyimply(diseq(aux97,-1), aux791)
reifyimply(w-literal(actionTo_00014,2), aux792)
ineq(aux794, aux134, 0)
ineq(aux795, aux122, 0)
reifyimply(ineq(3, actionFrom_00015, 0), aux796)
reifyimply(diseq(aux71,-1), aux797)
reifyimply(diseq(aux98,-1), aux798)
reifyimply(w-literal(actionTo_00015,2), aux799)
ineq(aux801, aux139, 0)
ineq(aux802, aux136, 0)
ineq(aux803, aux63, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux804)
reifyimply(w-literal(actionTo_00002,2), aux805)
ineq(aux806, aux115, 0)
ineq(aux807, aux121, 0)
reifyimply(diseq(aux69,-1), aux808)
ineq(aux810, aux65, 0)
reifyimply(ineq(3, actionFrom_00003, 0), aux811)
reifyimply(w-literal(actionTo_00003,2), aux812)
ineq(aux813, aux114, 0)
ineq(aux814, aux133, 0)
reifyimply(diseq(aux68,-1), aux815)
ineq(aux817, aux64, 0)
reifyimply(ineq(3, actionFrom_00004, 0), aux818)
reifyimply(w-literal(actionTo_00004,2), aux819)
ineq(aux820, aux118, 0)
ineq(aux821, aux151, 0)
reifyimply(diseq(aux73,-1), aux822)
ineq(aux824, aux59, 0)
reifyimply(ineq(3, actionFrom_00005, 0), aux825)
reifyimply(w-literal(actionTo_00005,2), aux826)
ineq(aux827, aux117, 0)
ineq(aux828, aux145, 0)
reifyimply(diseq(aux107,-1), aux829)
ineq(aux831, aux58, 0)
reifyimply(ineq(3, actionFrom_00006, 0), aux832)
reifyimply(w-literal(actionTo_00006,2), aux833)
ineq(aux834, aux116, 0)
ineq(aux835, aux158, 0)
reifyimply(diseq(aux88,-1), aux836)
ineq(aux838, aux62, 0)
reifyimply(ineq(3, actionFrom_00007, 0), aux839)
reifyimply(w-literal(actionTo_00007,2), aux840)
ineq(aux841, aux112, 0)
ineq(aux842, aux108, 0)
reifyimply(diseq(aux77,-1), aux843)
ineq(aux845, aux61, 0)
reifyimply(ineq(3, actionFrom_00008, 0), aux846)
reifyimply(w-literal(actionTo_00008,2), aux847)
ineq(aux848, aux111, 0)
ineq(aux849, aux140, 0)
reifyimply(diseq(aux72,-1), aux850)
ineq(aux852, aux60, 0)
reifyimply(ineq(3, actionFrom_00009, 0), aux853)
reifyimply(w-literal(actionTo_00009,2), aux854)
ineq(aux855, aux113, 0)
ineq(aux856, aux157, 0)
reifyimply(diseq(aux91,-1), aux857)
ineq(aux859, aux55, 0)
reifyimply(ineq(3, actionFrom_00010, 0), aux860)
reifyimply(w-literal(actionTo_00010,2), aux861)
ineq(aux862, aux143, 0)
ineq(aux863, aux132, 0)
reifyimply(diseq(aux87,-1), aux864)
ineq(aux866, aux57, 0)
reifyimply(ineq(3, actionFrom_00011, 0), aux867)
reifyimply(w-literal(actionTo_00011,2), aux868)
ineq(aux869, aux142, 0)
ineq(aux870, aux131, 0)
reifyimply(diseq(aux84,-1), aux871)
ineq(aux873, aux56, 0)
reifyimply(ineq(3, actionFrom_00012, 0), aux874)
reifyimply(w-literal(actionTo_00012,2), aux875)
ineq(aux876, aux141, 0)
ineq(aux877, aux146, 0)
reifyimply(diseq(aux76,-1), aux878)
ineq(aux880, aux53, 0)
reifyimply(ineq(3, actionFrom_00013, 0), aux881)
reifyimply(w-literal(actionTo_00013,2), aux882)
ineq(aux883, aux137, 0)
ineq(aux884, aux159, 0)
reifyimply(diseq(aux66,-1), aux885)
ineq(aux887, aux52, 0)
reifyimply(ineq(3, actionFrom_00014, 0), aux888)
reifyimply(w-literal(actionTo_00014,2), aux889)
ineq(aux890, aux134, 0)
ineq(aux891, aux122, 0)
reifyimply(diseq(aux89,-1), aux892)
ineq(aux894, aux54, 0)
reifyimply(ineq(3, actionFrom_00015, 0), aux895)
reifyimply(w-literal(actionTo_00015,2), aux896)
ineq(aux897, aux139, 0)
ineq(aux898, aux136, 0)
reifyimply(diseq(aux82,-1), aux899)
reifyimply(gaceq(aux81,statePlaces_00002_00002), aux901)
reifyimply(ineq(3, actionFrom_00002, 0), aux902)
reifyimply(w-literal(actionTo_00002,2), aux903)
ineq(aux905, aux121, 0)
reifyimply(diseq(aux69,-1), aux906)
reifyimply(gaceq(aux75,statePlaces_00002_00003), aux907)
reifyimply(ineq(3, actionFrom_00003, 0), aux908)
reifyimply(w-literal(actionTo_00003,2), aux909)
ineq(aux911, aux133, 0)
reifyimply(diseq(aux68,-1), aux912)
reifyimply(gaceq(aux79,statePlaces_00002_00004), aux913)
reifyimply(ineq(3, actionFrom_00004, 0), aux914)
reifyimply(w-literal(actionTo_00004,2), aux915)
ineq(aux917, aux151, 0)
reifyimply(diseq(aux73,-1), aux918)
reifyimply(gaceq(aux74,statePlaces_00002_00005), aux919)
reifyimply(ineq(3, actionFrom_00005, 0), aux920)
reifyimply(w-literal(actionTo_00005,2), aux921)
ineq(aux923, aux145, 0)
reifyimply(diseq(aux107,-1), aux924)
reifyimply(gaceq(aux92,statePlaces_00002_00006), aux925)
reifyimply(ineq(3, actionFrom_00006, 0), aux926)
reifyimply(w-literal(actionTo_00006,2), aux927)
ineq(aux929, aux158, 0)
reifyimply(diseq(aux88,-1), aux930)
reifyimply(gaceq(aux85,statePlaces_00002_00007), aux931)
reifyimply(ineq(3, actionFrom_00007, 0), aux932)
reifyimply(w-literal(actionTo_00007,2), aux933)
ineq(aux935, aux108, 0)
reifyimply(diseq(aux77,-1), aux936)
reifyimply(gaceq(aux78,statePlaces_00002_00008), aux937)
reifyimply(ineq(3, actionFrom_00008, 0), aux938)
reifyimply(w-literal(actionTo_00008,2), aux939)
ineq(aux941, aux140, 0)
reifyimply(diseq(aux72,-1), aux942)
reifyimply(gaceq(aux70,statePlaces_00002_00009), aux943)
reifyimply(ineq(3, actionFrom_00009, 0), aux944)
reifyimply(w-literal(actionTo_00009,2), aux945)
ineq(aux947, aux157, 0)
reifyimply(diseq(aux91,-1), aux948)
reifyimply(gaceq(aux67,statePlaces_00002_00010), aux949)
reifyimply(ineq(3, actionFrom_00010, 0), aux950)
reifyimply(w-literal(actionTo_00010,2), aux951)
ineq(aux953, aux132, 0)
reifyimply(diseq(aux87,-1), aux954)
reifyimply(gaceq(aux90,statePlaces_00002_00011), aux955)
reifyimply(ineq(3, actionFrom_00011, 0), aux956)
reifyimply(w-literal(actionTo_00011,2), aux957)
ineq(aux959, aux131, 0)
reifyimply(diseq(aux84,-1), aux960)
reifyimply(gaceq(aux83,statePlaces_00002_00012), aux961)
reifyimply(ineq(3, actionFrom_00012, 0), aux962)
reifyimply(w-literal(actionTo_00012,2), aux963)
ineq(aux965, aux146, 0)
reifyimply(diseq(aux76,-1), aux966)
reifyimply(gaceq(aux86,statePlaces_00002_00013), aux967)
reifyimply(ineq(3, actionFrom_00013, 0), aux968)
reifyimply(w-literal(actionTo_00013,2), aux969)
ineq(aux971, aux159, 0)
reifyimply(diseq(aux66,-1), aux972)
reifyimply(gaceq(aux80,statePlaces_00002_00014), aux973)
reifyimply(ineq(3, actionFrom_00014, 0), aux974)
reifyimply(w-literal(actionTo_00014,2), aux975)
ineq(aux977, aux122, 0)
reifyimply(diseq(aux89,-1), aux978)
reifyimply(gaceq(aux71,statePlaces_00002_00015), aux979)
reifyimply(ineq(3, actionFrom_00015, 0), aux980)
reifyimply(w-literal(actionTo_00015,2), aux981)
ineq(aux983, aux136, 0)
reifyimply(diseq(aux82,-1), aux984)
sumleq([pointers_00000_00002,-1],aux225)
sumgeq([pointers_00000_00002,-1],aux225)
sumleq([pointers_00000_00003,-1],aux231)
sumgeq([pointers_00000_00003,-1],aux231)
sumleq([pointers_00000_00004,-1],aux237)
sumgeq([pointers_00000_00004,-1],aux237)
sumleq([pointers_00000_00005,-1],aux243)
sumgeq([pointers_00000_00005,-1],aux243)
sumleq([pointers_00000_00006,-1],aux249)
sumgeq([pointers_00000_00006,-1],aux249)
sumleq([pointers_00000_00007,-1],aux255)
sumgeq([pointers_00000_00007,-1],aux255)
sumleq([pointers_00000_00008,-1],aux261)
sumgeq([pointers_00000_00008,-1],aux261)
sumleq([pointers_00000_00009,-1],aux267)
sumgeq([pointers_00000_00009,-1],aux267)
sumleq([pointers_00000_00010,-1],aux273)
sumgeq([pointers_00000_00010,-1],aux273)
sumleq([pointers_00000_00011,-1],aux279)
sumgeq([pointers_00000_00011,-1],aux279)
sumleq([pointers_00000_00012,-1],aux285)
sumgeq([pointers_00000_00012,-1],aux285)
sumleq([pointers_00000_00013,-1],aux291)
sumgeq([pointers_00000_00013,-1],aux291)
sumleq([pointers_00000_00014,-1],aux297)
sumgeq([pointers_00000_00014,-1],aux297)
sumleq([pointers_00000_00015,-1],aux303)
sumgeq([pointers_00000_00015,-1],aux303)
sumleq([pointers_00001_00002,-1],aux311)
sumgeq([pointers_00001_00002,-1],aux311)
sumleq([pointers_00001_00003,-1],aux320)
sumgeq([pointers_00001_00003,-1],aux320)
sumleq([pointers_00001_00004,-1],aux329)
sumgeq([pointers_00001_00004,-1],aux329)
sumleq([pointers_00001_00005,-1],aux338)
sumgeq([pointers_00001_00005,-1],aux338)
sumleq([pointers_00001_00006,-1],aux347)
sumgeq([pointers_00001_00006,-1],aux347)
sumleq([pointers_00001_00007,-1],aux356)
sumgeq([pointers_00001_00007,-1],aux356)
sumleq([pointers_00001_00008,-1],aux365)
sumgeq([pointers_00001_00008,-1],aux365)
sumleq([pointers_00001_00009,-1],aux374)
sumgeq([pointers_00001_00009,-1],aux374)
sumleq([pointers_00001_00010,-1],aux383)
sumgeq([pointers_00001_00010,-1],aux383)
sumleq([pointers_00001_00011,-1],aux392)
sumgeq([pointers_00001_00011,-1],aux392)
sumleq([pointers_00001_00012,-1],aux401)
sumgeq([pointers_00001_00012,-1],aux401)
sumleq([pointers_00001_00013,-1],aux410)
sumgeq([pointers_00001_00013,-1],aux410)
sumleq([pointers_00001_00014,-1],aux419)
sumgeq([pointers_00001_00014,-1],aux419)
sumleq([actionFrom_00009,-2],aux109)
sumgeq([actionFrom_00009,-2],aux109)
sumleq([actionFrom_00012,-2],aux110)
sumgeq([actionFrom_00012,-2],aux110)
sumleq([actionFrom_00002,-2],aux119)
sumgeq([actionFrom_00002,-2],aux119)
sumleq([actionFrom_00013,-2],aux120)
sumgeq([actionFrom_00013,-2],aux120)
sumleq([actionFrom_00007,-2],aux123)
sumgeq([actionFrom_00007,-2],aux123)
sumleq([actionTo_00015,-2],aux124)
sumgeq([actionTo_00015,-2],aux124)
sumleq([actionFrom_00010,-2],aux125)
sumgeq([actionFrom_00010,-2],aux125)
sumleq([actionTo_00014,-2],aux126)
sumgeq([actionTo_00014,-2],aux126)
sumleq([actionTo_00012,-2],aux127)
sumgeq([actionTo_00012,-2],aux127)
sumleq([actionTo_00013,-2],aux128)
sumgeq([actionTo_00013,-2],aux128)
sumleq([actionTo_00011,-2],aux129)
sumgeq([actionTo_00011,-2],aux129)
sumleq([actionTo_00010,-2],aux130)
sumgeq([actionTo_00010,-2],aux130)
sumleq([actionFrom_00008,-2],aux135)
sumgeq([actionFrom_00008,-2],aux135)
sumleq([actionFrom_00011,-2],aux138)
sumgeq([actionFrom_00011,-2],aux138)
sumleq([actionFrom_00005,-2],aux144)
sumgeq([actionFrom_00005,-2],aux144)
sumleq([actionTo_00008,-2],aux147)
sumgeq([actionTo_00008,-2],aux147)
sumleq([actionTo_00009,-2],aux148)
sumgeq([actionTo_00009,-2],aux148)
sumleq([actionTo_00007,-2],aux149)
sumgeq([actionTo_00007,-2],aux149)
sumleq([actionTo_00006,-2],aux150)
sumgeq([actionTo_00006,-2],aux150)
sumleq([actionTo_00005,-2],aux152)
sumgeq([actionTo_00005,-2],aux152)
sumleq([actionTo_00004,-2],aux153)
sumgeq([actionTo_00004,-2],aux153)
sumleq([actionTo_00003,-2],aux154)
sumgeq([actionTo_00003,-2],aux154)
sumleq([actionTo_00002,-2],aux155)
sumgeq([actionTo_00002,-2],aux155)
sumleq([actionFrom_00006,-2],aux156)
sumgeq([actionFrom_00006,-2],aux156)
sumleq([actionFrom_00003,-2],aux160)
sumgeq([actionFrom_00003,-2],aux160)
sumleq([actionFrom_00014,-2],aux161)
sumgeq([actionFrom_00014,-2],aux161)
sumleq([actionFrom_00004,-2],aux162)
sumgeq([actionFrom_00004,-2],aux162)
sumleq([actionFrom_00015,-2],aux163)
sumgeq([actionFrom_00015,-2],aux163)
reifyimply(sumleq([pointers_00000_00002,1],pointers_00000_00003), aux226)
reifyimply(sumgeq([pointers_00000_00002,1],pointers_00000_00003), aux226)
reifyimply(sumleq([pointers_00000_00003,1],pointers_00000_00004), aux232)
reifyimply(sumgeq([pointers_00000_00003,1],pointers_00000_00004), aux232)
reifyimply(sumleq([pointers_00000_00004,1],pointers_00000_00005), aux238)
reifyimply(sumgeq([pointers_00000_00004,1],pointers_00000_00005), aux238)
reifyimply(sumleq([pointers_00000_00005,1],pointers_00000_00006), aux244)
reifyimply(sumgeq([pointers_00000_00005,1],pointers_00000_00006), aux244)
reifyimply(sumleq([pointers_00000_00006,1],pointers_00000_00007), aux250)
reifyimply(sumgeq([pointers_00000_00006,1],pointers_00000_00007), aux250)
reifyimply(sumleq([pointers_00000_00007,1],pointers_00000_00008), aux256)
reifyimply(sumgeq([pointers_00000_00007,1],pointers_00000_00008), aux256)
reifyimply(sumleq([pointers_00000_00008,1],pointers_00000_00009), aux262)
reifyimply(sumgeq([pointers_00000_00008,1],pointers_00000_00009), aux262)
reifyimply(sumleq([pointers_00000_00009,1],pointers_00000_00010), aux268)
reifyimply(sumgeq([pointers_00000_00009,1],pointers_00000_00010), aux268)
reifyimply(sumleq([pointers_00000_00010,1],pointers_00000_00011), aux274)
reifyimply(sumgeq([pointers_00000_00010,1],pointers_00000_00011), aux274)
reifyimply(sumleq([pointers_00000_00011,1],pointers_00000_00012), aux280)
reifyimply(sumgeq([pointers_00000_00011,1],pointers_00000_00012), aux280)
reifyimply(sumleq([pointers_00000_00012,1],pointers_00000_00013), aux286)
reifyimply(sumgeq([pointers_00000_00012,1],pointers_00000_00013), aux286)
reifyimply(sumleq([pointers_00000_00013,1],pointers_00000_00014), aux292)
reifyimply(sumgeq([pointers_00000_00013,1],pointers_00000_00014), aux292)
reifyimply(sumleq([pointers_00000_00014,1],pointers_00000_00015), aux298)
reifyimply(sumgeq([pointers_00000_00014,1],pointers_00000_00015), aux298)
reifyimply(sumleq([pointers_00001_00002,1],pointers_00001_00003), aux315)
reifyimply(sumgeq([pointers_00001_00002,1],pointers_00001_00003), aux315)
reifyimply(sumleq([pointers_00001_00003,1],pointers_00001_00004), aux324)
reifyimply(sumgeq([pointers_00001_00003,1],pointers_00001_00004), aux324)
reifyimply(sumleq([pointers_00001_00004,1],pointers_00001_00005), aux333)
reifyimply(sumgeq([pointers_00001_00004,1],pointers_00001_00005), aux333)
reifyimply(sumleq([pointers_00001_00005,1],pointers_00001_00006), aux342)
reifyimply(sumgeq([pointers_00001_00005,1],pointers_00001_00006), aux342)
reifyimply(sumleq([pointers_00001_00006,1],pointers_00001_00007), aux351)
reifyimply(sumgeq([pointers_00001_00006,1],pointers_00001_00007), aux351)
reifyimply(sumleq([pointers_00001_00007,1],pointers_00001_00008), aux360)
reifyimply(sumgeq([pointers_00001_00007,1],pointers_00001_00008), aux360)
reifyimply(sumleq([pointers_00001_00008,1],pointers_00001_00009), aux369)
reifyimply(sumgeq([pointers_00001_00008,1],pointers_00001_00009), aux369)
reifyimply(sumleq([pointers_00001_00009,1],pointers_00001_00010), aux378)
reifyimply(sumgeq([pointers_00001_00009,1],pointers_00001_00010), aux378)
reifyimply(sumleq([pointers_00001_00010,1],pointers_00001_00011), aux387)
reifyimply(sumgeq([pointers_00001_00010,1],pointers_00001_00011), aux387)
reifyimply(sumleq([pointers_00001_00011,1],pointers_00001_00012), aux396)
reifyimply(sumgeq([pointers_00001_00011,1],pointers_00001_00012), aux396)
reifyimply(sumleq([pointers_00001_00012,1],pointers_00001_00013), aux405)
reifyimply(sumgeq([pointers_00001_00012,1],pointers_00001_00013), aux405)
reifyimply(sumleq([pointers_00001_00013,1],pointers_00001_00014), aux414)
reifyimply(sumgeq([pointers_00001_00013,1],pointers_00001_00014), aux414)
reifyimply(sumleq([8,aux81],statePlaces_00002_00002), aux600)
reifyimply(sumgeq([8,aux81],statePlaces_00002_00002), aux600)
reifyimply(sumleq([statePlaces_00002_00002,aux75],statePlaces_00002_00003), aux608)
reifyimply(sumgeq([statePlaces_00002_00002,aux75],statePlaces_00002_00003), aux608)
reifyimply(sumleq([statePlaces_00002_00003,aux79],statePlaces_00002_00004), aux616)
reifyimply(sumgeq([statePlaces_00002_00003,aux79],statePlaces_00002_00004), aux616)
reifyimply(sumleq([statePlaces_00002_00004,aux74],statePlaces_00002_00005), aux624)
reifyimply(sumgeq([statePlaces_00002_00004,aux74],statePlaces_00002_00005), aux624)
reifyimply(sumleq([statePlaces_00002_00005,aux92],statePlaces_00002_00006), aux632)
reifyimply(sumgeq([statePlaces_00002_00005,aux92],statePlaces_00002_00006), aux632)
reifyimply(sumleq([statePlaces_00002_00006,aux85],statePlaces_00002_00007), aux640)
reifyimply(sumgeq([statePlaces_00002_00006,aux85],statePlaces_00002_00007), aux640)
reifyimply(sumleq([statePlaces_00002_00007,aux78],statePlaces_00002_00008), aux648)
reifyimply(sumgeq([statePlaces_00002_00007,aux78],statePlaces_00002_00008), aux648)
reifyimply(sumleq([statePlaces_00002_00008,aux70],statePlaces_00002_00009), aux656)
reifyimply(sumgeq([statePlaces_00002_00008,aux70],statePlaces_00002_00009), aux656)
reifyimply(sumleq([statePlaces_00002_00009,aux67],statePlaces_00002_00010), aux664)
reifyimply(sumgeq([statePlaces_00002_00009,aux67],statePlaces_00002_00010), aux664)
reifyimply(sumleq([statePlaces_00002_00010,aux90],statePlaces_00002_00011), aux672)
reifyimply(sumgeq([statePlaces_00002_00010,aux90],statePlaces_00002_00011), aux672)
reifyimply(sumleq([statePlaces_00002_00011,aux83],statePlaces_00002_00012), aux680)
reifyimply(sumgeq([statePlaces_00002_00011,aux83],statePlaces_00002_00012), aux680)
reifyimply(sumleq([statePlaces_00002_00012,aux86],statePlaces_00002_00013), aux688)
reifyimply(sumgeq([statePlaces_00002_00012,aux86],statePlaces_00002_00013), aux688)
reifyimply(sumleq([statePlaces_00002_00013,aux80],statePlaces_00002_00014), aux696)
reifyimply(sumgeq([statePlaces_00002_00013,aux80],statePlaces_00002_00014), aux696)
reifyimply(sumleq([statePlaces_00002_00014,aux71],statePlaces_00002_00015), aux704)
reifyimply(sumgeq([statePlaces_00002_00014,aux71],statePlaces_00002_00015), aux704)
reifyimply(weightedsumleq([1,-1],[8,aux81],statePlaces_00002_00002), aux709)
reifyimply(weightedsumgeq([1,-1],[8,aux81],statePlaces_00002_00002), aux709)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00002,aux75],statePlaces_00002_00003), aux716)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00002,aux75],statePlaces_00002_00003), aux716)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00003,aux79],statePlaces_00002_00004), aux723)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00003,aux79],statePlaces_00002_00004), aux723)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00004,aux74],statePlaces_00002_00005), aux730)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00004,aux74],statePlaces_00002_00005), aux730)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00005,aux92],statePlaces_00002_00006), aux737)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00005,aux92],statePlaces_00002_00006), aux737)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00006,aux85],statePlaces_00002_00007), aux744)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00006,aux85],statePlaces_00002_00007), aux744)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00007,aux78],statePlaces_00002_00008), aux751)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00007,aux78],statePlaces_00002_00008), aux751)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00008,aux70],statePlaces_00002_00009), aux758)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00008,aux70],statePlaces_00002_00009), aux758)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00009,aux67],statePlaces_00002_00010), aux765)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00009,aux67],statePlaces_00002_00010), aux765)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00010,aux90],statePlaces_00002_00011), aux772)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00010,aux90],statePlaces_00002_00011), aux772)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00011,aux83],statePlaces_00002_00012), aux779)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00011,aux83],statePlaces_00002_00012), aux779)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00012,aux86],statePlaces_00002_00013), aux786)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00012,aux86],statePlaces_00002_00013), aux786)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00013,aux80],statePlaces_00002_00014), aux793)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00013,aux80],statePlaces_00002_00014), aux793)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00014,aux71],statePlaces_00002_00015), aux800)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00014,aux71],statePlaces_00002_00015), aux800)
reifyimply(sumleq([1,aux69],aux81), aux809)
reifyimply(sumgeq([1,aux69],aux81), aux809)
reifyimply(sumleq([1,aux68],aux75), aux816)
reifyimply(sumgeq([1,aux68],aux75), aux816)
reifyimply(sumleq([1,aux73],aux79), aux823)
reifyimply(sumgeq([1,aux73],aux79), aux823)
reifyimply(sumleq([aux107,1],aux74), aux830)
reifyimply(sumgeq([aux107,1],aux74), aux830)
reifyimply(sumleq([1,aux88],aux92), aux837)
reifyimply(sumgeq([1,aux88],aux92), aux837)
reifyimply(sumleq([1,aux77],aux85), aux844)
reifyimply(sumgeq([1,aux77],aux85), aux844)
reifyimply(sumleq([1,aux72],aux78), aux851)
reifyimply(sumgeq([1,aux72],aux78), aux851)
reifyimply(sumleq([1,aux91],aux70), aux858)
reifyimply(sumgeq([1,aux91],aux70), aux858)
reifyimply(sumleq([1,aux87],aux67), aux865)
reifyimply(sumgeq([1,aux87],aux67), aux865)
reifyimply(sumleq([1,aux84],aux90), aux872)
reifyimply(sumgeq([1,aux84],aux90), aux872)
reifyimply(sumleq([1,aux76],aux83), aux879)
reifyimply(sumgeq([1,aux76],aux83), aux879)
reifyimply(sumleq([1,aux66],aux86), aux886)
reifyimply(sumgeq([1,aux66],aux86), aux886)
reifyimply(sumleq([1,aux89],aux80), aux893)
reifyimply(sumgeq([1,aux89],aux80), aux893)
reifyimply(sumleq([1,aux82],aux71), aux900)
reifyimply(sumgeq([1,aux82],aux71), aux900)
reifyimply(sumleq([-1,aux69],aux81), aux904)
reifyimply(sumgeq([-1,aux69],aux81), aux904)
reifyimply(sumleq([-1,aux68],aux75), aux910)
reifyimply(sumgeq([-1,aux68],aux75), aux910)
reifyimply(sumleq([-1,aux73],aux79), aux916)
reifyimply(sumgeq([-1,aux73],aux79), aux916)
reifyimply(sumleq([aux107,-1],aux74), aux922)
reifyimply(sumgeq([aux107,-1],aux74), aux922)
reifyimply(sumleq([-1,aux88],aux92), aux928)
reifyimply(sumgeq([-1,aux88],aux92), aux928)
reifyimply(sumleq([-1,aux77],aux85), aux934)
reifyimply(sumgeq([-1,aux77],aux85), aux934)
reifyimply(sumleq([-1,aux72],aux78), aux940)
reifyimply(sumgeq([-1,aux72],aux78), aux940)
reifyimply(sumleq([-1,aux91],aux70), aux946)
reifyimply(sumgeq([-1,aux91],aux70), aux946)
reifyimply(sumleq([-1,aux87],aux67), aux952)
reifyimply(sumgeq([-1,aux87],aux67), aux952)
reifyimply(sumleq([-1,aux84],aux90), aux958)
reifyimply(sumgeq([-1,aux84],aux90), aux958)
reifyimply(sumleq([-1,aux76],aux83), aux964)
reifyimply(sumgeq([-1,aux76],aux83), aux964)
reifyimply(sumleq([-1,aux66],aux86), aux970)
reifyimply(sumgeq([-1,aux66],aux86), aux970)
reifyimply(sumleq([-1,aux89],aux80), aux976)
reifyimply(sumgeq([-1,aux89],aux80), aux976)
reifyimply(sumleq([-1,aux82],aux71), aux982)
reifyimply(sumgeq([-1,aux82],aux71), aux982)
**EOF**
