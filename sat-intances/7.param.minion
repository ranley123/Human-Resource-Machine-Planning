MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 80
# CSE_active_eliminated_expressions = 340
# CSE_active_total_size = 530
**VARIABLES**
DISCRETE statePlaces_00002_00002 #
{-1..100}
DISCRETE statePlaces_00002_00003 #
{-1..100}
DISCRETE statePlaces_00002_00004 #
{-1..100}
DISCRETE statePlaces_00002_00005 #
{-1..100}
DISCRETE statePlaces_00002_00006 #
{-1..100}
DISCRETE statePlaces_00002_00007 #
{-1..100}
DISCRETE statePlaces_00002_00008 #
{-1..100}
DISCRETE statePlaces_00002_00009 #
{-1..100}
DISCRETE statePlaces_00002_00010 #
{-1..100}
DISCRETE statePlaces_00002_00011 #
{-1..100}
DISCRETE statePlaces_00003_00002 #
{-1..100}
DISCRETE statePlaces_00003_00003 #
{-1..100}
DISCRETE statePlaces_00003_00004 #
{-1..100}
DISCRETE statePlaces_00003_00005 #
{-1..100}
DISCRETE statePlaces_00003_00006 #
{-1..100}
DISCRETE statePlaces_00003_00007 #
{-1..100}
DISCRETE statePlaces_00003_00008 #
{-1..100}
DISCRETE statePlaces_00003_00009 #
{-1..100}
DISCRETE statePlaces_00003_00010 #
{-1..100}
DISCRETE statePlaces_00003_00011 #
{-1..100}
DISCRETE actionTypes_00002 #
{1..8}
**CONSTRAINTS**
w-inintervalset(actionTypes_00002, [1,1,3,8])
**VARIABLES**
DISCRETE actionTypes_00003 #
{1..8}
DISCRETE actionTypes_00004 #
{1..8}
DISCRETE actionTypes_00005 #
{1..8}
DISCRETE actionTypes_00006 #
{1..8}
DISCRETE actionTypes_00007 #
{1..8}
DISCRETE actionTypes_00008 #
{1..8}
DISCRETE actionTypes_00009 #
{1..8}
DISCRETE actionTypes_00010 #
{1..8}
DISCRETE actionTypes_00011 #
{1..8}
DISCRETE actionFrom_00002 #
{0..3}
DISCRETE actionFrom_00003 #
{0..3}
DISCRETE actionFrom_00004 #
{0..3}
DISCRETE actionFrom_00005 #
{0..3}
DISCRETE actionFrom_00006 #
{0..3}
DISCRETE actionFrom_00007 #
{0..3}
DISCRETE actionFrom_00008 #
{0..3}
DISCRETE actionFrom_00009 #
{0..3}
DISCRETE actionFrom_00010 #
{0..3}
DISCRETE actionFrom_00011 #
{0..3}
DISCRETE actionTo_00002 #
{0..3}
DISCRETE actionTo_00003 #
{0..3}
DISCRETE actionTo_00004 #
{0..3}
DISCRETE actionTo_00005 #
{0..3}
DISCRETE actionTo_00006 #
{0..3}
DISCRETE actionTo_00007 #
{0..3}
DISCRETE actionTo_00008 #
{0..3}
DISCRETE actionTo_00009 #
{0..3}
DISCRETE actionTo_00010 #
{0..3}
DISCRETE actionTo_00011 #
{0..3}
DISCRETE pointers_00000_00002 #
{0..6}
DISCRETE pointers_00000_00003 #
{0..6}
DISCRETE pointers_00000_00004 #
{0..6}
DISCRETE pointers_00000_00005 #
{0..6}
DISCRETE pointers_00000_00006 #
{0..6}
DISCRETE pointers_00000_00007 #
{0..6}
DISCRETE pointers_00000_00008 #
{0..6}
DISCRETE pointers_00000_00009 #
{0..6}
DISCRETE pointers_00000_00010 #
{0..6}
DISCRETE pointers_00000_00011 #
{0..6}
DISCRETE pointers_00001_00003 #
{0..6}
DISCRETE pointers_00001_00004 #
{0..6}
DISCRETE pointers_00001_00005 #
{0..6}
DISCRETE pointers_00001_00006 #
{0..6}
DISCRETE pointers_00001_00007 #
{0..6}
DISCRETE pointers_00001_00008 #
{0..6}
DISCRETE pointers_00001_00009 #
{0..6}
DISCRETE pointers_00001_00010 #
{0..6}
BOOL aux52 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionTo_00010 + -2))=SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionFrom_00010 + -2)))
BOOL aux53 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionTo_00011 + -2))=SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionFrom_00011 + -2)))
BOOL aux54 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionTo_00006 + -2))=SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionFrom_00006 + -2)))
BOOL aux55 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionTo_00005 + -2))=SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionFrom_00005 + -2)))
BOOL aux56 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionTo_00009 + -2))=SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionFrom_00009 + -2)))
BOOL aux57 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionTo_00008 + -2))=SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionFrom_00008 + -2)))
BOOL aux58 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionTo_00007 + -2))=SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionFrom_00007 + -2)))
BOOL aux59 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionTo_00002 + -2))=SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionFrom_00002 + -2)))
BOOL aux60 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionTo_00004 + -2))=SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionFrom_00004 + -2)))
BOOL aux61 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionTo_00003 + -2))=SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionFrom_00003 + -2)))
DISCRETE aux62 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionFrom_00010 + -2))
{-1..100}
DISCRETE aux63 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionFrom_00003 + -2))
{-1..100}
DISCRETE aux64 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([8, -1], (actionFrom_00002 + -2))
{-1..8}
**CONSTRAINTS**
w-inintervalset(aux64, [-1,0,8,8])
**VARIABLES**
DISCRETE aux65 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionFrom_00009 + -2))
{-1..100}
DISCRETE aux66 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionFrom_00008 + -2))
{-1..100}
DISCRETE aux67 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionFrom_00004 + -2))
{-1..100}
DISCRETE aux68 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionFrom_00005 + -2))
{-1..100}
DISCRETE aux69 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionFrom_00003 + -2))
{-1..100}
DISCRETE aux70 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionFrom_00007 + -2))
{-1..100}
DISCRETE aux71 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionFrom_00008 + -2))
{-1..100}
DISCRETE aux72 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionFrom_00004 + -2))
{-1..100}
DISCRETE aux73 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionFrom_00002 + -2))
{-1..100}
DISCRETE aux74 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionFrom_00011 + -2))
{-1..100}
DISCRETE aux75 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionFrom_00007 + -2))
{-1..100}
DISCRETE aux76 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionFrom_00010 + -2))
{-1..100}
DISCRETE aux77 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionFrom_00006 + -2))
{-1..100}
DISCRETE aux78 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionFrom_00011 + -2))
{-1..100}
DISCRETE aux79 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionFrom_00009 + -2))
{-1..100}
DISCRETE aux80 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionFrom_00006 + -2))
{-1..100}
DISCRETE aux81 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([8, -1], (actionTo_00002 + -2))
{-1..8}
**CONSTRAINTS**
w-inintervalset(aux81, [-1,0,8,8])
**VARIABLES**
DISCRETE aux82 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionTo_00011 + -2))
{-1..100}
DISCRETE aux83 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionTo_00009 + -2))
{-1..100}
DISCRETE aux84 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionTo_00010 + -2))
{-1..100}
DISCRETE aux85 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionTo_00004 + -2))
{-1..100}
DISCRETE aux86 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionTo_00003 + -2))
{-1..100}
DISCRETE aux87 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionTo_00008 + -2))
{-1..100}
DISCRETE aux88 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionTo_00007 + -2))
{-1..100}
DISCRETE aux89 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionTo_00006 + -2))
{-1..100}
DISCRETE aux90 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionTo_00005 + -2))
{-1..100}
DISCRETE aux91 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionFrom_00005 + -2))
{-1..100}
BOOL aux92 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00007 in int(2..3))
DISCRETE aux93 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00009 + -2)
{-2..1}
BOOL aux94 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00008 in int(2..3))
BOOL aux95 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00007 in int(2..3))
BOOL aux96 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00009 in int(2..3))
BOOL aux97 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00003 in int(2..3))
BOOL aux98 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00002 in int(2..3))
BOOL aux99 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00006 in int(2..3))
BOOL aux100 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00005 in int(2..3))
BOOL aux101 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00004 in int(2..3))
DISCRETE aux102 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00002 + -2)
{-2..1}
BOOL aux103 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00002 in int(2..3))
DISCRETE aux104 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00007 + -2)
{-2..1}
DISCRETE aux105 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00010 + -2)
{-2..1}
DISCRETE aux106 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00011 + -2)
{-2..1}
DISCRETE aux107 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00010 + -2)
{-2..1}
BOOL aux108 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00011 in int(2..3))
BOOL aux109 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00010 in int(2..3))
BOOL aux110 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00003 in int(2..3))
DISCRETE aux111 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00008 + -2)
{-2..1}
DISCRETE aux112 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00011 + -2)
{-2..1}
BOOL aux113 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00008 in int(2..3))
BOOL aux114 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00011 in int(2..3))
BOOL aux115 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00010 in int(2..3))
DISCRETE aux116 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00005 + -2)
{-2..1}
BOOL aux117 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00005 in int(2..3))
DISCRETE aux118 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00008 + -2)
{-2..1}
DISCRETE aux119 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00009 + -2)
{-2..1}
DISCRETE aux120 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00007 + -2)
{-2..1}
DISCRETE aux121 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00006 + -2)
{-2..1}
BOOL aux122 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00004 in int(2..3))
DISCRETE aux123 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00005 + -2)
{-2..1}
DISCRETE aux124 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00004 + -2)
{-2..1}
DISCRETE aux125 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00003 + -2)
{-2..1}
DISCRETE aux126 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00002 + -2)
{-2..1}
DISCRETE aux127 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00006 + -2)
{-2..1}
BOOL aux128 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00009 in int(2..3))
BOOL aux129 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00006 in int(2..3))
DISCRETE aux130 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00003 + -2)
{-2..1}
DISCRETE aux131 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00004 + -2)
{-2..1}
BOOL aux132 #(1 != actionTypes_00002)
BOOL aux133 #(1 != actionTypes_00003)
BOOL aux134 #(1 != actionTypes_00004)
BOOL aux135 #(1 != actionTypes_00005)
BOOL aux136 #(1 != actionTypes_00006)
BOOL aux137 #(1 != actionTypes_00007)
BOOL aux138 #(1 != actionTypes_00008)
BOOL aux139 #(1 != actionTypes_00009)
BOOL aux140 #(1 != actionTypes_00010)
BOOL aux141 #(1 != actionTypes_00011)
BOOL aux142 #(2 != actionTypes_00003)
BOOL aux143 #(2 != actionTypes_00004)
BOOL aux144 #(2 != actionTypes_00005)
BOOL aux145 #(2 != actionTypes_00006)
BOOL aux146 #(2 != actionTypes_00007)
BOOL aux147 #(2 != actionTypes_00008)
BOOL aux148 #(2 != actionTypes_00009)
BOOL aux149 #(2 != actionTypes_00010)
BOOL aux150 #(2 != actionTypes_00011)
BOOL aux151 #(((7=actionTypes_00002) /\ (actionFrom_00002 != 3)) \/ ((8=actionTypes_00002) /\ (actionFrom_00002 != 3)) \/ (1=actionTypes_00002) \/ (3=actionTypes_00002) \/ (5=actionTypes_00002) \/ (6=actionTypes_00002) \/ ((4=actionTypes_00002) /\ (actionTo_00002 != 3)))
BOOL aux152 #(((7=actionTypes_00003) /\ (actionFrom_00003 != 3)) \/ ((8=actionTypes_00003) /\ (actionFrom_00003 != 3)) \/ (1=actionTypes_00003) \/ (2=actionTypes_00003) \/ (3=actionTypes_00003) \/ (5=actionTypes_00003) \/ (6=actionTypes_00003) \/ ((4=actionTypes_00003) /\ (actionTo_00003 != 3)))
BOOL aux153 #(((7=actionTypes_00004) /\ (actionFrom_00004 != 3)) \/ ((8=actionTypes_00004) /\ (actionFrom_00004 != 3)) \/ (1=actionTypes_00004) \/ (2=actionTypes_00004) \/ (3=actionTypes_00004) \/ (5=actionTypes_00004) \/ (6=actionTypes_00004) \/ ((4=actionTypes_00004) /\ (actionTo_00004 != 3)))
BOOL aux154 #(((7=actionTypes_00005) /\ (actionFrom_00005 != 3)) \/ ((8=actionTypes_00005) /\ (actionFrom_00005 != 3)) \/ (1=actionTypes_00005) \/ (2=actionTypes_00005) \/ (3=actionTypes_00005) \/ (5=actionTypes_00005) \/ (6=actionTypes_00005) \/ ((4=actionTypes_00005) /\ (actionTo_00005 != 3)))
BOOL aux155 #(((7=actionTypes_00006) /\ (actionFrom_00006 != 3)) \/ ((8=actionTypes_00006) /\ (actionFrom_00006 != 3)) \/ (1=actionTypes_00006) \/ (2=actionTypes_00006) \/ (3=actionTypes_00006) \/ (5=actionTypes_00006) \/ (6=actionTypes_00006) \/ ((4=actionTypes_00006) /\ (actionTo_00006 != 3)))
BOOL aux156 #(((7=actionTypes_00007) /\ (actionFrom_00007 != 3)) \/ ((8=actionTypes_00007) /\ (actionFrom_00007 != 3)) \/ (1=actionTypes_00007) \/ (2=actionTypes_00007) \/ (3=actionTypes_00007) \/ (5=actionTypes_00007) \/ (6=actionTypes_00007) \/ ((4=actionTypes_00007) /\ (actionTo_00007 != 3)))
BOOL aux157 #(((7=actionTypes_00008) /\ (actionFrom_00008 != 3)) \/ ((8=actionTypes_00008) /\ (actionFrom_00008 != 3)) \/ (1=actionTypes_00008) \/ (2=actionTypes_00008) \/ (3=actionTypes_00008) \/ (5=actionTypes_00008) \/ (6=actionTypes_00008) \/ ((4=actionTypes_00008) /\ (actionTo_00008 != 3)))
BOOL aux158 #(((7=actionTypes_00009) /\ (actionFrom_00009 != 3)) \/ ((8=actionTypes_00009) /\ (actionFrom_00009 != 3)) \/ (1=actionTypes_00009) \/ (2=actionTypes_00009) \/ (3=actionTypes_00009) \/ (5=actionTypes_00009) \/ (6=actionTypes_00009) \/ ((4=actionTypes_00009) /\ (actionTo_00009 != 3)))
BOOL aux159 #(((7=actionTypes_00010) /\ (actionFrom_00010 != 3)) \/ ((8=actionTypes_00010) /\ (actionFrom_00010 != 3)) \/ (1=actionTypes_00010) \/ (2=actionTypes_00010) \/ (3=actionTypes_00010) \/ (5=actionTypes_00010) \/ (6=actionTypes_00010) \/ ((4=actionTypes_00010) /\ (actionTo_00010 != 3)))
BOOL aux160 #(((7=actionTypes_00011) /\ (actionFrom_00011 != 3)) \/ ((8=actionTypes_00011) /\ (actionFrom_00011 != 3)) \/ (1=actionTypes_00011) \/ (2=actionTypes_00011) \/ (3=actionTypes_00011) \/ (5=actionTypes_00011) \/ (6=actionTypes_00011) \/ ((4=actionTypes_00011) /\ (actionTo_00011 != 3)))
BOOL aux161 #(4=actionTypes_00002)
BOOL aux162 #((2=actionTypes_00003) \/ (4=actionTypes_00003))
BOOL aux163 #((2=actionTypes_00004) \/ (4=actionTypes_00004))
BOOL aux164 #((2=actionTypes_00005) \/ (4=actionTypes_00005))
BOOL aux165 #((2=actionTypes_00006) \/ (4=actionTypes_00006))
BOOL aux166 #((2=actionTypes_00007) \/ (4=actionTypes_00007))
BOOL aux167 #((2=actionTypes_00008) \/ (4=actionTypes_00008))
BOOL aux168 #((2=actionTypes_00009) \/ (4=actionTypes_00009))
BOOL aux169 #((2=actionTypes_00010) \/ (4=actionTypes_00010))
BOOL aux170 #((2=actionTypes_00011) \/ (4=actionTypes_00011))
BOOL aux171 #(1=actionTypes_00002)
BOOL aux172 #(1=actionTypes_00002)
BOOL aux173 #(1=actionTypes_00002)
BOOL aux174 #(1=actionTypes_00002)
BOOL aux175 #(1=actionTypes_00002)
DISCRETE aux176 #(pointers_00000_00002 + -1)
{-1..5}
BOOL aux177 #(1=actionTypes_00003)
BOOL aux178 #(1=actionTypes_00003)
BOOL aux179 #(1=actionTypes_00003)
BOOL aux180 #(1=actionTypes_00003)
BOOL aux181 #(1=actionTypes_00003)
DISCRETE aux182 #(pointers_00000_00003 + -1)
{-1..5}
BOOL aux183 #(1=actionTypes_00004)
BOOL aux184 #(1=actionTypes_00004)
BOOL aux185 #(1=actionTypes_00004)
BOOL aux186 #(1=actionTypes_00004)
BOOL aux187 #(1=actionTypes_00004)
DISCRETE aux188 #(pointers_00000_00004 + -1)
{-1..5}
BOOL aux189 #(1=actionTypes_00005)
BOOL aux190 #(1=actionTypes_00005)
BOOL aux191 #(1=actionTypes_00005)
BOOL aux192 #(1=actionTypes_00005)
BOOL aux193 #(1=actionTypes_00005)
DISCRETE aux194 #(pointers_00000_00005 + -1)
{-1..5}
BOOL aux195 #(1=actionTypes_00006)
BOOL aux196 #(1=actionTypes_00006)
BOOL aux197 #(1=actionTypes_00006)
BOOL aux198 #(1=actionTypes_00006)
BOOL aux199 #(1=actionTypes_00006)
DISCRETE aux200 #(pointers_00000_00006 + -1)
{-1..5}
BOOL aux201 #(1=actionTypes_00007)
BOOL aux202 #(1=actionTypes_00007)
BOOL aux203 #(1=actionTypes_00007)
BOOL aux204 #(1=actionTypes_00007)
BOOL aux205 #(1=actionTypes_00007)
DISCRETE aux206 #(pointers_00000_00007 + -1)
{-1..5}
BOOL aux207 #(1=actionTypes_00008)
BOOL aux208 #(1=actionTypes_00008)
BOOL aux209 #(1=actionTypes_00008)
BOOL aux210 #(1=actionTypes_00008)
BOOL aux211 #(1=actionTypes_00008)
DISCRETE aux212 #(pointers_00000_00008 + -1)
{-1..5}
BOOL aux213 #(1=actionTypes_00009)
BOOL aux214 #(1=actionTypes_00009)
BOOL aux215 #(1=actionTypes_00009)
BOOL aux216 #(1=actionTypes_00009)
BOOL aux217 #(1=actionTypes_00009)
DISCRETE aux218 #(pointers_00000_00009 + -1)
{-1..5}
BOOL aux219 #(1=actionTypes_00010)
BOOL aux220 #(1=actionTypes_00010)
BOOL aux221 #(1=actionTypes_00010)
BOOL aux222 #(1=actionTypes_00010)
BOOL aux223 #(1=actionTypes_00010)
DISCRETE aux224 #(pointers_00000_00010 + -1)
{-1..5}
BOOL aux225 #(1=actionTypes_00011)
BOOL aux226 #(1=actionTypes_00011)
BOOL aux227 #(1=actionTypes_00011)
BOOL aux228 #(1=actionTypes_00011)
BOOL aux229 #(1=actionTypes_00011)
DISCRETE aux230 #(pointers_00000_00011 + -1)
{-1..5}
BOOL aux231 #(2=actionTypes_00003)
BOOL aux232 #(2=actionTypes_00003)
BOOL aux233 #(2=actionTypes_00003)
BOOL aux234 #(2=actionTypes_00003)
BOOL aux235 #(2=actionTypes_00003)
BOOL aux236 #(2=actionTypes_00003)
BOOL aux237 #(2=actionTypes_00003)
BOOL aux238 #(2=actionTypes_00003)
DISCRETE aux239 #(pointers_00001_00003 + -1)
{-1..5}
BOOL aux240 #(2=actionTypes_00004)
BOOL aux241 #(2=actionTypes_00004)
BOOL aux242 #(2=actionTypes_00004)
BOOL aux243 #(2=actionTypes_00004)
BOOL aux244 #(2=actionTypes_00004)
BOOL aux245 #(2=actionTypes_00004)
BOOL aux246 #(2=actionTypes_00004)
BOOL aux247 #(2=actionTypes_00004)
DISCRETE aux248 #(pointers_00001_00004 + -1)
{-1..5}
BOOL aux249 #(2=actionTypes_00005)
BOOL aux250 #(2=actionTypes_00005)
BOOL aux251 #(2=actionTypes_00005)
BOOL aux252 #(2=actionTypes_00005)
BOOL aux253 #(2=actionTypes_00005)
BOOL aux254 #(2=actionTypes_00005)
BOOL aux255 #(2=actionTypes_00005)
BOOL aux256 #(2=actionTypes_00005)
DISCRETE aux257 #(pointers_00001_00005 + -1)
{-1..5}
BOOL aux258 #(2=actionTypes_00006)
BOOL aux259 #(2=actionTypes_00006)
BOOL aux260 #(2=actionTypes_00006)
BOOL aux261 #(2=actionTypes_00006)
BOOL aux262 #(2=actionTypes_00006)
BOOL aux263 #(2=actionTypes_00006)
BOOL aux264 #(2=actionTypes_00006)
BOOL aux265 #(2=actionTypes_00006)
DISCRETE aux266 #(pointers_00001_00006 + -1)
{-1..5}
BOOL aux267 #(2=actionTypes_00007)
BOOL aux268 #(2=actionTypes_00007)
BOOL aux269 #(2=actionTypes_00007)
BOOL aux270 #(2=actionTypes_00007)
BOOL aux271 #(2=actionTypes_00007)
BOOL aux272 #(2=actionTypes_00007)
BOOL aux273 #(2=actionTypes_00007)
BOOL aux274 #(2=actionTypes_00007)
DISCRETE aux275 #(pointers_00001_00007 + -1)
{-1..5}
BOOL aux276 #(2=actionTypes_00008)
BOOL aux277 #(2=actionTypes_00008)
BOOL aux278 #(2=actionTypes_00008)
BOOL aux279 #(2=actionTypes_00008)
BOOL aux280 #(2=actionTypes_00008)
BOOL aux281 #(2=actionTypes_00008)
BOOL aux282 #(2=actionTypes_00008)
BOOL aux283 #(2=actionTypes_00008)
DISCRETE aux284 #(pointers_00001_00008 + -1)
{-1..5}
BOOL aux285 #(2=actionTypes_00009)
BOOL aux286 #(2=actionTypes_00009)
BOOL aux287 #(2=actionTypes_00009)
BOOL aux288 #(2=actionTypes_00009)
BOOL aux289 #(2=actionTypes_00009)
BOOL aux290 #(2=actionTypes_00009)
BOOL aux291 #(2=actionTypes_00009)
BOOL aux292 #(2=actionTypes_00009)
DISCRETE aux293 #(pointers_00001_00009 + -1)
{-1..5}
BOOL aux294 #(2=actionTypes_00010)
BOOL aux295 #(2=actionTypes_00010)
BOOL aux296 #(2=actionTypes_00010)
BOOL aux297 #(2=actionTypes_00010)
BOOL aux298 #(2=actionTypes_00010)
BOOL aux299 #(2=actionTypes_00010)
BOOL aux300 #(2=actionTypes_00010)
BOOL aux301 #(2=actionTypes_00010)
DISCRETE aux302 #(pointers_00001_00010 + -1)
{-1..5}
BOOL aux303 #(2=actionTypes_00011)
BOOL aux304 #(2=actionTypes_00011)
BOOL aux305 #(2=actionTypes_00011)
BOOL aux306 #(2=actionTypes_00011)
BOOL aux307 #(2=actionTypes_00011)
BOOL aux308 #(2=actionTypes_00011)
BOOL aux309 #(3=actionTypes_00002)
BOOL aux310 #(3=actionTypes_00002)
BOOL aux311 #(3=actionTypes_00002)
BOOL aux312 #(3=actionTypes_00002)
BOOL aux313 #(3=actionTypes_00002)
BOOL aux314 #(3=actionTypes_00002)
BOOL aux315 #(3=actionTypes_00003)
BOOL aux316 #(3=actionTypes_00003)
BOOL aux317 #(3=actionTypes_00003)
BOOL aux318 #(3=actionTypes_00003)
BOOL aux319 #(3=actionTypes_00003)
BOOL aux320 #(3=actionTypes_00003)
BOOL aux321 #(3=actionTypes_00004)
BOOL aux322 #(3=actionTypes_00004)
BOOL aux323 #(3=actionTypes_00004)
BOOL aux324 #(3=actionTypes_00004)
BOOL aux325 #(3=actionTypes_00004)
BOOL aux326 #(3=actionTypes_00004)
BOOL aux327 #(3=actionTypes_00005)
BOOL aux328 #(3=actionTypes_00005)
BOOL aux329 #(3=actionTypes_00005)
BOOL aux330 #(3=actionTypes_00005)
BOOL aux331 #(3=actionTypes_00005)
BOOL aux332 #(3=actionTypes_00005)
BOOL aux333 #(3=actionTypes_00006)
BOOL aux334 #(3=actionTypes_00006)
BOOL aux335 #(3=actionTypes_00006)
BOOL aux336 #(3=actionTypes_00006)
BOOL aux337 #(3=actionTypes_00006)
BOOL aux338 #(3=actionTypes_00006)
BOOL aux339 #(3=actionTypes_00007)
BOOL aux340 #(3=actionTypes_00007)
BOOL aux341 #(3=actionTypes_00007)
BOOL aux342 #(3=actionTypes_00007)
BOOL aux343 #(3=actionTypes_00007)
BOOL aux344 #(3=actionTypes_00007)
BOOL aux345 #(3=actionTypes_00008)
BOOL aux346 #(3=actionTypes_00008)
BOOL aux347 #(3=actionTypes_00008)
BOOL aux348 #(3=actionTypes_00008)
BOOL aux349 #(3=actionTypes_00008)
BOOL aux350 #(3=actionTypes_00008)
BOOL aux351 #(3=actionTypes_00009)
BOOL aux352 #(3=actionTypes_00009)
BOOL aux353 #(3=actionTypes_00009)
BOOL aux354 #(3=actionTypes_00009)
BOOL aux355 #(3=actionTypes_00009)
BOOL aux356 #(3=actionTypes_00009)
BOOL aux357 #(3=actionTypes_00010)
BOOL aux358 #(3=actionTypes_00010)
BOOL aux359 #(3=actionTypes_00010)
BOOL aux360 #(3=actionTypes_00010)
BOOL aux361 #(3=actionTypes_00010)
BOOL aux362 #(3=actionTypes_00010)
BOOL aux363 #(3=actionTypes_00011)
BOOL aux364 #(3=actionTypes_00011)
BOOL aux365 #(3=actionTypes_00011)
BOOL aux366 #(3=actionTypes_00011)
BOOL aux367 #(3=actionTypes_00011)
BOOL aux368 #(3=actionTypes_00011)
BOOL aux369 #(4=actionTypes_00002)
BOOL aux370 #(4=actionTypes_00002)
BOOL aux371 #(4=actionTypes_00002)
BOOL aux372 #(4=actionTypes_00002)
BOOL aux373 #(4=actionTypes_00002)
BOOL aux374 #(4=actionTypes_00003)
BOOL aux375 #(4=actionTypes_00003)
BOOL aux376 #(4=actionTypes_00003)
BOOL aux377 #(4=actionTypes_00003)
BOOL aux378 #(4=actionTypes_00003)
BOOL aux379 #(4=actionTypes_00003)
BOOL aux380 #(4=actionTypes_00004)
BOOL aux381 #(4=actionTypes_00004)
BOOL aux382 #(4=actionTypes_00004)
BOOL aux383 #(4=actionTypes_00004)
BOOL aux384 #(4=actionTypes_00004)
BOOL aux385 #(4=actionTypes_00004)
BOOL aux386 #(4=actionTypes_00005)
BOOL aux387 #(4=actionTypes_00005)
BOOL aux388 #(4=actionTypes_00005)
BOOL aux389 #(4=actionTypes_00005)
BOOL aux390 #(4=actionTypes_00005)
BOOL aux391 #(4=actionTypes_00005)
BOOL aux392 #(4=actionTypes_00006)
BOOL aux393 #(4=actionTypes_00006)
BOOL aux394 #(4=actionTypes_00006)
BOOL aux395 #(4=actionTypes_00006)
BOOL aux396 #(4=actionTypes_00006)
BOOL aux397 #(4=actionTypes_00006)
BOOL aux398 #(4=actionTypes_00007)
BOOL aux399 #(4=actionTypes_00007)
BOOL aux400 #(4=actionTypes_00007)
BOOL aux401 #(4=actionTypes_00007)
BOOL aux402 #(4=actionTypes_00007)
BOOL aux403 #(4=actionTypes_00007)
BOOL aux404 #(4=actionTypes_00008)
BOOL aux405 #(4=actionTypes_00008)
BOOL aux406 #(4=actionTypes_00008)
BOOL aux407 #(4=actionTypes_00008)
BOOL aux408 #(4=actionTypes_00008)
BOOL aux409 #(4=actionTypes_00008)
BOOL aux410 #(4=actionTypes_00009)
BOOL aux411 #(4=actionTypes_00009)
BOOL aux412 #(4=actionTypes_00009)
BOOL aux413 #(4=actionTypes_00009)
BOOL aux414 #(4=actionTypes_00009)
BOOL aux415 #(4=actionTypes_00009)
BOOL aux416 #(4=actionTypes_00010)
BOOL aux417 #(4=actionTypes_00010)
BOOL aux418 #(4=actionTypes_00010)
BOOL aux419 #(4=actionTypes_00010)
BOOL aux420 #(4=actionTypes_00010)
BOOL aux421 #(4=actionTypes_00010)
BOOL aux422 #(4=actionTypes_00011)
BOOL aux423 #(4=actionTypes_00011)
BOOL aux424 #(4=actionTypes_00011)
BOOL aux425 #(4=actionTypes_00011)
BOOL aux426 #(4=actionTypes_00011)
BOOL aux427 #(4=actionTypes_00011)
BOOL aux428 #(5=actionTypes_00002)
BOOL aux429 #(5=actionTypes_00002)
BOOL aux430 #(5=actionTypes_00002)
BOOL aux431 #(5=actionTypes_00002)
BOOL aux432 #(5=actionTypes_00002)
BOOL aux433 #(5=actionTypes_00002)
BOOL aux434 #(5=actionTypes_00002)
BOOL aux435 #(5=actionTypes_00002)
BOOL aux436 #(5=actionTypes_00003)
BOOL aux437 #(5=actionTypes_00003)
BOOL aux438 #(5=actionTypes_00003)
BOOL aux439 #(5=actionTypes_00003)
BOOL aux440 #(5=actionTypes_00003)
BOOL aux441 #(5=actionTypes_00003)
BOOL aux442 #(5=actionTypes_00003)
BOOL aux443 #(5=actionTypes_00003)
BOOL aux444 #(5=actionTypes_00004)
BOOL aux445 #(5=actionTypes_00004)
BOOL aux446 #(5=actionTypes_00004)
BOOL aux447 #(5=actionTypes_00004)
BOOL aux448 #(5=actionTypes_00004)
BOOL aux449 #(5=actionTypes_00004)
BOOL aux450 #(5=actionTypes_00004)
BOOL aux451 #(5=actionTypes_00004)
BOOL aux452 #(5=actionTypes_00005)
BOOL aux453 #(5=actionTypes_00005)
BOOL aux454 #(5=actionTypes_00005)
BOOL aux455 #(5=actionTypes_00005)
BOOL aux456 #(5=actionTypes_00005)
BOOL aux457 #(5=actionTypes_00005)
BOOL aux458 #(5=actionTypes_00005)
BOOL aux459 #(5=actionTypes_00005)
BOOL aux460 #(5=actionTypes_00006)
BOOL aux461 #(5=actionTypes_00006)
BOOL aux462 #(5=actionTypes_00006)
BOOL aux463 #(5=actionTypes_00006)
BOOL aux464 #(5=actionTypes_00006)
BOOL aux465 #(5=actionTypes_00006)
BOOL aux466 #(5=actionTypes_00006)
BOOL aux467 #(5=actionTypes_00006)
BOOL aux468 #(5=actionTypes_00007)
BOOL aux469 #(5=actionTypes_00007)
BOOL aux470 #(5=actionTypes_00007)
BOOL aux471 #(5=actionTypes_00007)
BOOL aux472 #(5=actionTypes_00007)
BOOL aux473 #(5=actionTypes_00007)
BOOL aux474 #(5=actionTypes_00007)
BOOL aux475 #(5=actionTypes_00007)
BOOL aux476 #(5=actionTypes_00008)
BOOL aux477 #(5=actionTypes_00008)
BOOL aux478 #(5=actionTypes_00008)
BOOL aux479 #(5=actionTypes_00008)
BOOL aux480 #(5=actionTypes_00008)
BOOL aux481 #(5=actionTypes_00008)
BOOL aux482 #(5=actionTypes_00008)
BOOL aux483 #(5=actionTypes_00008)
BOOL aux484 #(5=actionTypes_00009)
BOOL aux485 #(5=actionTypes_00009)
BOOL aux486 #(5=actionTypes_00009)
BOOL aux487 #(5=actionTypes_00009)
BOOL aux488 #(5=actionTypes_00009)
BOOL aux489 #(5=actionTypes_00009)
BOOL aux490 #(5=actionTypes_00009)
BOOL aux491 #(5=actionTypes_00009)
BOOL aux492 #(5=actionTypes_00010)
BOOL aux493 #(5=actionTypes_00010)
BOOL aux494 #(5=actionTypes_00010)
BOOL aux495 #(5=actionTypes_00010)
BOOL aux496 #(5=actionTypes_00010)
BOOL aux497 #(5=actionTypes_00010)
BOOL aux498 #(5=actionTypes_00010)
BOOL aux499 #(5=actionTypes_00010)
BOOL aux500 #(5=actionTypes_00011)
BOOL aux501 #(5=actionTypes_00011)
BOOL aux502 #(5=actionTypes_00011)
BOOL aux503 #(5=actionTypes_00011)
BOOL aux504 #(5=actionTypes_00011)
BOOL aux505 #(5=actionTypes_00011)
BOOL aux506 #(5=actionTypes_00011)
BOOL aux507 #(5=actionTypes_00011)
BOOL aux508 #(6=actionTypes_00002)
BOOL aux509 #(6=actionTypes_00002)
BOOL aux510 #(6=actionTypes_00002)
BOOL aux511 #(6=actionTypes_00002)
BOOL aux512 #(6=actionTypes_00002)
BOOL aux513 #(6=actionTypes_00002)
BOOL aux514 #(6=actionTypes_00002)
BOOL aux515 #(6=actionTypes_00003)
BOOL aux516 #(6=actionTypes_00003)
BOOL aux517 #(6=actionTypes_00003)
BOOL aux518 #(6=actionTypes_00003)
BOOL aux519 #(6=actionTypes_00003)
BOOL aux520 #(6=actionTypes_00003)
BOOL aux521 #(6=actionTypes_00003)
BOOL aux522 #(6=actionTypes_00004)
BOOL aux523 #(6=actionTypes_00004)
BOOL aux524 #(6=actionTypes_00004)
BOOL aux525 #(6=actionTypes_00004)
BOOL aux526 #(6=actionTypes_00004)
BOOL aux527 #(6=actionTypes_00004)
BOOL aux528 #(6=actionTypes_00004)
BOOL aux529 #(6=actionTypes_00005)
BOOL aux530 #(6=actionTypes_00005)
BOOL aux531 #(6=actionTypes_00005)
BOOL aux532 #(6=actionTypes_00005)
BOOL aux533 #(6=actionTypes_00005)
BOOL aux534 #(6=actionTypes_00005)
BOOL aux535 #(6=actionTypes_00005)
BOOL aux536 #(6=actionTypes_00006)
BOOL aux537 #(6=actionTypes_00006)
BOOL aux538 #(6=actionTypes_00006)
BOOL aux539 #(6=actionTypes_00006)
BOOL aux540 #(6=actionTypes_00006)
BOOL aux541 #(6=actionTypes_00006)
BOOL aux542 #(6=actionTypes_00006)
BOOL aux543 #(6=actionTypes_00007)
BOOL aux544 #(6=actionTypes_00007)
BOOL aux545 #(6=actionTypes_00007)
BOOL aux546 #(6=actionTypes_00007)
BOOL aux547 #(6=actionTypes_00007)
BOOL aux548 #(6=actionTypes_00007)
BOOL aux549 #(6=actionTypes_00007)
BOOL aux550 #(6=actionTypes_00008)
BOOL aux551 #(6=actionTypes_00008)
BOOL aux552 #(6=actionTypes_00008)
BOOL aux553 #(6=actionTypes_00008)
BOOL aux554 #(6=actionTypes_00008)
BOOL aux555 #(6=actionTypes_00008)
BOOL aux556 #(6=actionTypes_00008)
BOOL aux557 #(6=actionTypes_00009)
BOOL aux558 #(6=actionTypes_00009)
BOOL aux559 #(6=actionTypes_00009)
BOOL aux560 #(6=actionTypes_00009)
BOOL aux561 #(6=actionTypes_00009)
BOOL aux562 #(6=actionTypes_00009)
BOOL aux563 #(6=actionTypes_00009)
BOOL aux564 #(6=actionTypes_00010)
BOOL aux565 #(6=actionTypes_00010)
BOOL aux566 #(6=actionTypes_00010)
BOOL aux567 #(6=actionTypes_00010)
BOOL aux568 #(6=actionTypes_00010)
BOOL aux569 #(6=actionTypes_00010)
BOOL aux570 #(6=actionTypes_00010)
BOOL aux571 #(6=actionTypes_00011)
BOOL aux572 #(6=actionTypes_00011)
BOOL aux573 #(6=actionTypes_00011)
BOOL aux574 #(6=actionTypes_00011)
BOOL aux575 #(6=actionTypes_00011)
BOOL aux576 #(6=actionTypes_00011)
BOOL aux577 #(6=actionTypes_00011)
BOOL aux578 #(7=actionTypes_00002)
BOOL aux579 #(7=actionTypes_00002)
BOOL aux580 #(7=actionTypes_00002)
BOOL aux581 #(7=actionTypes_00002)
BOOL aux582 #(7=actionTypes_00002)
BOOL aux583 #(7=actionTypes_00002)
BOOL aux584 #(7=actionTypes_00002)
BOOL aux585 #(7=actionTypes_00003)
BOOL aux586 #(7=actionTypes_00003)
BOOL aux587 #(7=actionTypes_00003)
BOOL aux588 #(7=actionTypes_00003)
BOOL aux589 #(7=actionTypes_00003)
BOOL aux590 #(7=actionTypes_00003)
BOOL aux591 #(7=actionTypes_00003)
BOOL aux592 #(7=actionTypes_00004)
BOOL aux593 #(7=actionTypes_00004)
BOOL aux594 #(7=actionTypes_00004)
BOOL aux595 #(7=actionTypes_00004)
BOOL aux596 #(7=actionTypes_00004)
BOOL aux597 #(7=actionTypes_00004)
BOOL aux598 #(7=actionTypes_00004)
BOOL aux599 #(7=actionTypes_00005)
BOOL aux600 #(7=actionTypes_00005)
BOOL aux601 #(7=actionTypes_00005)
BOOL aux602 #(7=actionTypes_00005)
BOOL aux603 #(7=actionTypes_00005)
BOOL aux604 #(7=actionTypes_00005)
BOOL aux605 #(7=actionTypes_00005)
BOOL aux606 #(7=actionTypes_00006)
BOOL aux607 #(7=actionTypes_00006)
BOOL aux608 #(7=actionTypes_00006)
BOOL aux609 #(7=actionTypes_00006)
BOOL aux610 #(7=actionTypes_00006)
BOOL aux611 #(7=actionTypes_00006)
BOOL aux612 #(7=actionTypes_00006)
BOOL aux613 #(7=actionTypes_00007)
BOOL aux614 #(7=actionTypes_00007)
BOOL aux615 #(7=actionTypes_00007)
BOOL aux616 #(7=actionTypes_00007)
BOOL aux617 #(7=actionTypes_00007)
BOOL aux618 #(7=actionTypes_00007)
BOOL aux619 #(7=actionTypes_00007)
BOOL aux620 #(7=actionTypes_00008)
BOOL aux621 #(7=actionTypes_00008)
BOOL aux622 #(7=actionTypes_00008)
BOOL aux623 #(7=actionTypes_00008)
BOOL aux624 #(7=actionTypes_00008)
BOOL aux625 #(7=actionTypes_00008)
BOOL aux626 #(7=actionTypes_00008)
BOOL aux627 #(7=actionTypes_00009)
BOOL aux628 #(7=actionTypes_00009)
BOOL aux629 #(7=actionTypes_00009)
BOOL aux630 #(7=actionTypes_00009)
BOOL aux631 #(7=actionTypes_00009)
BOOL aux632 #(7=actionTypes_00009)
BOOL aux633 #(7=actionTypes_00009)
BOOL aux634 #(7=actionTypes_00010)
BOOL aux635 #(7=actionTypes_00010)
BOOL aux636 #(7=actionTypes_00010)
BOOL aux637 #(7=actionTypes_00010)
BOOL aux638 #(7=actionTypes_00010)
BOOL aux639 #(7=actionTypes_00010)
BOOL aux640 #(7=actionTypes_00010)
BOOL aux641 #(7=actionTypes_00011)
BOOL aux642 #(7=actionTypes_00011)
BOOL aux643 #(7=actionTypes_00011)
BOOL aux644 #(7=actionTypes_00011)
BOOL aux645 #(7=actionTypes_00011)
BOOL aux646 #(7=actionTypes_00011)
BOOL aux647 #(7=actionTypes_00011)
BOOL aux648 #(8=actionTypes_00002)
BOOL aux649 #(8=actionTypes_00002)
BOOL aux650 #(8=actionTypes_00002)
BOOL aux651 #(8=actionTypes_00002)
BOOL aux652 #(8=actionTypes_00002)
BOOL aux653 #(8=actionTypes_00002)
BOOL aux654 #(8=actionTypes_00003)
BOOL aux655 #(8=actionTypes_00003)
BOOL aux656 #(8=actionTypes_00003)
BOOL aux657 #(8=actionTypes_00003)
BOOL aux658 #(8=actionTypes_00003)
BOOL aux659 #(8=actionTypes_00003)
BOOL aux660 #(8=actionTypes_00004)
BOOL aux661 #(8=actionTypes_00004)
BOOL aux662 #(8=actionTypes_00004)
BOOL aux663 #(8=actionTypes_00004)
BOOL aux664 #(8=actionTypes_00004)
BOOL aux665 #(8=actionTypes_00004)
BOOL aux666 #(8=actionTypes_00005)
BOOL aux667 #(8=actionTypes_00005)
BOOL aux668 #(8=actionTypes_00005)
BOOL aux669 #(8=actionTypes_00005)
BOOL aux670 #(8=actionTypes_00005)
BOOL aux671 #(8=actionTypes_00005)
BOOL aux672 #(8=actionTypes_00006)
BOOL aux673 #(8=actionTypes_00006)
BOOL aux674 #(8=actionTypes_00006)
BOOL aux675 #(8=actionTypes_00006)
BOOL aux676 #(8=actionTypes_00006)
BOOL aux677 #(8=actionTypes_00006)
BOOL aux678 #(8=actionTypes_00007)
BOOL aux679 #(8=actionTypes_00007)
BOOL aux680 #(8=actionTypes_00007)
BOOL aux681 #(8=actionTypes_00007)
BOOL aux682 #(8=actionTypes_00007)
BOOL aux683 #(8=actionTypes_00007)
BOOL aux684 #(8=actionTypes_00008)
BOOL aux685 #(8=actionTypes_00008)
BOOL aux686 #(8=actionTypes_00008)
BOOL aux687 #(8=actionTypes_00008)
BOOL aux688 #(8=actionTypes_00008)
BOOL aux689 #(8=actionTypes_00008)
BOOL aux690 #(8=actionTypes_00009)
BOOL aux691 #(8=actionTypes_00009)
BOOL aux692 #(8=actionTypes_00009)
BOOL aux693 #(8=actionTypes_00009)
BOOL aux694 #(8=actionTypes_00009)
BOOL aux695 #(8=actionTypes_00009)
BOOL aux696 #(8=actionTypes_00010)
BOOL aux697 #(8=actionTypes_00010)
BOOL aux698 #(8=actionTypes_00010)
BOOL aux699 #(8=actionTypes_00010)
BOOL aux700 #(8=actionTypes_00010)
BOOL aux701 #(8=actionTypes_00010)
BOOL aux702 #(8=actionTypes_00011)
BOOL aux703 #(8=actionTypes_00011)
BOOL aux704 #(8=actionTypes_00011)
BOOL aux705 #(8=actionTypes_00011)
BOOL aux706 #(8=actionTypes_00011)
BOOL aux707 #(8=actionTypes_00011)
**VARIABLES**
ALIAS output[3]=[0, 2, 6]
**VARIABLES**
ALIAS input[6]=[8, 8, 5, 3, 12, 6]
**SEARCH**
PRINT[[statePlaces_00002_00002],[statePlaces_00002_00003],[statePlaces_00002_00004],[statePlaces_00002_00005],[statePlaces_00002_00006],[statePlaces_00002_00007],[statePlaces_00002_00008],[statePlaces_00002_00009],[statePlaces_00002_00010],[statePlaces_00002_00011],[statePlaces_00003_00002],[statePlaces_00003_00003],[statePlaces_00003_00004],[statePlaces_00003_00005],[statePlaces_00003_00006],[statePlaces_00003_00007],[statePlaces_00003_00008],[statePlaces_00003_00009],[statePlaces_00003_00010],[statePlaces_00003_00011],[actionTypes_00002],[actionTypes_00003],[actionTypes_00004],[actionTypes_00005],[actionTypes_00006],[actionTypes_00007],[actionTypes_00008],[actionTypes_00009],[actionTypes_00010],[actionTypes_00011],[actionFrom_00002],[actionFrom_00003],[actionFrom_00004],[actionFrom_00005],[actionFrom_00006],[actionFrom_00007],[actionFrom_00008],[actionFrom_00009],[actionFrom_00010],[actionFrom_00011],[actionTo_00002],[actionTo_00003],[actionTo_00004],[actionTo_00005],[actionTo_00006],[actionTo_00007],[actionTo_00008],[actionTo_00009],[actionTo_00010],[actionTo_00011],[pointers_00000_00002],[pointers_00000_00003],[pointers_00000_00004],[pointers_00000_00005],[pointers_00000_00006],[pointers_00000_00007],[pointers_00000_00008],[pointers_00000_00009],[pointers_00000_00010],[pointers_00000_00011],[pointers_00001_00003],[pointers_00001_00004],[pointers_00001_00005],[pointers_00001_00006],[pointers_00001_00007],[pointers_00001_00008],[pointers_00001_00009],[pointers_00001_00010]]
**CONSTRAINTS**
reify(diseq(1,actionTypes_00002), aux132)
reify(diseq(1,actionTypes_00003), aux133)
reify(diseq(1,actionTypes_00004), aux134)
reify(diseq(1,actionTypes_00005), aux135)
reify(diseq(1,actionTypes_00006), aux136)
reify(diseq(1,actionTypes_00007), aux137)
reify(diseq(1,actionTypes_00008), aux138)
reify(diseq(1,actionTypes_00009), aux139)
reify(diseq(1,actionTypes_00010), aux140)
reify(diseq(1,actionTypes_00011), aux141)
reify(diseq(2,actionTypes_00003), aux142)
reify(diseq(2,actionTypes_00004), aux143)
reify(diseq(2,actionTypes_00005), aux144)
reify(diseq(2,actionTypes_00006), aux145)
reify(diseq(2,actionTypes_00007), aux146)
reify(diseq(2,actionTypes_00008), aux147)
reify(diseq(2,actionTypes_00009), aux148)
reify(diseq(2,actionTypes_00010), aux149)
reify(diseq(2,actionTypes_00011), aux150)
reify(watched-or({watched-and({w-literal(actionTypes_00002,7),diseq(actionFrom_00002,3)}),watched-and({w-literal(actionTypes_00002,8),diseq(actionFrom_00002,3)}),w-literal(actionTypes_00002,1),w-literal(actionTypes_00002,3),w-literal(actionTypes_00002,5),w-literal(actionTypes_00002,6),watched-and({w-literal(actionTypes_00002,4),diseq(actionTo_00002,3)})}), aux151)
reify(watched-or({watched-and({w-literal(actionTypes_00003,7),diseq(actionFrom_00003,3)}),watched-and({w-literal(actionTypes_00003,8),diseq(actionFrom_00003,3)}),w-literal(actionTypes_00003,1),w-literal(actionTypes_00003,2),w-literal(actionTypes_00003,3),w-literal(actionTypes_00003,5),w-literal(actionTypes_00003,6),watched-and({w-literal(actionTypes_00003,4),diseq(actionTo_00003,3)})}), aux152)
reify(watched-or({watched-and({w-literal(actionTypes_00004,7),diseq(actionFrom_00004,3)}),watched-and({w-literal(actionTypes_00004,8),diseq(actionFrom_00004,3)}),w-literal(actionTypes_00004,1),w-literal(actionTypes_00004,2),w-literal(actionTypes_00004,3),w-literal(actionTypes_00004,5),w-literal(actionTypes_00004,6),watched-and({w-literal(actionTypes_00004,4),diseq(actionTo_00004,3)})}), aux153)
reify(watched-or({watched-and({w-literal(actionTypes_00005,7),diseq(actionFrom_00005,3)}),watched-and({w-literal(actionTypes_00005,8),diseq(actionFrom_00005,3)}),w-literal(actionTypes_00005,1),w-literal(actionTypes_00005,2),w-literal(actionTypes_00005,3),w-literal(actionTypes_00005,5),w-literal(actionTypes_00005,6),watched-and({w-literal(actionTypes_00005,4),diseq(actionTo_00005,3)})}), aux154)
reify(watched-or({watched-and({w-literal(actionTypes_00006,7),diseq(actionFrom_00006,3)}),watched-and({w-literal(actionTypes_00006,8),diseq(actionFrom_00006,3)}),w-literal(actionTypes_00006,1),w-literal(actionTypes_00006,2),w-literal(actionTypes_00006,3),w-literal(actionTypes_00006,5),w-literal(actionTypes_00006,6),watched-and({w-literal(actionTypes_00006,4),diseq(actionTo_00006,3)})}), aux155)
reify(watched-or({watched-and({w-literal(actionTypes_00007,7),diseq(actionFrom_00007,3)}),watched-and({w-literal(actionTypes_00007,8),diseq(actionFrom_00007,3)}),w-literal(actionTypes_00007,1),w-literal(actionTypes_00007,2),w-literal(actionTypes_00007,3),w-literal(actionTypes_00007,5),w-literal(actionTypes_00007,6),watched-and({w-literal(actionTypes_00007,4),diseq(actionTo_00007,3)})}), aux156)
reify(watched-or({watched-and({w-literal(actionTypes_00008,7),diseq(actionFrom_00008,3)}),watched-and({w-literal(actionTypes_00008,8),diseq(actionFrom_00008,3)}),w-literal(actionTypes_00008,1),w-literal(actionTypes_00008,2),w-literal(actionTypes_00008,3),w-literal(actionTypes_00008,5),w-literal(actionTypes_00008,6),watched-and({w-literal(actionTypes_00008,4),diseq(actionTo_00008,3)})}), aux157)
reify(watched-or({watched-and({w-literal(actionTypes_00009,7),diseq(actionFrom_00009,3)}),watched-and({w-literal(actionTypes_00009,8),diseq(actionFrom_00009,3)}),w-literal(actionTypes_00009,1),w-literal(actionTypes_00009,2),w-literal(actionTypes_00009,3),w-literal(actionTypes_00009,5),w-literal(actionTypes_00009,6),watched-and({w-literal(actionTypes_00009,4),diseq(actionTo_00009,3)})}), aux158)
reify(watched-or({watched-and({w-literal(actionTypes_00010,7),diseq(actionFrom_00010,3)}),watched-and({w-literal(actionTypes_00010,8),diseq(actionFrom_00010,3)}),w-literal(actionTypes_00010,1),w-literal(actionTypes_00010,2),w-literal(actionTypes_00010,3),w-literal(actionTypes_00010,5),w-literal(actionTypes_00010,6),watched-and({w-literal(actionTypes_00010,4),diseq(actionTo_00010,3)})}), aux159)
reify(watched-or({watched-and({w-literal(actionTypes_00011,7),diseq(actionFrom_00011,3)}),watched-and({w-literal(actionTypes_00011,8),diseq(actionFrom_00011,3)}),w-literal(actionTypes_00011,1),w-literal(actionTypes_00011,2),w-literal(actionTypes_00011,3),w-literal(actionTypes_00011,5),w-literal(actionTypes_00011,6),watched-and({w-literal(actionTypes_00011,4),diseq(actionTo_00011,3)})}), aux160)
reify(w-literal(actionTypes_00002,4), aux161)
reify(watched-or({w-literal(actionTypes_00003,2),w-literal(actionTypes_00003,4)}), aux162)
reify(watched-or({w-literal(actionTypes_00004,2),w-literal(actionTypes_00004,4)}), aux163)
reify(watched-or({w-literal(actionTypes_00005,2),w-literal(actionTypes_00005,4)}), aux164)
reify(watched-or({w-literal(actionTypes_00006,2),w-literal(actionTypes_00006,4)}), aux165)
reify(watched-or({w-literal(actionTypes_00007,2),w-literal(actionTypes_00007,4)}), aux166)
reify(watched-or({w-literal(actionTypes_00008,2),w-literal(actionTypes_00008,4)}), aux167)
reify(watched-or({w-literal(actionTypes_00009,2),w-literal(actionTypes_00009,4)}), aux168)
reify(watched-or({w-literal(actionTypes_00010,2),w-literal(actionTypes_00010,4)}), aux169)
reify(watched-or({w-literal(actionTypes_00011,2),w-literal(actionTypes_00011,4)}), aux170)
reify(w-literal(actionTypes_00002,1), aux171)
reify(w-literal(actionTypes_00002,1), aux172)
reify(w-literal(actionTypes_00002,1), aux173)
reify(w-literal(actionTypes_00002,1), aux174)
reify(w-literal(actionTypes_00002,1), aux175)
reify(w-literal(actionTypes_00003,1), aux177)
reify(w-literal(actionTypes_00003,1), aux178)
reify(w-literal(actionTypes_00003,1), aux179)
reify(w-literal(actionTypes_00003,1), aux180)
reify(w-literal(actionTypes_00003,1), aux181)
reify(w-literal(actionTypes_00004,1), aux183)
reify(w-literal(actionTypes_00004,1), aux184)
reify(w-literal(actionTypes_00004,1), aux185)
reify(w-literal(actionTypes_00004,1), aux186)
reify(w-literal(actionTypes_00004,1), aux187)
reify(w-literal(actionTypes_00005,1), aux189)
reify(w-literal(actionTypes_00005,1), aux190)
reify(w-literal(actionTypes_00005,1), aux191)
reify(w-literal(actionTypes_00005,1), aux192)
reify(w-literal(actionTypes_00005,1), aux193)
reify(w-literal(actionTypes_00006,1), aux195)
reify(w-literal(actionTypes_00006,1), aux196)
reify(w-literal(actionTypes_00006,1), aux197)
reify(w-literal(actionTypes_00006,1), aux198)
reify(w-literal(actionTypes_00006,1), aux199)
reify(w-literal(actionTypes_00007,1), aux201)
reify(w-literal(actionTypes_00007,1), aux202)
reify(w-literal(actionTypes_00007,1), aux203)
reify(w-literal(actionTypes_00007,1), aux204)
reify(w-literal(actionTypes_00007,1), aux205)
reify(w-literal(actionTypes_00008,1), aux207)
reify(w-literal(actionTypes_00008,1), aux208)
reify(w-literal(actionTypes_00008,1), aux209)
reify(w-literal(actionTypes_00008,1), aux210)
reify(w-literal(actionTypes_00008,1), aux211)
reify(w-literal(actionTypes_00009,1), aux213)
reify(w-literal(actionTypes_00009,1), aux214)
reify(w-literal(actionTypes_00009,1), aux215)
reify(w-literal(actionTypes_00009,1), aux216)
reify(w-literal(actionTypes_00009,1), aux217)
reify(w-literal(actionTypes_00010,1), aux219)
reify(w-literal(actionTypes_00010,1), aux220)
reify(w-literal(actionTypes_00010,1), aux221)
reify(w-literal(actionTypes_00010,1), aux222)
reify(w-literal(actionTypes_00010,1), aux223)
reify(w-literal(actionTypes_00011,1), aux225)
reify(w-literal(actionTypes_00011,1), aux226)
reify(w-literal(actionTypes_00011,1), aux227)
reify(w-literal(actionTypes_00011,1), aux228)
reify(w-literal(actionTypes_00011,1), aux229)
reify(w-literal(actionTypes_00003,2), aux231)
reify(w-literal(actionTypes_00003,2), aux232)
reify(w-literal(actionTypes_00003,2), aux233)
reify(w-literal(actionTypes_00003,2), aux234)
reify(w-literal(actionTypes_00003,2), aux235)
reify(w-literal(actionTypes_00003,2), aux236)
reify(w-literal(actionTypes_00003,2), aux237)
reify(w-literal(actionTypes_00003,2), aux238)
reify(w-literal(actionTypes_00004,2), aux240)
reify(w-literal(actionTypes_00004,2), aux241)
reify(w-literal(actionTypes_00004,2), aux242)
reify(w-literal(actionTypes_00004,2), aux243)
reify(w-literal(actionTypes_00004,2), aux244)
reify(w-literal(actionTypes_00004,2), aux245)
reify(w-literal(actionTypes_00004,2), aux246)
reify(w-literal(actionTypes_00004,2), aux247)
reify(w-literal(actionTypes_00005,2), aux249)
reify(w-literal(actionTypes_00005,2), aux250)
reify(w-literal(actionTypes_00005,2), aux251)
reify(w-literal(actionTypes_00005,2), aux252)
reify(w-literal(actionTypes_00005,2), aux253)
reify(w-literal(actionTypes_00005,2), aux254)
reify(w-literal(actionTypes_00005,2), aux255)
reify(w-literal(actionTypes_00005,2), aux256)
reify(w-literal(actionTypes_00006,2), aux258)
reify(w-literal(actionTypes_00006,2), aux259)
reify(w-literal(actionTypes_00006,2), aux260)
reify(w-literal(actionTypes_00006,2), aux261)
reify(w-literal(actionTypes_00006,2), aux262)
reify(w-literal(actionTypes_00006,2), aux263)
reify(w-literal(actionTypes_00006,2), aux264)
reify(w-literal(actionTypes_00006,2), aux265)
reify(w-literal(actionTypes_00007,2), aux267)
reify(w-literal(actionTypes_00007,2), aux268)
reify(w-literal(actionTypes_00007,2), aux269)
reify(w-literal(actionTypes_00007,2), aux270)
reify(w-literal(actionTypes_00007,2), aux271)
reify(w-literal(actionTypes_00007,2), aux272)
reify(w-literal(actionTypes_00007,2), aux273)
reify(w-literal(actionTypes_00007,2), aux274)
reify(w-literal(actionTypes_00008,2), aux276)
reify(w-literal(actionTypes_00008,2), aux277)
reify(w-literal(actionTypes_00008,2), aux278)
reify(w-literal(actionTypes_00008,2), aux279)
reify(w-literal(actionTypes_00008,2), aux280)
reify(w-literal(actionTypes_00008,2), aux281)
reify(w-literal(actionTypes_00008,2), aux282)
reify(w-literal(actionTypes_00008,2), aux283)
reify(w-literal(actionTypes_00009,2), aux285)
reify(w-literal(actionTypes_00009,2), aux286)
reify(w-literal(actionTypes_00009,2), aux287)
reify(w-literal(actionTypes_00009,2), aux288)
reify(w-literal(actionTypes_00009,2), aux289)
reify(w-literal(actionTypes_00009,2), aux290)
reify(w-literal(actionTypes_00009,2), aux291)
reify(w-literal(actionTypes_00009,2), aux292)
reify(w-literal(actionTypes_00010,2), aux294)
reify(w-literal(actionTypes_00010,2), aux295)
reify(w-literal(actionTypes_00010,2), aux296)
reify(w-literal(actionTypes_00010,2), aux297)
reify(w-literal(actionTypes_00010,2), aux298)
reify(w-literal(actionTypes_00010,2), aux299)
reify(w-literal(actionTypes_00010,2), aux300)
reify(w-literal(actionTypes_00010,2), aux301)
reify(w-literal(actionTypes_00011,2), aux303)
reify(w-literal(actionTypes_00011,2), aux304)
reify(w-literal(actionTypes_00011,2), aux305)
reify(w-literal(actionTypes_00011,2), aux306)
reify(w-literal(actionTypes_00011,2), aux307)
reify(w-literal(actionTypes_00011,2), aux308)
reify(w-literal(actionTypes_00002,3), aux309)
reify(w-literal(actionTypes_00002,3), aux310)
reify(w-literal(actionTypes_00002,3), aux311)
reify(w-literal(actionTypes_00002,3), aux312)
reify(w-literal(actionTypes_00002,3), aux313)
reify(w-literal(actionTypes_00002,3), aux314)
reify(w-literal(actionTypes_00003,3), aux315)
reify(w-literal(actionTypes_00003,3), aux316)
reify(w-literal(actionTypes_00003,3), aux317)
reify(w-literal(actionTypes_00003,3), aux318)
reify(w-literal(actionTypes_00003,3), aux319)
reify(w-literal(actionTypes_00003,3), aux320)
reify(w-literal(actionTypes_00004,3), aux321)
reify(w-literal(actionTypes_00004,3), aux322)
reify(w-literal(actionTypes_00004,3), aux323)
reify(w-literal(actionTypes_00004,3), aux324)
reify(w-literal(actionTypes_00004,3), aux325)
reify(w-literal(actionTypes_00004,3), aux326)
reify(w-literal(actionTypes_00005,3), aux327)
reify(w-literal(actionTypes_00005,3), aux328)
reify(w-literal(actionTypes_00005,3), aux329)
reify(w-literal(actionTypes_00005,3), aux330)
reify(w-literal(actionTypes_00005,3), aux331)
reify(w-literal(actionTypes_00005,3), aux332)
reify(w-literal(actionTypes_00006,3), aux333)
reify(w-literal(actionTypes_00006,3), aux334)
reify(w-literal(actionTypes_00006,3), aux335)
reify(w-literal(actionTypes_00006,3), aux336)
reify(w-literal(actionTypes_00006,3), aux337)
reify(w-literal(actionTypes_00006,3), aux338)
reify(w-literal(actionTypes_00007,3), aux339)
reify(w-literal(actionTypes_00007,3), aux340)
reify(w-literal(actionTypes_00007,3), aux341)
reify(w-literal(actionTypes_00007,3), aux342)
reify(w-literal(actionTypes_00007,3), aux343)
reify(w-literal(actionTypes_00007,3), aux344)
reify(w-literal(actionTypes_00008,3), aux345)
reify(w-literal(actionTypes_00008,3), aux346)
reify(w-literal(actionTypes_00008,3), aux347)
reify(w-literal(actionTypes_00008,3), aux348)
reify(w-literal(actionTypes_00008,3), aux349)
reify(w-literal(actionTypes_00008,3), aux350)
reify(w-literal(actionTypes_00009,3), aux351)
reify(w-literal(actionTypes_00009,3), aux352)
reify(w-literal(actionTypes_00009,3), aux353)
reify(w-literal(actionTypes_00009,3), aux354)
reify(w-literal(actionTypes_00009,3), aux355)
reify(w-literal(actionTypes_00009,3), aux356)
reify(w-literal(actionTypes_00010,3), aux357)
reify(w-literal(actionTypes_00010,3), aux358)
reify(w-literal(actionTypes_00010,3), aux359)
reify(w-literal(actionTypes_00010,3), aux360)
reify(w-literal(actionTypes_00010,3), aux361)
reify(w-literal(actionTypes_00010,3), aux362)
reify(w-literal(actionTypes_00011,3), aux363)
reify(w-literal(actionTypes_00011,3), aux364)
reify(w-literal(actionTypes_00011,3), aux365)
reify(w-literal(actionTypes_00011,3), aux366)
reify(w-literal(actionTypes_00011,3), aux367)
reify(w-literal(actionTypes_00011,3), aux368)
reify(w-literal(actionTypes_00002,4), aux369)
reify(w-literal(actionTypes_00002,4), aux370)
reify(w-literal(actionTypes_00002,4), aux371)
reify(w-literal(actionTypes_00002,4), aux372)
reify(w-literal(actionTypes_00002,4), aux373)
reify(w-literal(actionTypes_00003,4), aux374)
reify(w-literal(actionTypes_00003,4), aux375)
reify(w-literal(actionTypes_00003,4), aux376)
reify(w-literal(actionTypes_00003,4), aux377)
reify(w-literal(actionTypes_00003,4), aux378)
reify(w-literal(actionTypes_00003,4), aux379)
reify(w-literal(actionTypes_00004,4), aux380)
reify(w-literal(actionTypes_00004,4), aux381)
reify(w-literal(actionTypes_00004,4), aux382)
reify(w-literal(actionTypes_00004,4), aux383)
reify(w-literal(actionTypes_00004,4), aux384)
reify(w-literal(actionTypes_00004,4), aux385)
reify(w-literal(actionTypes_00005,4), aux386)
reify(w-literal(actionTypes_00005,4), aux387)
reify(w-literal(actionTypes_00005,4), aux388)
reify(w-literal(actionTypes_00005,4), aux389)
reify(w-literal(actionTypes_00005,4), aux390)
reify(w-literal(actionTypes_00005,4), aux391)
reify(w-literal(actionTypes_00006,4), aux392)
reify(w-literal(actionTypes_00006,4), aux393)
reify(w-literal(actionTypes_00006,4), aux394)
reify(w-literal(actionTypes_00006,4), aux395)
reify(w-literal(actionTypes_00006,4), aux396)
reify(w-literal(actionTypes_00006,4), aux397)
reify(w-literal(actionTypes_00007,4), aux398)
reify(w-literal(actionTypes_00007,4), aux399)
reify(w-literal(actionTypes_00007,4), aux400)
reify(w-literal(actionTypes_00007,4), aux401)
reify(w-literal(actionTypes_00007,4), aux402)
reify(w-literal(actionTypes_00007,4), aux403)
reify(w-literal(actionTypes_00008,4), aux404)
reify(w-literal(actionTypes_00008,4), aux405)
reify(w-literal(actionTypes_00008,4), aux406)
reify(w-literal(actionTypes_00008,4), aux407)
reify(w-literal(actionTypes_00008,4), aux408)
reify(w-literal(actionTypes_00008,4), aux409)
reify(w-literal(actionTypes_00009,4), aux410)
reify(w-literal(actionTypes_00009,4), aux411)
reify(w-literal(actionTypes_00009,4), aux412)
reify(w-literal(actionTypes_00009,4), aux413)
reify(w-literal(actionTypes_00009,4), aux414)
reify(w-literal(actionTypes_00009,4), aux415)
reify(w-literal(actionTypes_00010,4), aux416)
reify(w-literal(actionTypes_00010,4), aux417)
reify(w-literal(actionTypes_00010,4), aux418)
reify(w-literal(actionTypes_00010,4), aux419)
reify(w-literal(actionTypes_00010,4), aux420)
reify(w-literal(actionTypes_00010,4), aux421)
reify(w-literal(actionTypes_00011,4), aux422)
reify(w-literal(actionTypes_00011,4), aux423)
reify(w-literal(actionTypes_00011,4), aux424)
reify(w-literal(actionTypes_00011,4), aux425)
reify(w-literal(actionTypes_00011,4), aux426)
reify(w-literal(actionTypes_00011,4), aux427)
reify(w-literal(actionTypes_00002,5), aux428)
reify(w-literal(actionTypes_00002,5), aux429)
reify(w-literal(actionTypes_00002,5), aux430)
reify(w-literal(actionTypes_00002,5), aux431)
reify(w-literal(actionTypes_00002,5), aux432)
reify(w-literal(actionTypes_00002,5), aux433)
reify(w-literal(actionTypes_00002,5), aux434)
reify(w-literal(actionTypes_00002,5), aux435)
reify(w-literal(actionTypes_00003,5), aux436)
reify(w-literal(actionTypes_00003,5), aux437)
reify(w-literal(actionTypes_00003,5), aux438)
reify(w-literal(actionTypes_00003,5), aux439)
reify(w-literal(actionTypes_00003,5), aux440)
reify(w-literal(actionTypes_00003,5), aux441)
reify(w-literal(actionTypes_00003,5), aux442)
reify(w-literal(actionTypes_00003,5), aux443)
reify(w-literal(actionTypes_00004,5), aux444)
reify(w-literal(actionTypes_00004,5), aux445)
reify(w-literal(actionTypes_00004,5), aux446)
reify(w-literal(actionTypes_00004,5), aux447)
reify(w-literal(actionTypes_00004,5), aux448)
reify(w-literal(actionTypes_00004,5), aux449)
reify(w-literal(actionTypes_00004,5), aux450)
reify(w-literal(actionTypes_00004,5), aux451)
reify(w-literal(actionTypes_00005,5), aux452)
reify(w-literal(actionTypes_00005,5), aux453)
reify(w-literal(actionTypes_00005,5), aux454)
reify(w-literal(actionTypes_00005,5), aux455)
reify(w-literal(actionTypes_00005,5), aux456)
reify(w-literal(actionTypes_00005,5), aux457)
reify(w-literal(actionTypes_00005,5), aux458)
reify(w-literal(actionTypes_00005,5), aux459)
reify(w-literal(actionTypes_00006,5), aux460)
reify(w-literal(actionTypes_00006,5), aux461)
reify(w-literal(actionTypes_00006,5), aux462)
reify(w-literal(actionTypes_00006,5), aux463)
reify(w-literal(actionTypes_00006,5), aux464)
reify(w-literal(actionTypes_00006,5), aux465)
reify(w-literal(actionTypes_00006,5), aux466)
reify(w-literal(actionTypes_00006,5), aux467)
reify(w-literal(actionTypes_00007,5), aux468)
reify(w-literal(actionTypes_00007,5), aux469)
reify(w-literal(actionTypes_00007,5), aux470)
reify(w-literal(actionTypes_00007,5), aux471)
reify(w-literal(actionTypes_00007,5), aux472)
reify(w-literal(actionTypes_00007,5), aux473)
reify(w-literal(actionTypes_00007,5), aux474)
reify(w-literal(actionTypes_00007,5), aux475)
reify(w-literal(actionTypes_00008,5), aux476)
reify(w-literal(actionTypes_00008,5), aux477)
reify(w-literal(actionTypes_00008,5), aux478)
reify(w-literal(actionTypes_00008,5), aux479)
reify(w-literal(actionTypes_00008,5), aux480)
reify(w-literal(actionTypes_00008,5), aux481)
reify(w-literal(actionTypes_00008,5), aux482)
reify(w-literal(actionTypes_00008,5), aux483)
reify(w-literal(actionTypes_00009,5), aux484)
reify(w-literal(actionTypes_00009,5), aux485)
reify(w-literal(actionTypes_00009,5), aux486)
reify(w-literal(actionTypes_00009,5), aux487)
reify(w-literal(actionTypes_00009,5), aux488)
reify(w-literal(actionTypes_00009,5), aux489)
reify(w-literal(actionTypes_00009,5), aux490)
reify(w-literal(actionTypes_00009,5), aux491)
reify(w-literal(actionTypes_00010,5), aux492)
reify(w-literal(actionTypes_00010,5), aux493)
reify(w-literal(actionTypes_00010,5), aux494)
reify(w-literal(actionTypes_00010,5), aux495)
reify(w-literal(actionTypes_00010,5), aux496)
reify(w-literal(actionTypes_00010,5), aux497)
reify(w-literal(actionTypes_00010,5), aux498)
reify(w-literal(actionTypes_00010,5), aux499)
reify(w-literal(actionTypes_00011,5), aux500)
reify(w-literal(actionTypes_00011,5), aux501)
reify(w-literal(actionTypes_00011,5), aux502)
reify(w-literal(actionTypes_00011,5), aux503)
reify(w-literal(actionTypes_00011,5), aux504)
reify(w-literal(actionTypes_00011,5), aux505)
reify(w-literal(actionTypes_00011,5), aux506)
reify(w-literal(actionTypes_00011,5), aux507)
reify(w-literal(actionTypes_00002,6), aux508)
reify(w-literal(actionTypes_00002,6), aux509)
reify(w-literal(actionTypes_00002,6), aux510)
reify(w-literal(actionTypes_00002,6), aux511)
reify(w-literal(actionTypes_00002,6), aux512)
reify(w-literal(actionTypes_00002,6), aux513)
reify(w-literal(actionTypes_00002,6), aux514)
reify(w-literal(actionTypes_00003,6), aux515)
reify(w-literal(actionTypes_00003,6), aux516)
reify(w-literal(actionTypes_00003,6), aux517)
reify(w-literal(actionTypes_00003,6), aux518)
reify(w-literal(actionTypes_00003,6), aux519)
reify(w-literal(actionTypes_00003,6), aux520)
reify(w-literal(actionTypes_00003,6), aux521)
reify(w-literal(actionTypes_00004,6), aux522)
reify(w-literal(actionTypes_00004,6), aux523)
reify(w-literal(actionTypes_00004,6), aux524)
reify(w-literal(actionTypes_00004,6), aux525)
reify(w-literal(actionTypes_00004,6), aux526)
reify(w-literal(actionTypes_00004,6), aux527)
reify(w-literal(actionTypes_00004,6), aux528)
reify(w-literal(actionTypes_00005,6), aux529)
reify(w-literal(actionTypes_00005,6), aux530)
reify(w-literal(actionTypes_00005,6), aux531)
reify(w-literal(actionTypes_00005,6), aux532)
reify(w-literal(actionTypes_00005,6), aux533)
reify(w-literal(actionTypes_00005,6), aux534)
reify(w-literal(actionTypes_00005,6), aux535)
reify(w-literal(actionTypes_00006,6), aux536)
reify(w-literal(actionTypes_00006,6), aux537)
reify(w-literal(actionTypes_00006,6), aux538)
reify(w-literal(actionTypes_00006,6), aux539)
reify(w-literal(actionTypes_00006,6), aux540)
reify(w-literal(actionTypes_00006,6), aux541)
reify(w-literal(actionTypes_00006,6), aux542)
reify(w-literal(actionTypes_00007,6), aux543)
reify(w-literal(actionTypes_00007,6), aux544)
reify(w-literal(actionTypes_00007,6), aux545)
reify(w-literal(actionTypes_00007,6), aux546)
reify(w-literal(actionTypes_00007,6), aux547)
reify(w-literal(actionTypes_00007,6), aux548)
reify(w-literal(actionTypes_00007,6), aux549)
reify(w-literal(actionTypes_00008,6), aux550)
reify(w-literal(actionTypes_00008,6), aux551)
reify(w-literal(actionTypes_00008,6), aux552)
reify(w-literal(actionTypes_00008,6), aux553)
reify(w-literal(actionTypes_00008,6), aux554)
reify(w-literal(actionTypes_00008,6), aux555)
reify(w-literal(actionTypes_00008,6), aux556)
reify(w-literal(actionTypes_00009,6), aux557)
reify(w-literal(actionTypes_00009,6), aux558)
reify(w-literal(actionTypes_00009,6), aux559)
reify(w-literal(actionTypes_00009,6), aux560)
reify(w-literal(actionTypes_00009,6), aux561)
reify(w-literal(actionTypes_00009,6), aux562)
reify(w-literal(actionTypes_00009,6), aux563)
reify(w-literal(actionTypes_00010,6), aux564)
reify(w-literal(actionTypes_00010,6), aux565)
reify(w-literal(actionTypes_00010,6), aux566)
reify(w-literal(actionTypes_00010,6), aux567)
reify(w-literal(actionTypes_00010,6), aux568)
reify(w-literal(actionTypes_00010,6), aux569)
reify(w-literal(actionTypes_00010,6), aux570)
reify(w-literal(actionTypes_00011,6), aux571)
reify(w-literal(actionTypes_00011,6), aux572)
reify(w-literal(actionTypes_00011,6), aux573)
reify(w-literal(actionTypes_00011,6), aux574)
reify(w-literal(actionTypes_00011,6), aux575)
reify(w-literal(actionTypes_00011,6), aux576)
reify(w-literal(actionTypes_00011,6), aux577)
reify(w-literal(actionTypes_00002,7), aux578)
reify(w-literal(actionTypes_00002,7), aux579)
reify(w-literal(actionTypes_00002,7), aux580)
reify(w-literal(actionTypes_00002,7), aux581)
reify(w-literal(actionTypes_00002,7), aux582)
reify(w-literal(actionTypes_00002,7), aux583)
reify(w-literal(actionTypes_00002,7), aux584)
reify(w-literal(actionTypes_00003,7), aux585)
reify(w-literal(actionTypes_00003,7), aux586)
reify(w-literal(actionTypes_00003,7), aux587)
reify(w-literal(actionTypes_00003,7), aux588)
reify(w-literal(actionTypes_00003,7), aux589)
reify(w-literal(actionTypes_00003,7), aux590)
reify(w-literal(actionTypes_00003,7), aux591)
reify(w-literal(actionTypes_00004,7), aux592)
reify(w-literal(actionTypes_00004,7), aux593)
reify(w-literal(actionTypes_00004,7), aux594)
reify(w-literal(actionTypes_00004,7), aux595)
reify(w-literal(actionTypes_00004,7), aux596)
reify(w-literal(actionTypes_00004,7), aux597)
reify(w-literal(actionTypes_00004,7), aux598)
reify(w-literal(actionTypes_00005,7), aux599)
reify(w-literal(actionTypes_00005,7), aux600)
reify(w-literal(actionTypes_00005,7), aux601)
reify(w-literal(actionTypes_00005,7), aux602)
reify(w-literal(actionTypes_00005,7), aux603)
reify(w-literal(actionTypes_00005,7), aux604)
reify(w-literal(actionTypes_00005,7), aux605)
reify(w-literal(actionTypes_00006,7), aux606)
reify(w-literal(actionTypes_00006,7), aux607)
reify(w-literal(actionTypes_00006,7), aux608)
reify(w-literal(actionTypes_00006,7), aux609)
reify(w-literal(actionTypes_00006,7), aux610)
reify(w-literal(actionTypes_00006,7), aux611)
reify(w-literal(actionTypes_00006,7), aux612)
reify(w-literal(actionTypes_00007,7), aux613)
reify(w-literal(actionTypes_00007,7), aux614)
reify(w-literal(actionTypes_00007,7), aux615)
reify(w-literal(actionTypes_00007,7), aux616)
reify(w-literal(actionTypes_00007,7), aux617)
reify(w-literal(actionTypes_00007,7), aux618)
reify(w-literal(actionTypes_00007,7), aux619)
reify(w-literal(actionTypes_00008,7), aux620)
reify(w-literal(actionTypes_00008,7), aux621)
reify(w-literal(actionTypes_00008,7), aux622)
reify(w-literal(actionTypes_00008,7), aux623)
reify(w-literal(actionTypes_00008,7), aux624)
reify(w-literal(actionTypes_00008,7), aux625)
reify(w-literal(actionTypes_00008,7), aux626)
reify(w-literal(actionTypes_00009,7), aux627)
reify(w-literal(actionTypes_00009,7), aux628)
reify(w-literal(actionTypes_00009,7), aux629)
reify(w-literal(actionTypes_00009,7), aux630)
reify(w-literal(actionTypes_00009,7), aux631)
reify(w-literal(actionTypes_00009,7), aux632)
reify(w-literal(actionTypes_00009,7), aux633)
reify(w-literal(actionTypes_00010,7), aux634)
reify(w-literal(actionTypes_00010,7), aux635)
reify(w-literal(actionTypes_00010,7), aux636)
reify(w-literal(actionTypes_00010,7), aux637)
reify(w-literal(actionTypes_00010,7), aux638)
reify(w-literal(actionTypes_00010,7), aux639)
reify(w-literal(actionTypes_00010,7), aux640)
reify(w-literal(actionTypes_00011,7), aux641)
reify(w-literal(actionTypes_00011,7), aux642)
reify(w-literal(actionTypes_00011,7), aux643)
reify(w-literal(actionTypes_00011,7), aux644)
reify(w-literal(actionTypes_00011,7), aux645)
reify(w-literal(actionTypes_00011,7), aux646)
reify(w-literal(actionTypes_00011,7), aux647)
reify(w-literal(actionTypes_00002,8), aux648)
reify(w-literal(actionTypes_00002,8), aux649)
reify(w-literal(actionTypes_00002,8), aux650)
reify(w-literal(actionTypes_00002,8), aux651)
reify(w-literal(actionTypes_00002,8), aux652)
reify(w-literal(actionTypes_00002,8), aux653)
reify(w-literal(actionTypes_00003,8), aux654)
reify(w-literal(actionTypes_00003,8), aux655)
reify(w-literal(actionTypes_00003,8), aux656)
reify(w-literal(actionTypes_00003,8), aux657)
reify(w-literal(actionTypes_00003,8), aux658)
reify(w-literal(actionTypes_00003,8), aux659)
reify(w-literal(actionTypes_00004,8), aux660)
reify(w-literal(actionTypes_00004,8), aux661)
reify(w-literal(actionTypes_00004,8), aux662)
reify(w-literal(actionTypes_00004,8), aux663)
reify(w-literal(actionTypes_00004,8), aux664)
reify(w-literal(actionTypes_00004,8), aux665)
reify(w-literal(actionTypes_00005,8), aux666)
reify(w-literal(actionTypes_00005,8), aux667)
reify(w-literal(actionTypes_00005,8), aux668)
reify(w-literal(actionTypes_00005,8), aux669)
reify(w-literal(actionTypes_00005,8), aux670)
reify(w-literal(actionTypes_00005,8), aux671)
reify(w-literal(actionTypes_00006,8), aux672)
reify(w-literal(actionTypes_00006,8), aux673)
reify(w-literal(actionTypes_00006,8), aux674)
reify(w-literal(actionTypes_00006,8), aux675)
reify(w-literal(actionTypes_00006,8), aux676)
reify(w-literal(actionTypes_00006,8), aux677)
reify(w-literal(actionTypes_00007,8), aux678)
reify(w-literal(actionTypes_00007,8), aux679)
reify(w-literal(actionTypes_00007,8), aux680)
reify(w-literal(actionTypes_00007,8), aux681)
reify(w-literal(actionTypes_00007,8), aux682)
reify(w-literal(actionTypes_00007,8), aux683)
reify(w-literal(actionTypes_00008,8), aux684)
reify(w-literal(actionTypes_00008,8), aux685)
reify(w-literal(actionTypes_00008,8), aux686)
reify(w-literal(actionTypes_00008,8), aux687)
reify(w-literal(actionTypes_00008,8), aux688)
reify(w-literal(actionTypes_00008,8), aux689)
reify(w-literal(actionTypes_00009,8), aux690)
reify(w-literal(actionTypes_00009,8), aux691)
reify(w-literal(actionTypes_00009,8), aux692)
reify(w-literal(actionTypes_00009,8), aux693)
reify(w-literal(actionTypes_00009,8), aux694)
reify(w-literal(actionTypes_00009,8), aux695)
reify(w-literal(actionTypes_00010,8), aux696)
reify(w-literal(actionTypes_00010,8), aux697)
reify(w-literal(actionTypes_00010,8), aux698)
reify(w-literal(actionTypes_00010,8), aux699)
reify(w-literal(actionTypes_00010,8), aux700)
reify(w-literal(actionTypes_00010,8), aux701)
reify(w-literal(actionTypes_00011,8), aux702)
reify(w-literal(actionTypes_00011,8), aux703)
reify(w-literal(actionTypes_00011,8), aux704)
reify(w-literal(actionTypes_00011,8), aux705)
reify(w-literal(actionTypes_00011,8), aux706)
reify(w-literal(actionTypes_00011,8), aux707)
reify(watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux107, aux62), aux52)
reify(watchelement_undefzero([statePlaces_00002_00011, statePlaces_00003_00011], aux106, aux78), aux53)
reify(watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux121, aux80), aux54)
reify(watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux123, aux68), aux55)
reify(watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux119, aux65), aux56)
reify(watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux118, aux71), aux57)
reify(watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux120, aux75), aux58)
reify(watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux126, aux73), aux59)
reify(watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux124, aux72), aux60)
reify(watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux125, aux69), aux61)
watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux105, aux62)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux130, aux63)
watchelement_undefzero([8, -1], aux102, aux64)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux93, aux65)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux111, aux66)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux131, aux67)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux116, aux68)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux130, aux69)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux104, aux70)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux111, aux71)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux131, aux72)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux102, aux73)
watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux112, aux74)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux104, aux75)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux105, aux76)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux127, aux77)
watchelement_undefzero([statePlaces_00002_00011, statePlaces_00003_00011], aux112, aux78)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux93, aux79)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux127, aux80)
watchelement_undefzero([8, -1], aux126, aux81)
watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux106, aux82)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux119, aux83)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux107, aux84)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux124, aux85)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux125, aux86)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux118, aux87)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux120, aux88)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux121, aux89)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux123, aux90)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux116, aux91)
reify(w-inintervalset(actionFrom_00007,[2,3]), aux92)
reify(w-inintervalset(actionTo_00008,[2,3]), aux94)
reify(w-inintervalset(actionTo_00007,[2,3]), aux95)
reify(w-inintervalset(actionTo_00009,[2,3]), aux96)
reify(w-inintervalset(actionTo_00003,[2,3]), aux97)
reify(w-inintervalset(actionTo_00002,[2,3]), aux98)
reify(w-inintervalset(actionTo_00006,[2,3]), aux99)
reify(w-inintervalset(actionTo_00005,[2,3]), aux100)
reify(w-inintervalset(actionTo_00004,[2,3]), aux101)
reify(w-inintervalset(actionFrom_00002,[2,3]), aux103)
reify(w-inintervalset(actionFrom_00011,[2,3]), aux108)
reify(w-inintervalset(actionFrom_00010,[2,3]), aux109)
reify(w-inintervalset(actionFrom_00003,[2,3]), aux110)
reify(w-inintervalset(actionFrom_00008,[2,3]), aux113)
reify(w-inintervalset(actionTo_00011,[2,3]), aux114)
reify(w-inintervalset(actionTo_00010,[2,3]), aux115)
reify(w-inintervalset(actionFrom_00005,[2,3]), aux117)
reify(w-inintervalset(actionFrom_00004,[2,3]), aux122)
reify(w-inintervalset(actionFrom_00009,[2,3]), aux128)
reify(w-inintervalset(actionFrom_00006,[2,3]), aux129)
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00011, 3])})
watched-or({ineq(statePlaces_00002_00002, 8, -1),ineq(1, pointers_00000_00002, -1),lexless([8, -1],[statePlaces_00002_00002, statePlaces_00003_00002])})
watched-or({ineq(statePlaces_00002_00003, 8, -1),lexless([1, 0],[pointers_00000_00003, pointers_00001_00003]),lexless([8, -1],[statePlaces_00002_00003, statePlaces_00003_00003])})
watched-or({ineq(statePlaces_00002_00004, 8, -1),lexless([1, 0],[pointers_00000_00004, pointers_00001_00004]),lexless([8, -1],[statePlaces_00002_00004, statePlaces_00003_00004])})
watched-or({ineq(statePlaces_00002_00005, 8, -1),lexless([1, 0],[pointers_00000_00005, pointers_00001_00005]),lexless([8, -1],[statePlaces_00002_00005, statePlaces_00003_00005])})
watched-or({ineq(statePlaces_00002_00006, 8, -1),lexless([1, 0],[pointers_00000_00006, pointers_00001_00006]),lexless([8, -1],[statePlaces_00002_00006, statePlaces_00003_00006])})
watched-or({ineq(statePlaces_00002_00007, 8, -1),lexless([1, 0],[pointers_00000_00007, pointers_00001_00007]),lexless([8, -1],[statePlaces_00002_00007, statePlaces_00003_00007])})
watched-or({ineq(statePlaces_00002_00008, 8, -1),lexless([1, 0],[pointers_00000_00008, pointers_00001_00008]),lexless([8, -1],[statePlaces_00002_00008, statePlaces_00003_00008])})
watched-or({ineq(statePlaces_00002_00009, 8, -1),lexless([1, 0],[pointers_00000_00009, pointers_00001_00009]),lexless([8, -1],[statePlaces_00002_00009, statePlaces_00003_00009])})
watched-or({ineq(statePlaces_00002_00010, 8, -1),lexless([1, 0],[pointers_00000_00010, pointers_00001_00010]),lexless([8, -1],[statePlaces_00002_00010, statePlaces_00003_00010])})
watched-or({ineq(statePlaces_00002_00011, 8, -1),lexless([1, 0],[pointers_00000_00011, 3]),lexless([8, -1],[statePlaces_00002_00011, statePlaces_00003_00011])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, 0],[pointers_00000_00003, pointers_00001_00003])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, 0],[pointers_00000_00004, pointers_00001_00004])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, 0],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, 0],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, 0],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, 0],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, 0],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, 0],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, 0],[pointers_00000_00011, 3])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00004, pointers_00001_00004])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00011, 3])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00011, 3])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00011, 3])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00011, 3])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00011, 3])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00011, 3])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00011, 3])})
reifyimply(w-literal(pointers_00000_00002,1), aux132)
reifyimply(gaceq(pointers_00000_00002,pointers_00000_00003), aux133)
reifyimply(gaceq(pointers_00000_00003,pointers_00000_00004), aux134)
reifyimply(gaceq(pointers_00000_00004,pointers_00000_00005), aux135)
reifyimply(gaceq(pointers_00000_00005,pointers_00000_00006), aux136)
reifyimply(gaceq(pointers_00000_00006,pointers_00000_00007), aux137)
reifyimply(gaceq(pointers_00000_00007,pointers_00000_00008), aux138)
reifyimply(gaceq(pointers_00000_00008,pointers_00000_00009), aux139)
reifyimply(gaceq(pointers_00000_00009,pointers_00000_00010), aux140)
reifyimply(gaceq(pointers_00000_00010,pointers_00000_00011), aux141)
reifyimply(w-literal(pointers_00001_00003,0), aux142)
reifyimply(gaceq(pointers_00001_00003,pointers_00001_00004), aux143)
reifyimply(gaceq(pointers_00001_00004,pointers_00001_00005), aux144)
reifyimply(gaceq(pointers_00001_00005,pointers_00001_00006), aux145)
reifyimply(gaceq(pointers_00001_00006,pointers_00001_00007), aux146)
reifyimply(gaceq(pointers_00001_00007,pointers_00001_00008), aux147)
reifyimply(gaceq(pointers_00001_00008,pointers_00001_00009), aux148)
reifyimply(gaceq(pointers_00001_00009,pointers_00001_00010), aux149)
reifyimply(w-literal(pointers_00001_00010,3), aux150)
reifyimply(w-literal(statePlaces_00003_00002,-1), aux151)
reifyimply(gaceq(statePlaces_00003_00002,statePlaces_00003_00003), aux152)
reifyimply(gaceq(statePlaces_00003_00003,statePlaces_00003_00004), aux153)
reifyimply(gaceq(statePlaces_00003_00004,statePlaces_00003_00005), aux154)
reifyimply(gaceq(statePlaces_00003_00005,statePlaces_00003_00006), aux155)
reifyimply(gaceq(statePlaces_00003_00006,statePlaces_00003_00007), aux156)
reifyimply(gaceq(statePlaces_00003_00007,statePlaces_00003_00008), aux157)
reifyimply(gaceq(statePlaces_00003_00008,statePlaces_00003_00009), aux158)
reifyimply(gaceq(statePlaces_00003_00009,statePlaces_00003_00010), aux159)
reifyimply(gaceq(statePlaces_00003_00010,statePlaces_00003_00011), aux160)
reifyimply(w-literal(statePlaces_00002_00002,8), aux161)
reifyimply(gaceq(statePlaces_00002_00002,statePlaces_00002_00003), aux162)
reifyimply(gaceq(statePlaces_00002_00003,statePlaces_00002_00004), aux163)
reifyimply(gaceq(statePlaces_00002_00004,statePlaces_00002_00005), aux164)
reifyimply(gaceq(statePlaces_00002_00005,statePlaces_00002_00006), aux165)
reifyimply(gaceq(statePlaces_00002_00006,statePlaces_00002_00007), aux166)
reifyimply(gaceq(statePlaces_00002_00007,statePlaces_00002_00008), aux167)
reifyimply(gaceq(statePlaces_00002_00008,statePlaces_00002_00009), aux168)
reifyimply(gaceq(statePlaces_00002_00009,statePlaces_00002_00010), aux169)
reifyimply(gaceq(statePlaces_00002_00010,statePlaces_00002_00011), aux170)
reifyimply(w-literal(pointers_00000_00002,2), aux171)
reifyimply(w-literal(actionFrom_00002,0), aux172)
reifyimply(w-literal(actionTo_00002,2), aux173)
reifyimply(w-inintervalset(pointers_00000_00002,[1,6]), aux174)
reifyimply(watchelement_undefzero([8, 8, 5, 3, 12, 6], aux176, statePlaces_00002_00002), aux175)
reifyimply(w-literal(actionFrom_00003,0), aux178)
reifyimply(w-literal(actionTo_00003,2), aux179)
reifyimply(w-inintervalset(pointers_00000_00003,[1,6]), aux180)
reifyimply(watchelement_undefzero([8, 8, 5, 3, 12, 6], aux182, statePlaces_00002_00003), aux181)
reifyimply(w-literal(actionFrom_00004,0), aux184)
reifyimply(w-literal(actionTo_00004,2), aux185)
reifyimply(w-inintervalset(pointers_00000_00004,[1,6]), aux186)
reifyimply(watchelement_undefzero([8, 8, 5, 3, 12, 6], aux188, statePlaces_00002_00004), aux187)
reifyimply(w-literal(actionFrom_00005,0), aux190)
reifyimply(w-literal(actionTo_00005,2), aux191)
reifyimply(w-inintervalset(pointers_00000_00005,[1,6]), aux192)
reifyimply(watchelement_undefzero([8, 8, 5, 3, 12, 6], aux194, statePlaces_00002_00005), aux193)
reifyimply(w-literal(actionFrom_00006,0), aux196)
reifyimply(w-literal(actionTo_00006,2), aux197)
reifyimply(w-inintervalset(pointers_00000_00006,[1,6]), aux198)
reifyimply(watchelement_undefzero([8, 8, 5, 3, 12, 6], aux200, statePlaces_00002_00006), aux199)
reifyimply(w-literal(actionFrom_00007,0), aux202)
reifyimply(w-literal(actionTo_00007,2), aux203)
reifyimply(w-inintervalset(pointers_00000_00007,[1,6]), aux204)
reifyimply(watchelement_undefzero([8, 8, 5, 3, 12, 6], aux206, statePlaces_00002_00007), aux205)
reifyimply(w-literal(actionFrom_00008,0), aux208)
reifyimply(w-literal(actionTo_00008,2), aux209)
reifyimply(w-inintervalset(pointers_00000_00008,[1,6]), aux210)
reifyimply(watchelement_undefzero([8, 8, 5, 3, 12, 6], aux212, statePlaces_00002_00008), aux211)
reifyimply(w-literal(actionFrom_00009,0), aux214)
reifyimply(w-literal(actionTo_00009,2), aux215)
reifyimply(w-inintervalset(pointers_00000_00009,[1,6]), aux216)
reifyimply(watchelement_undefzero([8, 8, 5, 3, 12, 6], aux218, statePlaces_00002_00009), aux217)
reifyimply(w-literal(actionFrom_00010,0), aux220)
reifyimply(w-literal(actionTo_00010,2), aux221)
reifyimply(w-inintervalset(pointers_00000_00010,[1,6]), aux222)
reifyimply(watchelement_undefzero([8, 8, 5, 3, 12, 6], aux224, statePlaces_00002_00010), aux223)
reifyimply(w-literal(actionFrom_00011,0), aux226)
reifyimply(w-literal(actionTo_00011,2), aux227)
reifyimply(w-inintervalset(pointers_00000_00011,[1,6]), aux228)
reifyimply(watchelement_undefzero([8, 8, 5, 3, 12, 6], aux230, statePlaces_00002_00011), aux229)
reifyimply(diseq(statePlaces_00002_00003,-1), aux231)
reifyimply(diseq(statePlaces_00002_00002,-1), aux232)
reifyimply(ineq(pointers_00001_00003, 3, 0), aux233)
reifyimply(w-literal(pointers_00001_00003,1), aux234)
reifyimply(w-literal(actionFrom_00003,2), aux235)
reifyimply(w-literal(actionTo_00003,1), aux236)
reifyimply(w-inintervalset(pointers_00001_00003,[1,3]), aux237)
reifyimply(watchelement_undefzero([0, 2, 6], aux239, statePlaces_00002_00002), aux238)
reifyimply(diseq(statePlaces_00002_00004,-1), aux240)
reifyimply(diseq(statePlaces_00002_00003,-1), aux241)
reifyimply(ineq(pointers_00001_00004, 3, 0), aux242)
reifyimply(w-literal(actionFrom_00004,2), aux244)
reifyimply(w-literal(actionTo_00004,1), aux245)
reifyimply(w-inintervalset(pointers_00001_00004,[1,3]), aux246)
reifyimply(watchelement_undefzero([0, 2, 6], aux248, statePlaces_00002_00003), aux247)
reifyimply(diseq(statePlaces_00002_00005,-1), aux249)
reifyimply(diseq(statePlaces_00002_00004,-1), aux250)
reifyimply(ineq(pointers_00001_00005, 3, 0), aux251)
reifyimply(w-literal(actionFrom_00005,2), aux253)
reifyimply(w-literal(actionTo_00005,1), aux254)
reifyimply(w-inintervalset(pointers_00001_00005,[1,3]), aux255)
reifyimply(watchelement_undefzero([0, 2, 6], aux257, statePlaces_00002_00004), aux256)
reifyimply(diseq(statePlaces_00002_00006,-1), aux258)
reifyimply(diseq(statePlaces_00002_00005,-1), aux259)
reifyimply(ineq(pointers_00001_00006, 3, 0), aux260)
reifyimply(w-literal(actionFrom_00006,2), aux262)
reifyimply(w-literal(actionTo_00006,1), aux263)
reifyimply(w-inintervalset(pointers_00001_00006,[1,3]), aux264)
reifyimply(watchelement_undefzero([0, 2, 6], aux266, statePlaces_00002_00005), aux265)
reifyimply(diseq(statePlaces_00002_00007,-1), aux267)
reifyimply(diseq(statePlaces_00002_00006,-1), aux268)
reifyimply(ineq(pointers_00001_00007, 3, 0), aux269)
reifyimply(w-literal(actionFrom_00007,2), aux271)
reifyimply(w-literal(actionTo_00007,1), aux272)
reifyimply(w-inintervalset(pointers_00001_00007,[1,3]), aux273)
reifyimply(watchelement_undefzero([0, 2, 6], aux275, statePlaces_00002_00006), aux274)
reifyimply(diseq(statePlaces_00002_00008,-1), aux276)
reifyimply(diseq(statePlaces_00002_00007,-1), aux277)
reifyimply(ineq(pointers_00001_00008, 3, 0), aux278)
reifyimply(w-literal(actionFrom_00008,2), aux280)
reifyimply(w-literal(actionTo_00008,1), aux281)
reifyimply(w-inintervalset(pointers_00001_00008,[1,3]), aux282)
reifyimply(watchelement_undefzero([0, 2, 6], aux284, statePlaces_00002_00007), aux283)
reifyimply(diseq(statePlaces_00002_00009,-1), aux285)
reifyimply(diseq(statePlaces_00002_00008,-1), aux286)
reifyimply(ineq(pointers_00001_00009, 3, 0), aux287)
reifyimply(w-literal(actionFrom_00009,2), aux289)
reifyimply(w-literal(actionTo_00009,1), aux290)
reifyimply(w-inintervalset(pointers_00001_00009,[1,3]), aux291)
reifyimply(watchelement_undefzero([0, 2, 6], aux293, statePlaces_00002_00008), aux292)
reifyimply(diseq(statePlaces_00002_00010,-1), aux294)
reifyimply(diseq(statePlaces_00002_00009,-1), aux295)
reifyimply(ineq(pointers_00001_00010, 3, 0), aux296)
reifyimply(w-literal(actionFrom_00010,2), aux298)
reifyimply(w-literal(actionTo_00010,1), aux299)
reifyimply(w-inintervalset(pointers_00001_00010,[1,3]), aux300)
reifyimply(watchelement_undefzero([0, 2, 6], aux302, statePlaces_00002_00009), aux301)
reifyimply(diseq(statePlaces_00002_00011,-1), aux303)
reifyimply(diseq(statePlaces_00002_00010,-1), aux304)
reifyimply(w-literal(pointers_00001_00010,2), aux305)
reifyimply(w-literal(actionFrom_00011,2), aux306)
reifyimply(w-literal(actionTo_00011,1), aux307)
reifyimply(w-literal(statePlaces_00002_00010,6), aux308)
ineq(aux309, aux59, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux310)
reifyimply(diseq(aux73,-1), aux311)
reifyimply(w-literal(actionTo_00002,2), aux312)
ineq(aux313, aux98, 0)
ineq(aux314, aux103, 0)
ineq(aux315, aux61, 0)
reifyimply(ineq(3, actionFrom_00003, 0), aux316)
reifyimply(diseq(aux69,-1), aux317)
reifyimply(w-literal(actionTo_00003,2), aux318)
ineq(aux319, aux97, 0)
ineq(aux320, aux110, 0)
ineq(aux321, aux60, 0)
reifyimply(ineq(3, actionFrom_00004, 0), aux322)
reifyimply(diseq(aux72,-1), aux323)
reifyimply(w-literal(actionTo_00004,2), aux324)
ineq(aux325, aux101, 0)
ineq(aux326, aux122, 0)
ineq(aux327, aux55, 0)
reifyimply(ineq(3, actionFrom_00005, 0), aux328)
reifyimply(diseq(aux68,-1), aux329)
reifyimply(w-literal(actionTo_00005,2), aux330)
ineq(aux331, aux100, 0)
ineq(aux332, aux117, 0)
ineq(aux333, aux54, 0)
reifyimply(ineq(3, actionFrom_00006, 0), aux334)
reifyimply(diseq(aux80,-1), aux335)
reifyimply(w-literal(actionTo_00006,2), aux336)
ineq(aux337, aux99, 0)
ineq(aux338, aux129, 0)
ineq(aux339, aux58, 0)
reifyimply(ineq(3, actionFrom_00007, 0), aux340)
reifyimply(diseq(aux75,-1), aux341)
reifyimply(w-literal(actionTo_00007,2), aux342)
ineq(aux343, aux95, 0)
ineq(aux344, aux92, 0)
ineq(aux345, aux57, 0)
reifyimply(ineq(3, actionFrom_00008, 0), aux346)
reifyimply(diseq(aux71,-1), aux347)
reifyimply(w-literal(actionTo_00008,2), aux348)
ineq(aux349, aux94, 0)
ineq(aux350, aux113, 0)
ineq(aux351, aux56, 0)
reifyimply(ineq(3, actionFrom_00009, 0), aux352)
reifyimply(diseq(aux65,-1), aux353)
reifyimply(w-literal(actionTo_00009,2), aux354)
ineq(aux355, aux96, 0)
ineq(aux356, aux128, 0)
ineq(aux357, aux52, 0)
reifyimply(ineq(3, actionFrom_00010, 0), aux358)
reifyimply(diseq(aux62,-1), aux359)
reifyimply(w-literal(actionTo_00010,2), aux360)
ineq(aux361, aux115, 0)
ineq(aux362, aux109, 0)
ineq(aux363, aux53, 0)
reifyimply(ineq(3, actionFrom_00011, 0), aux364)
reifyimply(diseq(aux78,-1), aux365)
reifyimply(w-literal(actionTo_00011,2), aux366)
ineq(aux367, aux114, 0)
ineq(aux368, aux108, 0)
reifyimply(ineq(3, actionTo_00002, 0), aux369)
reifyimply(w-literal(actionFrom_00002,2), aux370)
ineq(aux371, aux103, 0)
ineq(aux372, aux98, 0)
ineq(aux373, aux59, 0)
reifyimply(ineq(3, actionTo_00003, 0), aux374)
reifyimply(w-literal(actionFrom_00003,2), aux375)
reifyimply(diseq(statePlaces_00002_00002,-1), aux376)
ineq(aux377, aux110, 0)
ineq(aux378, aux97, 0)
ineq(aux379, aux61, 0)
reifyimply(ineq(3, actionTo_00004, 0), aux380)
reifyimply(w-literal(actionFrom_00004,2), aux381)
reifyimply(diseq(statePlaces_00002_00003,-1), aux382)
ineq(aux383, aux122, 0)
ineq(aux384, aux101, 0)
ineq(aux385, aux60, 0)
reifyimply(ineq(3, actionTo_00005, 0), aux386)
reifyimply(w-literal(actionFrom_00005,2), aux387)
reifyimply(diseq(statePlaces_00002_00004,-1), aux388)
ineq(aux389, aux117, 0)
ineq(aux390, aux100, 0)
ineq(aux391, aux55, 0)
reifyimply(ineq(3, actionTo_00006, 0), aux392)
reifyimply(w-literal(actionFrom_00006,2), aux393)
reifyimply(diseq(statePlaces_00002_00005,-1), aux394)
ineq(aux395, aux129, 0)
ineq(aux396, aux99, 0)
ineq(aux397, aux54, 0)
reifyimply(ineq(3, actionTo_00007, 0), aux398)
reifyimply(w-literal(actionFrom_00007,2), aux399)
reifyimply(diseq(statePlaces_00002_00006,-1), aux400)
ineq(aux401, aux92, 0)
ineq(aux402, aux95, 0)
ineq(aux403, aux58, 0)
reifyimply(ineq(3, actionTo_00008, 0), aux404)
reifyimply(w-literal(actionFrom_00008,2), aux405)
reifyimply(diseq(statePlaces_00002_00007,-1), aux406)
ineq(aux407, aux113, 0)
ineq(aux408, aux94, 0)
ineq(aux409, aux57, 0)
reifyimply(ineq(3, actionTo_00009, 0), aux410)
reifyimply(w-literal(actionFrom_00009,2), aux411)
reifyimply(diseq(statePlaces_00002_00008,-1), aux412)
ineq(aux413, aux128, 0)
ineq(aux414, aux96, 0)
ineq(aux415, aux56, 0)
reifyimply(ineq(3, actionTo_00010, 0), aux416)
reifyimply(w-literal(actionFrom_00010,2), aux417)
reifyimply(diseq(statePlaces_00002_00009,-1), aux418)
ineq(aux419, aux109, 0)
ineq(aux420, aux115, 0)
ineq(aux421, aux52, 0)
reifyimply(ineq(3, actionTo_00011, 0), aux422)
reifyimply(w-literal(actionFrom_00011,2), aux423)
reifyimply(diseq(statePlaces_00002_00010,-1), aux424)
ineq(aux425, aux108, 0)
ineq(aux426, aux114, 0)
ineq(aux427, aux53, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux428)
reifyimply(diseq(aux73,-1), aux429)
reifyimply(diseq(aux81,-1), aux430)
reifyimply(w-literal(actionTo_00002,2), aux431)
ineq(aux432, aux98, 0)
ineq(aux433, aux103, 0)
reifyimply(diseq(aux64,-1), aux434)
reifyimply(ineq(3, actionFrom_00003, 0), aux436)
reifyimply(diseq(aux69,-1), aux437)
reifyimply(diseq(aux86,-1), aux438)
reifyimply(w-literal(actionTo_00003,2), aux439)
ineq(aux440, aux97, 0)
ineq(aux441, aux110, 0)
reifyimply(diseq(aux63,-1), aux442)
reifyimply(ineq(3, actionFrom_00004, 0), aux444)
reifyimply(diseq(aux72,-1), aux445)
reifyimply(diseq(aux85,-1), aux446)
reifyimply(w-literal(actionTo_00004,2), aux447)
ineq(aux448, aux101, 0)
ineq(aux449, aux122, 0)
reifyimply(diseq(aux67,-1), aux450)
reifyimply(ineq(3, actionFrom_00005, 0), aux452)
reifyimply(diseq(aux68,-1), aux453)
reifyimply(diseq(aux90,-1), aux454)
reifyimply(w-literal(actionTo_00005,2), aux455)
ineq(aux456, aux100, 0)
ineq(aux457, aux117, 0)
reifyimply(diseq(aux91,-1), aux458)
reifyimply(ineq(3, actionFrom_00006, 0), aux460)
reifyimply(diseq(aux80,-1), aux461)
reifyimply(diseq(aux89,-1), aux462)
reifyimply(w-literal(actionTo_00006,2), aux463)
ineq(aux464, aux99, 0)
ineq(aux465, aux129, 0)
reifyimply(diseq(aux77,-1), aux466)
reifyimply(ineq(3, actionFrom_00007, 0), aux468)
reifyimply(diseq(aux75,-1), aux469)
reifyimply(diseq(aux88,-1), aux470)
reifyimply(w-literal(actionTo_00007,2), aux471)
ineq(aux472, aux95, 0)
ineq(aux473, aux92, 0)
reifyimply(diseq(aux70,-1), aux474)
reifyimply(ineq(3, actionFrom_00008, 0), aux476)
reifyimply(diseq(aux71,-1), aux477)
reifyimply(diseq(aux87,-1), aux478)
reifyimply(w-literal(actionTo_00008,2), aux479)
ineq(aux480, aux94, 0)
ineq(aux481, aux113, 0)
reifyimply(diseq(aux66,-1), aux482)
reifyimply(ineq(3, actionFrom_00009, 0), aux484)
reifyimply(diseq(aux65,-1), aux485)
reifyimply(diseq(aux83,-1), aux486)
reifyimply(w-literal(actionTo_00009,2), aux487)
ineq(aux488, aux96, 0)
ineq(aux489, aux128, 0)
reifyimply(diseq(aux79,-1), aux490)
reifyimply(ineq(3, actionFrom_00010, 0), aux492)
reifyimply(diseq(aux62,-1), aux493)
reifyimply(diseq(aux84,-1), aux494)
reifyimply(w-literal(actionTo_00010,2), aux495)
ineq(aux496, aux115, 0)
ineq(aux497, aux109, 0)
reifyimply(diseq(aux76,-1), aux498)
reifyimply(ineq(3, actionFrom_00011, 0), aux500)
reifyimply(diseq(aux78,-1), aux501)
reifyimply(diseq(aux82,-1), aux502)
reifyimply(w-literal(actionTo_00011,2), aux503)
ineq(aux504, aux114, 0)
ineq(aux505, aux108, 0)
reifyimply(diseq(aux74,-1), aux506)
reifyimply(ineq(3, actionFrom_00002, 0), aux508)
reifyimply(diseq(aux73,-1), aux509)
reifyimply(diseq(aux81,-1), aux510)
reifyimply(w-literal(actionTo_00002,2), aux511)
ineq(aux513, aux98, 0)
ineq(aux514, aux103, 0)
reifyimply(ineq(3, actionFrom_00003, 0), aux515)
reifyimply(diseq(aux69,-1), aux516)
reifyimply(diseq(aux86,-1), aux517)
reifyimply(w-literal(actionTo_00003,2), aux518)
ineq(aux520, aux97, 0)
ineq(aux521, aux110, 0)
reifyimply(ineq(3, actionFrom_00004, 0), aux522)
reifyimply(diseq(aux72,-1), aux523)
reifyimply(diseq(aux85,-1), aux524)
reifyimply(w-literal(actionTo_00004,2), aux525)
ineq(aux527, aux101, 0)
ineq(aux528, aux122, 0)
reifyimply(ineq(3, actionFrom_00005, 0), aux529)
reifyimply(diseq(aux68,-1), aux530)
reifyimply(diseq(aux90,-1), aux531)
reifyimply(w-literal(actionTo_00005,2), aux532)
ineq(aux534, aux100, 0)
ineq(aux535, aux117, 0)
reifyimply(ineq(3, actionFrom_00006, 0), aux536)
reifyimply(diseq(aux80,-1), aux537)
reifyimply(diseq(aux89,-1), aux538)
reifyimply(w-literal(actionTo_00006,2), aux539)
ineq(aux541, aux99, 0)
ineq(aux542, aux129, 0)
reifyimply(ineq(3, actionFrom_00007, 0), aux543)
reifyimply(diseq(aux75,-1), aux544)
reifyimply(diseq(aux88,-1), aux545)
reifyimply(w-literal(actionTo_00007,2), aux546)
ineq(aux548, aux95, 0)
ineq(aux549, aux92, 0)
reifyimply(ineq(3, actionFrom_00008, 0), aux550)
reifyimply(diseq(aux71,-1), aux551)
reifyimply(diseq(aux87,-1), aux552)
reifyimply(w-literal(actionTo_00008,2), aux553)
ineq(aux555, aux94, 0)
ineq(aux556, aux113, 0)
reifyimply(ineq(3, actionFrom_00009, 0), aux557)
reifyimply(diseq(aux65,-1), aux558)
reifyimply(diseq(aux83,-1), aux559)
reifyimply(w-literal(actionTo_00009,2), aux560)
ineq(aux562, aux96, 0)
ineq(aux563, aux128, 0)
reifyimply(ineq(3, actionFrom_00010, 0), aux564)
reifyimply(diseq(aux62,-1), aux565)
reifyimply(diseq(aux84,-1), aux566)
reifyimply(w-literal(actionTo_00010,2), aux567)
ineq(aux569, aux115, 0)
ineq(aux570, aux109, 0)
reifyimply(ineq(3, actionFrom_00011, 0), aux571)
reifyimply(diseq(aux78,-1), aux572)
reifyimply(diseq(aux82,-1), aux573)
reifyimply(w-literal(actionTo_00011,2), aux574)
ineq(aux576, aux114, 0)
ineq(aux577, aux108, 0)
ineq(aux578, aux59, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux579)
reifyimply(w-literal(actionTo_00002,2), aux580)
ineq(aux581, aux98, 0)
ineq(aux582, aux103, 0)
reifyimply(diseq(aux64,-1), aux583)
ineq(aux585, aux61, 0)
reifyimply(ineq(3, actionFrom_00003, 0), aux586)
reifyimply(w-literal(actionTo_00003,2), aux587)
ineq(aux588, aux97, 0)
ineq(aux589, aux110, 0)
reifyimply(diseq(aux63,-1), aux590)
ineq(aux592, aux60, 0)
reifyimply(ineq(3, actionFrom_00004, 0), aux593)
reifyimply(w-literal(actionTo_00004,2), aux594)
ineq(aux595, aux101, 0)
ineq(aux596, aux122, 0)
reifyimply(diseq(aux67,-1), aux597)
ineq(aux599, aux55, 0)
reifyimply(ineq(3, actionFrom_00005, 0), aux600)
reifyimply(w-literal(actionTo_00005,2), aux601)
ineq(aux602, aux100, 0)
ineq(aux603, aux117, 0)
reifyimply(diseq(aux91,-1), aux604)
ineq(aux606, aux54, 0)
reifyimply(ineq(3, actionFrom_00006, 0), aux607)
reifyimply(w-literal(actionTo_00006,2), aux608)
ineq(aux609, aux99, 0)
ineq(aux610, aux129, 0)
reifyimply(diseq(aux77,-1), aux611)
ineq(aux613, aux58, 0)
reifyimply(ineq(3, actionFrom_00007, 0), aux614)
reifyimply(w-literal(actionTo_00007,2), aux615)
ineq(aux616, aux95, 0)
ineq(aux617, aux92, 0)
reifyimply(diseq(aux70,-1), aux618)
ineq(aux620, aux57, 0)
reifyimply(ineq(3, actionFrom_00008, 0), aux621)
reifyimply(w-literal(actionTo_00008,2), aux622)
ineq(aux623, aux94, 0)
ineq(aux624, aux113, 0)
reifyimply(diseq(aux66,-1), aux625)
ineq(aux627, aux56, 0)
reifyimply(ineq(3, actionFrom_00009, 0), aux628)
reifyimply(w-literal(actionTo_00009,2), aux629)
ineq(aux630, aux96, 0)
ineq(aux631, aux128, 0)
reifyimply(diseq(aux79,-1), aux632)
ineq(aux634, aux52, 0)
reifyimply(ineq(3, actionFrom_00010, 0), aux635)
reifyimply(w-literal(actionTo_00010,2), aux636)
ineq(aux637, aux115, 0)
ineq(aux638, aux109, 0)
reifyimply(diseq(aux76,-1), aux639)
ineq(aux641, aux53, 0)
reifyimply(ineq(3, actionFrom_00011, 0), aux642)
reifyimply(w-literal(actionTo_00011,2), aux643)
ineq(aux644, aux114, 0)
ineq(aux645, aux108, 0)
reifyimply(diseq(aux74,-1), aux646)
reifyimply(gaceq(aux73,statePlaces_00002_00002), aux648)
reifyimply(ineq(3, actionFrom_00002, 0), aux649)
reifyimply(w-literal(actionTo_00002,2), aux650)
ineq(aux652, aux103, 0)
reifyimply(diseq(aux64,-1), aux653)
reifyimply(gaceq(aux69,statePlaces_00002_00003), aux654)
reifyimply(ineq(3, actionFrom_00003, 0), aux655)
reifyimply(w-literal(actionTo_00003,2), aux656)
ineq(aux658, aux110, 0)
reifyimply(diseq(aux63,-1), aux659)
reifyimply(gaceq(aux72,statePlaces_00002_00004), aux660)
reifyimply(ineq(3, actionFrom_00004, 0), aux661)
reifyimply(w-literal(actionTo_00004,2), aux662)
ineq(aux664, aux122, 0)
reifyimply(diseq(aux67,-1), aux665)
reifyimply(gaceq(aux68,statePlaces_00002_00005), aux666)
reifyimply(ineq(3, actionFrom_00005, 0), aux667)
reifyimply(w-literal(actionTo_00005,2), aux668)
ineq(aux670, aux117, 0)
reifyimply(diseq(aux91,-1), aux671)
reifyimply(gaceq(aux80,statePlaces_00002_00006), aux672)
reifyimply(ineq(3, actionFrom_00006, 0), aux673)
reifyimply(w-literal(actionTo_00006,2), aux674)
ineq(aux676, aux129, 0)
reifyimply(diseq(aux77,-1), aux677)
reifyimply(gaceq(aux75,statePlaces_00002_00007), aux678)
reifyimply(ineq(3, actionFrom_00007, 0), aux679)
reifyimply(w-literal(actionTo_00007,2), aux680)
ineq(aux682, aux92, 0)
reifyimply(diseq(aux70,-1), aux683)
reifyimply(gaceq(aux71,statePlaces_00002_00008), aux684)
reifyimply(ineq(3, actionFrom_00008, 0), aux685)
reifyimply(w-literal(actionTo_00008,2), aux686)
ineq(aux688, aux113, 0)
reifyimply(diseq(aux66,-1), aux689)
reifyimply(gaceq(aux65,statePlaces_00002_00009), aux690)
reifyimply(ineq(3, actionFrom_00009, 0), aux691)
reifyimply(w-literal(actionTo_00009,2), aux692)
ineq(aux694, aux128, 0)
reifyimply(diseq(aux79,-1), aux695)
reifyimply(gaceq(aux62,statePlaces_00002_00010), aux696)
reifyimply(ineq(3, actionFrom_00010, 0), aux697)
reifyimply(w-literal(actionTo_00010,2), aux698)
ineq(aux700, aux109, 0)
reifyimply(diseq(aux76,-1), aux701)
reifyimply(gaceq(aux78,statePlaces_00002_00011), aux702)
reifyimply(ineq(3, actionFrom_00011, 0), aux703)
reifyimply(w-literal(actionTo_00011,2), aux704)
ineq(aux706, aux108, 0)
reifyimply(diseq(aux74,-1), aux707)
sumleq([pointers_00000_00002,-1],aux176)
sumgeq([pointers_00000_00002,-1],aux176)
sumleq([pointers_00000_00003,-1],aux182)
sumgeq([pointers_00000_00003,-1],aux182)
sumleq([pointers_00000_00004,-1],aux188)
sumgeq([pointers_00000_00004,-1],aux188)
sumleq([pointers_00000_00005,-1],aux194)
sumgeq([pointers_00000_00005,-1],aux194)
sumleq([pointers_00000_00006,-1],aux200)
sumgeq([pointers_00000_00006,-1],aux200)
sumleq([pointers_00000_00007,-1],aux206)
sumgeq([pointers_00000_00007,-1],aux206)
sumleq([pointers_00000_00008,-1],aux212)
sumgeq([pointers_00000_00008,-1],aux212)
sumleq([pointers_00000_00009,-1],aux218)
sumgeq([pointers_00000_00009,-1],aux218)
sumleq([pointers_00000_00010,-1],aux224)
sumgeq([pointers_00000_00010,-1],aux224)
sumleq([pointers_00000_00011,-1],aux230)
sumgeq([pointers_00000_00011,-1],aux230)
sumleq([pointers_00001_00003,-1],aux239)
sumgeq([pointers_00001_00003,-1],aux239)
sumleq([pointers_00001_00004,-1],aux248)
sumgeq([pointers_00001_00004,-1],aux248)
sumleq([pointers_00001_00005,-1],aux257)
sumgeq([pointers_00001_00005,-1],aux257)
sumleq([pointers_00001_00006,-1],aux266)
sumgeq([pointers_00001_00006,-1],aux266)
sumleq([pointers_00001_00007,-1],aux275)
sumgeq([pointers_00001_00007,-1],aux275)
sumleq([pointers_00001_00008,-1],aux284)
sumgeq([pointers_00001_00008,-1],aux284)
sumleq([pointers_00001_00009,-1],aux293)
sumgeq([pointers_00001_00009,-1],aux293)
sumleq([pointers_00001_00010,-1],aux302)
sumgeq([pointers_00001_00010,-1],aux302)
sumleq([actionFrom_00009,-2],aux93)
sumgeq([actionFrom_00009,-2],aux93)
sumleq([actionFrom_00002,-2],aux102)
sumgeq([actionFrom_00002,-2],aux102)
sumleq([actionFrom_00007,-2],aux104)
sumgeq([actionFrom_00007,-2],aux104)
sumleq([actionFrom_00010,-2],aux105)
sumgeq([actionFrom_00010,-2],aux105)
sumleq([actionTo_00011,-2],aux106)
sumgeq([actionTo_00011,-2],aux106)
sumleq([actionTo_00010,-2],aux107)
sumgeq([actionTo_00010,-2],aux107)
sumleq([actionFrom_00008,-2],aux111)
sumgeq([actionFrom_00008,-2],aux111)
sumleq([actionFrom_00011,-2],aux112)
sumgeq([actionFrom_00011,-2],aux112)
sumleq([actionFrom_00005,-2],aux116)
sumgeq([actionFrom_00005,-2],aux116)
sumleq([actionTo_00008,-2],aux118)
sumgeq([actionTo_00008,-2],aux118)
sumleq([actionTo_00009,-2],aux119)
sumgeq([actionTo_00009,-2],aux119)
sumleq([actionTo_00007,-2],aux120)
sumgeq([actionTo_00007,-2],aux120)
sumleq([actionTo_00006,-2],aux121)
sumgeq([actionTo_00006,-2],aux121)
sumleq([actionTo_00005,-2],aux123)
sumgeq([actionTo_00005,-2],aux123)
sumleq([actionTo_00004,-2],aux124)
sumgeq([actionTo_00004,-2],aux124)
sumleq([actionTo_00003,-2],aux125)
sumgeq([actionTo_00003,-2],aux125)
sumleq([actionTo_00002,-2],aux126)
sumgeq([actionTo_00002,-2],aux126)
sumleq([actionFrom_00006,-2],aux127)
sumgeq([actionFrom_00006,-2],aux127)
sumleq([actionFrom_00003,-2],aux130)
sumgeq([actionFrom_00003,-2],aux130)
sumleq([actionFrom_00004,-2],aux131)
sumgeq([actionFrom_00004,-2],aux131)
reifyimply(sumleq([pointers_00000_00002,1],pointers_00000_00003), aux177)
reifyimply(sumgeq([pointers_00000_00002,1],pointers_00000_00003), aux177)
reifyimply(sumleq([pointers_00000_00003,1],pointers_00000_00004), aux183)
reifyimply(sumgeq([pointers_00000_00003,1],pointers_00000_00004), aux183)
reifyimply(sumleq([pointers_00000_00004,1],pointers_00000_00005), aux189)
reifyimply(sumgeq([pointers_00000_00004,1],pointers_00000_00005), aux189)
reifyimply(sumleq([pointers_00000_00005,1],pointers_00000_00006), aux195)
reifyimply(sumgeq([pointers_00000_00005,1],pointers_00000_00006), aux195)
reifyimply(sumleq([pointers_00000_00006,1],pointers_00000_00007), aux201)
reifyimply(sumgeq([pointers_00000_00006,1],pointers_00000_00007), aux201)
reifyimply(sumleq([pointers_00000_00007,1],pointers_00000_00008), aux207)
reifyimply(sumgeq([pointers_00000_00007,1],pointers_00000_00008), aux207)
reifyimply(sumleq([pointers_00000_00008,1],pointers_00000_00009), aux213)
reifyimply(sumgeq([pointers_00000_00008,1],pointers_00000_00009), aux213)
reifyimply(sumleq([pointers_00000_00009,1],pointers_00000_00010), aux219)
reifyimply(sumgeq([pointers_00000_00009,1],pointers_00000_00010), aux219)
reifyimply(sumleq([pointers_00000_00010,1],pointers_00000_00011), aux225)
reifyimply(sumgeq([pointers_00000_00010,1],pointers_00000_00011), aux225)
reifyimply(sumleq([pointers_00001_00003,1],pointers_00001_00004), aux243)
reifyimply(sumgeq([pointers_00001_00003,1],pointers_00001_00004), aux243)
reifyimply(sumleq([pointers_00001_00004,1],pointers_00001_00005), aux252)
reifyimply(sumgeq([pointers_00001_00004,1],pointers_00001_00005), aux252)
reifyimply(sumleq([pointers_00001_00005,1],pointers_00001_00006), aux261)
reifyimply(sumgeq([pointers_00001_00005,1],pointers_00001_00006), aux261)
reifyimply(sumleq([pointers_00001_00006,1],pointers_00001_00007), aux270)
reifyimply(sumgeq([pointers_00001_00006,1],pointers_00001_00007), aux270)
reifyimply(sumleq([pointers_00001_00007,1],pointers_00001_00008), aux279)
reifyimply(sumgeq([pointers_00001_00007,1],pointers_00001_00008), aux279)
reifyimply(sumleq([pointers_00001_00008,1],pointers_00001_00009), aux288)
reifyimply(sumgeq([pointers_00001_00008,1],pointers_00001_00009), aux288)
reifyimply(sumleq([pointers_00001_00009,1],pointers_00001_00010), aux297)
reifyimply(sumgeq([pointers_00001_00009,1],pointers_00001_00010), aux297)
reifyimply(sumleq([8,aux73],statePlaces_00002_00002), aux435)
reifyimply(sumgeq([8,aux73],statePlaces_00002_00002), aux435)
reifyimply(sumleq([statePlaces_00002_00002,aux69],statePlaces_00002_00003), aux443)
reifyimply(sumgeq([statePlaces_00002_00002,aux69],statePlaces_00002_00003), aux443)
reifyimply(sumleq([statePlaces_00002_00003,aux72],statePlaces_00002_00004), aux451)
reifyimply(sumgeq([statePlaces_00002_00003,aux72],statePlaces_00002_00004), aux451)
reifyimply(sumleq([statePlaces_00002_00004,aux68],statePlaces_00002_00005), aux459)
reifyimply(sumgeq([statePlaces_00002_00004,aux68],statePlaces_00002_00005), aux459)
reifyimply(sumleq([statePlaces_00002_00005,aux80],statePlaces_00002_00006), aux467)
reifyimply(sumgeq([statePlaces_00002_00005,aux80],statePlaces_00002_00006), aux467)
reifyimply(sumleq([statePlaces_00002_00006,aux75],statePlaces_00002_00007), aux475)
reifyimply(sumgeq([statePlaces_00002_00006,aux75],statePlaces_00002_00007), aux475)
reifyimply(sumleq([statePlaces_00002_00007,aux71],statePlaces_00002_00008), aux483)
reifyimply(sumgeq([statePlaces_00002_00007,aux71],statePlaces_00002_00008), aux483)
reifyimply(sumleq([statePlaces_00002_00008,aux65],statePlaces_00002_00009), aux491)
reifyimply(sumgeq([statePlaces_00002_00008,aux65],statePlaces_00002_00009), aux491)
reifyimply(sumleq([statePlaces_00002_00009,aux62],statePlaces_00002_00010), aux499)
reifyimply(sumgeq([statePlaces_00002_00009,aux62],statePlaces_00002_00010), aux499)
reifyimply(sumleq([statePlaces_00002_00010,aux78],statePlaces_00002_00011), aux507)
reifyimply(sumgeq([statePlaces_00002_00010,aux78],statePlaces_00002_00011), aux507)
reifyimply(weightedsumleq([1,-1],[8,aux73],statePlaces_00002_00002), aux512)
reifyimply(weightedsumgeq([1,-1],[8,aux73],statePlaces_00002_00002), aux512)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00002,aux69],statePlaces_00002_00003), aux519)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00002,aux69],statePlaces_00002_00003), aux519)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00003,aux72],statePlaces_00002_00004), aux526)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00003,aux72],statePlaces_00002_00004), aux526)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00004,aux68],statePlaces_00002_00005), aux533)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00004,aux68],statePlaces_00002_00005), aux533)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00005,aux80],statePlaces_00002_00006), aux540)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00005,aux80],statePlaces_00002_00006), aux540)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00006,aux75],statePlaces_00002_00007), aux547)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00006,aux75],statePlaces_00002_00007), aux547)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00007,aux71],statePlaces_00002_00008), aux554)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00007,aux71],statePlaces_00002_00008), aux554)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00008,aux65],statePlaces_00002_00009), aux561)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00008,aux65],statePlaces_00002_00009), aux561)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00009,aux62],statePlaces_00002_00010), aux568)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00009,aux62],statePlaces_00002_00010), aux568)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00010,aux78],statePlaces_00002_00011), aux575)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00010,aux78],statePlaces_00002_00011), aux575)
reifyimply(sumleq([1,aux64],aux73), aux584)
reifyimply(sumgeq([1,aux64],aux73), aux584)
reifyimply(sumleq([1,aux63],aux69), aux591)
reifyimply(sumgeq([1,aux63],aux69), aux591)
reifyimply(sumleq([1,aux67],aux72), aux598)
reifyimply(sumgeq([1,aux67],aux72), aux598)
reifyimply(sumleq([1,aux91],aux68), aux605)
reifyimply(sumgeq([1,aux91],aux68), aux605)
reifyimply(sumleq([1,aux77],aux80), aux612)
reifyimply(sumgeq([1,aux77],aux80), aux612)
reifyimply(sumleq([1,aux70],aux75), aux619)
reifyimply(sumgeq([1,aux70],aux75), aux619)
reifyimply(sumleq([1,aux66],aux71), aux626)
reifyimply(sumgeq([1,aux66],aux71), aux626)
reifyimply(sumleq([1,aux79],aux65), aux633)
reifyimply(sumgeq([1,aux79],aux65), aux633)
reifyimply(sumleq([1,aux76],aux62), aux640)
reifyimply(sumgeq([1,aux76],aux62), aux640)
reifyimply(sumleq([1,aux74],aux78), aux647)
reifyimply(sumgeq([1,aux74],aux78), aux647)
reifyimply(sumleq([-1,aux64],aux73), aux651)
reifyimply(sumgeq([-1,aux64],aux73), aux651)
reifyimply(sumleq([-1,aux63],aux69), aux657)
reifyimply(sumgeq([-1,aux63],aux69), aux657)
reifyimply(sumleq([-1,aux67],aux72), aux663)
reifyimply(sumgeq([-1,aux67],aux72), aux663)
reifyimply(sumleq([-1,aux91],aux68), aux669)
reifyimply(sumgeq([-1,aux91],aux68), aux669)
reifyimply(sumleq([-1,aux77],aux80), aux675)
reifyimply(sumgeq([-1,aux77],aux80), aux675)
reifyimply(sumleq([-1,aux70],aux75), aux681)
reifyimply(sumgeq([-1,aux70],aux75), aux681)
reifyimply(sumleq([-1,aux66],aux71), aux687)
reifyimply(sumgeq([-1,aux66],aux71), aux687)
reifyimply(sumleq([-1,aux79],aux65), aux693)
reifyimply(sumgeq([-1,aux79],aux65), aux693)
reifyimply(sumleq([-1,aux76],aux62), aux699)
reifyimply(sumgeq([-1,aux76],aux62), aux699)
reifyimply(sumleq([-1,aux74],aux78), aux705)
reifyimply(sumgeq([-1,aux74],aux78), aux705)
**EOF**
