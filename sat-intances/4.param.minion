MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 0
# CSE_active_eliminated_expressions = 0
# CSE_active_total_size = 0
**VARIABLES**
DISCRETE statePlaces_00002_00002 #
{-1..100}
DISCRETE statePlaces_00002_00003 #
{-1..100}
DISCRETE statePlaces_00002_00004 #
{-1..100}
DISCRETE statePlaces_00002_00005 #
{-1..100}
DISCRETE statePlaces_00002_00006 #
{-1..100}
DISCRETE statePlaces_00002_00007 #
{-1..100}
DISCRETE statePlaces_00002_00008 #
{-1..100}
DISCRETE statePlaces_00002_00009 #
{-1..100}
DISCRETE statePlaces_00002_00010 #
{-1..100}
DISCRETE statePlaces_00002_00011 #
{-1..100}
DISCRETE actionTypes_00002 #
{1..2}
DISCRETE actionTypes_00003 #
{1..2}
DISCRETE actionTypes_00004 #
{1..2}
DISCRETE actionTypes_00005 #
{1..2}
DISCRETE actionTypes_00006 #
{1..2}
DISCRETE actionTypes_00007 #
{1..2}
DISCRETE actionTypes_00008 #
{1..2}
DISCRETE actionTypes_00009 #
{1..2}
DISCRETE actionTypes_00010 #
{1..2}
DISCRETE actionTypes_00011 #
{1..2}
DISCRETE actionFrom_00002 #
{0..2}
DISCRETE actionFrom_00003 #
{0..2}
DISCRETE actionFrom_00004 #
{0..2}
DISCRETE actionFrom_00005 #
{0..2}
DISCRETE actionFrom_00006 #
{0..2}
DISCRETE actionFrom_00007 #
{0..2}
DISCRETE actionFrom_00008 #
{0..2}
DISCRETE actionFrom_00009 #
{0..2}
DISCRETE actionFrom_00010 #
{0..2}
DISCRETE actionFrom_00011 #
{0..2}
DISCRETE actionTo_00002 #
{0..2}
DISCRETE actionTo_00003 #
{0..2}
DISCRETE actionTo_00004 #
{0..2}
DISCRETE actionTo_00005 #
{0..2}
DISCRETE actionTo_00006 #
{0..2}
DISCRETE actionTo_00007 #
{0..2}
DISCRETE actionTo_00008 #
{0..2}
DISCRETE actionTo_00009 #
{0..2}
DISCRETE actionTo_00010 #
{0..2}
DISCRETE actionTo_00011 #
{0..2}
DISCRETE pointers_00000_00002 #
{0..8}
DISCRETE pointers_00000_00003 #
{0..8}
DISCRETE pointers_00000_00004 #
{0..8}
DISCRETE pointers_00000_00005 #
{0..8}
DISCRETE pointers_00000_00006 #
{0..8}
DISCRETE pointers_00000_00007 #
{0..8}
DISCRETE pointers_00000_00008 #
{0..8}
DISCRETE pointers_00000_00009 #
{0..8}
DISCRETE pointers_00000_00010 #
{0..8}
DISCRETE pointers_00000_00011 #
{0..8}
DISCRETE pointers_00001_00002 #
{0..8}
DISCRETE pointers_00001_00003 #
{0..8}
DISCRETE pointers_00001_00004 #
{0..8}
DISCRETE pointers_00001_00005 #
{0..8}
DISCRETE pointers_00001_00006 #
{0..8}
DISCRETE pointers_00001_00007 #
{0..8}
DISCRETE pointers_00001_00008 #
{0..8}
DISCRETE pointers_00001_00009 #
{0..8}
DISCRETE pointers_00001_00010 #
{0..8}
BOOL aux52 #(1 != actionTypes_00002)
BOOL aux53 #(1 != actionTypes_00003)
BOOL aux54 #(1 != actionTypes_00004)
BOOL aux55 #(1 != actionTypes_00005)
BOOL aux56 #(1 != actionTypes_00006)
BOOL aux57 #(1 != actionTypes_00007)
BOOL aux58 #(1 != actionTypes_00008)
BOOL aux59 #(1 != actionTypes_00009)
BOOL aux60 #(1 != actionTypes_00010)
BOOL aux61 #(1 != actionTypes_00011)
BOOL aux62 #(2 != actionTypes_00002)
BOOL aux63 #(2 != actionTypes_00003)
BOOL aux64 #(2 != actionTypes_00004)
BOOL aux65 #(2 != actionTypes_00005)
BOOL aux66 #(2 != actionTypes_00006)
BOOL aux67 #(2 != actionTypes_00007)
BOOL aux68 #(2 != actionTypes_00008)
BOOL aux69 #(2 != actionTypes_00009)
BOOL aux70 #(2 != actionTypes_00010)
BOOL aux71 #(2 != actionTypes_00011)
BOOL aux72 #(2=actionTypes_00002)
BOOL aux73 #(2=actionTypes_00003)
BOOL aux74 #(2=actionTypes_00004)
BOOL aux75 #(2=actionTypes_00005)
BOOL aux76 #(2=actionTypes_00006)
BOOL aux77 #(2=actionTypes_00007)
BOOL aux78 #(2=actionTypes_00008)
BOOL aux79 #(2=actionTypes_00009)
BOOL aux80 #(2=actionTypes_00010)
BOOL aux81 #(2=actionTypes_00011)
BOOL aux82 #(1=actionTypes_00002)
BOOL aux83 #(1=actionTypes_00002)
BOOL aux84 #(1=actionTypes_00002)
BOOL aux85 #(1=actionTypes_00002)
BOOL aux86 #(1=actionTypes_00002)
DISCRETE aux87 #(pointers_00000_00002 + -1)
{-1..7}
BOOL aux88 #(1=actionTypes_00003)
BOOL aux89 #(1=actionTypes_00003)
BOOL aux90 #(1=actionTypes_00003)
BOOL aux91 #(1=actionTypes_00003)
BOOL aux92 #(1=actionTypes_00003)
DISCRETE aux93 #(pointers_00000_00003 + -1)
{-1..7}
BOOL aux94 #(1=actionTypes_00004)
BOOL aux95 #(1=actionTypes_00004)
BOOL aux96 #(1=actionTypes_00004)
BOOL aux97 #(1=actionTypes_00004)
BOOL aux98 #(1=actionTypes_00004)
DISCRETE aux99 #(pointers_00000_00004 + -1)
{-1..7}
BOOL aux100 #(1=actionTypes_00005)
BOOL aux101 #(1=actionTypes_00005)
BOOL aux102 #(1=actionTypes_00005)
BOOL aux103 #(1=actionTypes_00005)
BOOL aux104 #(1=actionTypes_00005)
DISCRETE aux105 #(pointers_00000_00005 + -1)
{-1..7}
BOOL aux106 #(1=actionTypes_00006)
BOOL aux107 #(1=actionTypes_00006)
BOOL aux108 #(1=actionTypes_00006)
BOOL aux109 #(1=actionTypes_00006)
BOOL aux110 #(1=actionTypes_00006)
DISCRETE aux111 #(pointers_00000_00006 + -1)
{-1..7}
BOOL aux112 #(1=actionTypes_00007)
BOOL aux113 #(1=actionTypes_00007)
BOOL aux114 #(1=actionTypes_00007)
BOOL aux115 #(1=actionTypes_00007)
BOOL aux116 #(1=actionTypes_00007)
DISCRETE aux117 #(pointers_00000_00007 + -1)
{-1..7}
BOOL aux118 #(1=actionTypes_00008)
BOOL aux119 #(1=actionTypes_00008)
BOOL aux120 #(1=actionTypes_00008)
BOOL aux121 #(1=actionTypes_00008)
BOOL aux122 #(1=actionTypes_00008)
DISCRETE aux123 #(pointers_00000_00008 + -1)
{-1..7}
BOOL aux124 #(1=actionTypes_00009)
BOOL aux125 #(1=actionTypes_00009)
BOOL aux126 #(1=actionTypes_00009)
BOOL aux127 #(1=actionTypes_00009)
BOOL aux128 #(1=actionTypes_00009)
DISCRETE aux129 #(pointers_00000_00009 + -1)
{-1..7}
BOOL aux130 #(1=actionTypes_00010)
BOOL aux131 #(1=actionTypes_00010)
BOOL aux132 #(1=actionTypes_00010)
BOOL aux133 #(1=actionTypes_00010)
BOOL aux134 #(1=actionTypes_00010)
DISCRETE aux135 #(pointers_00000_00010 + -1)
{-1..7}
BOOL aux136 #(1=actionTypes_00011)
BOOL aux137 #(1=actionTypes_00011)
BOOL aux138 #(1=actionTypes_00011)
BOOL aux139 #(1=actionTypes_00011)
BOOL aux140 #(1=actionTypes_00011)
DISCRETE aux141 #(pointers_00000_00011 + -1)
{-1..7}
BOOL aux142 #(2=actionTypes_00002)
BOOL aux143 #(2=actionTypes_00002)
BOOL aux144 #(2=actionTypes_00002)
BOOL aux145 #(2=actionTypes_00002)
BOOL aux146 #(2=actionTypes_00002)
BOOL aux147 #(2=actionTypes_00002)
BOOL aux148 #(2=actionTypes_00002)
DISCRETE aux149 #(pointers_00001_00002 + -1)
{-1..7}
BOOL aux150 #(2=actionTypes_00003)
BOOL aux151 #(2=actionTypes_00003)
BOOL aux152 #(2=actionTypes_00003)
BOOL aux153 #(2=actionTypes_00003)
BOOL aux154 #(2=actionTypes_00003)
BOOL aux155 #(2=actionTypes_00003)
BOOL aux156 #(2=actionTypes_00003)
BOOL aux157 #(2=actionTypes_00003)
DISCRETE aux158 #(pointers_00001_00003 + -1)
{-1..7}
BOOL aux159 #(2=actionTypes_00004)
BOOL aux160 #(2=actionTypes_00004)
BOOL aux161 #(2=actionTypes_00004)
BOOL aux162 #(2=actionTypes_00004)
BOOL aux163 #(2=actionTypes_00004)
BOOL aux164 #(2=actionTypes_00004)
BOOL aux165 #(2=actionTypes_00004)
BOOL aux166 #(2=actionTypes_00004)
DISCRETE aux167 #(pointers_00001_00004 + -1)
{-1..7}
BOOL aux168 #(2=actionTypes_00005)
BOOL aux169 #(2=actionTypes_00005)
BOOL aux170 #(2=actionTypes_00005)
BOOL aux171 #(2=actionTypes_00005)
BOOL aux172 #(2=actionTypes_00005)
BOOL aux173 #(2=actionTypes_00005)
BOOL aux174 #(2=actionTypes_00005)
BOOL aux175 #(2=actionTypes_00005)
DISCRETE aux176 #(pointers_00001_00005 + -1)
{-1..7}
BOOL aux177 #(2=actionTypes_00006)
BOOL aux178 #(2=actionTypes_00006)
BOOL aux179 #(2=actionTypes_00006)
BOOL aux180 #(2=actionTypes_00006)
BOOL aux181 #(2=actionTypes_00006)
BOOL aux182 #(2=actionTypes_00006)
BOOL aux183 #(2=actionTypes_00006)
BOOL aux184 #(2=actionTypes_00006)
DISCRETE aux185 #(pointers_00001_00006 + -1)
{-1..7}
BOOL aux186 #(2=actionTypes_00007)
BOOL aux187 #(2=actionTypes_00007)
BOOL aux188 #(2=actionTypes_00007)
BOOL aux189 #(2=actionTypes_00007)
BOOL aux190 #(2=actionTypes_00007)
BOOL aux191 #(2=actionTypes_00007)
BOOL aux192 #(2=actionTypes_00007)
BOOL aux193 #(2=actionTypes_00007)
DISCRETE aux194 #(pointers_00001_00007 + -1)
{-1..7}
BOOL aux195 #(2=actionTypes_00008)
BOOL aux196 #(2=actionTypes_00008)
BOOL aux197 #(2=actionTypes_00008)
BOOL aux198 #(2=actionTypes_00008)
BOOL aux199 #(2=actionTypes_00008)
BOOL aux200 #(2=actionTypes_00008)
BOOL aux201 #(2=actionTypes_00008)
BOOL aux202 #(2=actionTypes_00008)
DISCRETE aux203 #(pointers_00001_00008 + -1)
{-1..7}
BOOL aux204 #(2=actionTypes_00009)
BOOL aux205 #(2=actionTypes_00009)
BOOL aux206 #(2=actionTypes_00009)
BOOL aux207 #(2=actionTypes_00009)
BOOL aux208 #(2=actionTypes_00009)
BOOL aux209 #(2=actionTypes_00009)
BOOL aux210 #(2=actionTypes_00009)
BOOL aux211 #(2=actionTypes_00009)
DISCRETE aux212 #(pointers_00001_00009 + -1)
{-1..7}
BOOL aux213 #(2=actionTypes_00010)
BOOL aux214 #(2=actionTypes_00010)
BOOL aux215 #(2=actionTypes_00010)
BOOL aux216 #(2=actionTypes_00010)
BOOL aux217 #(2=actionTypes_00010)
BOOL aux218 #(2=actionTypes_00010)
BOOL aux219 #(2=actionTypes_00010)
BOOL aux220 #(2=actionTypes_00010)
DISCRETE aux221 #(pointers_00001_00010 + -1)
{-1..7}
BOOL aux222 #(2=actionTypes_00011)
BOOL aux223 #(2=actionTypes_00011)
BOOL aux224 #(2=actionTypes_00011)
BOOL aux225 #(2=actionTypes_00011)
BOOL aux226 #(2=actionTypes_00011)
BOOL aux227 #(2=actionTypes_00011)
**VARIABLES**
ALIAS output[4]=[20, 8, 6, 4]
**VARIABLES**
ALIAS input[8]=[0, 20, 8, 0, 0, 6, 4, 0]
**SEARCH**
PRINT[[statePlaces_00002_00002],[statePlaces_00002_00003],[statePlaces_00002_00004],[statePlaces_00002_00005],[statePlaces_00002_00006],[statePlaces_00002_00007],[statePlaces_00002_00008],[statePlaces_00002_00009],[statePlaces_00002_00010],[statePlaces_00002_00011],[actionTypes_00002],[actionTypes_00003],[actionTypes_00004],[actionTypes_00005],[actionTypes_00006],[actionTypes_00007],[actionTypes_00008],[actionTypes_00009],[actionTypes_00010],[actionTypes_00011],[actionFrom_00002],[actionFrom_00003],[actionFrom_00004],[actionFrom_00005],[actionFrom_00006],[actionFrom_00007],[actionFrom_00008],[actionFrom_00009],[actionFrom_00010],[actionFrom_00011],[actionTo_00002],[actionTo_00003],[actionTo_00004],[actionTo_00005],[actionTo_00006],[actionTo_00007],[actionTo_00008],[actionTo_00009],[actionTo_00010],[actionTo_00011],[pointers_00000_00002],[pointers_00000_00003],[pointers_00000_00004],[pointers_00000_00005],[pointers_00000_00006],[pointers_00000_00007],[pointers_00000_00008],[pointers_00000_00009],[pointers_00000_00010],[pointers_00000_00011],[pointers_00001_00002],[pointers_00001_00003],[pointers_00001_00004],[pointers_00001_00005],[pointers_00001_00006],[pointers_00001_00007],[pointers_00001_00008],[pointers_00001_00009],[pointers_00001_00010]]
**CONSTRAINTS**
reify(diseq(1,actionTypes_00002), aux52)
reify(diseq(1,actionTypes_00003), aux53)
reify(diseq(1,actionTypes_00004), aux54)
reify(diseq(1,actionTypes_00005), aux55)
reify(diseq(1,actionTypes_00006), aux56)
reify(diseq(1,actionTypes_00007), aux57)
reify(diseq(1,actionTypes_00008), aux58)
reify(diseq(1,actionTypes_00009), aux59)
reify(diseq(1,actionTypes_00010), aux60)
reify(diseq(1,actionTypes_00011), aux61)
reify(diseq(2,actionTypes_00002), aux62)
reify(diseq(2,actionTypes_00003), aux63)
reify(diseq(2,actionTypes_00004), aux64)
reify(diseq(2,actionTypes_00005), aux65)
reify(diseq(2,actionTypes_00006), aux66)
reify(diseq(2,actionTypes_00007), aux67)
reify(diseq(2,actionTypes_00008), aux68)
reify(diseq(2,actionTypes_00009), aux69)
reify(diseq(2,actionTypes_00010), aux70)
reify(diseq(2,actionTypes_00011), aux71)
reify(w-literal(actionTypes_00002,2), aux72)
reify(w-literal(actionTypes_00003,2), aux73)
reify(w-literal(actionTypes_00004,2), aux74)
reify(w-literal(actionTypes_00005,2), aux75)
reify(w-literal(actionTypes_00006,2), aux76)
reify(w-literal(actionTypes_00007,2), aux77)
reify(w-literal(actionTypes_00008,2), aux78)
reify(w-literal(actionTypes_00009,2), aux79)
reify(w-literal(actionTypes_00010,2), aux80)
reify(w-literal(actionTypes_00011,2), aux81)
reify(w-literal(actionTypes_00002,1), aux82)
reify(w-literal(actionTypes_00002,1), aux83)
reify(w-literal(actionTypes_00002,1), aux84)
reify(w-literal(actionTypes_00002,1), aux85)
reify(w-literal(actionTypes_00002,1), aux86)
reify(w-literal(actionTypes_00003,1), aux88)
reify(w-literal(actionTypes_00003,1), aux89)
reify(w-literal(actionTypes_00003,1), aux90)
reify(w-literal(actionTypes_00003,1), aux91)
reify(w-literal(actionTypes_00003,1), aux92)
reify(w-literal(actionTypes_00004,1), aux94)
reify(w-literal(actionTypes_00004,1), aux95)
reify(w-literal(actionTypes_00004,1), aux96)
reify(w-literal(actionTypes_00004,1), aux97)
reify(w-literal(actionTypes_00004,1), aux98)
reify(w-literal(actionTypes_00005,1), aux100)
reify(w-literal(actionTypes_00005,1), aux101)
reify(w-literal(actionTypes_00005,1), aux102)
reify(w-literal(actionTypes_00005,1), aux103)
reify(w-literal(actionTypes_00005,1), aux104)
reify(w-literal(actionTypes_00006,1), aux106)
reify(w-literal(actionTypes_00006,1), aux107)
reify(w-literal(actionTypes_00006,1), aux108)
reify(w-literal(actionTypes_00006,1), aux109)
reify(w-literal(actionTypes_00006,1), aux110)
reify(w-literal(actionTypes_00007,1), aux112)
reify(w-literal(actionTypes_00007,1), aux113)
reify(w-literal(actionTypes_00007,1), aux114)
reify(w-literal(actionTypes_00007,1), aux115)
reify(w-literal(actionTypes_00007,1), aux116)
reify(w-literal(actionTypes_00008,1), aux118)
reify(w-literal(actionTypes_00008,1), aux119)
reify(w-literal(actionTypes_00008,1), aux120)
reify(w-literal(actionTypes_00008,1), aux121)
reify(w-literal(actionTypes_00008,1), aux122)
reify(w-literal(actionTypes_00009,1), aux124)
reify(w-literal(actionTypes_00009,1), aux125)
reify(w-literal(actionTypes_00009,1), aux126)
reify(w-literal(actionTypes_00009,1), aux127)
reify(w-literal(actionTypes_00009,1), aux128)
reify(w-literal(actionTypes_00010,1), aux130)
reify(w-literal(actionTypes_00010,1), aux131)
reify(w-literal(actionTypes_00010,1), aux132)
reify(w-literal(actionTypes_00010,1), aux133)
reify(w-literal(actionTypes_00010,1), aux134)
reify(w-literal(actionTypes_00011,1), aux136)
reify(w-literal(actionTypes_00011,1), aux137)
reify(w-literal(actionTypes_00011,1), aux138)
reify(w-literal(actionTypes_00011,1), aux139)
reify(w-literal(actionTypes_00011,1), aux140)
reify(w-literal(actionTypes_00002,2), aux142)
reify(w-literal(actionTypes_00002,2), aux143)
reify(w-literal(actionTypes_00002,2), aux144)
reify(w-literal(actionTypes_00002,2), aux145)
reify(w-literal(actionTypes_00002,2), aux146)
reify(w-literal(actionTypes_00002,2), aux147)
reify(w-literal(actionTypes_00002,2), aux148)
reify(w-literal(actionTypes_00003,2), aux150)
reify(w-literal(actionTypes_00003,2), aux151)
reify(w-literal(actionTypes_00003,2), aux152)
reify(w-literal(actionTypes_00003,2), aux153)
reify(w-literal(actionTypes_00003,2), aux154)
reify(w-literal(actionTypes_00003,2), aux155)
reify(w-literal(actionTypes_00003,2), aux156)
reify(w-literal(actionTypes_00003,2), aux157)
reify(w-literal(actionTypes_00004,2), aux159)
reify(w-literal(actionTypes_00004,2), aux160)
reify(w-literal(actionTypes_00004,2), aux161)
reify(w-literal(actionTypes_00004,2), aux162)
reify(w-literal(actionTypes_00004,2), aux163)
reify(w-literal(actionTypes_00004,2), aux164)
reify(w-literal(actionTypes_00004,2), aux165)
reify(w-literal(actionTypes_00004,2), aux166)
reify(w-literal(actionTypes_00005,2), aux168)
reify(w-literal(actionTypes_00005,2), aux169)
reify(w-literal(actionTypes_00005,2), aux170)
reify(w-literal(actionTypes_00005,2), aux171)
reify(w-literal(actionTypes_00005,2), aux172)
reify(w-literal(actionTypes_00005,2), aux173)
reify(w-literal(actionTypes_00005,2), aux174)
reify(w-literal(actionTypes_00005,2), aux175)
reify(w-literal(actionTypes_00006,2), aux177)
reify(w-literal(actionTypes_00006,2), aux178)
reify(w-literal(actionTypes_00006,2), aux179)
reify(w-literal(actionTypes_00006,2), aux180)
reify(w-literal(actionTypes_00006,2), aux181)
reify(w-literal(actionTypes_00006,2), aux182)
reify(w-literal(actionTypes_00006,2), aux183)
reify(w-literal(actionTypes_00006,2), aux184)
reify(w-literal(actionTypes_00007,2), aux186)
reify(w-literal(actionTypes_00007,2), aux187)
reify(w-literal(actionTypes_00007,2), aux188)
reify(w-literal(actionTypes_00007,2), aux189)
reify(w-literal(actionTypes_00007,2), aux190)
reify(w-literal(actionTypes_00007,2), aux191)
reify(w-literal(actionTypes_00007,2), aux192)
reify(w-literal(actionTypes_00007,2), aux193)
reify(w-literal(actionTypes_00008,2), aux195)
reify(w-literal(actionTypes_00008,2), aux196)
reify(w-literal(actionTypes_00008,2), aux197)
reify(w-literal(actionTypes_00008,2), aux198)
reify(w-literal(actionTypes_00008,2), aux199)
reify(w-literal(actionTypes_00008,2), aux200)
reify(w-literal(actionTypes_00008,2), aux201)
reify(w-literal(actionTypes_00008,2), aux202)
reify(w-literal(actionTypes_00009,2), aux204)
reify(w-literal(actionTypes_00009,2), aux205)
reify(w-literal(actionTypes_00009,2), aux206)
reify(w-literal(actionTypes_00009,2), aux207)
reify(w-literal(actionTypes_00009,2), aux208)
reify(w-literal(actionTypes_00009,2), aux209)
reify(w-literal(actionTypes_00009,2), aux210)
reify(w-literal(actionTypes_00009,2), aux211)
reify(w-literal(actionTypes_00010,2), aux213)
reify(w-literal(actionTypes_00010,2), aux214)
reify(w-literal(actionTypes_00010,2), aux215)
reify(w-literal(actionTypes_00010,2), aux216)
reify(w-literal(actionTypes_00010,2), aux217)
reify(w-literal(actionTypes_00010,2), aux218)
reify(w-literal(actionTypes_00010,2), aux219)
reify(w-literal(actionTypes_00010,2), aux220)
reify(w-literal(actionTypes_00011,2), aux222)
reify(w-literal(actionTypes_00011,2), aux223)
reify(w-literal(actionTypes_00011,2), aux224)
reify(w-literal(actionTypes_00011,2), aux225)
reify(w-literal(actionTypes_00011,2), aux226)
reify(w-literal(actionTypes_00011,2), aux227)
watched-or({ineq(statePlaces_00002_00010, statePlaces_00002_00011, -1),ineq(statePlaces_00002_00011, statePlaces_00002_00010, -1),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00011, 4])})
watched-or({ineq(statePlaces_00002_00002, 0, -1),ineq(0, statePlaces_00002_00002, -1),lexless([1, 0],[pointers_00000_00002, pointers_00001_00002])})
watched-or({ineq(statePlaces_00002_00003, 0, -1),ineq(0, statePlaces_00002_00003, -1),lexless([1, 0],[pointers_00000_00003, pointers_00001_00003])})
watched-or({ineq(statePlaces_00002_00004, 0, -1),ineq(0, statePlaces_00002_00004, -1),lexless([1, 0],[pointers_00000_00004, pointers_00001_00004])})
watched-or({ineq(statePlaces_00002_00005, 0, -1),ineq(0, statePlaces_00002_00005, -1),lexless([1, 0],[pointers_00000_00005, pointers_00001_00005])})
watched-or({ineq(statePlaces_00002_00006, 0, -1),ineq(0, statePlaces_00002_00006, -1),lexless([1, 0],[pointers_00000_00006, pointers_00001_00006])})
watched-or({ineq(statePlaces_00002_00007, 0, -1),ineq(0, statePlaces_00002_00007, -1),lexless([1, 0],[pointers_00000_00007, pointers_00001_00007])})
watched-or({ineq(statePlaces_00002_00008, 0, -1),ineq(0, statePlaces_00002_00008, -1),lexless([1, 0],[pointers_00000_00008, pointers_00001_00008])})
watched-or({ineq(statePlaces_00002_00009, 0, -1),ineq(0, statePlaces_00002_00009, -1),lexless([1, 0],[pointers_00000_00009, pointers_00001_00009])})
watched-or({ineq(statePlaces_00002_00010, 0, -1),ineq(0, statePlaces_00002_00010, -1),lexless([1, 0],[pointers_00000_00010, pointers_00001_00010])})
watched-or({ineq(statePlaces_00002_00011, 0, -1),ineq(0, statePlaces_00002_00011, -1),lexless([1, 0],[pointers_00000_00011, 4])})
watched-or({ineq(statePlaces_00002_00002, statePlaces_00002_00003, -1),ineq(statePlaces_00002_00003, statePlaces_00002_00002, -1),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00003, pointers_00001_00003])})
watched-or({ineq(statePlaces_00002_00002, statePlaces_00002_00004, -1),ineq(statePlaces_00002_00004, statePlaces_00002_00002, -1),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00004, pointers_00001_00004])})
watched-or({ineq(statePlaces_00002_00002, statePlaces_00002_00005, -1),ineq(statePlaces_00002_00005, statePlaces_00002_00002, -1),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00005, pointers_00001_00005])})
watched-or({ineq(statePlaces_00002_00002, statePlaces_00002_00006, -1),ineq(statePlaces_00002_00006, statePlaces_00002_00002, -1),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00006, pointers_00001_00006])})
watched-or({ineq(statePlaces_00002_00002, statePlaces_00002_00007, -1),ineq(statePlaces_00002_00007, statePlaces_00002_00002, -1),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00007, pointers_00001_00007])})
watched-or({ineq(statePlaces_00002_00002, statePlaces_00002_00008, -1),ineq(statePlaces_00002_00008, statePlaces_00002_00002, -1),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00008, pointers_00001_00008])})
watched-or({ineq(statePlaces_00002_00002, statePlaces_00002_00009, -1),ineq(statePlaces_00002_00009, statePlaces_00002_00002, -1),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00009, pointers_00001_00009])})
watched-or({ineq(statePlaces_00002_00002, statePlaces_00002_00010, -1),ineq(statePlaces_00002_00010, statePlaces_00002_00002, -1),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00010, pointers_00001_00010])})
watched-or({ineq(statePlaces_00002_00002, statePlaces_00002_00011, -1),ineq(statePlaces_00002_00011, statePlaces_00002_00002, -1),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00011, 4])})
watched-or({ineq(statePlaces_00002_00003, statePlaces_00002_00004, -1),ineq(statePlaces_00002_00004, statePlaces_00002_00003, -1),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00004, pointers_00001_00004])})
watched-or({ineq(statePlaces_00002_00003, statePlaces_00002_00005, -1),ineq(statePlaces_00002_00005, statePlaces_00002_00003, -1),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00005, pointers_00001_00005])})
watched-or({ineq(statePlaces_00002_00003, statePlaces_00002_00006, -1),ineq(statePlaces_00002_00006, statePlaces_00002_00003, -1),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00006, pointers_00001_00006])})
watched-or({ineq(statePlaces_00002_00003, statePlaces_00002_00007, -1),ineq(statePlaces_00002_00007, statePlaces_00002_00003, -1),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00007, pointers_00001_00007])})
watched-or({ineq(statePlaces_00002_00003, statePlaces_00002_00008, -1),ineq(statePlaces_00002_00008, statePlaces_00002_00003, -1),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00008, pointers_00001_00008])})
watched-or({ineq(statePlaces_00002_00003, statePlaces_00002_00009, -1),ineq(statePlaces_00002_00009, statePlaces_00002_00003, -1),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00009, pointers_00001_00009])})
watched-or({ineq(statePlaces_00002_00003, statePlaces_00002_00010, -1),ineq(statePlaces_00002_00010, statePlaces_00002_00003, -1),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00010, pointers_00001_00010])})
watched-or({ineq(statePlaces_00002_00003, statePlaces_00002_00011, -1),ineq(statePlaces_00002_00011, statePlaces_00002_00003, -1),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00011, 4])})
watched-or({ineq(statePlaces_00002_00004, statePlaces_00002_00005, -1),ineq(statePlaces_00002_00005, statePlaces_00002_00004, -1),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00005, pointers_00001_00005])})
watched-or({ineq(statePlaces_00002_00004, statePlaces_00002_00006, -1),ineq(statePlaces_00002_00006, statePlaces_00002_00004, -1),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00006, pointers_00001_00006])})
watched-or({ineq(statePlaces_00002_00004, statePlaces_00002_00007, -1),ineq(statePlaces_00002_00007, statePlaces_00002_00004, -1),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00007, pointers_00001_00007])})
watched-or({ineq(statePlaces_00002_00004, statePlaces_00002_00008, -1),ineq(statePlaces_00002_00008, statePlaces_00002_00004, -1),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00008, pointers_00001_00008])})
watched-or({ineq(statePlaces_00002_00004, statePlaces_00002_00009, -1),ineq(statePlaces_00002_00009, statePlaces_00002_00004, -1),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00009, pointers_00001_00009])})
watched-or({ineq(statePlaces_00002_00004, statePlaces_00002_00010, -1),ineq(statePlaces_00002_00010, statePlaces_00002_00004, -1),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00010, pointers_00001_00010])})
watched-or({ineq(statePlaces_00002_00004, statePlaces_00002_00011, -1),ineq(statePlaces_00002_00011, statePlaces_00002_00004, -1),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00011, 4])})
watched-or({ineq(statePlaces_00002_00005, statePlaces_00002_00006, -1),ineq(statePlaces_00002_00006, statePlaces_00002_00005, -1),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00006, pointers_00001_00006])})
watched-or({ineq(statePlaces_00002_00005, statePlaces_00002_00007, -1),ineq(statePlaces_00002_00007, statePlaces_00002_00005, -1),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00007, pointers_00001_00007])})
watched-or({ineq(statePlaces_00002_00005, statePlaces_00002_00008, -1),ineq(statePlaces_00002_00008, statePlaces_00002_00005, -1),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00008, pointers_00001_00008])})
watched-or({ineq(statePlaces_00002_00005, statePlaces_00002_00009, -1),ineq(statePlaces_00002_00009, statePlaces_00002_00005, -1),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00009, pointers_00001_00009])})
watched-or({ineq(statePlaces_00002_00005, statePlaces_00002_00010, -1),ineq(statePlaces_00002_00010, statePlaces_00002_00005, -1),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00010, pointers_00001_00010])})
watched-or({ineq(statePlaces_00002_00005, statePlaces_00002_00011, -1),ineq(statePlaces_00002_00011, statePlaces_00002_00005, -1),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00011, 4])})
watched-or({ineq(statePlaces_00002_00006, statePlaces_00002_00007, -1),ineq(statePlaces_00002_00007, statePlaces_00002_00006, -1),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00007, pointers_00001_00007])})
watched-or({ineq(statePlaces_00002_00006, statePlaces_00002_00008, -1),ineq(statePlaces_00002_00008, statePlaces_00002_00006, -1),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00008, pointers_00001_00008])})
watched-or({ineq(statePlaces_00002_00006, statePlaces_00002_00009, -1),ineq(statePlaces_00002_00009, statePlaces_00002_00006, -1),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00009, pointers_00001_00009])})
watched-or({ineq(statePlaces_00002_00006, statePlaces_00002_00010, -1),ineq(statePlaces_00002_00010, statePlaces_00002_00006, -1),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00010, pointers_00001_00010])})
watched-or({ineq(statePlaces_00002_00006, statePlaces_00002_00011, -1),ineq(statePlaces_00002_00011, statePlaces_00002_00006, -1),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00011, 4])})
watched-or({ineq(statePlaces_00002_00007, statePlaces_00002_00008, -1),ineq(statePlaces_00002_00008, statePlaces_00002_00007, -1),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00008, pointers_00001_00008])})
watched-or({ineq(statePlaces_00002_00007, statePlaces_00002_00009, -1),ineq(statePlaces_00002_00009, statePlaces_00002_00007, -1),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00009, pointers_00001_00009])})
watched-or({ineq(statePlaces_00002_00007, statePlaces_00002_00010, -1),ineq(statePlaces_00002_00010, statePlaces_00002_00007, -1),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00010, pointers_00001_00010])})
watched-or({ineq(statePlaces_00002_00007, statePlaces_00002_00011, -1),ineq(statePlaces_00002_00011, statePlaces_00002_00007, -1),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00011, 4])})
watched-or({ineq(statePlaces_00002_00008, statePlaces_00002_00009, -1),ineq(statePlaces_00002_00009, statePlaces_00002_00008, -1),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00009, pointers_00001_00009])})
watched-or({ineq(statePlaces_00002_00008, statePlaces_00002_00010, -1),ineq(statePlaces_00002_00010, statePlaces_00002_00008, -1),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00010, pointers_00001_00010])})
watched-or({ineq(statePlaces_00002_00008, statePlaces_00002_00011, -1),ineq(statePlaces_00002_00011, statePlaces_00002_00008, -1),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00011, 4])})
watched-or({ineq(statePlaces_00002_00009, statePlaces_00002_00010, -1),ineq(statePlaces_00002_00010, statePlaces_00002_00009, -1),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00010, pointers_00001_00010])})
watched-or({ineq(statePlaces_00002_00009, statePlaces_00002_00011, -1),ineq(statePlaces_00002_00011, statePlaces_00002_00009, -1),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00011, 4])})
reifyimply(w-literal(pointers_00000_00002,1), aux52)
reifyimply(gaceq(pointers_00000_00002,pointers_00000_00003), aux53)
reifyimply(gaceq(pointers_00000_00003,pointers_00000_00004), aux54)
reifyimply(gaceq(pointers_00000_00004,pointers_00000_00005), aux55)
reifyimply(gaceq(pointers_00000_00005,pointers_00000_00006), aux56)
reifyimply(gaceq(pointers_00000_00006,pointers_00000_00007), aux57)
reifyimply(gaceq(pointers_00000_00007,pointers_00000_00008), aux58)
reifyimply(gaceq(pointers_00000_00008,pointers_00000_00009), aux59)
reifyimply(gaceq(pointers_00000_00009,pointers_00000_00010), aux60)
reifyimply(gaceq(pointers_00000_00010,pointers_00000_00011), aux61)
reifyimply(w-literal(pointers_00001_00002,0), aux62)
reifyimply(gaceq(pointers_00001_00002,pointers_00001_00003), aux63)
reifyimply(gaceq(pointers_00001_00003,pointers_00001_00004), aux64)
reifyimply(gaceq(pointers_00001_00004,pointers_00001_00005), aux65)
reifyimply(gaceq(pointers_00001_00005,pointers_00001_00006), aux66)
reifyimply(gaceq(pointers_00001_00006,pointers_00001_00007), aux67)
reifyimply(gaceq(pointers_00001_00007,pointers_00001_00008), aux68)
reifyimply(gaceq(pointers_00001_00008,pointers_00001_00009), aux69)
reifyimply(gaceq(pointers_00001_00009,pointers_00001_00010), aux70)
reifyimply(w-literal(pointers_00001_00010,4), aux71)
reifyimply(w-literal(statePlaces_00002_00002,0), aux72)
reifyimply(gaceq(statePlaces_00002_00002,statePlaces_00002_00003), aux73)
reifyimply(gaceq(statePlaces_00002_00003,statePlaces_00002_00004), aux74)
reifyimply(gaceq(statePlaces_00002_00004,statePlaces_00002_00005), aux75)
reifyimply(gaceq(statePlaces_00002_00005,statePlaces_00002_00006), aux76)
reifyimply(gaceq(statePlaces_00002_00006,statePlaces_00002_00007), aux77)
reifyimply(gaceq(statePlaces_00002_00007,statePlaces_00002_00008), aux78)
reifyimply(gaceq(statePlaces_00002_00008,statePlaces_00002_00009), aux79)
reifyimply(gaceq(statePlaces_00002_00009,statePlaces_00002_00010), aux80)
reifyimply(gaceq(statePlaces_00002_00010,statePlaces_00002_00011), aux81)
reifyimply(w-literal(pointers_00000_00002,2), aux82)
reifyimply(w-literal(actionFrom_00002,0), aux83)
reifyimply(w-literal(actionTo_00002,2), aux84)
reifyimply(w-inintervalset(pointers_00000_00002,[1,8]), aux85)
reifyimply(watchelement_undefzero([0, 20, 8, 0, 0, 6, 4, 0], aux87, statePlaces_00002_00002), aux86)
reifyimply(w-literal(actionFrom_00003,0), aux89)
reifyimply(w-literal(actionTo_00003,2), aux90)
reifyimply(w-inintervalset(pointers_00000_00003,[1,8]), aux91)
reifyimply(watchelement_undefzero([0, 20, 8, 0, 0, 6, 4, 0], aux93, statePlaces_00002_00003), aux92)
reifyimply(w-literal(actionFrom_00004,0), aux95)
reifyimply(w-literal(actionTo_00004,2), aux96)
reifyimply(w-inintervalset(pointers_00000_00004,[1,8]), aux97)
reifyimply(watchelement_undefzero([0, 20, 8, 0, 0, 6, 4, 0], aux99, statePlaces_00002_00004), aux98)
reifyimply(w-literal(actionFrom_00005,0), aux101)
reifyimply(w-literal(actionTo_00005,2), aux102)
reifyimply(w-inintervalset(pointers_00000_00005,[1,8]), aux103)
reifyimply(watchelement_undefzero([0, 20, 8, 0, 0, 6, 4, 0], aux105, statePlaces_00002_00005), aux104)
reifyimply(w-literal(actionFrom_00006,0), aux107)
reifyimply(w-literal(actionTo_00006,2), aux108)
reifyimply(w-inintervalset(pointers_00000_00006,[1,8]), aux109)
reifyimply(watchelement_undefzero([0, 20, 8, 0, 0, 6, 4, 0], aux111, statePlaces_00002_00006), aux110)
reifyimply(w-literal(actionFrom_00007,0), aux113)
reifyimply(w-literal(actionTo_00007,2), aux114)
reifyimply(w-inintervalset(pointers_00000_00007,[1,8]), aux115)
reifyimply(watchelement_undefzero([0, 20, 8, 0, 0, 6, 4, 0], aux117, statePlaces_00002_00007), aux116)
reifyimply(w-literal(actionFrom_00008,0), aux119)
reifyimply(w-literal(actionTo_00008,2), aux120)
reifyimply(w-inintervalset(pointers_00000_00008,[1,8]), aux121)
reifyimply(watchelement_undefzero([0, 20, 8, 0, 0, 6, 4, 0], aux123, statePlaces_00002_00008), aux122)
reifyimply(w-literal(actionFrom_00009,0), aux125)
reifyimply(w-literal(actionTo_00009,2), aux126)
reifyimply(w-inintervalset(pointers_00000_00009,[1,8]), aux127)
reifyimply(watchelement_undefzero([0, 20, 8, 0, 0, 6, 4, 0], aux129, statePlaces_00002_00009), aux128)
reifyimply(w-literal(actionFrom_00010,0), aux131)
reifyimply(w-literal(actionTo_00010,2), aux132)
reifyimply(w-inintervalset(pointers_00000_00010,[1,8]), aux133)
reifyimply(watchelement_undefzero([0, 20, 8, 0, 0, 6, 4, 0], aux135, statePlaces_00002_00010), aux134)
reifyimply(w-literal(actionFrom_00011,0), aux137)
reifyimply(w-literal(actionTo_00011,2), aux138)
reifyimply(w-inintervalset(pointers_00000_00011,[1,8]), aux139)
reifyimply(watchelement_undefzero([0, 20, 8, 0, 0, 6, 4, 0], aux141, statePlaces_00002_00011), aux140)
reifyimply(diseq(statePlaces_00002_00002,-1), aux142)
reifyimply(ineq(pointers_00001_00002, 4, 0), aux143)
reifyimply(w-literal(pointers_00001_00002,1), aux144)
reifyimply(w-literal(actionFrom_00002,2), aux145)
reifyimply(w-literal(actionTo_00002,1), aux146)
reifyimply(w-inintervalset(pointers_00001_00002,[1,4]), aux147)
reifyimply(watchelement_undefzero([20, 8, 6, 4], aux149, 0), aux148)
reifyimply(diseq(statePlaces_00002_00003,-1), aux150)
reifyimply(diseq(statePlaces_00002_00002,-1), aux151)
reifyimply(ineq(pointers_00001_00003, 4, 0), aux152)
reifyimply(w-literal(actionFrom_00003,2), aux154)
reifyimply(w-literal(actionTo_00003,1), aux155)
reifyimply(w-inintervalset(pointers_00001_00003,[1,4]), aux156)
reifyimply(watchelement_undefzero([20, 8, 6, 4], aux158, statePlaces_00002_00002), aux157)
reifyimply(diseq(statePlaces_00002_00004,-1), aux159)
reifyimply(diseq(statePlaces_00002_00003,-1), aux160)
reifyimply(ineq(pointers_00001_00004, 4, 0), aux161)
reifyimply(w-literal(actionFrom_00004,2), aux163)
reifyimply(w-literal(actionTo_00004,1), aux164)
reifyimply(w-inintervalset(pointers_00001_00004,[1,4]), aux165)
reifyimply(watchelement_undefzero([20, 8, 6, 4], aux167, statePlaces_00002_00003), aux166)
reifyimply(diseq(statePlaces_00002_00005,-1), aux168)
reifyimply(diseq(statePlaces_00002_00004,-1), aux169)
reifyimply(ineq(pointers_00001_00005, 4, 0), aux170)
reifyimply(w-literal(actionFrom_00005,2), aux172)
reifyimply(w-literal(actionTo_00005,1), aux173)
reifyimply(w-inintervalset(pointers_00001_00005,[1,4]), aux174)
reifyimply(watchelement_undefzero([20, 8, 6, 4], aux176, statePlaces_00002_00004), aux175)
reifyimply(diseq(statePlaces_00002_00006,-1), aux177)
reifyimply(diseq(statePlaces_00002_00005,-1), aux178)
reifyimply(ineq(pointers_00001_00006, 4, 0), aux179)
reifyimply(w-literal(actionFrom_00006,2), aux181)
reifyimply(w-literal(actionTo_00006,1), aux182)
reifyimply(w-inintervalset(pointers_00001_00006,[1,4]), aux183)
reifyimply(watchelement_undefzero([20, 8, 6, 4], aux185, statePlaces_00002_00005), aux184)
reifyimply(diseq(statePlaces_00002_00007,-1), aux186)
reifyimply(diseq(statePlaces_00002_00006,-1), aux187)
reifyimply(ineq(pointers_00001_00007, 4, 0), aux188)
reifyimply(w-literal(actionFrom_00007,2), aux190)
reifyimply(w-literal(actionTo_00007,1), aux191)
reifyimply(w-inintervalset(pointers_00001_00007,[1,4]), aux192)
reifyimply(watchelement_undefzero([20, 8, 6, 4], aux194, statePlaces_00002_00006), aux193)
reifyimply(diseq(statePlaces_00002_00008,-1), aux195)
reifyimply(diseq(statePlaces_00002_00007,-1), aux196)
reifyimply(ineq(pointers_00001_00008, 4, 0), aux197)
reifyimply(w-literal(actionFrom_00008,2), aux199)
reifyimply(w-literal(actionTo_00008,1), aux200)
reifyimply(w-inintervalset(pointers_00001_00008,[1,4]), aux201)
reifyimply(watchelement_undefzero([20, 8, 6, 4], aux203, statePlaces_00002_00007), aux202)
reifyimply(diseq(statePlaces_00002_00009,-1), aux204)
reifyimply(diseq(statePlaces_00002_00008,-1), aux205)
reifyimply(ineq(pointers_00001_00009, 4, 0), aux206)
reifyimply(w-literal(actionFrom_00009,2), aux208)
reifyimply(w-literal(actionTo_00009,1), aux209)
reifyimply(w-inintervalset(pointers_00001_00009,[1,4]), aux210)
reifyimply(watchelement_undefzero([20, 8, 6, 4], aux212, statePlaces_00002_00008), aux211)
reifyimply(diseq(statePlaces_00002_00010,-1), aux213)
reifyimply(diseq(statePlaces_00002_00009,-1), aux214)
reifyimply(ineq(pointers_00001_00010, 4, 0), aux215)
reifyimply(w-literal(actionFrom_00010,2), aux217)
reifyimply(w-literal(actionTo_00010,1), aux218)
reifyimply(w-inintervalset(pointers_00001_00010,[1,4]), aux219)
reifyimply(watchelement_undefzero([20, 8, 6, 4], aux221, statePlaces_00002_00009), aux220)
reifyimply(diseq(statePlaces_00002_00011,-1), aux222)
reifyimply(diseq(statePlaces_00002_00010,-1), aux223)
reifyimply(w-literal(pointers_00001_00010,3), aux224)
reifyimply(w-literal(actionFrom_00011,2), aux225)
reifyimply(w-literal(actionTo_00011,1), aux226)
reifyimply(w-literal(statePlaces_00002_00010,4), aux227)
sumleq([pointers_00000_00002,-1],aux87)
sumgeq([pointers_00000_00002,-1],aux87)
sumleq([pointers_00000_00003,-1],aux93)
sumgeq([pointers_00000_00003,-1],aux93)
sumleq([pointers_00000_00004,-1],aux99)
sumgeq([pointers_00000_00004,-1],aux99)
sumleq([pointers_00000_00005,-1],aux105)
sumgeq([pointers_00000_00005,-1],aux105)
sumleq([pointers_00000_00006,-1],aux111)
sumgeq([pointers_00000_00006,-1],aux111)
sumleq([pointers_00000_00007,-1],aux117)
sumgeq([pointers_00000_00007,-1],aux117)
sumleq([pointers_00000_00008,-1],aux123)
sumgeq([pointers_00000_00008,-1],aux123)
sumleq([pointers_00000_00009,-1],aux129)
sumgeq([pointers_00000_00009,-1],aux129)
sumleq([pointers_00000_00010,-1],aux135)
sumgeq([pointers_00000_00010,-1],aux135)
sumleq([pointers_00000_00011,-1],aux141)
sumgeq([pointers_00000_00011,-1],aux141)
sumleq([pointers_00001_00002,-1],aux149)
sumgeq([pointers_00001_00002,-1],aux149)
sumleq([pointers_00001_00003,-1],aux158)
sumgeq([pointers_00001_00003,-1],aux158)
sumleq([pointers_00001_00004,-1],aux167)
sumgeq([pointers_00001_00004,-1],aux167)
sumleq([pointers_00001_00005,-1],aux176)
sumgeq([pointers_00001_00005,-1],aux176)
sumleq([pointers_00001_00006,-1],aux185)
sumgeq([pointers_00001_00006,-1],aux185)
sumleq([pointers_00001_00007,-1],aux194)
sumgeq([pointers_00001_00007,-1],aux194)
sumleq([pointers_00001_00008,-1],aux203)
sumgeq([pointers_00001_00008,-1],aux203)
sumleq([pointers_00001_00009,-1],aux212)
sumgeq([pointers_00001_00009,-1],aux212)
sumleq([pointers_00001_00010,-1],aux221)
sumgeq([pointers_00001_00010,-1],aux221)
reifyimply(sumleq([pointers_00000_00002,1],pointers_00000_00003), aux88)
reifyimply(sumgeq([pointers_00000_00002,1],pointers_00000_00003), aux88)
reifyimply(sumleq([pointers_00000_00003,1],pointers_00000_00004), aux94)
reifyimply(sumgeq([pointers_00000_00003,1],pointers_00000_00004), aux94)
reifyimply(sumleq([pointers_00000_00004,1],pointers_00000_00005), aux100)
reifyimply(sumgeq([pointers_00000_00004,1],pointers_00000_00005), aux100)
reifyimply(sumleq([pointers_00000_00005,1],pointers_00000_00006), aux106)
reifyimply(sumgeq([pointers_00000_00005,1],pointers_00000_00006), aux106)
reifyimply(sumleq([pointers_00000_00006,1],pointers_00000_00007), aux112)
reifyimply(sumgeq([pointers_00000_00006,1],pointers_00000_00007), aux112)
reifyimply(sumleq([pointers_00000_00007,1],pointers_00000_00008), aux118)
reifyimply(sumgeq([pointers_00000_00007,1],pointers_00000_00008), aux118)
reifyimply(sumleq([pointers_00000_00008,1],pointers_00000_00009), aux124)
reifyimply(sumgeq([pointers_00000_00008,1],pointers_00000_00009), aux124)
reifyimply(sumleq([pointers_00000_00009,1],pointers_00000_00010), aux130)
reifyimply(sumgeq([pointers_00000_00009,1],pointers_00000_00010), aux130)
reifyimply(sumleq([pointers_00000_00010,1],pointers_00000_00011), aux136)
reifyimply(sumgeq([pointers_00000_00010,1],pointers_00000_00011), aux136)
reifyimply(sumleq([pointers_00001_00002,1],pointers_00001_00003), aux153)
reifyimply(sumgeq([pointers_00001_00002,1],pointers_00001_00003), aux153)
reifyimply(sumleq([pointers_00001_00003,1],pointers_00001_00004), aux162)
reifyimply(sumgeq([pointers_00001_00003,1],pointers_00001_00004), aux162)
reifyimply(sumleq([pointers_00001_00004,1],pointers_00001_00005), aux171)
reifyimply(sumgeq([pointers_00001_00004,1],pointers_00001_00005), aux171)
reifyimply(sumleq([pointers_00001_00005,1],pointers_00001_00006), aux180)
reifyimply(sumgeq([pointers_00001_00005,1],pointers_00001_00006), aux180)
reifyimply(sumleq([pointers_00001_00006,1],pointers_00001_00007), aux189)
reifyimply(sumgeq([pointers_00001_00006,1],pointers_00001_00007), aux189)
reifyimply(sumleq([pointers_00001_00007,1],pointers_00001_00008), aux198)
reifyimply(sumgeq([pointers_00001_00007,1],pointers_00001_00008), aux198)
reifyimply(sumleq([pointers_00001_00008,1],pointers_00001_00009), aux207)
reifyimply(sumgeq([pointers_00001_00008,1],pointers_00001_00009), aux207)
reifyimply(sumleq([pointers_00001_00009,1],pointers_00001_00010), aux216)
reifyimply(sumgeq([pointers_00001_00009,1],pointers_00001_00010), aux216)
**EOF**
