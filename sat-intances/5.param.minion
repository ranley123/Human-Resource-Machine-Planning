MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 78
# CSE_active_eliminated_expressions = 208
# CSE_active_total_size = 481
**VARIABLES**
DISCRETE statePlaces_00002_00002 #
{-1..100}
DISCRETE statePlaces_00002_00003 #
{-1..100}
DISCRETE statePlaces_00002_00004 #
{-1..100}
DISCRETE statePlaces_00002_00005 #
{-1..100}
DISCRETE statePlaces_00002_00006 #
{-1..100}
DISCRETE statePlaces_00002_00007 #
{-1..100}
DISCRETE statePlaces_00002_00008 #
{-1..100}
DISCRETE statePlaces_00002_00009 #
{-1..100}
DISCRETE statePlaces_00002_00010 #
{-1..100}
DISCRETE statePlaces_00002_00011 #
{-1..100}
DISCRETE statePlaces_00002_00012 #
{-1..100}
DISCRETE statePlaces_00002_00013 #
{-1..100}
DISCRETE statePlaces_00002_00014 #
{-1..100}
DISCRETE statePlaces_00003_00002 #
{-1..100}
DISCRETE statePlaces_00003_00003 #
{-1..100}
DISCRETE statePlaces_00003_00004 #
{-1..100}
DISCRETE statePlaces_00003_00005 #
{-1..100}
DISCRETE statePlaces_00003_00006 #
{-1..100}
DISCRETE statePlaces_00003_00007 #
{-1..100}
DISCRETE statePlaces_00003_00008 #
{-1..100}
DISCRETE statePlaces_00003_00009 #
{-1..100}
DISCRETE statePlaces_00003_00010 #
{-1..100}
DISCRETE statePlaces_00003_00011 #
{-1..100}
DISCRETE statePlaces_00003_00012 #
{-1..100}
DISCRETE statePlaces_00003_00013 #
{-1..100}
DISCRETE statePlaces_00003_00014 #
{-1..100}
DISCRETE actionTypes_00002 #
{1..5}
DISCRETE actionTypes_00003 #
{1..5}
DISCRETE actionTypes_00004 #
{1..5}
DISCRETE actionTypes_00005 #
{1..5}
DISCRETE actionTypes_00006 #
{1..5}
DISCRETE actionTypes_00007 #
{1..5}
DISCRETE actionTypes_00008 #
{1..5}
DISCRETE actionTypes_00009 #
{1..5}
DISCRETE actionTypes_00010 #
{1..5}
DISCRETE actionTypes_00011 #
{1..5}
DISCRETE actionTypes_00012 #
{1..5}
DISCRETE actionTypes_00013 #
{1..5}
DISCRETE actionTypes_00014 #
{1..5}
DISCRETE actionFrom_00002 #
{0..3}
DISCRETE actionFrom_00003 #
{0..3}
DISCRETE actionFrom_00004 #
{0..3}
DISCRETE actionFrom_00005 #
{0..3}
DISCRETE actionFrom_00006 #
{0..3}
DISCRETE actionFrom_00007 #
{0..3}
DISCRETE actionFrom_00008 #
{0..3}
DISCRETE actionFrom_00009 #
{0..3}
DISCRETE actionFrom_00010 #
{0..3}
DISCRETE actionFrom_00011 #
{0..3}
DISCRETE actionFrom_00012 #
{0..3}
DISCRETE actionFrom_00013 #
{0..3}
DISCRETE actionFrom_00014 #
{0..3}
DISCRETE actionTo_00002 #
{0..3}
DISCRETE actionTo_00003 #
{0..3}
DISCRETE actionTo_00004 #
{0..3}
DISCRETE actionTo_00005 #
{0..3}
DISCRETE actionTo_00006 #
{0..3}
DISCRETE actionTo_00007 #
{0..3}
DISCRETE actionTo_00008 #
{0..3}
DISCRETE actionTo_00009 #
{0..3}
DISCRETE actionTo_00010 #
{0..3}
DISCRETE actionTo_00011 #
{0..3}
DISCRETE actionTo_00012 #
{0..3}
DISCRETE actionTo_00013 #
{0..3}
DISCRETE actionTo_00014 #
{0..3}
DISCRETE pointers_00000_00002 #
{0..3}
DISCRETE pointers_00000_00003 #
{0..3}
DISCRETE pointers_00000_00004 #
{0..3}
DISCRETE pointers_00000_00005 #
{0..3}
DISCRETE pointers_00000_00006 #
{0..3}
DISCRETE pointers_00000_00007 #
{0..3}
DISCRETE pointers_00000_00008 #
{0..3}
DISCRETE pointers_00000_00009 #
{0..3}
DISCRETE pointers_00000_00010 #
{0..3}
DISCRETE pointers_00000_00011 #
{0..3}
DISCRETE pointers_00000_00012 #
{0..3}
DISCRETE pointers_00000_00013 #
{0..3}
DISCRETE pointers_00000_00014 #
{0..3}
DISCRETE pointers_00001_00002 #
{0..3}
DISCRETE pointers_00001_00003 #
{0..3}
DISCRETE pointers_00001_00004 #
{0..3}
DISCRETE pointers_00001_00005 #
{0..3}
DISCRETE pointers_00001_00006 #
{0..3}
DISCRETE pointers_00001_00007 #
{0..3}
DISCRETE pointers_00001_00008 #
{0..3}
DISCRETE pointers_00001_00009 #
{0..3}
DISCRETE pointers_00001_00010 #
{0..3}
DISCRETE pointers_00001_00011 #
{0..3}
DISCRETE pointers_00001_00012 #
{0..3}
DISCRETE pointers_00001_00013 #
{0..3}
BOOL aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00014, statePlaces_00003_00014], (actionTo_00014 + -2))=SafeElement([statePlaces_00002_00014, statePlaces_00003_00014], (actionFrom_00014 + -2)))
BOOL aux53 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00013, statePlaces_00003_00013], (actionTo_00013 + -2))=SafeElement([statePlaces_00002_00013, statePlaces_00003_00013], (actionFrom_00013 + -2)))
BOOL aux54 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionTo_00012 + -2))=SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionFrom_00012 + -2)))
BOOL aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionTo_00010 + -2))=SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionFrom_00010 + -2)))
BOOL aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionTo_00011 + -2))=SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionFrom_00011 + -2)))
BOOL aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionTo_00009 + -2))=SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionFrom_00009 + -2)))
BOOL aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionTo_00003 + -2))=SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionFrom_00003 + -2)))
BOOL aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionTo_00004 + -2))=SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionFrom_00004 + -2)))
BOOL aux60 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionTo_00002 + -2))=SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionFrom_00002 + -2)))
BOOL aux61 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionTo_00007 + -2))=SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionFrom_00007 + -2)))
BOOL aux62 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionTo_00008 + -2))=SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionFrom_00008 + -2)))
BOOL aux63 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionTo_00005 + -2))=SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionFrom_00005 + -2)))
BOOL aux64 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionTo_00006 + -2))=SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionFrom_00006 + -2)))
DISCRETE aux65 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionFrom_00012 + -2))
{-1..100}
DISCRETE aux66 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionFrom_00002 + -2))
{-1..100}
DISCRETE aux67 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionFrom_00007 + -2))
{-1..100}
DISCRETE aux68 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionFrom_00003 + -2))
{-1..100}
DISCRETE aux69 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionFrom_00011 + -2))
{-1..100}
DISCRETE aux70 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionFrom_00006 + -2))
{-1..100}
DISCRETE aux71 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00014, statePlaces_00003_00014], (actionFrom_00014 + -2))
{-1..100}
DISCRETE aux72 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionFrom_00009 + -2))
{-1..100}
DISCRETE aux73 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionFrom_00010 + -2))
{-1..100}
DISCRETE aux74 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionFrom_00005 + -2))
{-1..100}
DISCRETE aux75 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00013, statePlaces_00003_00013], (actionFrom_00013 + -2))
{-1..100}
DISCRETE aux76 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionFrom_00008 + -2))
{-1..100}
DISCRETE aux77 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionFrom_00004 + -2))
{-1..100}
DISCRETE aux78 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00012 + -2)
{-2..1}
DISCRETE aux79 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00005 + -2)
{-2..1}
DISCRETE aux80 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00013 + -2)
{-2..1}
DISCRETE aux81 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00011 + -2)
{-2..1}
DISCRETE aux82 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00004 + -2)
{-2..1}
DISCRETE aux83 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00007 + -2)
{-2..1}
DISCRETE aux84 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00006 + -2)
{-2..1}
DISCRETE aux85 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00009 + -2)
{-2..1}
DISCRETE aux86 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00008 + -2)
{-2..1}
DISCRETE aux87 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00003 + -2)
{-2..1}
DISCRETE aux88 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00002 + -2)
{-2..1}
DISCRETE aux89 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00005 + -2)
{-2..1}
DISCRETE aux90 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00004 + -2)
{-2..1}
DISCRETE aux91 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00010 + -2)
{-2..1}
DISCRETE aux92 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00012 + -2)
{-2..1}
DISCRETE aux93 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00011 + -2)
{-2..1}
DISCRETE aux94 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00014 + -2)
{-2..1}
DISCRETE aux95 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00013 + -2)
{-2..1}
DISCRETE aux96 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00009 + -2)
{-2..1}
DISCRETE aux97 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00010 + -2)
{-2..1}
DISCRETE aux98 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00008 + -2)
{-2..1}
BOOL aux99 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00002 in int(2..3))
BOOL aux100 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00003 in int(2..3))
BOOL aux101 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00004 in int(2..3))
BOOL aux102 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00005 in int(2..3))
BOOL aux103 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00006 in int(2..3))
BOOL aux104 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00007 in int(2..3))
BOOL aux105 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00008 in int(2..3))
BOOL aux106 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00009 in int(2..3))
BOOL aux107 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00010 in int(2..3))
BOOL aux108 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00011 in int(2..3))
BOOL aux109 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00012 in int(2..3))
BOOL aux110 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00013 in int(2..3))
BOOL aux111 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00014 in int(2..3))
DISCRETE aux112 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00003 + -2)
{-2..1}
DISCRETE aux113 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00006 + -2)
{-2..1}
DISCRETE aux114 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00007 + -2)
{-2..1}
DISCRETE aux115 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00014 + -2)
{-2..1}
DISCRETE aux116 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00002 + -2)
{-2..1}
BOOL aux117 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00005 in int(2..3))
BOOL aux118 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00006 in int(2..3))
BOOL aux119 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00003 in int(2..3))
BOOL aux120 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00004 in int(2..3))
BOOL aux121 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00007 in int(2..3))
BOOL aux122 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00008 in int(2..3))
BOOL aux123 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00009 in int(2..3))
BOOL aux124 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00010 in int(2..3))
BOOL aux125 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00011 in int(2..3))
BOOL aux126 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00014 in int(2..3))
BOOL aux127 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00012 in int(2..3))
BOOL aux128 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00013 in int(2..3))
BOOL aux129 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00002 in int(2..3))
BOOL aux130 #(1 != actionTypes_00002)
BOOL aux131 #(1 != actionTypes_00003)
BOOL aux132 #(1 != actionTypes_00004)
BOOL aux133 #(1 != actionTypes_00005)
BOOL aux134 #(1 != actionTypes_00006)
BOOL aux135 #(1 != actionTypes_00007)
BOOL aux136 #(1 != actionTypes_00008)
BOOL aux137 #(1 != actionTypes_00009)
BOOL aux138 #(1 != actionTypes_00010)
BOOL aux139 #(1 != actionTypes_00011)
BOOL aux140 #(1 != actionTypes_00012)
BOOL aux141 #(1 != actionTypes_00013)
BOOL aux142 #(1 != actionTypes_00014)
BOOL aux143 #(2 != actionTypes_00002)
BOOL aux144 #(2 != actionTypes_00003)
BOOL aux145 #(2 != actionTypes_00004)
BOOL aux146 #(2 != actionTypes_00005)
BOOL aux147 #(2 != actionTypes_00006)
BOOL aux148 #(2 != actionTypes_00007)
BOOL aux149 #(2 != actionTypes_00008)
BOOL aux150 #(2 != actionTypes_00009)
BOOL aux151 #(2 != actionTypes_00010)
BOOL aux152 #(2 != actionTypes_00011)
BOOL aux153 #(2 != actionTypes_00012)
BOOL aux154 #(2 != actionTypes_00013)
BOOL aux155 #(2 != actionTypes_00014)
BOOL aux156 #((1=actionTypes_00002) \/ (2=actionTypes_00002) \/ (3=actionTypes_00002) \/ (5=actionTypes_00002) \/ ((4=actionTypes_00002) /\ (actionTo_00002 != 3)))
BOOL aux157 #((1=actionTypes_00003) \/ (2=actionTypes_00003) \/ (3=actionTypes_00003) \/ (5=actionTypes_00003) \/ ((4=actionTypes_00003) /\ (actionTo_00003 != 3)))
BOOL aux158 #((1=actionTypes_00004) \/ (2=actionTypes_00004) \/ (3=actionTypes_00004) \/ (5=actionTypes_00004) \/ ((4=actionTypes_00004) /\ (actionTo_00004 != 3)))
BOOL aux159 #((1=actionTypes_00005) \/ (2=actionTypes_00005) \/ (3=actionTypes_00005) \/ (5=actionTypes_00005) \/ ((4=actionTypes_00005) /\ (actionTo_00005 != 3)))
BOOL aux160 #((1=actionTypes_00006) \/ (2=actionTypes_00006) \/ (3=actionTypes_00006) \/ (5=actionTypes_00006) \/ ((4=actionTypes_00006) /\ (actionTo_00006 != 3)))
BOOL aux161 #((1=actionTypes_00007) \/ (2=actionTypes_00007) \/ (3=actionTypes_00007) \/ (5=actionTypes_00007) \/ ((4=actionTypes_00007) /\ (actionTo_00007 != 3)))
BOOL aux162 #((1=actionTypes_00008) \/ (2=actionTypes_00008) \/ (3=actionTypes_00008) \/ (5=actionTypes_00008) \/ ((4=actionTypes_00008) /\ (actionTo_00008 != 3)))
BOOL aux163 #((1=actionTypes_00009) \/ (2=actionTypes_00009) \/ (3=actionTypes_00009) \/ (5=actionTypes_00009) \/ ((4=actionTypes_00009) /\ (actionTo_00009 != 3)))
BOOL aux164 #((1=actionTypes_00010) \/ (2=actionTypes_00010) \/ (3=actionTypes_00010) \/ (5=actionTypes_00010) \/ ((4=actionTypes_00010) /\ (actionTo_00010 != 3)))
BOOL aux165 #((1=actionTypes_00011) \/ (2=actionTypes_00011) \/ (3=actionTypes_00011) \/ (5=actionTypes_00011) \/ ((4=actionTypes_00011) /\ (actionTo_00011 != 3)))
BOOL aux166 #((1=actionTypes_00012) \/ (2=actionTypes_00012) \/ (3=actionTypes_00012) \/ (5=actionTypes_00012) \/ ((4=actionTypes_00012) /\ (actionTo_00012 != 3)))
BOOL aux167 #((1=actionTypes_00013) \/ (2=actionTypes_00013) \/ (3=actionTypes_00013) \/ (5=actionTypes_00013) \/ ((4=actionTypes_00013) /\ (actionTo_00013 != 3)))
BOOL aux168 #((1=actionTypes_00014) \/ (2=actionTypes_00014) \/ (3=actionTypes_00014) \/ (5=actionTypes_00014) \/ ((4=actionTypes_00014) /\ (actionTo_00014 != 3)))
BOOL aux169 #((2=actionTypes_00002) \/ (4=actionTypes_00002))
BOOL aux170 #((2=actionTypes_00003) \/ (4=actionTypes_00003))
BOOL aux171 #((2=actionTypes_00004) \/ (4=actionTypes_00004))
BOOL aux172 #((2=actionTypes_00005) \/ (4=actionTypes_00005))
BOOL aux173 #((2=actionTypes_00006) \/ (4=actionTypes_00006))
BOOL aux174 #((2=actionTypes_00007) \/ (4=actionTypes_00007))
BOOL aux175 #((2=actionTypes_00008) \/ (4=actionTypes_00008))
BOOL aux176 #((2=actionTypes_00009) \/ (4=actionTypes_00009))
BOOL aux177 #((2=actionTypes_00010) \/ (4=actionTypes_00010))
BOOL aux178 #((2=actionTypes_00011) \/ (4=actionTypes_00011))
BOOL aux179 #((2=actionTypes_00012) \/ (4=actionTypes_00012))
BOOL aux180 #((2=actionTypes_00013) \/ (4=actionTypes_00013))
BOOL aux181 #((2=actionTypes_00014) \/ (4=actionTypes_00014))
BOOL aux182 #(1=actionTypes_00002)
BOOL aux183 #(1=actionTypes_00002)
BOOL aux184 #(1=actionTypes_00002)
BOOL aux185 #(1=actionTypes_00002)
BOOL aux186 #(1=actionTypes_00002)
DISCRETE aux187 #(pointers_00000_00002 + -1)
{-1..2}
BOOL aux188 #(1=actionTypes_00003)
BOOL aux189 #(1=actionTypes_00003)
BOOL aux190 #(1=actionTypes_00003)
BOOL aux191 #(1=actionTypes_00003)
BOOL aux192 #(1=actionTypes_00003)
DISCRETE aux193 #(pointers_00000_00003 + -1)
{-1..2}
BOOL aux194 #(1=actionTypes_00004)
BOOL aux195 #(1=actionTypes_00004)
BOOL aux196 #(1=actionTypes_00004)
BOOL aux197 #(1=actionTypes_00004)
BOOL aux198 #(1=actionTypes_00004)
DISCRETE aux199 #(pointers_00000_00004 + -1)
{-1..2}
BOOL aux200 #(1=actionTypes_00005)
BOOL aux201 #(1=actionTypes_00005)
BOOL aux202 #(1=actionTypes_00005)
BOOL aux203 #(1=actionTypes_00005)
BOOL aux204 #(1=actionTypes_00005)
DISCRETE aux205 #(pointers_00000_00005 + -1)
{-1..2}
BOOL aux206 #(1=actionTypes_00006)
BOOL aux207 #(1=actionTypes_00006)
BOOL aux208 #(1=actionTypes_00006)
BOOL aux209 #(1=actionTypes_00006)
BOOL aux210 #(1=actionTypes_00006)
DISCRETE aux211 #(pointers_00000_00006 + -1)
{-1..2}
BOOL aux212 #(1=actionTypes_00007)
BOOL aux213 #(1=actionTypes_00007)
BOOL aux214 #(1=actionTypes_00007)
BOOL aux215 #(1=actionTypes_00007)
BOOL aux216 #(1=actionTypes_00007)
DISCRETE aux217 #(pointers_00000_00007 + -1)
{-1..2}
BOOL aux218 #(1=actionTypes_00008)
BOOL aux219 #(1=actionTypes_00008)
BOOL aux220 #(1=actionTypes_00008)
BOOL aux221 #(1=actionTypes_00008)
BOOL aux222 #(1=actionTypes_00008)
DISCRETE aux223 #(pointers_00000_00008 + -1)
{-1..2}
BOOL aux224 #(1=actionTypes_00009)
BOOL aux225 #(1=actionTypes_00009)
BOOL aux226 #(1=actionTypes_00009)
BOOL aux227 #(1=actionTypes_00009)
BOOL aux228 #(1=actionTypes_00009)
DISCRETE aux229 #(pointers_00000_00009 + -1)
{-1..2}
BOOL aux230 #(1=actionTypes_00010)
BOOL aux231 #(1=actionTypes_00010)
BOOL aux232 #(1=actionTypes_00010)
BOOL aux233 #(1=actionTypes_00010)
BOOL aux234 #(1=actionTypes_00010)
DISCRETE aux235 #(pointers_00000_00010 + -1)
{-1..2}
BOOL aux236 #(1=actionTypes_00011)
BOOL aux237 #(1=actionTypes_00011)
BOOL aux238 #(1=actionTypes_00011)
BOOL aux239 #(1=actionTypes_00011)
BOOL aux240 #(1=actionTypes_00011)
DISCRETE aux241 #(pointers_00000_00011 + -1)
{-1..2}
BOOL aux242 #(1=actionTypes_00012)
BOOL aux243 #(1=actionTypes_00012)
BOOL aux244 #(1=actionTypes_00012)
BOOL aux245 #(1=actionTypes_00012)
BOOL aux246 #(1=actionTypes_00012)
DISCRETE aux247 #(pointers_00000_00012 + -1)
{-1..2}
BOOL aux248 #(1=actionTypes_00013)
BOOL aux249 #(1=actionTypes_00013)
BOOL aux250 #(1=actionTypes_00013)
BOOL aux251 #(1=actionTypes_00013)
BOOL aux252 #(1=actionTypes_00013)
DISCRETE aux253 #(pointers_00000_00013 + -1)
{-1..2}
BOOL aux254 #(1=actionTypes_00014)
BOOL aux255 #(1=actionTypes_00014)
BOOL aux256 #(1=actionTypes_00014)
BOOL aux257 #(1=actionTypes_00014)
BOOL aux258 #(1=actionTypes_00014)
DISCRETE aux259 #(pointers_00000_00014 + -1)
{-1..2}
BOOL aux260 #(2=actionTypes_00002)
BOOL aux261 #(2=actionTypes_00002)
BOOL aux262 #(2=actionTypes_00002)
BOOL aux263 #(2=actionTypes_00002)
BOOL aux264 #(2=actionTypes_00002)
BOOL aux265 #(2=actionTypes_00002)
DISCRETE aux266 #(pointers_00001_00002 + -1)
{-1..2}
BOOL aux267 #(2=actionTypes_00003)
BOOL aux268 #(2=actionTypes_00003)
BOOL aux269 #(2=actionTypes_00003)
BOOL aux270 #(2=actionTypes_00003)
BOOL aux271 #(2=actionTypes_00003)
BOOL aux272 #(2=actionTypes_00003)
BOOL aux273 #(2=actionTypes_00003)
DISCRETE aux274 #(pointers_00001_00003 + -1)
{-1..2}
BOOL aux275 #(2=actionTypes_00004)
BOOL aux276 #(2=actionTypes_00004)
BOOL aux277 #(2=actionTypes_00004)
BOOL aux278 #(2=actionTypes_00004)
BOOL aux279 #(2=actionTypes_00004)
BOOL aux280 #(2=actionTypes_00004)
BOOL aux281 #(2=actionTypes_00004)
DISCRETE aux282 #(pointers_00001_00004 + -1)
{-1..2}
BOOL aux283 #(2=actionTypes_00005)
BOOL aux284 #(2=actionTypes_00005)
BOOL aux285 #(2=actionTypes_00005)
BOOL aux286 #(2=actionTypes_00005)
BOOL aux287 #(2=actionTypes_00005)
BOOL aux288 #(2=actionTypes_00005)
BOOL aux289 #(2=actionTypes_00005)
DISCRETE aux290 #(pointers_00001_00005 + -1)
{-1..2}
BOOL aux291 #(2=actionTypes_00006)
BOOL aux292 #(2=actionTypes_00006)
BOOL aux293 #(2=actionTypes_00006)
BOOL aux294 #(2=actionTypes_00006)
BOOL aux295 #(2=actionTypes_00006)
BOOL aux296 #(2=actionTypes_00006)
BOOL aux297 #(2=actionTypes_00006)
DISCRETE aux298 #(pointers_00001_00006 + -1)
{-1..2}
BOOL aux299 #(2=actionTypes_00007)
BOOL aux300 #(2=actionTypes_00007)
BOOL aux301 #(2=actionTypes_00007)
BOOL aux302 #(2=actionTypes_00007)
BOOL aux303 #(2=actionTypes_00007)
BOOL aux304 #(2=actionTypes_00007)
BOOL aux305 #(2=actionTypes_00007)
DISCRETE aux306 #(pointers_00001_00007 + -1)
{-1..2}
BOOL aux307 #(2=actionTypes_00008)
BOOL aux308 #(2=actionTypes_00008)
BOOL aux309 #(2=actionTypes_00008)
BOOL aux310 #(2=actionTypes_00008)
BOOL aux311 #(2=actionTypes_00008)
BOOL aux312 #(2=actionTypes_00008)
BOOL aux313 #(2=actionTypes_00008)
DISCRETE aux314 #(pointers_00001_00008 + -1)
{-1..2}
BOOL aux315 #(2=actionTypes_00009)
BOOL aux316 #(2=actionTypes_00009)
BOOL aux317 #(2=actionTypes_00009)
BOOL aux318 #(2=actionTypes_00009)
BOOL aux319 #(2=actionTypes_00009)
BOOL aux320 #(2=actionTypes_00009)
BOOL aux321 #(2=actionTypes_00009)
DISCRETE aux322 #(pointers_00001_00009 + -1)
{-1..2}
BOOL aux323 #(2=actionTypes_00010)
BOOL aux324 #(2=actionTypes_00010)
BOOL aux325 #(2=actionTypes_00010)
BOOL aux326 #(2=actionTypes_00010)
BOOL aux327 #(2=actionTypes_00010)
BOOL aux328 #(2=actionTypes_00010)
BOOL aux329 #(2=actionTypes_00010)
DISCRETE aux330 #(pointers_00001_00010 + -1)
{-1..2}
BOOL aux331 #(2=actionTypes_00011)
BOOL aux332 #(2=actionTypes_00011)
BOOL aux333 #(2=actionTypes_00011)
BOOL aux334 #(2=actionTypes_00011)
BOOL aux335 #(2=actionTypes_00011)
BOOL aux336 #(2=actionTypes_00011)
BOOL aux337 #(2=actionTypes_00011)
DISCRETE aux338 #(pointers_00001_00011 + -1)
{-1..2}
BOOL aux339 #(2=actionTypes_00012)
BOOL aux340 #(2=actionTypes_00012)
BOOL aux341 #(2=actionTypes_00012)
BOOL aux342 #(2=actionTypes_00012)
BOOL aux343 #(2=actionTypes_00012)
BOOL aux344 #(2=actionTypes_00012)
BOOL aux345 #(2=actionTypes_00012)
DISCRETE aux346 #(pointers_00001_00012 + -1)
{-1..2}
BOOL aux347 #(2=actionTypes_00013)
BOOL aux348 #(2=actionTypes_00013)
BOOL aux349 #(2=actionTypes_00013)
BOOL aux350 #(2=actionTypes_00013)
BOOL aux351 #(2=actionTypes_00013)
BOOL aux352 #(2=actionTypes_00013)
BOOL aux353 #(2=actionTypes_00013)
DISCRETE aux354 #(pointers_00001_00013 + -1)
{-1..2}
BOOL aux355 #(2=actionTypes_00014)
BOOL aux356 #(2=actionTypes_00014)
BOOL aux357 #(2=actionTypes_00014)
BOOL aux358 #(2=actionTypes_00014)
BOOL aux359 #(2=actionTypes_00014)
BOOL aux360 #(2=actionTypes_00014)
BOOL aux361 #(3=actionTypes_00002)
BOOL aux362 #(3=actionTypes_00002)
BOOL aux363 #(3=actionTypes_00002)
BOOL aux364 #(3=actionTypes_00002)
BOOL aux365 #(3=actionTypes_00002)
BOOL aux366 #(3=actionTypes_00002)
BOOL aux367 #(3=actionTypes_00003)
BOOL aux368 #(3=actionTypes_00003)
BOOL aux369 #(3=actionTypes_00003)
BOOL aux370 #(3=actionTypes_00003)
BOOL aux371 #(3=actionTypes_00003)
BOOL aux372 #(3=actionTypes_00003)
BOOL aux373 #(3=actionTypes_00004)
BOOL aux374 #(3=actionTypes_00004)
BOOL aux375 #(3=actionTypes_00004)
BOOL aux376 #(3=actionTypes_00004)
BOOL aux377 #(3=actionTypes_00004)
BOOL aux378 #(3=actionTypes_00004)
BOOL aux379 #(3=actionTypes_00005)
BOOL aux380 #(3=actionTypes_00005)
BOOL aux381 #(3=actionTypes_00005)
BOOL aux382 #(3=actionTypes_00005)
BOOL aux383 #(3=actionTypes_00005)
BOOL aux384 #(3=actionTypes_00005)
BOOL aux385 #(3=actionTypes_00006)
BOOL aux386 #(3=actionTypes_00006)
BOOL aux387 #(3=actionTypes_00006)
BOOL aux388 #(3=actionTypes_00006)
BOOL aux389 #(3=actionTypes_00006)
BOOL aux390 #(3=actionTypes_00006)
BOOL aux391 #(3=actionTypes_00007)
BOOL aux392 #(3=actionTypes_00007)
BOOL aux393 #(3=actionTypes_00007)
BOOL aux394 #(3=actionTypes_00007)
BOOL aux395 #(3=actionTypes_00007)
BOOL aux396 #(3=actionTypes_00007)
BOOL aux397 #(3=actionTypes_00008)
BOOL aux398 #(3=actionTypes_00008)
BOOL aux399 #(3=actionTypes_00008)
BOOL aux400 #(3=actionTypes_00008)
BOOL aux401 #(3=actionTypes_00008)
BOOL aux402 #(3=actionTypes_00008)
BOOL aux403 #(3=actionTypes_00009)
BOOL aux404 #(3=actionTypes_00009)
BOOL aux405 #(3=actionTypes_00009)
BOOL aux406 #(3=actionTypes_00009)
BOOL aux407 #(3=actionTypes_00009)
BOOL aux408 #(3=actionTypes_00009)
BOOL aux409 #(3=actionTypes_00010)
BOOL aux410 #(3=actionTypes_00010)
BOOL aux411 #(3=actionTypes_00010)
BOOL aux412 #(3=actionTypes_00010)
BOOL aux413 #(3=actionTypes_00010)
BOOL aux414 #(3=actionTypes_00010)
BOOL aux415 #(3=actionTypes_00011)
BOOL aux416 #(3=actionTypes_00011)
BOOL aux417 #(3=actionTypes_00011)
BOOL aux418 #(3=actionTypes_00011)
BOOL aux419 #(3=actionTypes_00011)
BOOL aux420 #(3=actionTypes_00011)
BOOL aux421 #(3=actionTypes_00012)
BOOL aux422 #(3=actionTypes_00012)
BOOL aux423 #(3=actionTypes_00012)
BOOL aux424 #(3=actionTypes_00012)
BOOL aux425 #(3=actionTypes_00012)
BOOL aux426 #(3=actionTypes_00012)
BOOL aux427 #(3=actionTypes_00013)
BOOL aux428 #(3=actionTypes_00013)
BOOL aux429 #(3=actionTypes_00013)
BOOL aux430 #(3=actionTypes_00013)
BOOL aux431 #(3=actionTypes_00013)
BOOL aux432 #(3=actionTypes_00013)
BOOL aux433 #(3=actionTypes_00014)
BOOL aux434 #(3=actionTypes_00014)
BOOL aux435 #(3=actionTypes_00014)
BOOL aux436 #(3=actionTypes_00014)
BOOL aux437 #(3=actionTypes_00014)
BOOL aux438 #(3=actionTypes_00014)
BOOL aux439 #(4=actionTypes_00002)
BOOL aux440 #(4=actionTypes_00002)
BOOL aux441 #(4=actionTypes_00002)
BOOL aux442 #(4=actionTypes_00002)
BOOL aux443 #(4=actionTypes_00002)
BOOL aux444 #(4=actionTypes_00003)
BOOL aux445 #(4=actionTypes_00003)
BOOL aux446 #(4=actionTypes_00003)
BOOL aux447 #(4=actionTypes_00003)
BOOL aux448 #(4=actionTypes_00003)
BOOL aux449 #(4=actionTypes_00003)
BOOL aux450 #(4=actionTypes_00004)
BOOL aux451 #(4=actionTypes_00004)
BOOL aux452 #(4=actionTypes_00004)
BOOL aux453 #(4=actionTypes_00004)
BOOL aux454 #(4=actionTypes_00004)
BOOL aux455 #(4=actionTypes_00004)
BOOL aux456 #(4=actionTypes_00005)
BOOL aux457 #(4=actionTypes_00005)
BOOL aux458 #(4=actionTypes_00005)
BOOL aux459 #(4=actionTypes_00005)
BOOL aux460 #(4=actionTypes_00005)
BOOL aux461 #(4=actionTypes_00005)
BOOL aux462 #(4=actionTypes_00006)
BOOL aux463 #(4=actionTypes_00006)
BOOL aux464 #(4=actionTypes_00006)
BOOL aux465 #(4=actionTypes_00006)
BOOL aux466 #(4=actionTypes_00006)
BOOL aux467 #(4=actionTypes_00006)
BOOL aux468 #(4=actionTypes_00007)
BOOL aux469 #(4=actionTypes_00007)
BOOL aux470 #(4=actionTypes_00007)
BOOL aux471 #(4=actionTypes_00007)
BOOL aux472 #(4=actionTypes_00007)
BOOL aux473 #(4=actionTypes_00007)
BOOL aux474 #(4=actionTypes_00008)
BOOL aux475 #(4=actionTypes_00008)
BOOL aux476 #(4=actionTypes_00008)
BOOL aux477 #(4=actionTypes_00008)
BOOL aux478 #(4=actionTypes_00008)
BOOL aux479 #(4=actionTypes_00008)
BOOL aux480 #(4=actionTypes_00009)
BOOL aux481 #(4=actionTypes_00009)
BOOL aux482 #(4=actionTypes_00009)
BOOL aux483 #(4=actionTypes_00009)
BOOL aux484 #(4=actionTypes_00009)
BOOL aux485 #(4=actionTypes_00009)
BOOL aux486 #(4=actionTypes_00010)
BOOL aux487 #(4=actionTypes_00010)
BOOL aux488 #(4=actionTypes_00010)
BOOL aux489 #(4=actionTypes_00010)
BOOL aux490 #(4=actionTypes_00010)
BOOL aux491 #(4=actionTypes_00010)
BOOL aux492 #(4=actionTypes_00011)
BOOL aux493 #(4=actionTypes_00011)
BOOL aux494 #(4=actionTypes_00011)
BOOL aux495 #(4=actionTypes_00011)
BOOL aux496 #(4=actionTypes_00011)
BOOL aux497 #(4=actionTypes_00011)
BOOL aux498 #(4=actionTypes_00012)
BOOL aux499 #(4=actionTypes_00012)
BOOL aux500 #(4=actionTypes_00012)
BOOL aux501 #(4=actionTypes_00012)
BOOL aux502 #(4=actionTypes_00012)
BOOL aux503 #(4=actionTypes_00012)
BOOL aux504 #(4=actionTypes_00013)
BOOL aux505 #(4=actionTypes_00013)
BOOL aux506 #(4=actionTypes_00013)
BOOL aux507 #(4=actionTypes_00013)
BOOL aux508 #(4=actionTypes_00013)
BOOL aux509 #(4=actionTypes_00013)
BOOL aux510 #(4=actionTypes_00014)
BOOL aux511 #(4=actionTypes_00014)
BOOL aux512 #(4=actionTypes_00014)
BOOL aux513 #(4=actionTypes_00014)
BOOL aux514 #(4=actionTypes_00014)
BOOL aux515 #(4=actionTypes_00014)
BOOL aux516 #(5=actionTypes_00002)
BOOL aux517 #(5=actionTypes_00002)
BOOL aux518 #(5=actionTypes_00002)
DISCRETE aux519 #SafeElement([4, -1], aux88)
{-1..4}
**CONSTRAINTS**
w-inintervalset(aux519, [-1,0,4,4])
**VARIABLES**
BOOL aux520 #(5=actionTypes_00002)
BOOL aux521 #(5=actionTypes_00002)
BOOL aux522 #(5=actionTypes_00002)
BOOL aux523 #(5=actionTypes_00002)
DISCRETE aux524 #SafeElement([4, -1], aux116)
{-1..4}
**CONSTRAINTS**
w-inintervalset(aux524, [-1,0,4,4])
**VARIABLES**
BOOL aux525 #(5=actionTypes_00002)
BOOL aux526 #(5=actionTypes_00003)
BOOL aux527 #(5=actionTypes_00003)
BOOL aux528 #(5=actionTypes_00003)
DISCRETE aux529 #SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], aux87)
{-1..100}
BOOL aux530 #(5=actionTypes_00003)
BOOL aux531 #(5=actionTypes_00003)
BOOL aux532 #(5=actionTypes_00003)
BOOL aux533 #(5=actionTypes_00003)
DISCRETE aux534 #SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], aux112)
{-1..100}
BOOL aux535 #(5=actionTypes_00003)
BOOL aux536 #(5=actionTypes_00004)
BOOL aux537 #(5=actionTypes_00004)
BOOL aux538 #(5=actionTypes_00004)
DISCRETE aux539 #SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], aux90)
{-1..100}
BOOL aux540 #(5=actionTypes_00004)
BOOL aux541 #(5=actionTypes_00004)
BOOL aux542 #(5=actionTypes_00004)
BOOL aux543 #(5=actionTypes_00004)
DISCRETE aux544 #SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], aux82)
{-1..100}
BOOL aux545 #(5=actionTypes_00004)
BOOL aux546 #(5=actionTypes_00005)
BOOL aux547 #(5=actionTypes_00005)
BOOL aux548 #(5=actionTypes_00005)
DISCRETE aux549 #SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], aux89)
{-1..100}
BOOL aux550 #(5=actionTypes_00005)
BOOL aux551 #(5=actionTypes_00005)
BOOL aux552 #(5=actionTypes_00005)
BOOL aux553 #(5=actionTypes_00005)
DISCRETE aux554 #SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], aux79)
{-1..100}
BOOL aux555 #(5=actionTypes_00005)
BOOL aux556 #(5=actionTypes_00006)
BOOL aux557 #(5=actionTypes_00006)
BOOL aux558 #(5=actionTypes_00006)
DISCRETE aux559 #SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], aux84)
{-1..100}
BOOL aux560 #(5=actionTypes_00006)
BOOL aux561 #(5=actionTypes_00006)
BOOL aux562 #(5=actionTypes_00006)
BOOL aux563 #(5=actionTypes_00006)
DISCRETE aux564 #SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], aux113)
{-1..100}
BOOL aux565 #(5=actionTypes_00006)
BOOL aux566 #(5=actionTypes_00007)
BOOL aux567 #(5=actionTypes_00007)
BOOL aux568 #(5=actionTypes_00007)
DISCRETE aux569 #SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], aux83)
{-1..100}
BOOL aux570 #(5=actionTypes_00007)
BOOL aux571 #(5=actionTypes_00007)
BOOL aux572 #(5=actionTypes_00007)
BOOL aux573 #(5=actionTypes_00007)
DISCRETE aux574 #SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], aux114)
{-1..100}
BOOL aux575 #(5=actionTypes_00007)
BOOL aux576 #(5=actionTypes_00008)
BOOL aux577 #(5=actionTypes_00008)
BOOL aux578 #(5=actionTypes_00008)
DISCRETE aux579 #SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], aux86)
{-1..100}
BOOL aux580 #(5=actionTypes_00008)
BOOL aux581 #(5=actionTypes_00008)
BOOL aux582 #(5=actionTypes_00008)
BOOL aux583 #(5=actionTypes_00008)
DISCRETE aux584 #SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], aux98)
{-1..100}
BOOL aux585 #(5=actionTypes_00008)
BOOL aux586 #(5=actionTypes_00009)
BOOL aux587 #(5=actionTypes_00009)
BOOL aux588 #(5=actionTypes_00009)
DISCRETE aux589 #SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], aux85)
{-1..100}
BOOL aux590 #(5=actionTypes_00009)
BOOL aux591 #(5=actionTypes_00009)
BOOL aux592 #(5=actionTypes_00009)
BOOL aux593 #(5=actionTypes_00009)
DISCRETE aux594 #SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], aux96)
{-1..100}
BOOL aux595 #(5=actionTypes_00009)
BOOL aux596 #(5=actionTypes_00010)
BOOL aux597 #(5=actionTypes_00010)
BOOL aux598 #(5=actionTypes_00010)
DISCRETE aux599 #SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], aux91)
{-1..100}
BOOL aux600 #(5=actionTypes_00010)
BOOL aux601 #(5=actionTypes_00010)
BOOL aux602 #(5=actionTypes_00010)
BOOL aux603 #(5=actionTypes_00010)
DISCRETE aux604 #SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], aux97)
{-1..100}
BOOL aux605 #(5=actionTypes_00010)
BOOL aux606 #(5=actionTypes_00011)
BOOL aux607 #(5=actionTypes_00011)
BOOL aux608 #(5=actionTypes_00011)
DISCRETE aux609 #SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], aux93)
{-1..100}
BOOL aux610 #(5=actionTypes_00011)
BOOL aux611 #(5=actionTypes_00011)
BOOL aux612 #(5=actionTypes_00011)
BOOL aux613 #(5=actionTypes_00011)
DISCRETE aux614 #SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], aux81)
{-1..100}
BOOL aux615 #(5=actionTypes_00011)
BOOL aux616 #(5=actionTypes_00012)
BOOL aux617 #(5=actionTypes_00012)
BOOL aux618 #(5=actionTypes_00012)
DISCRETE aux619 #SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], aux92)
{-1..100}
BOOL aux620 #(5=actionTypes_00012)
BOOL aux621 #(5=actionTypes_00012)
BOOL aux622 #(5=actionTypes_00012)
BOOL aux623 #(5=actionTypes_00012)
DISCRETE aux624 #SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], aux78)
{-1..100}
BOOL aux625 #(5=actionTypes_00012)
BOOL aux626 #(5=actionTypes_00013)
BOOL aux627 #(5=actionTypes_00013)
BOOL aux628 #(5=actionTypes_00013)
DISCRETE aux629 #SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], aux95)
{-1..100}
BOOL aux630 #(5=actionTypes_00013)
BOOL aux631 #(5=actionTypes_00013)
BOOL aux632 #(5=actionTypes_00013)
BOOL aux633 #(5=actionTypes_00013)
DISCRETE aux634 #SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], aux80)
{-1..100}
BOOL aux635 #(5=actionTypes_00013)
BOOL aux636 #(5=actionTypes_00014)
BOOL aux637 #(5=actionTypes_00014)
BOOL aux638 #(5=actionTypes_00014)
DISCRETE aux639 #SafeElement([statePlaces_00002_00013, statePlaces_00003_00013], aux94)
{-1..100}
BOOL aux640 #(5=actionTypes_00014)
BOOL aux641 #(5=actionTypes_00014)
BOOL aux642 #(5=actionTypes_00014)
BOOL aux643 #(5=actionTypes_00014)
DISCRETE aux644 #SafeElement([statePlaces_00002_00013, statePlaces_00003_00013], aux115)
{-1..100}
BOOL aux645 #(5=actionTypes_00014)
**VARIABLES**
ALIAS output[3]=[12, 24, 15]
**VARIABLES**
ALIAS input[3]=[4, 8, 5]
**SEARCH**
PRINT[[statePlaces_00002_00002],[statePlaces_00002_00003],[statePlaces_00002_00004],[statePlaces_00002_00005],[statePlaces_00002_00006],[statePlaces_00002_00007],[statePlaces_00002_00008],[statePlaces_00002_00009],[statePlaces_00002_00010],[statePlaces_00002_00011],[statePlaces_00002_00012],[statePlaces_00002_00013],[statePlaces_00002_00014],[statePlaces_00003_00002],[statePlaces_00003_00003],[statePlaces_00003_00004],[statePlaces_00003_00005],[statePlaces_00003_00006],[statePlaces_00003_00007],[statePlaces_00003_00008],[statePlaces_00003_00009],[statePlaces_00003_00010],[statePlaces_00003_00011],[statePlaces_00003_00012],[statePlaces_00003_00013],[statePlaces_00003_00014],[actionTypes_00002],[actionTypes_00003],[actionTypes_00004],[actionTypes_00005],[actionTypes_00006],[actionTypes_00007],[actionTypes_00008],[actionTypes_00009],[actionTypes_00010],[actionTypes_00011],[actionTypes_00012],[actionTypes_00013],[actionTypes_00014],[actionFrom_00002],[actionFrom_00003],[actionFrom_00004],[actionFrom_00005],[actionFrom_00006],[actionFrom_00007],[actionFrom_00008],[actionFrom_00009],[actionFrom_00010],[actionFrom_00011],[actionFrom_00012],[actionFrom_00013],[actionFrom_00014],[actionTo_00002],[actionTo_00003],[actionTo_00004],[actionTo_00005],[actionTo_00006],[actionTo_00007],[actionTo_00008],[actionTo_00009],[actionTo_00010],[actionTo_00011],[actionTo_00012],[actionTo_00013],[actionTo_00014],[pointers_00000_00002],[pointers_00000_00003],[pointers_00000_00004],[pointers_00000_00005],[pointers_00000_00006],[pointers_00000_00007],[pointers_00000_00008],[pointers_00000_00009],[pointers_00000_00010],[pointers_00000_00011],[pointers_00000_00012],[pointers_00000_00013],[pointers_00000_00014],[pointers_00001_00002],[pointers_00001_00003],[pointers_00001_00004],[pointers_00001_00005],[pointers_00001_00006],[pointers_00001_00007],[pointers_00001_00008],[pointers_00001_00009],[pointers_00001_00010],[pointers_00001_00011],[pointers_00001_00012],[pointers_00001_00013]]
**CONSTRAINTS**
reify(diseq(1,actionTypes_00002), aux130)
reify(diseq(1,actionTypes_00003), aux131)
reify(diseq(1,actionTypes_00004), aux132)
reify(diseq(1,actionTypes_00005), aux133)
reify(diseq(1,actionTypes_00006), aux134)
reify(diseq(1,actionTypes_00007), aux135)
reify(diseq(1,actionTypes_00008), aux136)
reify(diseq(1,actionTypes_00009), aux137)
reify(diseq(1,actionTypes_00010), aux138)
reify(diseq(1,actionTypes_00011), aux139)
reify(diseq(1,actionTypes_00012), aux140)
reify(diseq(1,actionTypes_00013), aux141)
reify(diseq(1,actionTypes_00014), aux142)
reify(diseq(2,actionTypes_00002), aux143)
reify(diseq(2,actionTypes_00003), aux144)
reify(diseq(2,actionTypes_00004), aux145)
reify(diseq(2,actionTypes_00005), aux146)
reify(diseq(2,actionTypes_00006), aux147)
reify(diseq(2,actionTypes_00007), aux148)
reify(diseq(2,actionTypes_00008), aux149)
reify(diseq(2,actionTypes_00009), aux150)
reify(diseq(2,actionTypes_00010), aux151)
reify(diseq(2,actionTypes_00011), aux152)
reify(diseq(2,actionTypes_00012), aux153)
reify(diseq(2,actionTypes_00013), aux154)
reify(diseq(2,actionTypes_00014), aux155)
reify(watched-or({w-literal(actionTypes_00002,1),w-literal(actionTypes_00002,2),w-literal(actionTypes_00002,3),w-literal(actionTypes_00002,5),watched-and({w-literal(actionTypes_00002,4),diseq(actionTo_00002,3)})}), aux156)
reify(watched-or({w-literal(actionTypes_00003,1),w-literal(actionTypes_00003,2),w-literal(actionTypes_00003,3),w-literal(actionTypes_00003,5),watched-and({w-literal(actionTypes_00003,4),diseq(actionTo_00003,3)})}), aux157)
reify(watched-or({w-literal(actionTypes_00004,1),w-literal(actionTypes_00004,2),w-literal(actionTypes_00004,3),w-literal(actionTypes_00004,5),watched-and({w-literal(actionTypes_00004,4),diseq(actionTo_00004,3)})}), aux158)
reify(watched-or({w-literal(actionTypes_00005,1),w-literal(actionTypes_00005,2),w-literal(actionTypes_00005,3),w-literal(actionTypes_00005,5),watched-and({w-literal(actionTypes_00005,4),diseq(actionTo_00005,3)})}), aux159)
reify(watched-or({w-literal(actionTypes_00006,1),w-literal(actionTypes_00006,2),w-literal(actionTypes_00006,3),w-literal(actionTypes_00006,5),watched-and({w-literal(actionTypes_00006,4),diseq(actionTo_00006,3)})}), aux160)
reify(watched-or({w-literal(actionTypes_00007,1),w-literal(actionTypes_00007,2),w-literal(actionTypes_00007,3),w-literal(actionTypes_00007,5),watched-and({w-literal(actionTypes_00007,4),diseq(actionTo_00007,3)})}), aux161)
reify(watched-or({w-literal(actionTypes_00008,1),w-literal(actionTypes_00008,2),w-literal(actionTypes_00008,3),w-literal(actionTypes_00008,5),watched-and({w-literal(actionTypes_00008,4),diseq(actionTo_00008,3)})}), aux162)
reify(watched-or({w-literal(actionTypes_00009,1),w-literal(actionTypes_00009,2),w-literal(actionTypes_00009,3),w-literal(actionTypes_00009,5),watched-and({w-literal(actionTypes_00009,4),diseq(actionTo_00009,3)})}), aux163)
reify(watched-or({w-literal(actionTypes_00010,1),w-literal(actionTypes_00010,2),w-literal(actionTypes_00010,3),w-literal(actionTypes_00010,5),watched-and({w-literal(actionTypes_00010,4),diseq(actionTo_00010,3)})}), aux164)
reify(watched-or({w-literal(actionTypes_00011,1),w-literal(actionTypes_00011,2),w-literal(actionTypes_00011,3),w-literal(actionTypes_00011,5),watched-and({w-literal(actionTypes_00011,4),diseq(actionTo_00011,3)})}), aux165)
reify(watched-or({w-literal(actionTypes_00012,1),w-literal(actionTypes_00012,2),w-literal(actionTypes_00012,3),w-literal(actionTypes_00012,5),watched-and({w-literal(actionTypes_00012,4),diseq(actionTo_00012,3)})}), aux166)
reify(watched-or({w-literal(actionTypes_00013,1),w-literal(actionTypes_00013,2),w-literal(actionTypes_00013,3),w-literal(actionTypes_00013,5),watched-and({w-literal(actionTypes_00013,4),diseq(actionTo_00013,3)})}), aux167)
reify(watched-or({w-literal(actionTypes_00014,1),w-literal(actionTypes_00014,2),w-literal(actionTypes_00014,3),w-literal(actionTypes_00014,5),watched-and({w-literal(actionTypes_00014,4),diseq(actionTo_00014,3)})}), aux168)
reify(watched-or({w-literal(actionTypes_00002,2),w-literal(actionTypes_00002,4)}), aux169)
reify(watched-or({w-literal(actionTypes_00003,2),w-literal(actionTypes_00003,4)}), aux170)
reify(watched-or({w-literal(actionTypes_00004,2),w-literal(actionTypes_00004,4)}), aux171)
reify(watched-or({w-literal(actionTypes_00005,2),w-literal(actionTypes_00005,4)}), aux172)
reify(watched-or({w-literal(actionTypes_00006,2),w-literal(actionTypes_00006,4)}), aux173)
reify(watched-or({w-literal(actionTypes_00007,2),w-literal(actionTypes_00007,4)}), aux174)
reify(watched-or({w-literal(actionTypes_00008,2),w-literal(actionTypes_00008,4)}), aux175)
reify(watched-or({w-literal(actionTypes_00009,2),w-literal(actionTypes_00009,4)}), aux176)
reify(watched-or({w-literal(actionTypes_00010,2),w-literal(actionTypes_00010,4)}), aux177)
reify(watched-or({w-literal(actionTypes_00011,2),w-literal(actionTypes_00011,4)}), aux178)
reify(watched-or({w-literal(actionTypes_00012,2),w-literal(actionTypes_00012,4)}), aux179)
reify(watched-or({w-literal(actionTypes_00013,2),w-literal(actionTypes_00013,4)}), aux180)
reify(watched-or({w-literal(actionTypes_00014,2),w-literal(actionTypes_00014,4)}), aux181)
reify(w-literal(actionTypes_00002,1), aux182)
reify(w-literal(actionTypes_00002,1), aux183)
reify(w-literal(actionTypes_00002,1), aux184)
reify(w-literal(actionTypes_00002,1), aux185)
reify(w-literal(actionTypes_00002,1), aux186)
reify(w-literal(actionTypes_00003,1), aux188)
reify(w-literal(actionTypes_00003,1), aux189)
reify(w-literal(actionTypes_00003,1), aux190)
reify(w-literal(actionTypes_00003,1), aux191)
reify(w-literal(actionTypes_00003,1), aux192)
reify(w-literal(actionTypes_00004,1), aux194)
reify(w-literal(actionTypes_00004,1), aux195)
reify(w-literal(actionTypes_00004,1), aux196)
reify(w-literal(actionTypes_00004,1), aux197)
reify(w-literal(actionTypes_00004,1), aux198)
reify(w-literal(actionTypes_00005,1), aux200)
reify(w-literal(actionTypes_00005,1), aux201)
reify(w-literal(actionTypes_00005,1), aux202)
reify(w-literal(actionTypes_00005,1), aux203)
reify(w-literal(actionTypes_00005,1), aux204)
reify(w-literal(actionTypes_00006,1), aux206)
reify(w-literal(actionTypes_00006,1), aux207)
reify(w-literal(actionTypes_00006,1), aux208)
reify(w-literal(actionTypes_00006,1), aux209)
reify(w-literal(actionTypes_00006,1), aux210)
reify(w-literal(actionTypes_00007,1), aux212)
reify(w-literal(actionTypes_00007,1), aux213)
reify(w-literal(actionTypes_00007,1), aux214)
reify(w-literal(actionTypes_00007,1), aux215)
reify(w-literal(actionTypes_00007,1), aux216)
reify(w-literal(actionTypes_00008,1), aux218)
reify(w-literal(actionTypes_00008,1), aux219)
reify(w-literal(actionTypes_00008,1), aux220)
reify(w-literal(actionTypes_00008,1), aux221)
reify(w-literal(actionTypes_00008,1), aux222)
reify(w-literal(actionTypes_00009,1), aux224)
reify(w-literal(actionTypes_00009,1), aux225)
reify(w-literal(actionTypes_00009,1), aux226)
reify(w-literal(actionTypes_00009,1), aux227)
reify(w-literal(actionTypes_00009,1), aux228)
reify(w-literal(actionTypes_00010,1), aux230)
reify(w-literal(actionTypes_00010,1), aux231)
reify(w-literal(actionTypes_00010,1), aux232)
reify(w-literal(actionTypes_00010,1), aux233)
reify(w-literal(actionTypes_00010,1), aux234)
reify(w-literal(actionTypes_00011,1), aux236)
reify(w-literal(actionTypes_00011,1), aux237)
reify(w-literal(actionTypes_00011,1), aux238)
reify(w-literal(actionTypes_00011,1), aux239)
reify(w-literal(actionTypes_00011,1), aux240)
reify(w-literal(actionTypes_00012,1), aux242)
reify(w-literal(actionTypes_00012,1), aux243)
reify(w-literal(actionTypes_00012,1), aux244)
reify(w-literal(actionTypes_00012,1), aux245)
reify(w-literal(actionTypes_00012,1), aux246)
reify(w-literal(actionTypes_00013,1), aux248)
reify(w-literal(actionTypes_00013,1), aux249)
reify(w-literal(actionTypes_00013,1), aux250)
reify(w-literal(actionTypes_00013,1), aux251)
reify(w-literal(actionTypes_00013,1), aux252)
reify(w-literal(actionTypes_00014,1), aux254)
reify(w-literal(actionTypes_00014,1), aux255)
reify(w-literal(actionTypes_00014,1), aux256)
reify(w-literal(actionTypes_00014,1), aux257)
reify(w-literal(actionTypes_00014,1), aux258)
reify(w-literal(actionTypes_00002,2), aux260)
reify(w-literal(actionTypes_00002,2), aux261)
reify(w-literal(actionTypes_00002,2), aux262)
reify(w-literal(actionTypes_00002,2), aux263)
reify(w-literal(actionTypes_00002,2), aux264)
reify(w-literal(actionTypes_00002,2), aux265)
reify(w-literal(actionTypes_00003,2), aux267)
reify(w-literal(actionTypes_00003,2), aux268)
reify(w-literal(actionTypes_00003,2), aux269)
reify(w-literal(actionTypes_00003,2), aux270)
reify(w-literal(actionTypes_00003,2), aux271)
reify(w-literal(actionTypes_00003,2), aux272)
reify(w-literal(actionTypes_00003,2), aux273)
reify(w-literal(actionTypes_00004,2), aux275)
reify(w-literal(actionTypes_00004,2), aux276)
reify(w-literal(actionTypes_00004,2), aux277)
reify(w-literal(actionTypes_00004,2), aux278)
reify(w-literal(actionTypes_00004,2), aux279)
reify(w-literal(actionTypes_00004,2), aux280)
reify(w-literal(actionTypes_00004,2), aux281)
reify(w-literal(actionTypes_00005,2), aux283)
reify(w-literal(actionTypes_00005,2), aux284)
reify(w-literal(actionTypes_00005,2), aux285)
reify(w-literal(actionTypes_00005,2), aux286)
reify(w-literal(actionTypes_00005,2), aux287)
reify(w-literal(actionTypes_00005,2), aux288)
reify(w-literal(actionTypes_00005,2), aux289)
reify(w-literal(actionTypes_00006,2), aux291)
reify(w-literal(actionTypes_00006,2), aux292)
reify(w-literal(actionTypes_00006,2), aux293)
reify(w-literal(actionTypes_00006,2), aux294)
reify(w-literal(actionTypes_00006,2), aux295)
reify(w-literal(actionTypes_00006,2), aux296)
reify(w-literal(actionTypes_00006,2), aux297)
reify(w-literal(actionTypes_00007,2), aux299)
reify(w-literal(actionTypes_00007,2), aux300)
reify(w-literal(actionTypes_00007,2), aux301)
reify(w-literal(actionTypes_00007,2), aux302)
reify(w-literal(actionTypes_00007,2), aux303)
reify(w-literal(actionTypes_00007,2), aux304)
reify(w-literal(actionTypes_00007,2), aux305)
reify(w-literal(actionTypes_00008,2), aux307)
reify(w-literal(actionTypes_00008,2), aux308)
reify(w-literal(actionTypes_00008,2), aux309)
reify(w-literal(actionTypes_00008,2), aux310)
reify(w-literal(actionTypes_00008,2), aux311)
reify(w-literal(actionTypes_00008,2), aux312)
reify(w-literal(actionTypes_00008,2), aux313)
reify(w-literal(actionTypes_00009,2), aux315)
reify(w-literal(actionTypes_00009,2), aux316)
reify(w-literal(actionTypes_00009,2), aux317)
reify(w-literal(actionTypes_00009,2), aux318)
reify(w-literal(actionTypes_00009,2), aux319)
reify(w-literal(actionTypes_00009,2), aux320)
reify(w-literal(actionTypes_00009,2), aux321)
reify(w-literal(actionTypes_00010,2), aux323)
reify(w-literal(actionTypes_00010,2), aux324)
reify(w-literal(actionTypes_00010,2), aux325)
reify(w-literal(actionTypes_00010,2), aux326)
reify(w-literal(actionTypes_00010,2), aux327)
reify(w-literal(actionTypes_00010,2), aux328)
reify(w-literal(actionTypes_00010,2), aux329)
reify(w-literal(actionTypes_00011,2), aux331)
reify(w-literal(actionTypes_00011,2), aux332)
reify(w-literal(actionTypes_00011,2), aux333)
reify(w-literal(actionTypes_00011,2), aux334)
reify(w-literal(actionTypes_00011,2), aux335)
reify(w-literal(actionTypes_00011,2), aux336)
reify(w-literal(actionTypes_00011,2), aux337)
reify(w-literal(actionTypes_00012,2), aux339)
reify(w-literal(actionTypes_00012,2), aux340)
reify(w-literal(actionTypes_00012,2), aux341)
reify(w-literal(actionTypes_00012,2), aux342)
reify(w-literal(actionTypes_00012,2), aux343)
reify(w-literal(actionTypes_00012,2), aux344)
reify(w-literal(actionTypes_00012,2), aux345)
reify(w-literal(actionTypes_00013,2), aux347)
reify(w-literal(actionTypes_00013,2), aux348)
reify(w-literal(actionTypes_00013,2), aux349)
reify(w-literal(actionTypes_00013,2), aux350)
reify(w-literal(actionTypes_00013,2), aux351)
reify(w-literal(actionTypes_00013,2), aux352)
reify(w-literal(actionTypes_00013,2), aux353)
reify(w-literal(actionTypes_00014,2), aux355)
reify(w-literal(actionTypes_00014,2), aux356)
reify(w-literal(actionTypes_00014,2), aux357)
reify(w-literal(actionTypes_00014,2), aux358)
reify(w-literal(actionTypes_00014,2), aux359)
reify(w-literal(actionTypes_00014,2), aux360)
reify(w-literal(actionTypes_00002,3), aux361)
reify(w-literal(actionTypes_00002,3), aux362)
reify(w-literal(actionTypes_00002,3), aux363)
reify(w-literal(actionTypes_00002,3), aux364)
reify(w-literal(actionTypes_00002,3), aux365)
reify(w-literal(actionTypes_00002,3), aux366)
reify(w-literal(actionTypes_00003,3), aux367)
reify(w-literal(actionTypes_00003,3), aux368)
reify(w-literal(actionTypes_00003,3), aux369)
reify(w-literal(actionTypes_00003,3), aux370)
reify(w-literal(actionTypes_00003,3), aux371)
reify(w-literal(actionTypes_00003,3), aux372)
reify(w-literal(actionTypes_00004,3), aux373)
reify(w-literal(actionTypes_00004,3), aux374)
reify(w-literal(actionTypes_00004,3), aux375)
reify(w-literal(actionTypes_00004,3), aux376)
reify(w-literal(actionTypes_00004,3), aux377)
reify(w-literal(actionTypes_00004,3), aux378)
reify(w-literal(actionTypes_00005,3), aux379)
reify(w-literal(actionTypes_00005,3), aux380)
reify(w-literal(actionTypes_00005,3), aux381)
reify(w-literal(actionTypes_00005,3), aux382)
reify(w-literal(actionTypes_00005,3), aux383)
reify(w-literal(actionTypes_00005,3), aux384)
reify(w-literal(actionTypes_00006,3), aux385)
reify(w-literal(actionTypes_00006,3), aux386)
reify(w-literal(actionTypes_00006,3), aux387)
reify(w-literal(actionTypes_00006,3), aux388)
reify(w-literal(actionTypes_00006,3), aux389)
reify(w-literal(actionTypes_00006,3), aux390)
reify(w-literal(actionTypes_00007,3), aux391)
reify(w-literal(actionTypes_00007,3), aux392)
reify(w-literal(actionTypes_00007,3), aux393)
reify(w-literal(actionTypes_00007,3), aux394)
reify(w-literal(actionTypes_00007,3), aux395)
reify(w-literal(actionTypes_00007,3), aux396)
reify(w-literal(actionTypes_00008,3), aux397)
reify(w-literal(actionTypes_00008,3), aux398)
reify(w-literal(actionTypes_00008,3), aux399)
reify(w-literal(actionTypes_00008,3), aux400)
reify(w-literal(actionTypes_00008,3), aux401)
reify(w-literal(actionTypes_00008,3), aux402)
reify(w-literal(actionTypes_00009,3), aux403)
reify(w-literal(actionTypes_00009,3), aux404)
reify(w-literal(actionTypes_00009,3), aux405)
reify(w-literal(actionTypes_00009,3), aux406)
reify(w-literal(actionTypes_00009,3), aux407)
reify(w-literal(actionTypes_00009,3), aux408)
reify(w-literal(actionTypes_00010,3), aux409)
reify(w-literal(actionTypes_00010,3), aux410)
reify(w-literal(actionTypes_00010,3), aux411)
reify(w-literal(actionTypes_00010,3), aux412)
reify(w-literal(actionTypes_00010,3), aux413)
reify(w-literal(actionTypes_00010,3), aux414)
reify(w-literal(actionTypes_00011,3), aux415)
reify(w-literal(actionTypes_00011,3), aux416)
reify(w-literal(actionTypes_00011,3), aux417)
reify(w-literal(actionTypes_00011,3), aux418)
reify(w-literal(actionTypes_00011,3), aux419)
reify(w-literal(actionTypes_00011,3), aux420)
reify(w-literal(actionTypes_00012,3), aux421)
reify(w-literal(actionTypes_00012,3), aux422)
reify(w-literal(actionTypes_00012,3), aux423)
reify(w-literal(actionTypes_00012,3), aux424)
reify(w-literal(actionTypes_00012,3), aux425)
reify(w-literal(actionTypes_00012,3), aux426)
reify(w-literal(actionTypes_00013,3), aux427)
reify(w-literal(actionTypes_00013,3), aux428)
reify(w-literal(actionTypes_00013,3), aux429)
reify(w-literal(actionTypes_00013,3), aux430)
reify(w-literal(actionTypes_00013,3), aux431)
reify(w-literal(actionTypes_00013,3), aux432)
reify(w-literal(actionTypes_00014,3), aux433)
reify(w-literal(actionTypes_00014,3), aux434)
reify(w-literal(actionTypes_00014,3), aux435)
reify(w-literal(actionTypes_00014,3), aux436)
reify(w-literal(actionTypes_00014,3), aux437)
reify(w-literal(actionTypes_00014,3), aux438)
reify(w-literal(actionTypes_00002,4), aux439)
reify(w-literal(actionTypes_00002,4), aux440)
reify(w-literal(actionTypes_00002,4), aux441)
reify(w-literal(actionTypes_00002,4), aux442)
reify(w-literal(actionTypes_00002,4), aux443)
reify(w-literal(actionTypes_00003,4), aux444)
reify(w-literal(actionTypes_00003,4), aux445)
reify(w-literal(actionTypes_00003,4), aux446)
reify(w-literal(actionTypes_00003,4), aux447)
reify(w-literal(actionTypes_00003,4), aux448)
reify(w-literal(actionTypes_00003,4), aux449)
reify(w-literal(actionTypes_00004,4), aux450)
reify(w-literal(actionTypes_00004,4), aux451)
reify(w-literal(actionTypes_00004,4), aux452)
reify(w-literal(actionTypes_00004,4), aux453)
reify(w-literal(actionTypes_00004,4), aux454)
reify(w-literal(actionTypes_00004,4), aux455)
reify(w-literal(actionTypes_00005,4), aux456)
reify(w-literal(actionTypes_00005,4), aux457)
reify(w-literal(actionTypes_00005,4), aux458)
reify(w-literal(actionTypes_00005,4), aux459)
reify(w-literal(actionTypes_00005,4), aux460)
reify(w-literal(actionTypes_00005,4), aux461)
reify(w-literal(actionTypes_00006,4), aux462)
reify(w-literal(actionTypes_00006,4), aux463)
reify(w-literal(actionTypes_00006,4), aux464)
reify(w-literal(actionTypes_00006,4), aux465)
reify(w-literal(actionTypes_00006,4), aux466)
reify(w-literal(actionTypes_00006,4), aux467)
reify(w-literal(actionTypes_00007,4), aux468)
reify(w-literal(actionTypes_00007,4), aux469)
reify(w-literal(actionTypes_00007,4), aux470)
reify(w-literal(actionTypes_00007,4), aux471)
reify(w-literal(actionTypes_00007,4), aux472)
reify(w-literal(actionTypes_00007,4), aux473)
reify(w-literal(actionTypes_00008,4), aux474)
reify(w-literal(actionTypes_00008,4), aux475)
reify(w-literal(actionTypes_00008,4), aux476)
reify(w-literal(actionTypes_00008,4), aux477)
reify(w-literal(actionTypes_00008,4), aux478)
reify(w-literal(actionTypes_00008,4), aux479)
reify(w-literal(actionTypes_00009,4), aux480)
reify(w-literal(actionTypes_00009,4), aux481)
reify(w-literal(actionTypes_00009,4), aux482)
reify(w-literal(actionTypes_00009,4), aux483)
reify(w-literal(actionTypes_00009,4), aux484)
reify(w-literal(actionTypes_00009,4), aux485)
reify(w-literal(actionTypes_00010,4), aux486)
reify(w-literal(actionTypes_00010,4), aux487)
reify(w-literal(actionTypes_00010,4), aux488)
reify(w-literal(actionTypes_00010,4), aux489)
reify(w-literal(actionTypes_00010,4), aux490)
reify(w-literal(actionTypes_00010,4), aux491)
reify(w-literal(actionTypes_00011,4), aux492)
reify(w-literal(actionTypes_00011,4), aux493)
reify(w-literal(actionTypes_00011,4), aux494)
reify(w-literal(actionTypes_00011,4), aux495)
reify(w-literal(actionTypes_00011,4), aux496)
reify(w-literal(actionTypes_00011,4), aux497)
reify(w-literal(actionTypes_00012,4), aux498)
reify(w-literal(actionTypes_00012,4), aux499)
reify(w-literal(actionTypes_00012,4), aux500)
reify(w-literal(actionTypes_00012,4), aux501)
reify(w-literal(actionTypes_00012,4), aux502)
reify(w-literal(actionTypes_00012,4), aux503)
reify(w-literal(actionTypes_00013,4), aux504)
reify(w-literal(actionTypes_00013,4), aux505)
reify(w-literal(actionTypes_00013,4), aux506)
reify(w-literal(actionTypes_00013,4), aux507)
reify(w-literal(actionTypes_00013,4), aux508)
reify(w-literal(actionTypes_00013,4), aux509)
reify(w-literal(actionTypes_00014,4), aux510)
reify(w-literal(actionTypes_00014,4), aux511)
reify(w-literal(actionTypes_00014,4), aux512)
reify(w-literal(actionTypes_00014,4), aux513)
reify(w-literal(actionTypes_00014,4), aux514)
reify(w-literal(actionTypes_00014,4), aux515)
reify(w-literal(actionTypes_00002,5), aux516)
reify(w-literal(actionTypes_00002,5), aux517)
reify(w-literal(actionTypes_00002,5), aux518)
watchelement_undefzero([4, -1], aux88, aux519)
reify(w-literal(actionTypes_00002,5), aux520)
reify(w-literal(actionTypes_00002,5), aux521)
reify(w-literal(actionTypes_00002,5), aux522)
reify(w-literal(actionTypes_00002,5), aux523)
watchelement_undefzero([4, -1], aux116, aux524)
reify(w-literal(actionTypes_00002,5), aux525)
reify(w-literal(actionTypes_00003,5), aux526)
reify(w-literal(actionTypes_00003,5), aux527)
reify(w-literal(actionTypes_00003,5), aux528)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux87, aux529)
reify(w-literal(actionTypes_00003,5), aux530)
reify(w-literal(actionTypes_00003,5), aux531)
reify(w-literal(actionTypes_00003,5), aux532)
reify(w-literal(actionTypes_00003,5), aux533)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux112, aux534)
reify(w-literal(actionTypes_00003,5), aux535)
reify(w-literal(actionTypes_00004,5), aux536)
reify(w-literal(actionTypes_00004,5), aux537)
reify(w-literal(actionTypes_00004,5), aux538)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux90, aux539)
reify(w-literal(actionTypes_00004,5), aux540)
reify(w-literal(actionTypes_00004,5), aux541)
reify(w-literal(actionTypes_00004,5), aux542)
reify(w-literal(actionTypes_00004,5), aux543)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux82, aux544)
reify(w-literal(actionTypes_00004,5), aux545)
reify(w-literal(actionTypes_00005,5), aux546)
reify(w-literal(actionTypes_00005,5), aux547)
reify(w-literal(actionTypes_00005,5), aux548)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux89, aux549)
reify(w-literal(actionTypes_00005,5), aux550)
reify(w-literal(actionTypes_00005,5), aux551)
reify(w-literal(actionTypes_00005,5), aux552)
reify(w-literal(actionTypes_00005,5), aux553)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux79, aux554)
reify(w-literal(actionTypes_00005,5), aux555)
reify(w-literal(actionTypes_00006,5), aux556)
reify(w-literal(actionTypes_00006,5), aux557)
reify(w-literal(actionTypes_00006,5), aux558)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux84, aux559)
reify(w-literal(actionTypes_00006,5), aux560)
reify(w-literal(actionTypes_00006,5), aux561)
reify(w-literal(actionTypes_00006,5), aux562)
reify(w-literal(actionTypes_00006,5), aux563)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux113, aux564)
reify(w-literal(actionTypes_00006,5), aux565)
reify(w-literal(actionTypes_00007,5), aux566)
reify(w-literal(actionTypes_00007,5), aux567)
reify(w-literal(actionTypes_00007,5), aux568)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux83, aux569)
reify(w-literal(actionTypes_00007,5), aux570)
reify(w-literal(actionTypes_00007,5), aux571)
reify(w-literal(actionTypes_00007,5), aux572)
reify(w-literal(actionTypes_00007,5), aux573)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux114, aux574)
reify(w-literal(actionTypes_00007,5), aux575)
reify(w-literal(actionTypes_00008,5), aux576)
reify(w-literal(actionTypes_00008,5), aux577)
reify(w-literal(actionTypes_00008,5), aux578)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux86, aux579)
reify(w-literal(actionTypes_00008,5), aux580)
reify(w-literal(actionTypes_00008,5), aux581)
reify(w-literal(actionTypes_00008,5), aux582)
reify(w-literal(actionTypes_00008,5), aux583)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux98, aux584)
reify(w-literal(actionTypes_00008,5), aux585)
reify(w-literal(actionTypes_00009,5), aux586)
reify(w-literal(actionTypes_00009,5), aux587)
reify(w-literal(actionTypes_00009,5), aux588)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux85, aux589)
reify(w-literal(actionTypes_00009,5), aux590)
reify(w-literal(actionTypes_00009,5), aux591)
reify(w-literal(actionTypes_00009,5), aux592)
reify(w-literal(actionTypes_00009,5), aux593)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux96, aux594)
reify(w-literal(actionTypes_00009,5), aux595)
reify(w-literal(actionTypes_00010,5), aux596)
reify(w-literal(actionTypes_00010,5), aux597)
reify(w-literal(actionTypes_00010,5), aux598)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux91, aux599)
reify(w-literal(actionTypes_00010,5), aux600)
reify(w-literal(actionTypes_00010,5), aux601)
reify(w-literal(actionTypes_00010,5), aux602)
reify(w-literal(actionTypes_00010,5), aux603)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux97, aux604)
reify(w-literal(actionTypes_00010,5), aux605)
reify(w-literal(actionTypes_00011,5), aux606)
reify(w-literal(actionTypes_00011,5), aux607)
reify(w-literal(actionTypes_00011,5), aux608)
watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux93, aux609)
reify(w-literal(actionTypes_00011,5), aux610)
reify(w-literal(actionTypes_00011,5), aux611)
reify(w-literal(actionTypes_00011,5), aux612)
reify(w-literal(actionTypes_00011,5), aux613)
watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux81, aux614)
reify(w-literal(actionTypes_00011,5), aux615)
reify(w-literal(actionTypes_00012,5), aux616)
reify(w-literal(actionTypes_00012,5), aux617)
reify(w-literal(actionTypes_00012,5), aux618)
watchelement_undefzero([statePlaces_00002_00011, statePlaces_00003_00011], aux92, aux619)
reify(w-literal(actionTypes_00012,5), aux620)
reify(w-literal(actionTypes_00012,5), aux621)
reify(w-literal(actionTypes_00012,5), aux622)
reify(w-literal(actionTypes_00012,5), aux623)
watchelement_undefzero([statePlaces_00002_00011, statePlaces_00003_00011], aux78, aux624)
reify(w-literal(actionTypes_00012,5), aux625)
reify(w-literal(actionTypes_00013,5), aux626)
reify(w-literal(actionTypes_00013,5), aux627)
reify(w-literal(actionTypes_00013,5), aux628)
watchelement_undefzero([statePlaces_00002_00012, statePlaces_00003_00012], aux95, aux629)
reify(w-literal(actionTypes_00013,5), aux630)
reify(w-literal(actionTypes_00013,5), aux631)
reify(w-literal(actionTypes_00013,5), aux632)
reify(w-literal(actionTypes_00013,5), aux633)
watchelement_undefzero([statePlaces_00002_00012, statePlaces_00003_00012], aux80, aux634)
reify(w-literal(actionTypes_00013,5), aux635)
reify(w-literal(actionTypes_00014,5), aux636)
reify(w-literal(actionTypes_00014,5), aux637)
reify(w-literal(actionTypes_00014,5), aux638)
watchelement_undefzero([statePlaces_00002_00013, statePlaces_00003_00013], aux94, aux639)
reify(w-literal(actionTypes_00014,5), aux640)
reify(w-literal(actionTypes_00014,5), aux641)
reify(w-literal(actionTypes_00014,5), aux642)
reify(w-literal(actionTypes_00014,5), aux643)
watchelement_undefzero([statePlaces_00002_00013, statePlaces_00003_00013], aux115, aux644)
reify(w-literal(actionTypes_00014,5), aux645)
reify(watchelement_undefzero([statePlaces_00002_00014, statePlaces_00003_00014], aux94, aux71), aux52)
reify(watchelement_undefzero([statePlaces_00002_00013, statePlaces_00003_00013], aux95, aux75), aux53)
reify(watchelement_undefzero([statePlaces_00002_00012, statePlaces_00003_00012], aux92, aux65), aux54)
reify(watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux91, aux73), aux55)
reify(watchelement_undefzero([statePlaces_00002_00011, statePlaces_00003_00011], aux93, aux69), aux56)
reify(watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux85, aux72), aux57)
reify(watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux87, aux68), aux58)
reify(watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux90, aux77), aux59)
reify(watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux88, aux66), aux60)
reify(watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux83, aux67), aux61)
reify(watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux86, aux76), aux62)
reify(watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux89, aux74), aux63)
reify(watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux84, aux70), aux64)
watchelement_undefzero([statePlaces_00002_00012, statePlaces_00003_00012], aux78, aux65)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux116, aux66)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux114, aux67)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux112, aux68)
watchelement_undefzero([statePlaces_00002_00011, statePlaces_00003_00011], aux81, aux69)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux113, aux70)
watchelement_undefzero([statePlaces_00002_00014, statePlaces_00003_00014], aux115, aux71)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux96, aux72)
watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux97, aux73)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux79, aux74)
watchelement_undefzero([statePlaces_00002_00013, statePlaces_00003_00013], aux80, aux75)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux98, aux76)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux82, aux77)
reify(w-inintervalset(actionTo_00002,[2,3]), aux99)
reify(w-inintervalset(actionTo_00003,[2,3]), aux100)
reify(w-inintervalset(actionTo_00004,[2,3]), aux101)
reify(w-inintervalset(actionTo_00005,[2,3]), aux102)
reify(w-inintervalset(actionTo_00006,[2,3]), aux103)
reify(w-inintervalset(actionTo_00007,[2,3]), aux104)
reify(w-inintervalset(actionTo_00008,[2,3]), aux105)
reify(w-inintervalset(actionTo_00009,[2,3]), aux106)
reify(w-inintervalset(actionTo_00010,[2,3]), aux107)
reify(w-inintervalset(actionTo_00011,[2,3]), aux108)
reify(w-inintervalset(actionTo_00012,[2,3]), aux109)
reify(w-inintervalset(actionTo_00013,[2,3]), aux110)
reify(w-inintervalset(actionTo_00014,[2,3]), aux111)
reify(w-inintervalset(actionFrom_00005,[2,3]), aux117)
reify(w-inintervalset(actionFrom_00006,[2,3]), aux118)
reify(w-inintervalset(actionFrom_00003,[2,3]), aux119)
reify(w-inintervalset(actionFrom_00004,[2,3]), aux120)
reify(w-inintervalset(actionFrom_00007,[2,3]), aux121)
reify(w-inintervalset(actionFrom_00008,[2,3]), aux122)
reify(w-inintervalset(actionFrom_00009,[2,3]), aux123)
reify(w-inintervalset(actionFrom_00010,[2,3]), aux124)
reify(w-inintervalset(actionFrom_00011,[2,3]), aux125)
reify(w-inintervalset(actionFrom_00014,[2,3]), aux126)
reify(w-inintervalset(actionFrom_00012,[2,3]), aux127)
reify(w-inintervalset(actionFrom_00013,[2,3]), aux128)
reify(w-inintervalset(actionFrom_00002,[2,3]), aux129)
watched-or({lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([pointers_00000_00013, pointers_00001_00013],[pointers_00000_00014, 3])})
watched-or({ineq(statePlaces_00002_00002, 4, -1),lexless([1, 0],[pointers_00000_00002, pointers_00001_00002]),lexless([4, -1],[statePlaces_00002_00002, statePlaces_00003_00002])})
watched-or({ineq(statePlaces_00002_00003, 4, -1),lexless([1, 0],[pointers_00000_00003, pointers_00001_00003]),lexless([4, -1],[statePlaces_00002_00003, statePlaces_00003_00003])})
watched-or({ineq(statePlaces_00002_00004, 4, -1),lexless([1, 0],[pointers_00000_00004, pointers_00001_00004]),lexless([4, -1],[statePlaces_00002_00004, statePlaces_00003_00004])})
watched-or({ineq(statePlaces_00002_00005, 4, -1),lexless([1, 0],[pointers_00000_00005, pointers_00001_00005]),lexless([4, -1],[statePlaces_00002_00005, statePlaces_00003_00005])})
watched-or({ineq(statePlaces_00002_00006, 4, -1),lexless([1, 0],[pointers_00000_00006, pointers_00001_00006]),lexless([4, -1],[statePlaces_00002_00006, statePlaces_00003_00006])})
watched-or({ineq(statePlaces_00002_00007, 4, -1),lexless([1, 0],[pointers_00000_00007, pointers_00001_00007]),lexless([4, -1],[statePlaces_00002_00007, statePlaces_00003_00007])})
watched-or({ineq(statePlaces_00002_00008, 4, -1),lexless([1, 0],[pointers_00000_00008, pointers_00001_00008]),lexless([4, -1],[statePlaces_00002_00008, statePlaces_00003_00008])})
watched-or({ineq(statePlaces_00002_00009, 4, -1),lexless([1, 0],[pointers_00000_00009, pointers_00001_00009]),lexless([4, -1],[statePlaces_00002_00009, statePlaces_00003_00009])})
watched-or({ineq(statePlaces_00002_00010, 4, -1),lexless([1, 0],[pointers_00000_00010, pointers_00001_00010]),lexless([4, -1],[statePlaces_00002_00010, statePlaces_00003_00010])})
watched-or({ineq(statePlaces_00002_00011, 4, -1),lexless([1, 0],[pointers_00000_00011, pointers_00001_00011]),lexless([4, -1],[statePlaces_00002_00011, statePlaces_00003_00011])})
watched-or({ineq(statePlaces_00002_00012, 4, -1),lexless([1, 0],[pointers_00000_00012, pointers_00001_00012]),lexless([4, -1],[statePlaces_00002_00012, statePlaces_00003_00012])})
watched-or({ineq(statePlaces_00002_00013, 4, -1),lexless([1, 0],[pointers_00000_00013, pointers_00001_00013]),lexless([4, -1],[statePlaces_00002_00013, statePlaces_00003_00013])})
watched-or({ineq(statePlaces_00002_00014, 4, -1),lexless([1, 0],[pointers_00000_00014, 3]),lexless([4, -1],[statePlaces_00002_00014, statePlaces_00003_00014])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00003, pointers_00001_00003])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00004, pointers_00001_00004])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00014, 3])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00004, pointers_00001_00004])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00014, 3])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00014, 3])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00014, 3])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00014, 3])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00014, 3])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00014, 3])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00014, 3])})
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00014, 3])})
watched-or({lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([pointers_00000_00011, pointers_00001_00011],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([pointers_00000_00011, pointers_00001_00011],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([pointers_00000_00011, pointers_00001_00011],[pointers_00000_00014, 3])})
watched-or({lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([pointers_00000_00012, pointers_00001_00012],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([pointers_00000_00012, pointers_00001_00012],[pointers_00000_00014, 3])})
reifyimply(w-literal(pointers_00000_00002,1), aux130)
reifyimply(gaceq(pointers_00000_00002,pointers_00000_00003), aux131)
reifyimply(gaceq(pointers_00000_00003,pointers_00000_00004), aux132)
reifyimply(gaceq(pointers_00000_00004,pointers_00000_00005), aux133)
reifyimply(gaceq(pointers_00000_00005,pointers_00000_00006), aux134)
reifyimply(gaceq(pointers_00000_00006,pointers_00000_00007), aux135)
reifyimply(gaceq(pointers_00000_00007,pointers_00000_00008), aux136)
reifyimply(gaceq(pointers_00000_00008,pointers_00000_00009), aux137)
reifyimply(gaceq(pointers_00000_00009,pointers_00000_00010), aux138)
reifyimply(gaceq(pointers_00000_00010,pointers_00000_00011), aux139)
reifyimply(gaceq(pointers_00000_00011,pointers_00000_00012), aux140)
reifyimply(gaceq(pointers_00000_00012,pointers_00000_00013), aux141)
reifyimply(gaceq(pointers_00000_00013,pointers_00000_00014), aux142)
reifyimply(w-literal(pointers_00001_00002,0), aux143)
reifyimply(gaceq(pointers_00001_00002,pointers_00001_00003), aux144)
reifyimply(gaceq(pointers_00001_00003,pointers_00001_00004), aux145)
reifyimply(gaceq(pointers_00001_00004,pointers_00001_00005), aux146)
reifyimply(gaceq(pointers_00001_00005,pointers_00001_00006), aux147)
reifyimply(gaceq(pointers_00001_00006,pointers_00001_00007), aux148)
reifyimply(gaceq(pointers_00001_00007,pointers_00001_00008), aux149)
reifyimply(gaceq(pointers_00001_00008,pointers_00001_00009), aux150)
reifyimply(gaceq(pointers_00001_00009,pointers_00001_00010), aux151)
reifyimply(gaceq(pointers_00001_00010,pointers_00001_00011), aux152)
reifyimply(gaceq(pointers_00001_00011,pointers_00001_00012), aux153)
reifyimply(gaceq(pointers_00001_00012,pointers_00001_00013), aux154)
reifyimply(w-literal(pointers_00001_00013,3), aux155)
reifyimply(w-literal(statePlaces_00003_00002,-1), aux156)
reifyimply(gaceq(statePlaces_00003_00002,statePlaces_00003_00003), aux157)
reifyimply(gaceq(statePlaces_00003_00003,statePlaces_00003_00004), aux158)
reifyimply(gaceq(statePlaces_00003_00004,statePlaces_00003_00005), aux159)
reifyimply(gaceq(statePlaces_00003_00005,statePlaces_00003_00006), aux160)
reifyimply(gaceq(statePlaces_00003_00006,statePlaces_00003_00007), aux161)
reifyimply(gaceq(statePlaces_00003_00007,statePlaces_00003_00008), aux162)
reifyimply(gaceq(statePlaces_00003_00008,statePlaces_00003_00009), aux163)
reifyimply(gaceq(statePlaces_00003_00009,statePlaces_00003_00010), aux164)
reifyimply(gaceq(statePlaces_00003_00010,statePlaces_00003_00011), aux165)
reifyimply(gaceq(statePlaces_00003_00011,statePlaces_00003_00012), aux166)
reifyimply(gaceq(statePlaces_00003_00012,statePlaces_00003_00013), aux167)
reifyimply(gaceq(statePlaces_00003_00013,statePlaces_00003_00014), aux168)
reifyimply(w-literal(statePlaces_00002_00002,4), aux169)
reifyimply(gaceq(statePlaces_00002_00002,statePlaces_00002_00003), aux170)
reifyimply(gaceq(statePlaces_00002_00003,statePlaces_00002_00004), aux171)
reifyimply(gaceq(statePlaces_00002_00004,statePlaces_00002_00005), aux172)
reifyimply(gaceq(statePlaces_00002_00005,statePlaces_00002_00006), aux173)
reifyimply(gaceq(statePlaces_00002_00006,statePlaces_00002_00007), aux174)
reifyimply(gaceq(statePlaces_00002_00007,statePlaces_00002_00008), aux175)
reifyimply(gaceq(statePlaces_00002_00008,statePlaces_00002_00009), aux176)
reifyimply(gaceq(statePlaces_00002_00009,statePlaces_00002_00010), aux177)
reifyimply(gaceq(statePlaces_00002_00010,statePlaces_00002_00011), aux178)
reifyimply(gaceq(statePlaces_00002_00011,statePlaces_00002_00012), aux179)
reifyimply(gaceq(statePlaces_00002_00012,statePlaces_00002_00013), aux180)
reifyimply(gaceq(statePlaces_00002_00013,statePlaces_00002_00014), aux181)
reifyimply(w-literal(pointers_00000_00002,2), aux182)
reifyimply(w-literal(actionFrom_00002,0), aux183)
reifyimply(w-literal(actionTo_00002,2), aux184)
reifyimply(w-inintervalset(pointers_00000_00002,[1,3]), aux185)
reifyimply(watchelement_undefzero([4, 8, 5], aux187, statePlaces_00002_00002), aux186)
reifyimply(w-literal(actionFrom_00003,0), aux189)
reifyimply(w-literal(actionTo_00003,2), aux190)
reifyimply(w-inintervalset(pointers_00000_00003,[1,3]), aux191)
reifyimply(watchelement_undefzero([4, 8, 5], aux193, statePlaces_00002_00003), aux192)
reifyimply(w-literal(actionFrom_00004,0), aux195)
reifyimply(w-literal(actionTo_00004,2), aux196)
reifyimply(w-inintervalset(pointers_00000_00004,[1,3]), aux197)
reifyimply(watchelement_undefzero([4, 8, 5], aux199, statePlaces_00002_00004), aux198)
reifyimply(w-literal(actionFrom_00005,0), aux201)
reifyimply(w-literal(actionTo_00005,2), aux202)
reifyimply(w-inintervalset(pointers_00000_00005,[1,3]), aux203)
reifyimply(watchelement_undefzero([4, 8, 5], aux205, statePlaces_00002_00005), aux204)
reifyimply(w-literal(actionFrom_00006,0), aux207)
reifyimply(w-literal(actionTo_00006,2), aux208)
reifyimply(w-inintervalset(pointers_00000_00006,[1,3]), aux209)
reifyimply(watchelement_undefzero([4, 8, 5], aux211, statePlaces_00002_00006), aux210)
reifyimply(w-literal(actionFrom_00007,0), aux213)
reifyimply(w-literal(actionTo_00007,2), aux214)
reifyimply(w-inintervalset(pointers_00000_00007,[1,3]), aux215)
reifyimply(watchelement_undefzero([4, 8, 5], aux217, statePlaces_00002_00007), aux216)
reifyimply(w-literal(actionFrom_00008,0), aux219)
reifyimply(w-literal(actionTo_00008,2), aux220)
reifyimply(w-inintervalset(pointers_00000_00008,[1,3]), aux221)
reifyimply(watchelement_undefzero([4, 8, 5], aux223, statePlaces_00002_00008), aux222)
reifyimply(w-literal(actionFrom_00009,0), aux225)
reifyimply(w-literal(actionTo_00009,2), aux226)
reifyimply(w-inintervalset(pointers_00000_00009,[1,3]), aux227)
reifyimply(watchelement_undefzero([4, 8, 5], aux229, statePlaces_00002_00009), aux228)
reifyimply(w-literal(actionFrom_00010,0), aux231)
reifyimply(w-literal(actionTo_00010,2), aux232)
reifyimply(w-inintervalset(pointers_00000_00010,[1,3]), aux233)
reifyimply(watchelement_undefzero([4, 8, 5], aux235, statePlaces_00002_00010), aux234)
reifyimply(w-literal(actionFrom_00011,0), aux237)
reifyimply(w-literal(actionTo_00011,2), aux238)
reifyimply(w-inintervalset(pointers_00000_00011,[1,3]), aux239)
reifyimply(watchelement_undefzero([4, 8, 5], aux241, statePlaces_00002_00011), aux240)
reifyimply(w-literal(actionFrom_00012,0), aux243)
reifyimply(w-literal(actionTo_00012,2), aux244)
reifyimply(w-inintervalset(pointers_00000_00012,[1,3]), aux245)
reifyimply(watchelement_undefzero([4, 8, 5], aux247, statePlaces_00002_00012), aux246)
reifyimply(w-literal(actionFrom_00013,0), aux249)
reifyimply(w-literal(actionTo_00013,2), aux250)
reifyimply(w-inintervalset(pointers_00000_00013,[1,3]), aux251)
reifyimply(watchelement_undefzero([4, 8, 5], aux253, statePlaces_00002_00013), aux252)
reifyimply(w-literal(actionFrom_00014,0), aux255)
reifyimply(w-literal(actionTo_00014,2), aux256)
reifyimply(w-inintervalset(pointers_00000_00014,[1,3]), aux257)
reifyimply(watchelement_undefzero([4, 8, 5], aux259, statePlaces_00002_00014), aux258)
reifyimply(diseq(statePlaces_00002_00002,-1), aux260)
reifyimply(w-literal(pointers_00001_00002,1), aux261)
reifyimply(w-literal(actionFrom_00002,2), aux262)
reifyimply(w-literal(actionTo_00002,1), aux263)
reifyimply(w-inintervalset(pointers_00001_00002,[1,3]), aux264)
reifyimply(watchelement_undefzero([12, 24, 15], aux266, 4), aux265)
reifyimply(diseq(statePlaces_00002_00003,-1), aux267)
reifyimply(diseq(statePlaces_00002_00002,-1), aux268)
reifyimply(w-literal(actionFrom_00003,2), aux270)
reifyimply(w-literal(actionTo_00003,1), aux271)
reifyimply(w-inintervalset(pointers_00001_00003,[1,3]), aux272)
reifyimply(watchelement_undefzero([12, 24, 15], aux274, statePlaces_00002_00002), aux273)
reifyimply(diseq(statePlaces_00002_00004,-1), aux275)
reifyimply(diseq(statePlaces_00002_00003,-1), aux276)
reifyimply(w-literal(actionFrom_00004,2), aux278)
reifyimply(w-literal(actionTo_00004,1), aux279)
reifyimply(w-inintervalset(pointers_00001_00004,[1,3]), aux280)
reifyimply(watchelement_undefzero([12, 24, 15], aux282, statePlaces_00002_00003), aux281)
reifyimply(diseq(statePlaces_00002_00005,-1), aux283)
reifyimply(diseq(statePlaces_00002_00004,-1), aux284)
reifyimply(w-literal(actionFrom_00005,2), aux286)
reifyimply(w-literal(actionTo_00005,1), aux287)
reifyimply(w-inintervalset(pointers_00001_00005,[1,3]), aux288)
reifyimply(watchelement_undefzero([12, 24, 15], aux290, statePlaces_00002_00004), aux289)
reifyimply(diseq(statePlaces_00002_00006,-1), aux291)
reifyimply(diseq(statePlaces_00002_00005,-1), aux292)
reifyimply(w-literal(actionFrom_00006,2), aux294)
reifyimply(w-literal(actionTo_00006,1), aux295)
reifyimply(w-inintervalset(pointers_00001_00006,[1,3]), aux296)
reifyimply(watchelement_undefzero([12, 24, 15], aux298, statePlaces_00002_00005), aux297)
reifyimply(diseq(statePlaces_00002_00007,-1), aux299)
reifyimply(diseq(statePlaces_00002_00006,-1), aux300)
reifyimply(w-literal(actionFrom_00007,2), aux302)
reifyimply(w-literal(actionTo_00007,1), aux303)
reifyimply(w-inintervalset(pointers_00001_00007,[1,3]), aux304)
reifyimply(watchelement_undefzero([12, 24, 15], aux306, statePlaces_00002_00006), aux305)
reifyimply(diseq(statePlaces_00002_00008,-1), aux307)
reifyimply(diseq(statePlaces_00002_00007,-1), aux308)
reifyimply(w-literal(actionFrom_00008,2), aux310)
reifyimply(w-literal(actionTo_00008,1), aux311)
reifyimply(w-inintervalset(pointers_00001_00008,[1,3]), aux312)
reifyimply(watchelement_undefzero([12, 24, 15], aux314, statePlaces_00002_00007), aux313)
reifyimply(diseq(statePlaces_00002_00009,-1), aux315)
reifyimply(diseq(statePlaces_00002_00008,-1), aux316)
reifyimply(w-literal(actionFrom_00009,2), aux318)
reifyimply(w-literal(actionTo_00009,1), aux319)
reifyimply(w-inintervalset(pointers_00001_00009,[1,3]), aux320)
reifyimply(watchelement_undefzero([12, 24, 15], aux322, statePlaces_00002_00008), aux321)
reifyimply(diseq(statePlaces_00002_00010,-1), aux323)
reifyimply(diseq(statePlaces_00002_00009,-1), aux324)
reifyimply(w-literal(actionFrom_00010,2), aux326)
reifyimply(w-literal(actionTo_00010,1), aux327)
reifyimply(w-inintervalset(pointers_00001_00010,[1,3]), aux328)
reifyimply(watchelement_undefzero([12, 24, 15], aux330, statePlaces_00002_00009), aux329)
reifyimply(diseq(statePlaces_00002_00011,-1), aux331)
reifyimply(diseq(statePlaces_00002_00010,-1), aux332)
reifyimply(w-literal(actionFrom_00011,2), aux334)
reifyimply(w-literal(actionTo_00011,1), aux335)
reifyimply(w-inintervalset(pointers_00001_00011,[1,3]), aux336)
reifyimply(watchelement_undefzero([12, 24, 15], aux338, statePlaces_00002_00010), aux337)
reifyimply(diseq(statePlaces_00002_00012,-1), aux339)
reifyimply(diseq(statePlaces_00002_00011,-1), aux340)
reifyimply(w-literal(actionFrom_00012,2), aux342)
reifyimply(w-literal(actionTo_00012,1), aux343)
reifyimply(w-inintervalset(pointers_00001_00012,[1,3]), aux344)
reifyimply(watchelement_undefzero([12, 24, 15], aux346, statePlaces_00002_00011), aux345)
reifyimply(diseq(statePlaces_00002_00013,-1), aux347)
reifyimply(diseq(statePlaces_00002_00012,-1), aux348)
reifyimply(w-literal(actionFrom_00013,2), aux350)
reifyimply(w-literal(actionTo_00013,1), aux351)
reifyimply(w-inintervalset(pointers_00001_00013,[1,3]), aux352)
reifyimply(watchelement_undefzero([12, 24, 15], aux354, statePlaces_00002_00012), aux353)
reifyimply(diseq(statePlaces_00002_00014,-1), aux355)
reifyimply(diseq(statePlaces_00002_00013,-1), aux356)
reifyimply(w-literal(pointers_00001_00013,2), aux357)
reifyimply(w-literal(actionFrom_00014,2), aux358)
reifyimply(w-literal(actionTo_00014,1), aux359)
reifyimply(w-literal(statePlaces_00002_00013,15), aux360)
ineq(aux361, aux60, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux362)
reifyimply(diseq(aux66,-1), aux363)
reifyimply(w-literal(actionTo_00002,2), aux364)
ineq(aux365, aux99, 0)
ineq(aux366, aux129, 0)
ineq(aux367, aux58, 0)
reifyimply(ineq(3, actionFrom_00003, 0), aux368)
reifyimply(diseq(aux68,-1), aux369)
reifyimply(w-literal(actionTo_00003,2), aux370)
ineq(aux371, aux100, 0)
ineq(aux372, aux119, 0)
ineq(aux373, aux59, 0)
reifyimply(ineq(3, actionFrom_00004, 0), aux374)
reifyimply(diseq(aux77,-1), aux375)
reifyimply(w-literal(actionTo_00004,2), aux376)
ineq(aux377, aux101, 0)
ineq(aux378, aux120, 0)
ineq(aux379, aux63, 0)
reifyimply(ineq(3, actionFrom_00005, 0), aux380)
reifyimply(diseq(aux74,-1), aux381)
reifyimply(w-literal(actionTo_00005,2), aux382)
ineq(aux383, aux102, 0)
ineq(aux384, aux117, 0)
ineq(aux385, aux64, 0)
reifyimply(ineq(3, actionFrom_00006, 0), aux386)
reifyimply(diseq(aux70,-1), aux387)
reifyimply(w-literal(actionTo_00006,2), aux388)
ineq(aux389, aux103, 0)
ineq(aux390, aux118, 0)
ineq(aux391, aux61, 0)
reifyimply(ineq(3, actionFrom_00007, 0), aux392)
reifyimply(diseq(aux67,-1), aux393)
reifyimply(w-literal(actionTo_00007,2), aux394)
ineq(aux395, aux104, 0)
ineq(aux396, aux121, 0)
ineq(aux397, aux62, 0)
reifyimply(ineq(3, actionFrom_00008, 0), aux398)
reifyimply(diseq(aux76,-1), aux399)
reifyimply(w-literal(actionTo_00008,2), aux400)
ineq(aux401, aux105, 0)
ineq(aux402, aux122, 0)
ineq(aux403, aux57, 0)
reifyimply(ineq(3, actionFrom_00009, 0), aux404)
reifyimply(diseq(aux72,-1), aux405)
reifyimply(w-literal(actionTo_00009,2), aux406)
ineq(aux407, aux106, 0)
ineq(aux408, aux123, 0)
ineq(aux409, aux55, 0)
reifyimply(ineq(3, actionFrom_00010, 0), aux410)
reifyimply(diseq(aux73,-1), aux411)
reifyimply(w-literal(actionTo_00010,2), aux412)
ineq(aux413, aux107, 0)
ineq(aux414, aux124, 0)
ineq(aux415, aux56, 0)
reifyimply(ineq(3, actionFrom_00011, 0), aux416)
reifyimply(diseq(aux69,-1), aux417)
reifyimply(w-literal(actionTo_00011,2), aux418)
ineq(aux419, aux108, 0)
ineq(aux420, aux125, 0)
ineq(aux421, aux54, 0)
reifyimply(ineq(3, actionFrom_00012, 0), aux422)
reifyimply(diseq(aux65,-1), aux423)
reifyimply(w-literal(actionTo_00012,2), aux424)
ineq(aux425, aux109, 0)
ineq(aux426, aux127, 0)
ineq(aux427, aux53, 0)
reifyimply(ineq(3, actionFrom_00013, 0), aux428)
reifyimply(diseq(aux75,-1), aux429)
reifyimply(w-literal(actionTo_00013,2), aux430)
ineq(aux431, aux110, 0)
ineq(aux432, aux128, 0)
ineq(aux433, aux52, 0)
reifyimply(ineq(3, actionFrom_00014, 0), aux434)
reifyimply(diseq(aux71,-1), aux435)
reifyimply(w-literal(actionTo_00014,2), aux436)
ineq(aux437, aux111, 0)
ineq(aux438, aux126, 0)
reifyimply(ineq(3, actionTo_00002, 0), aux439)
reifyimply(w-literal(actionFrom_00002,2), aux440)
ineq(aux441, aux129, 0)
ineq(aux442, aux99, 0)
ineq(aux443, aux60, 0)
reifyimply(ineq(3, actionTo_00003, 0), aux444)
reifyimply(w-literal(actionFrom_00003,2), aux445)
reifyimply(diseq(statePlaces_00002_00002,-1), aux446)
ineq(aux447, aux119, 0)
ineq(aux448, aux100, 0)
ineq(aux449, aux58, 0)
reifyimply(ineq(3, actionTo_00004, 0), aux450)
reifyimply(w-literal(actionFrom_00004,2), aux451)
reifyimply(diseq(statePlaces_00002_00003,-1), aux452)
ineq(aux453, aux120, 0)
ineq(aux454, aux101, 0)
ineq(aux455, aux59, 0)
reifyimply(ineq(3, actionTo_00005, 0), aux456)
reifyimply(w-literal(actionFrom_00005,2), aux457)
reifyimply(diseq(statePlaces_00002_00004,-1), aux458)
ineq(aux459, aux117, 0)
ineq(aux460, aux102, 0)
ineq(aux461, aux63, 0)
reifyimply(ineq(3, actionTo_00006, 0), aux462)
reifyimply(w-literal(actionFrom_00006,2), aux463)
reifyimply(diseq(statePlaces_00002_00005,-1), aux464)
ineq(aux465, aux118, 0)
ineq(aux466, aux103, 0)
ineq(aux467, aux64, 0)
reifyimply(ineq(3, actionTo_00007, 0), aux468)
reifyimply(w-literal(actionFrom_00007,2), aux469)
reifyimply(diseq(statePlaces_00002_00006,-1), aux470)
ineq(aux471, aux121, 0)
ineq(aux472, aux104, 0)
ineq(aux473, aux61, 0)
reifyimply(ineq(3, actionTo_00008, 0), aux474)
reifyimply(w-literal(actionFrom_00008,2), aux475)
reifyimply(diseq(statePlaces_00002_00007,-1), aux476)
ineq(aux477, aux122, 0)
ineq(aux478, aux105, 0)
ineq(aux479, aux62, 0)
reifyimply(ineq(3, actionTo_00009, 0), aux480)
reifyimply(w-literal(actionFrom_00009,2), aux481)
reifyimply(diseq(statePlaces_00002_00008,-1), aux482)
ineq(aux483, aux123, 0)
ineq(aux484, aux106, 0)
ineq(aux485, aux57, 0)
reifyimply(ineq(3, actionTo_00010, 0), aux486)
reifyimply(w-literal(actionFrom_00010,2), aux487)
reifyimply(diseq(statePlaces_00002_00009,-1), aux488)
ineq(aux489, aux124, 0)
ineq(aux490, aux107, 0)
ineq(aux491, aux55, 0)
reifyimply(ineq(3, actionTo_00011, 0), aux492)
reifyimply(w-literal(actionFrom_00011,2), aux493)
reifyimply(diseq(statePlaces_00002_00010,-1), aux494)
ineq(aux495, aux125, 0)
ineq(aux496, aux108, 0)
ineq(aux497, aux56, 0)
reifyimply(ineq(3, actionTo_00012, 0), aux498)
reifyimply(w-literal(actionFrom_00012,2), aux499)
reifyimply(diseq(statePlaces_00002_00011,-1), aux500)
ineq(aux501, aux127, 0)
ineq(aux502, aux109, 0)
ineq(aux503, aux54, 0)
reifyimply(ineq(3, actionTo_00013, 0), aux504)
reifyimply(w-literal(actionFrom_00013,2), aux505)
reifyimply(diseq(statePlaces_00002_00012,-1), aux506)
ineq(aux507, aux128, 0)
ineq(aux508, aux110, 0)
ineq(aux509, aux53, 0)
reifyimply(ineq(3, actionTo_00014, 0), aux510)
reifyimply(w-literal(actionFrom_00014,2), aux511)
reifyimply(diseq(statePlaces_00002_00013,-1), aux512)
ineq(aux513, aux126, 0)
ineq(aux514, aux111, 0)
ineq(aux515, aux52, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux516)
reifyimply(diseq(aux66,-1), aux517)
reifyimply(diseq(aux519,-1), aux518)
reifyimply(w-literal(actionTo_00002,2), aux520)
ineq(aux521, aux99, 0)
ineq(aux522, aux129, 0)
reifyimply(diseq(aux524,-1), aux523)
reifyimply(ineq(3, actionFrom_00003, 0), aux526)
reifyimply(diseq(aux68,-1), aux527)
reifyimply(diseq(aux529,-1), aux528)
reifyimply(w-literal(actionTo_00003,2), aux530)
ineq(aux531, aux100, 0)
ineq(aux532, aux119, 0)
reifyimply(diseq(aux534,-1), aux533)
reifyimply(ineq(3, actionFrom_00004, 0), aux536)
reifyimply(diseq(aux77,-1), aux537)
reifyimply(diseq(aux539,-1), aux538)
reifyimply(w-literal(actionTo_00004,2), aux540)
ineq(aux541, aux101, 0)
ineq(aux542, aux120, 0)
reifyimply(diseq(aux544,-1), aux543)
reifyimply(ineq(3, actionFrom_00005, 0), aux546)
reifyimply(diseq(aux74,-1), aux547)
reifyimply(diseq(aux549,-1), aux548)
reifyimply(w-literal(actionTo_00005,2), aux550)
ineq(aux551, aux102, 0)
ineq(aux552, aux117, 0)
reifyimply(diseq(aux554,-1), aux553)
reifyimply(ineq(3, actionFrom_00006, 0), aux556)
reifyimply(diseq(aux70,-1), aux557)
reifyimply(diseq(aux559,-1), aux558)
reifyimply(w-literal(actionTo_00006,2), aux560)
ineq(aux561, aux103, 0)
ineq(aux562, aux118, 0)
reifyimply(diseq(aux564,-1), aux563)
reifyimply(ineq(3, actionFrom_00007, 0), aux566)
reifyimply(diseq(aux67,-1), aux567)
reifyimply(diseq(aux569,-1), aux568)
reifyimply(w-literal(actionTo_00007,2), aux570)
ineq(aux571, aux104, 0)
ineq(aux572, aux121, 0)
reifyimply(diseq(aux574,-1), aux573)
reifyimply(ineq(3, actionFrom_00008, 0), aux576)
reifyimply(diseq(aux76,-1), aux577)
reifyimply(diseq(aux579,-1), aux578)
reifyimply(w-literal(actionTo_00008,2), aux580)
ineq(aux581, aux105, 0)
ineq(aux582, aux122, 0)
reifyimply(diseq(aux584,-1), aux583)
reifyimply(ineq(3, actionFrom_00009, 0), aux586)
reifyimply(diseq(aux72,-1), aux587)
reifyimply(diseq(aux589,-1), aux588)
reifyimply(w-literal(actionTo_00009,2), aux590)
ineq(aux591, aux106, 0)
ineq(aux592, aux123, 0)
reifyimply(diseq(aux594,-1), aux593)
reifyimply(ineq(3, actionFrom_00010, 0), aux596)
reifyimply(diseq(aux73,-1), aux597)
reifyimply(diseq(aux599,-1), aux598)
reifyimply(w-literal(actionTo_00010,2), aux600)
ineq(aux601, aux107, 0)
ineq(aux602, aux124, 0)
reifyimply(diseq(aux604,-1), aux603)
reifyimply(ineq(3, actionFrom_00011, 0), aux606)
reifyimply(diseq(aux69,-1), aux607)
reifyimply(diseq(aux609,-1), aux608)
reifyimply(w-literal(actionTo_00011,2), aux610)
ineq(aux611, aux108, 0)
ineq(aux612, aux125, 0)
reifyimply(diseq(aux614,-1), aux613)
reifyimply(ineq(3, actionFrom_00012, 0), aux616)
reifyimply(diseq(aux65,-1), aux617)
reifyimply(diseq(aux619,-1), aux618)
reifyimply(w-literal(actionTo_00012,2), aux620)
ineq(aux621, aux109, 0)
ineq(aux622, aux127, 0)
reifyimply(diseq(aux624,-1), aux623)
reifyimply(ineq(3, actionFrom_00013, 0), aux626)
reifyimply(diseq(aux75,-1), aux627)
reifyimply(diseq(aux629,-1), aux628)
reifyimply(w-literal(actionTo_00013,2), aux630)
ineq(aux631, aux110, 0)
ineq(aux632, aux128, 0)
reifyimply(diseq(aux634,-1), aux633)
reifyimply(ineq(3, actionFrom_00014, 0), aux636)
reifyimply(diseq(aux71,-1), aux637)
reifyimply(diseq(aux639,-1), aux638)
reifyimply(w-literal(actionTo_00014,2), aux640)
ineq(aux641, aux111, 0)
ineq(aux642, aux126, 0)
reifyimply(diseq(aux644,-1), aux643)
sumleq([pointers_00000_00002,-1],aux187)
sumgeq([pointers_00000_00002,-1],aux187)
sumleq([pointers_00000_00003,-1],aux193)
sumgeq([pointers_00000_00003,-1],aux193)
sumleq([pointers_00000_00004,-1],aux199)
sumgeq([pointers_00000_00004,-1],aux199)
sumleq([pointers_00000_00005,-1],aux205)
sumgeq([pointers_00000_00005,-1],aux205)
sumleq([pointers_00000_00006,-1],aux211)
sumgeq([pointers_00000_00006,-1],aux211)
sumleq([pointers_00000_00007,-1],aux217)
sumgeq([pointers_00000_00007,-1],aux217)
sumleq([pointers_00000_00008,-1],aux223)
sumgeq([pointers_00000_00008,-1],aux223)
sumleq([pointers_00000_00009,-1],aux229)
sumgeq([pointers_00000_00009,-1],aux229)
sumleq([pointers_00000_00010,-1],aux235)
sumgeq([pointers_00000_00010,-1],aux235)
sumleq([pointers_00000_00011,-1],aux241)
sumgeq([pointers_00000_00011,-1],aux241)
sumleq([pointers_00000_00012,-1],aux247)
sumgeq([pointers_00000_00012,-1],aux247)
sumleq([pointers_00000_00013,-1],aux253)
sumgeq([pointers_00000_00013,-1],aux253)
sumleq([pointers_00000_00014,-1],aux259)
sumgeq([pointers_00000_00014,-1],aux259)
sumleq([pointers_00001_00002,-1],aux266)
sumgeq([pointers_00001_00002,-1],aux266)
sumleq([pointers_00001_00003,-1],aux274)
sumgeq([pointers_00001_00003,-1],aux274)
sumleq([pointers_00001_00004,-1],aux282)
sumgeq([pointers_00001_00004,-1],aux282)
sumleq([pointers_00001_00005,-1],aux290)
sumgeq([pointers_00001_00005,-1],aux290)
sumleq([pointers_00001_00006,-1],aux298)
sumgeq([pointers_00001_00006,-1],aux298)
sumleq([pointers_00001_00007,-1],aux306)
sumgeq([pointers_00001_00007,-1],aux306)
sumleq([pointers_00001_00008,-1],aux314)
sumgeq([pointers_00001_00008,-1],aux314)
sumleq([pointers_00001_00009,-1],aux322)
sumgeq([pointers_00001_00009,-1],aux322)
sumleq([pointers_00001_00010,-1],aux330)
sumgeq([pointers_00001_00010,-1],aux330)
sumleq([pointers_00001_00011,-1],aux338)
sumgeq([pointers_00001_00011,-1],aux338)
sumleq([pointers_00001_00012,-1],aux346)
sumgeq([pointers_00001_00012,-1],aux346)
sumleq([pointers_00001_00013,-1],aux354)
sumgeq([pointers_00001_00013,-1],aux354)
sumleq([actionFrom_00012,-2],aux78)
sumgeq([actionFrom_00012,-2],aux78)
sumleq([actionFrom_00005,-2],aux79)
sumgeq([actionFrom_00005,-2],aux79)
sumleq([actionFrom_00013,-2],aux80)
sumgeq([actionFrom_00013,-2],aux80)
sumleq([actionFrom_00011,-2],aux81)
sumgeq([actionFrom_00011,-2],aux81)
sumleq([actionFrom_00004,-2],aux82)
sumgeq([actionFrom_00004,-2],aux82)
sumleq([actionTo_00007,-2],aux83)
sumgeq([actionTo_00007,-2],aux83)
sumleq([actionTo_00006,-2],aux84)
sumgeq([actionTo_00006,-2],aux84)
sumleq([actionTo_00009,-2],aux85)
sumgeq([actionTo_00009,-2],aux85)
sumleq([actionTo_00008,-2],aux86)
sumgeq([actionTo_00008,-2],aux86)
sumleq([actionTo_00003,-2],aux87)
sumgeq([actionTo_00003,-2],aux87)
sumleq([actionTo_00002,-2],aux88)
sumgeq([actionTo_00002,-2],aux88)
sumleq([actionTo_00005,-2],aux89)
sumgeq([actionTo_00005,-2],aux89)
sumleq([actionTo_00004,-2],aux90)
sumgeq([actionTo_00004,-2],aux90)
sumleq([actionTo_00010,-2],aux91)
sumgeq([actionTo_00010,-2],aux91)
sumleq([actionTo_00012,-2],aux92)
sumgeq([actionTo_00012,-2],aux92)
sumleq([actionTo_00011,-2],aux93)
sumgeq([actionTo_00011,-2],aux93)
sumleq([actionTo_00014,-2],aux94)
sumgeq([actionTo_00014,-2],aux94)
sumleq([actionTo_00013,-2],aux95)
sumgeq([actionTo_00013,-2],aux95)
sumleq([actionFrom_00009,-2],aux96)
sumgeq([actionFrom_00009,-2],aux96)
sumleq([actionFrom_00010,-2],aux97)
sumgeq([actionFrom_00010,-2],aux97)
sumleq([actionFrom_00008,-2],aux98)
sumgeq([actionFrom_00008,-2],aux98)
sumleq([actionFrom_00003,-2],aux112)
sumgeq([actionFrom_00003,-2],aux112)
sumleq([actionFrom_00006,-2],aux113)
sumgeq([actionFrom_00006,-2],aux113)
sumleq([actionFrom_00007,-2],aux114)
sumgeq([actionFrom_00007,-2],aux114)
sumleq([actionFrom_00014,-2],aux115)
sumgeq([actionFrom_00014,-2],aux115)
sumleq([actionFrom_00002,-2],aux116)
sumgeq([actionFrom_00002,-2],aux116)
reifyimply(sumleq([pointers_00000_00002,1],pointers_00000_00003), aux188)
reifyimply(sumgeq([pointers_00000_00002,1],pointers_00000_00003), aux188)
reifyimply(sumleq([pointers_00000_00003,1],pointers_00000_00004), aux194)
reifyimply(sumgeq([pointers_00000_00003,1],pointers_00000_00004), aux194)
reifyimply(sumleq([pointers_00000_00004,1],pointers_00000_00005), aux200)
reifyimply(sumgeq([pointers_00000_00004,1],pointers_00000_00005), aux200)
reifyimply(sumleq([pointers_00000_00005,1],pointers_00000_00006), aux206)
reifyimply(sumgeq([pointers_00000_00005,1],pointers_00000_00006), aux206)
reifyimply(sumleq([pointers_00000_00006,1],pointers_00000_00007), aux212)
reifyimply(sumgeq([pointers_00000_00006,1],pointers_00000_00007), aux212)
reifyimply(sumleq([pointers_00000_00007,1],pointers_00000_00008), aux218)
reifyimply(sumgeq([pointers_00000_00007,1],pointers_00000_00008), aux218)
reifyimply(sumleq([pointers_00000_00008,1],pointers_00000_00009), aux224)
reifyimply(sumgeq([pointers_00000_00008,1],pointers_00000_00009), aux224)
reifyimply(sumleq([pointers_00000_00009,1],pointers_00000_00010), aux230)
reifyimply(sumgeq([pointers_00000_00009,1],pointers_00000_00010), aux230)
reifyimply(sumleq([pointers_00000_00010,1],pointers_00000_00011), aux236)
reifyimply(sumgeq([pointers_00000_00010,1],pointers_00000_00011), aux236)
reifyimply(sumleq([pointers_00000_00011,1],pointers_00000_00012), aux242)
reifyimply(sumgeq([pointers_00000_00011,1],pointers_00000_00012), aux242)
reifyimply(sumleq([pointers_00000_00012,1],pointers_00000_00013), aux248)
reifyimply(sumgeq([pointers_00000_00012,1],pointers_00000_00013), aux248)
reifyimply(sumleq([pointers_00000_00013,1],pointers_00000_00014), aux254)
reifyimply(sumgeq([pointers_00000_00013,1],pointers_00000_00014), aux254)
reifyimply(sumleq([pointers_00001_00002,1],pointers_00001_00003), aux269)
reifyimply(sumgeq([pointers_00001_00002,1],pointers_00001_00003), aux269)
reifyimply(sumleq([pointers_00001_00003,1],pointers_00001_00004), aux277)
reifyimply(sumgeq([pointers_00001_00003,1],pointers_00001_00004), aux277)
reifyimply(sumleq([pointers_00001_00004,1],pointers_00001_00005), aux285)
reifyimply(sumgeq([pointers_00001_00004,1],pointers_00001_00005), aux285)
reifyimply(sumleq([pointers_00001_00005,1],pointers_00001_00006), aux293)
reifyimply(sumgeq([pointers_00001_00005,1],pointers_00001_00006), aux293)
reifyimply(sumleq([pointers_00001_00006,1],pointers_00001_00007), aux301)
reifyimply(sumgeq([pointers_00001_00006,1],pointers_00001_00007), aux301)
reifyimply(sumleq([pointers_00001_00007,1],pointers_00001_00008), aux309)
reifyimply(sumgeq([pointers_00001_00007,1],pointers_00001_00008), aux309)
reifyimply(sumleq([pointers_00001_00008,1],pointers_00001_00009), aux317)
reifyimply(sumgeq([pointers_00001_00008,1],pointers_00001_00009), aux317)
reifyimply(sumleq([pointers_00001_00009,1],pointers_00001_00010), aux325)
reifyimply(sumgeq([pointers_00001_00009,1],pointers_00001_00010), aux325)
reifyimply(sumleq([pointers_00001_00010,1],pointers_00001_00011), aux333)
reifyimply(sumgeq([pointers_00001_00010,1],pointers_00001_00011), aux333)
reifyimply(sumleq([pointers_00001_00011,1],pointers_00001_00012), aux341)
reifyimply(sumgeq([pointers_00001_00011,1],pointers_00001_00012), aux341)
reifyimply(sumleq([pointers_00001_00012,1],pointers_00001_00013), aux349)
reifyimply(sumgeq([pointers_00001_00012,1],pointers_00001_00013), aux349)
reifyimply(sumleq([4,aux66],statePlaces_00002_00002), aux525)
reifyimply(sumgeq([4,aux66],statePlaces_00002_00002), aux525)
reifyimply(sumleq([statePlaces_00002_00002,aux68],statePlaces_00002_00003), aux535)
reifyimply(sumgeq([statePlaces_00002_00002,aux68],statePlaces_00002_00003), aux535)
reifyimply(sumleq([statePlaces_00002_00003,aux77],statePlaces_00002_00004), aux545)
reifyimply(sumgeq([statePlaces_00002_00003,aux77],statePlaces_00002_00004), aux545)
reifyimply(sumleq([statePlaces_00002_00004,aux74],statePlaces_00002_00005), aux555)
reifyimply(sumgeq([statePlaces_00002_00004,aux74],statePlaces_00002_00005), aux555)
reifyimply(sumleq([statePlaces_00002_00005,aux70],statePlaces_00002_00006), aux565)
reifyimply(sumgeq([statePlaces_00002_00005,aux70],statePlaces_00002_00006), aux565)
reifyimply(sumleq([statePlaces_00002_00006,aux67],statePlaces_00002_00007), aux575)
reifyimply(sumgeq([statePlaces_00002_00006,aux67],statePlaces_00002_00007), aux575)
reifyimply(sumleq([statePlaces_00002_00007,aux76],statePlaces_00002_00008), aux585)
reifyimply(sumgeq([statePlaces_00002_00007,aux76],statePlaces_00002_00008), aux585)
reifyimply(sumleq([statePlaces_00002_00008,aux72],statePlaces_00002_00009), aux595)
reifyimply(sumgeq([statePlaces_00002_00008,aux72],statePlaces_00002_00009), aux595)
reifyimply(sumleq([statePlaces_00002_00009,aux73],statePlaces_00002_00010), aux605)
reifyimply(sumgeq([statePlaces_00002_00009,aux73],statePlaces_00002_00010), aux605)
reifyimply(sumleq([statePlaces_00002_00010,aux69],statePlaces_00002_00011), aux615)
reifyimply(sumgeq([statePlaces_00002_00010,aux69],statePlaces_00002_00011), aux615)
reifyimply(sumleq([statePlaces_00002_00011,aux65],statePlaces_00002_00012), aux625)
reifyimply(sumgeq([statePlaces_00002_00011,aux65],statePlaces_00002_00012), aux625)
reifyimply(sumleq([statePlaces_00002_00012,aux75],statePlaces_00002_00013), aux635)
reifyimply(sumgeq([statePlaces_00002_00012,aux75],statePlaces_00002_00013), aux635)
reifyimply(sumleq([statePlaces_00002_00013,aux71],statePlaces_00002_00014), aux645)
reifyimply(sumgeq([statePlaces_00002_00013,aux71],statePlaces_00002_00014), aux645)
**EOF**
