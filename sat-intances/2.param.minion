MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 54
# CSE_active_eliminated_expressions = 144
# CSE_active_total_size = 360
**VARIABLES**
DISCRETE statePlaces_00002_00002 #
{-1..100}
DISCRETE statePlaces_00002_00003 #
{-1..100}
DISCRETE statePlaces_00002_00004 #
{-1..100}
DISCRETE statePlaces_00002_00005 #
{-1..100}
DISCRETE statePlaces_00002_00006 #
{-1..100}
DISCRETE statePlaces_00002_00007 #
{-1..100}
DISCRETE statePlaces_00002_00008 #
{-1..100}
DISCRETE statePlaces_00002_00009 #
{-1..100}
DISCRETE statePlaces_00002_00010 #
{-1..100}
DISCRETE statePlaces_00003_00002 #
{-1..100}
DISCRETE statePlaces_00003_00003 #
{-1..100}
DISCRETE statePlaces_00003_00004 #
{-1..100}
DISCRETE statePlaces_00003_00005 #
{-1..100}
DISCRETE statePlaces_00003_00006 #
{-1..100}
DISCRETE statePlaces_00003_00007 #
{-1..100}
DISCRETE statePlaces_00003_00008 #
{-1..100}
DISCRETE statePlaces_00003_00009 #
{-1..100}
DISCRETE statePlaces_00003_00010 #
{-1..100}
DISCRETE statePlaces_00004_00002 #
{-1..100}
DISCRETE statePlaces_00004_00003 #
{-1..100}
DISCRETE statePlaces_00004_00004 #
{-1..100}
DISCRETE statePlaces_00004_00005 #
{-1..100}
DISCRETE statePlaces_00004_00006 #
{-1..100}
DISCRETE statePlaces_00004_00007 #
{-1..100}
DISCRETE statePlaces_00004_00008 #
{-1..100}
DISCRETE statePlaces_00004_00009 #
{-1..100}
DISCRETE statePlaces_00004_00010 #
{-1..100}
DISCRETE actionTypes_00002 #
{1..5}
DISCRETE actionTypes_00003 #
{1..5}
DISCRETE actionTypes_00004 #
{1..5}
DISCRETE actionTypes_00005 #
{1..5}
DISCRETE actionTypes_00006 #
{1..5}
DISCRETE actionTypes_00007 #
{1..5}
DISCRETE actionTypes_00008 #
{1..5}
DISCRETE actionTypes_00009 #
{1..5}
DISCRETE actionTypes_00010 #
{1..5}
DISCRETE actionFrom_00002 #
{0..4}
DISCRETE actionFrom_00003 #
{0..4}
DISCRETE actionFrom_00004 #
{0..4}
DISCRETE actionFrom_00005 #
{0..4}
DISCRETE actionFrom_00006 #
{0..4}
DISCRETE actionFrom_00007 #
{0..4}
DISCRETE actionFrom_00008 #
{0..4}
DISCRETE actionFrom_00009 #
{0..4}
DISCRETE actionFrom_00010 #
{0..4}
DISCRETE actionTo_00002 #
{0..4}
DISCRETE actionTo_00003 #
{0..4}
DISCRETE actionTo_00004 #
{0..4}
DISCRETE actionTo_00005 #
{0..4}
DISCRETE actionTo_00006 #
{0..4}
DISCRETE actionTo_00007 #
{0..4}
DISCRETE actionTo_00008 #
{0..4}
DISCRETE actionTo_00009 #
{0..4}
DISCRETE actionTo_00010 #
{0..4}
DISCRETE pointers_00000_00002 #
{0..3}
DISCRETE pointers_00000_00003 #
{0..3}
DISCRETE pointers_00000_00004 #
{0..3}
DISCRETE pointers_00000_00005 #
{0..3}
DISCRETE pointers_00000_00006 #
{0..3}
DISCRETE pointers_00000_00007 #
{0..3}
DISCRETE pointers_00000_00008 #
{0..3}
DISCRETE pointers_00000_00009 #
{0..3}
DISCRETE pointers_00000_00010 #
{0..3}
DISCRETE pointers_00001_00002 #
{0..3}
DISCRETE pointers_00001_00003 #
{0..3}
DISCRETE pointers_00001_00004 #
{0..3}
DISCRETE pointers_00001_00005 #
{0..3}
DISCRETE pointers_00001_00006 #
{0..3}
DISCRETE pointers_00001_00007 #
{0..3}
DISCRETE pointers_00001_00008 #
{0..3}
DISCRETE pointers_00001_00009 #
{0..3}
BOOL aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010], (actionTo_00010 + -2))=SafeElement([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010], (actionFrom_00010 + -2)))
BOOL aux53 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008], (actionTo_00008 + -2))=SafeElement([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008], (actionFrom_00008 + -2)))
BOOL aux54 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009], (actionTo_00009 + -2))=SafeElement([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009], (actionFrom_00009 + -2)))
BOOL aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005], (actionTo_00005 + -2))=SafeElement([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005], (actionFrom_00005 + -2)))
BOOL aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006], (actionTo_00006 + -2))=SafeElement([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006], (actionFrom_00006 + -2)))
BOOL aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007], (actionTo_00007 + -2))=SafeElement([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007], (actionFrom_00007 + -2)))
BOOL aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003], (actionTo_00003 + -2))=SafeElement([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003], (actionFrom_00003 + -2)))
BOOL aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004], (actionTo_00004 + -2))=SafeElement([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004], (actionFrom_00004 + -2)))
BOOL aux60 #Active-CSE: 2 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002], (actionTo_00002 + -2))=SafeElement([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002], (actionFrom_00002 + -2)))
DISCRETE aux61 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003], (actionFrom_00003 + -2))
{-1..100}
DISCRETE aux62 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002], (actionFrom_00002 + -2))
{-1..100}
DISCRETE aux63 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009], (actionFrom_00009 + -2))
{-1..100}
DISCRETE aux64 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010], (actionFrom_00010 + -2))
{-1..100}
DISCRETE aux65 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005], (actionFrom_00005 + -2))
{-1..100}
DISCRETE aux66 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004], (actionFrom_00004 + -2))
{-1..100}
DISCRETE aux67 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006], (actionFrom_00006 + -2))
{-1..100}
DISCRETE aux68 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008], (actionFrom_00008 + -2))
{-1..100}
DISCRETE aux69 #Active-CSE: 4 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007], (actionFrom_00007 + -2))
{-1..100}
DISCRETE aux70 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00005 + -2)
{-2..2}
DISCRETE aux71 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00004 + -2)
{-2..2}
DISCRETE aux72 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00007 + -2)
{-2..2}
DISCRETE aux73 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00006 + -2)
{-2..2}
DISCRETE aux74 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00009 + -2)
{-2..2}
DISCRETE aux75 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00008 + -2)
{-2..2}
DISCRETE aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00003 + -2)
{-2..2}
DISCRETE aux77 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00002 + -2)
{-2..2}
DISCRETE aux78 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00005 + -2)
{-2..2}
DISCRETE aux79 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00004 + -2)
{-2..2}
DISCRETE aux80 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00010 + -2)
{-2..2}
DISCRETE aux81 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00009 + -2)
{-2..2}
DISCRETE aux82 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00010 + -2)
{-2..2}
DISCRETE aux83 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00008 + -2)
{-2..2}
BOOL aux84 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00010 in int(2..4))
BOOL aux85 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00002 in int(2..4))
BOOL aux86 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00003 in int(2..4))
BOOL aux87 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00004 in int(2..4))
BOOL aux88 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00005 in int(2..4))
BOOL aux89 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00006 in int(2..4))
BOOL aux90 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00007 in int(2..4))
BOOL aux91 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00008 in int(2..4))
BOOL aux92 #Active-CSE: 3 occurrences of this expression or equivalent: (actionTo_00009 in int(2..4))
DISCRETE aux93 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00003 + -2)
{-2..2}
DISCRETE aux94 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00006 + -2)
{-2..2}
DISCRETE aux95 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00007 + -2)
{-2..2}
DISCRETE aux96 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00002 + -2)
{-2..2}
BOOL aux97 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00009 in int(2..4))
BOOL aux98 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00007 in int(2..4))
BOOL aux99 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00008 in int(2..4))
BOOL aux100 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00002 in int(2..4))
BOOL aux101 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00005 in int(2..4))
BOOL aux102 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00006 in int(2..4))
BOOL aux103 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00003 in int(2..4))
BOOL aux104 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00004 in int(2..4))
BOOL aux105 #Active-CSE: 3 occurrences of this expression or equivalent: (actionFrom_00010 in int(2..4))
BOOL aux106 #(1 != actionTypes_00002)
BOOL aux107 #(1 != actionTypes_00003)
BOOL aux108 #(1 != actionTypes_00004)
BOOL aux109 #(1 != actionTypes_00005)
BOOL aux110 #(1 != actionTypes_00006)
BOOL aux111 #(1 != actionTypes_00007)
BOOL aux112 #(1 != actionTypes_00008)
BOOL aux113 #(1 != actionTypes_00009)
BOOL aux114 #(1 != actionTypes_00010)
BOOL aux115 #(2 != actionTypes_00002)
BOOL aux116 #(2 != actionTypes_00003)
BOOL aux117 #(2 != actionTypes_00004)
BOOL aux118 #(2 != actionTypes_00005)
BOOL aux119 #(2 != actionTypes_00006)
BOOL aux120 #(2 != actionTypes_00007)
BOOL aux121 #(2 != actionTypes_00008)
BOOL aux122 #(2 != actionTypes_00009)
BOOL aux123 #(2 != actionTypes_00010)
BOOL aux124 #((1=actionTypes_00002) \/ (2=actionTypes_00002) \/ (3=actionTypes_00002) \/ (5=actionTypes_00002) \/ ((4=actionTypes_00002) /\ (actionTo_00002 != 3)))
BOOL aux125 #((1=actionTypes_00002) \/ (2=actionTypes_00002) \/ (3=actionTypes_00002) \/ (5=actionTypes_00002) \/ ((4=actionTypes_00002) /\ (actionTo_00002 != 4)))
BOOL aux126 #((1=actionTypes_00003) \/ (2=actionTypes_00003) \/ (3=actionTypes_00003) \/ (5=actionTypes_00003) \/ ((4=actionTypes_00003) /\ (actionTo_00003 != 3)))
BOOL aux127 #((1=actionTypes_00003) \/ (2=actionTypes_00003) \/ (3=actionTypes_00003) \/ (5=actionTypes_00003) \/ ((4=actionTypes_00003) /\ (actionTo_00003 != 4)))
BOOL aux128 #((1=actionTypes_00004) \/ (2=actionTypes_00004) \/ (3=actionTypes_00004) \/ (5=actionTypes_00004) \/ ((4=actionTypes_00004) /\ (actionTo_00004 != 3)))
BOOL aux129 #((1=actionTypes_00004) \/ (2=actionTypes_00004) \/ (3=actionTypes_00004) \/ (5=actionTypes_00004) \/ ((4=actionTypes_00004) /\ (actionTo_00004 != 4)))
BOOL aux130 #((1=actionTypes_00005) \/ (2=actionTypes_00005) \/ (3=actionTypes_00005) \/ (5=actionTypes_00005) \/ ((4=actionTypes_00005) /\ (actionTo_00005 != 3)))
BOOL aux131 #((1=actionTypes_00005) \/ (2=actionTypes_00005) \/ (3=actionTypes_00005) \/ (5=actionTypes_00005) \/ ((4=actionTypes_00005) /\ (actionTo_00005 != 4)))
BOOL aux132 #((1=actionTypes_00006) \/ (2=actionTypes_00006) \/ (3=actionTypes_00006) \/ (5=actionTypes_00006) \/ ((4=actionTypes_00006) /\ (actionTo_00006 != 3)))
BOOL aux133 #((1=actionTypes_00006) \/ (2=actionTypes_00006) \/ (3=actionTypes_00006) \/ (5=actionTypes_00006) \/ ((4=actionTypes_00006) /\ (actionTo_00006 != 4)))
BOOL aux134 #((1=actionTypes_00007) \/ (2=actionTypes_00007) \/ (3=actionTypes_00007) \/ (5=actionTypes_00007) \/ ((4=actionTypes_00007) /\ (actionTo_00007 != 3)))
BOOL aux135 #((1=actionTypes_00007) \/ (2=actionTypes_00007) \/ (3=actionTypes_00007) \/ (5=actionTypes_00007) \/ ((4=actionTypes_00007) /\ (actionTo_00007 != 4)))
BOOL aux136 #((1=actionTypes_00008) \/ (2=actionTypes_00008) \/ (3=actionTypes_00008) \/ (5=actionTypes_00008) \/ ((4=actionTypes_00008) /\ (actionTo_00008 != 3)))
BOOL aux137 #((1=actionTypes_00008) \/ (2=actionTypes_00008) \/ (3=actionTypes_00008) \/ (5=actionTypes_00008) \/ ((4=actionTypes_00008) /\ (actionTo_00008 != 4)))
BOOL aux138 #((1=actionTypes_00009) \/ (2=actionTypes_00009) \/ (3=actionTypes_00009) \/ (5=actionTypes_00009) \/ ((4=actionTypes_00009) /\ (actionTo_00009 != 3)))
BOOL aux139 #((1=actionTypes_00009) \/ (2=actionTypes_00009) \/ (3=actionTypes_00009) \/ (5=actionTypes_00009) \/ ((4=actionTypes_00009) /\ (actionTo_00009 != 4)))
BOOL aux140 #((1=actionTypes_00010) \/ (2=actionTypes_00010) \/ (3=actionTypes_00010) \/ (5=actionTypes_00010) \/ ((4=actionTypes_00010) /\ (actionTo_00010 != 3)))
BOOL aux141 #((1=actionTypes_00010) \/ (2=actionTypes_00010) \/ (3=actionTypes_00010) \/ (5=actionTypes_00010) \/ ((4=actionTypes_00010) /\ (actionTo_00010 != 4)))
BOOL aux142 #((2=actionTypes_00002) \/ (4=actionTypes_00002))
BOOL aux143 #((2=actionTypes_00003) \/ (4=actionTypes_00003))
BOOL aux144 #((2=actionTypes_00004) \/ (4=actionTypes_00004))
BOOL aux145 #((2=actionTypes_00005) \/ (4=actionTypes_00005))
BOOL aux146 #((2=actionTypes_00006) \/ (4=actionTypes_00006))
BOOL aux147 #((2=actionTypes_00007) \/ (4=actionTypes_00007))
BOOL aux148 #((2=actionTypes_00008) \/ (4=actionTypes_00008))
BOOL aux149 #((2=actionTypes_00009) \/ (4=actionTypes_00009))
BOOL aux150 #((2=actionTypes_00010) \/ (4=actionTypes_00010))
BOOL aux151 #(1=actionTypes_00002)
BOOL aux152 #(1=actionTypes_00002)
BOOL aux153 #(1=actionTypes_00002)
BOOL aux154 #(1=actionTypes_00002)
BOOL aux155 #(1=actionTypes_00002)
DISCRETE aux156 #(pointers_00000_00002 + -1)
{-1..2}
BOOL aux157 #(1=actionTypes_00003)
BOOL aux158 #(1=actionTypes_00003)
BOOL aux159 #(1=actionTypes_00003)
BOOL aux160 #(1=actionTypes_00003)
BOOL aux161 #(1=actionTypes_00003)
DISCRETE aux162 #(pointers_00000_00003 + -1)
{-1..2}
BOOL aux163 #(1=actionTypes_00004)
BOOL aux164 #(1=actionTypes_00004)
BOOL aux165 #(1=actionTypes_00004)
BOOL aux166 #(1=actionTypes_00004)
BOOL aux167 #(1=actionTypes_00004)
DISCRETE aux168 #(pointers_00000_00004 + -1)
{-1..2}
BOOL aux169 #(1=actionTypes_00005)
BOOL aux170 #(1=actionTypes_00005)
BOOL aux171 #(1=actionTypes_00005)
BOOL aux172 #(1=actionTypes_00005)
BOOL aux173 #(1=actionTypes_00005)
DISCRETE aux174 #(pointers_00000_00005 + -1)
{-1..2}
BOOL aux175 #(1=actionTypes_00006)
BOOL aux176 #(1=actionTypes_00006)
BOOL aux177 #(1=actionTypes_00006)
BOOL aux178 #(1=actionTypes_00006)
BOOL aux179 #(1=actionTypes_00006)
DISCRETE aux180 #(pointers_00000_00006 + -1)
{-1..2}
BOOL aux181 #(1=actionTypes_00007)
BOOL aux182 #(1=actionTypes_00007)
BOOL aux183 #(1=actionTypes_00007)
BOOL aux184 #(1=actionTypes_00007)
BOOL aux185 #(1=actionTypes_00007)
DISCRETE aux186 #(pointers_00000_00007 + -1)
{-1..2}
BOOL aux187 #(1=actionTypes_00008)
BOOL aux188 #(1=actionTypes_00008)
BOOL aux189 #(1=actionTypes_00008)
BOOL aux190 #(1=actionTypes_00008)
BOOL aux191 #(1=actionTypes_00008)
DISCRETE aux192 #(pointers_00000_00008 + -1)
{-1..2}
BOOL aux193 #(1=actionTypes_00009)
BOOL aux194 #(1=actionTypes_00009)
BOOL aux195 #(1=actionTypes_00009)
BOOL aux196 #(1=actionTypes_00009)
BOOL aux197 #(1=actionTypes_00009)
DISCRETE aux198 #(pointers_00000_00009 + -1)
{-1..2}
BOOL aux199 #(1=actionTypes_00010)
BOOL aux200 #(1=actionTypes_00010)
BOOL aux201 #(1=actionTypes_00010)
BOOL aux202 #(1=actionTypes_00010)
BOOL aux203 #(1=actionTypes_00010)
DISCRETE aux204 #(pointers_00000_00010 + -1)
{-1..2}
BOOL aux205 #(2=actionTypes_00002)
BOOL aux206 #(2=actionTypes_00002)
BOOL aux207 #(2=actionTypes_00002)
BOOL aux208 #(2=actionTypes_00002)
BOOL aux209 #(2=actionTypes_00002)
BOOL aux210 #(2=actionTypes_00002)
DISCRETE aux211 #(pointers_00001_00002 + -1)
{-1..2}
BOOL aux212 #(2=actionTypes_00003)
BOOL aux213 #(2=actionTypes_00003)
BOOL aux214 #(2=actionTypes_00003)
BOOL aux215 #(2=actionTypes_00003)
BOOL aux216 #(2=actionTypes_00003)
BOOL aux217 #(2=actionTypes_00003)
BOOL aux218 #(2=actionTypes_00003)
DISCRETE aux219 #(pointers_00001_00003 + -1)
{-1..2}
BOOL aux220 #(2=actionTypes_00004)
BOOL aux221 #(2=actionTypes_00004)
BOOL aux222 #(2=actionTypes_00004)
BOOL aux223 #(2=actionTypes_00004)
BOOL aux224 #(2=actionTypes_00004)
BOOL aux225 #(2=actionTypes_00004)
BOOL aux226 #(2=actionTypes_00004)
DISCRETE aux227 #(pointers_00001_00004 + -1)
{-1..2}
BOOL aux228 #(2=actionTypes_00005)
BOOL aux229 #(2=actionTypes_00005)
BOOL aux230 #(2=actionTypes_00005)
BOOL aux231 #(2=actionTypes_00005)
BOOL aux232 #(2=actionTypes_00005)
BOOL aux233 #(2=actionTypes_00005)
BOOL aux234 #(2=actionTypes_00005)
DISCRETE aux235 #(pointers_00001_00005 + -1)
{-1..2}
BOOL aux236 #(2=actionTypes_00006)
BOOL aux237 #(2=actionTypes_00006)
BOOL aux238 #(2=actionTypes_00006)
BOOL aux239 #(2=actionTypes_00006)
BOOL aux240 #(2=actionTypes_00006)
BOOL aux241 #(2=actionTypes_00006)
BOOL aux242 #(2=actionTypes_00006)
DISCRETE aux243 #(pointers_00001_00006 + -1)
{-1..2}
BOOL aux244 #(2=actionTypes_00007)
BOOL aux245 #(2=actionTypes_00007)
BOOL aux246 #(2=actionTypes_00007)
BOOL aux247 #(2=actionTypes_00007)
BOOL aux248 #(2=actionTypes_00007)
BOOL aux249 #(2=actionTypes_00007)
BOOL aux250 #(2=actionTypes_00007)
DISCRETE aux251 #(pointers_00001_00007 + -1)
{-1..2}
BOOL aux252 #(2=actionTypes_00008)
BOOL aux253 #(2=actionTypes_00008)
BOOL aux254 #(2=actionTypes_00008)
BOOL aux255 #(2=actionTypes_00008)
BOOL aux256 #(2=actionTypes_00008)
BOOL aux257 #(2=actionTypes_00008)
BOOL aux258 #(2=actionTypes_00008)
DISCRETE aux259 #(pointers_00001_00008 + -1)
{-1..2}
BOOL aux260 #(2=actionTypes_00009)
BOOL aux261 #(2=actionTypes_00009)
BOOL aux262 #(2=actionTypes_00009)
BOOL aux263 #(2=actionTypes_00009)
BOOL aux264 #(2=actionTypes_00009)
BOOL aux265 #(2=actionTypes_00009)
BOOL aux266 #(2=actionTypes_00009)
DISCRETE aux267 #(pointers_00001_00009 + -1)
{-1..2}
BOOL aux268 #(2=actionTypes_00010)
BOOL aux269 #(2=actionTypes_00010)
BOOL aux270 #(2=actionTypes_00010)
BOOL aux271 #(2=actionTypes_00010)
BOOL aux272 #(2=actionTypes_00010)
BOOL aux273 #(2=actionTypes_00010)
BOOL aux274 #(3=actionTypes_00002)
BOOL aux275 #(3=actionTypes_00002)
BOOL aux276 #(3=actionTypes_00002)
BOOL aux277 #(3=actionTypes_00002)
BOOL aux278 #(3=actionTypes_00002)
BOOL aux279 #(3=actionTypes_00002)
BOOL aux280 #(3=actionTypes_00003)
BOOL aux281 #(3=actionTypes_00003)
BOOL aux282 #(3=actionTypes_00003)
BOOL aux283 #(3=actionTypes_00003)
BOOL aux284 #(3=actionTypes_00003)
BOOL aux285 #(3=actionTypes_00003)
BOOL aux286 #(3=actionTypes_00004)
BOOL aux287 #(3=actionTypes_00004)
BOOL aux288 #(3=actionTypes_00004)
BOOL aux289 #(3=actionTypes_00004)
BOOL aux290 #(3=actionTypes_00004)
BOOL aux291 #(3=actionTypes_00004)
BOOL aux292 #(3=actionTypes_00005)
BOOL aux293 #(3=actionTypes_00005)
BOOL aux294 #(3=actionTypes_00005)
BOOL aux295 #(3=actionTypes_00005)
BOOL aux296 #(3=actionTypes_00005)
BOOL aux297 #(3=actionTypes_00005)
BOOL aux298 #(3=actionTypes_00006)
BOOL aux299 #(3=actionTypes_00006)
BOOL aux300 #(3=actionTypes_00006)
BOOL aux301 #(3=actionTypes_00006)
BOOL aux302 #(3=actionTypes_00006)
BOOL aux303 #(3=actionTypes_00006)
BOOL aux304 #(3=actionTypes_00007)
BOOL aux305 #(3=actionTypes_00007)
BOOL aux306 #(3=actionTypes_00007)
BOOL aux307 #(3=actionTypes_00007)
BOOL aux308 #(3=actionTypes_00007)
BOOL aux309 #(3=actionTypes_00007)
BOOL aux310 #(3=actionTypes_00008)
BOOL aux311 #(3=actionTypes_00008)
BOOL aux312 #(3=actionTypes_00008)
BOOL aux313 #(3=actionTypes_00008)
BOOL aux314 #(3=actionTypes_00008)
BOOL aux315 #(3=actionTypes_00008)
BOOL aux316 #(3=actionTypes_00009)
BOOL aux317 #(3=actionTypes_00009)
BOOL aux318 #(3=actionTypes_00009)
BOOL aux319 #(3=actionTypes_00009)
BOOL aux320 #(3=actionTypes_00009)
BOOL aux321 #(3=actionTypes_00009)
BOOL aux322 #(3=actionTypes_00010)
BOOL aux323 #(3=actionTypes_00010)
BOOL aux324 #(3=actionTypes_00010)
BOOL aux325 #(3=actionTypes_00010)
BOOL aux326 #(3=actionTypes_00010)
BOOL aux327 #(3=actionTypes_00010)
BOOL aux328 #(4=actionTypes_00002)
BOOL aux329 #(4=actionTypes_00002)
BOOL aux330 #(4=actionTypes_00002)
BOOL aux331 #(4=actionTypes_00002)
BOOL aux332 #(4=actionTypes_00002)
BOOL aux333 #(4=actionTypes_00003)
BOOL aux334 #(4=actionTypes_00003)
BOOL aux335 #(4=actionTypes_00003)
BOOL aux336 #(4=actionTypes_00003)
BOOL aux337 #(4=actionTypes_00003)
BOOL aux338 #(4=actionTypes_00003)
BOOL aux339 #(4=actionTypes_00004)
BOOL aux340 #(4=actionTypes_00004)
BOOL aux341 #(4=actionTypes_00004)
BOOL aux342 #(4=actionTypes_00004)
BOOL aux343 #(4=actionTypes_00004)
BOOL aux344 #(4=actionTypes_00004)
BOOL aux345 #(4=actionTypes_00005)
BOOL aux346 #(4=actionTypes_00005)
BOOL aux347 #(4=actionTypes_00005)
BOOL aux348 #(4=actionTypes_00005)
BOOL aux349 #(4=actionTypes_00005)
BOOL aux350 #(4=actionTypes_00005)
BOOL aux351 #(4=actionTypes_00006)
BOOL aux352 #(4=actionTypes_00006)
BOOL aux353 #(4=actionTypes_00006)
BOOL aux354 #(4=actionTypes_00006)
BOOL aux355 #(4=actionTypes_00006)
BOOL aux356 #(4=actionTypes_00006)
BOOL aux357 #(4=actionTypes_00007)
BOOL aux358 #(4=actionTypes_00007)
BOOL aux359 #(4=actionTypes_00007)
BOOL aux360 #(4=actionTypes_00007)
BOOL aux361 #(4=actionTypes_00007)
BOOL aux362 #(4=actionTypes_00007)
BOOL aux363 #(4=actionTypes_00008)
BOOL aux364 #(4=actionTypes_00008)
BOOL aux365 #(4=actionTypes_00008)
BOOL aux366 #(4=actionTypes_00008)
BOOL aux367 #(4=actionTypes_00008)
BOOL aux368 #(4=actionTypes_00008)
BOOL aux369 #(4=actionTypes_00009)
BOOL aux370 #(4=actionTypes_00009)
BOOL aux371 #(4=actionTypes_00009)
BOOL aux372 #(4=actionTypes_00009)
BOOL aux373 #(4=actionTypes_00009)
BOOL aux374 #(4=actionTypes_00009)
BOOL aux375 #(4=actionTypes_00010)
BOOL aux376 #(4=actionTypes_00010)
BOOL aux377 #(4=actionTypes_00010)
BOOL aux378 #(4=actionTypes_00010)
BOOL aux379 #(4=actionTypes_00010)
BOOL aux380 #(4=actionTypes_00010)
BOOL aux381 #(5=actionTypes_00002)
BOOL aux382 #(5=actionTypes_00002)
BOOL aux383 #(5=actionTypes_00002)
BOOL aux384 #(5=actionTypes_00002)
DISCRETE aux385 #SafeElement([3, -1, -1], aux77)
{-1..3}
**CONSTRAINTS**
w-inintervalset(aux385, [-1,0,3,3])
**VARIABLES**
BOOL aux386 #(5=actionTypes_00002)
BOOL aux387 #(5=actionTypes_00002)
BOOL aux388 #(5=actionTypes_00002)
DISCRETE aux389 #SafeElement([3, -1, -1], aux96)
{-1..3}
**CONSTRAINTS**
w-inintervalset(aux389, [-1,0,3,3])
**VARIABLES**
BOOL aux390 #(5=actionTypes_00002)
BOOL aux391 #(5=actionTypes_00003)
BOOL aux392 #(5=actionTypes_00003)
BOOL aux393 #(5=actionTypes_00003)
BOOL aux394 #(5=actionTypes_00003)
DISCRETE aux395 #SafeElement([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002], aux76)
{-1..100}
BOOL aux396 #(5=actionTypes_00003)
BOOL aux397 #(5=actionTypes_00003)
BOOL aux398 #(5=actionTypes_00003)
DISCRETE aux399 #SafeElement([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002], aux93)
{-1..100}
BOOL aux400 #(5=actionTypes_00003)
BOOL aux401 #(5=actionTypes_00004)
BOOL aux402 #(5=actionTypes_00004)
BOOL aux403 #(5=actionTypes_00004)
BOOL aux404 #(5=actionTypes_00004)
DISCRETE aux405 #SafeElement([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003], aux79)
{-1..100}
BOOL aux406 #(5=actionTypes_00004)
BOOL aux407 #(5=actionTypes_00004)
BOOL aux408 #(5=actionTypes_00004)
DISCRETE aux409 #SafeElement([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003], aux71)
{-1..100}
BOOL aux410 #(5=actionTypes_00004)
BOOL aux411 #(5=actionTypes_00005)
BOOL aux412 #(5=actionTypes_00005)
BOOL aux413 #(5=actionTypes_00005)
BOOL aux414 #(5=actionTypes_00005)
DISCRETE aux415 #SafeElement([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004], aux78)
{-1..100}
BOOL aux416 #(5=actionTypes_00005)
BOOL aux417 #(5=actionTypes_00005)
BOOL aux418 #(5=actionTypes_00005)
DISCRETE aux419 #SafeElement([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004], aux70)
{-1..100}
BOOL aux420 #(5=actionTypes_00005)
BOOL aux421 #(5=actionTypes_00006)
BOOL aux422 #(5=actionTypes_00006)
BOOL aux423 #(5=actionTypes_00006)
BOOL aux424 #(5=actionTypes_00006)
DISCRETE aux425 #SafeElement([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005], aux73)
{-1..100}
BOOL aux426 #(5=actionTypes_00006)
BOOL aux427 #(5=actionTypes_00006)
BOOL aux428 #(5=actionTypes_00006)
DISCRETE aux429 #SafeElement([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005], aux94)
{-1..100}
BOOL aux430 #(5=actionTypes_00006)
BOOL aux431 #(5=actionTypes_00007)
BOOL aux432 #(5=actionTypes_00007)
BOOL aux433 #(5=actionTypes_00007)
BOOL aux434 #(5=actionTypes_00007)
DISCRETE aux435 #SafeElement([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006], aux72)
{-1..100}
BOOL aux436 #(5=actionTypes_00007)
BOOL aux437 #(5=actionTypes_00007)
BOOL aux438 #(5=actionTypes_00007)
DISCRETE aux439 #SafeElement([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006], aux95)
{-1..100}
BOOL aux440 #(5=actionTypes_00007)
BOOL aux441 #(5=actionTypes_00008)
BOOL aux442 #(5=actionTypes_00008)
BOOL aux443 #(5=actionTypes_00008)
BOOL aux444 #(5=actionTypes_00008)
DISCRETE aux445 #SafeElement([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007], aux75)
{-1..100}
BOOL aux446 #(5=actionTypes_00008)
BOOL aux447 #(5=actionTypes_00008)
BOOL aux448 #(5=actionTypes_00008)
DISCRETE aux449 #SafeElement([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007], aux83)
{-1..100}
BOOL aux450 #(5=actionTypes_00008)
BOOL aux451 #(5=actionTypes_00009)
BOOL aux452 #(5=actionTypes_00009)
BOOL aux453 #(5=actionTypes_00009)
BOOL aux454 #(5=actionTypes_00009)
DISCRETE aux455 #SafeElement([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008], aux74)
{-1..100}
BOOL aux456 #(5=actionTypes_00009)
BOOL aux457 #(5=actionTypes_00009)
BOOL aux458 #(5=actionTypes_00009)
DISCRETE aux459 #SafeElement([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008], aux81)
{-1..100}
BOOL aux460 #(5=actionTypes_00009)
BOOL aux461 #(5=actionTypes_00010)
BOOL aux462 #(5=actionTypes_00010)
BOOL aux463 #(5=actionTypes_00010)
BOOL aux464 #(5=actionTypes_00010)
DISCRETE aux465 #SafeElement([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009], aux80)
{-1..100}
BOOL aux466 #(5=actionTypes_00010)
BOOL aux467 #(5=actionTypes_00010)
BOOL aux468 #(5=actionTypes_00010)
DISCRETE aux469 #SafeElement([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009], aux82)
{-1..100}
BOOL aux470 #(5=actionTypes_00010)
**VARIABLES**
ALIAS output[3]=[1, 2, 3]
**VARIABLES**
ALIAS input[3]=[3, 2, 1]
**SEARCH**
PRINT[[statePlaces_00002_00002],[statePlaces_00002_00003],[statePlaces_00002_00004],[statePlaces_00002_00005],[statePlaces_00002_00006],[statePlaces_00002_00007],[statePlaces_00002_00008],[statePlaces_00002_00009],[statePlaces_00002_00010],[statePlaces_00003_00002],[statePlaces_00003_00003],[statePlaces_00003_00004],[statePlaces_00003_00005],[statePlaces_00003_00006],[statePlaces_00003_00007],[statePlaces_00003_00008],[statePlaces_00003_00009],[statePlaces_00003_00010],[statePlaces_00004_00002],[statePlaces_00004_00003],[statePlaces_00004_00004],[statePlaces_00004_00005],[statePlaces_00004_00006],[statePlaces_00004_00007],[statePlaces_00004_00008],[statePlaces_00004_00009],[statePlaces_00004_00010],[actionTypes_00002],[actionTypes_00003],[actionTypes_00004],[actionTypes_00005],[actionTypes_00006],[actionTypes_00007],[actionTypes_00008],[actionTypes_00009],[actionTypes_00010],[actionFrom_00002],[actionFrom_00003],[actionFrom_00004],[actionFrom_00005],[actionFrom_00006],[actionFrom_00007],[actionFrom_00008],[actionFrom_00009],[actionFrom_00010],[actionTo_00002],[actionTo_00003],[actionTo_00004],[actionTo_00005],[actionTo_00006],[actionTo_00007],[actionTo_00008],[actionTo_00009],[actionTo_00010],[pointers_00000_00002],[pointers_00000_00003],[pointers_00000_00004],[pointers_00000_00005],[pointers_00000_00006],[pointers_00000_00007],[pointers_00000_00008],[pointers_00000_00009],[pointers_00000_00010],[pointers_00001_00002],[pointers_00001_00003],[pointers_00001_00004],[pointers_00001_00005],[pointers_00001_00006],[pointers_00001_00007],[pointers_00001_00008],[pointers_00001_00009]]
**CONSTRAINTS**
reify(diseq(1,actionTypes_00002), aux106)
reify(diseq(1,actionTypes_00003), aux107)
reify(diseq(1,actionTypes_00004), aux108)
reify(diseq(1,actionTypes_00005), aux109)
reify(diseq(1,actionTypes_00006), aux110)
reify(diseq(1,actionTypes_00007), aux111)
reify(diseq(1,actionTypes_00008), aux112)
reify(diseq(1,actionTypes_00009), aux113)
reify(diseq(1,actionTypes_00010), aux114)
reify(diseq(2,actionTypes_00002), aux115)
reify(diseq(2,actionTypes_00003), aux116)
reify(diseq(2,actionTypes_00004), aux117)
reify(diseq(2,actionTypes_00005), aux118)
reify(diseq(2,actionTypes_00006), aux119)
reify(diseq(2,actionTypes_00007), aux120)
reify(diseq(2,actionTypes_00008), aux121)
reify(diseq(2,actionTypes_00009), aux122)
reify(diseq(2,actionTypes_00010), aux123)
reify(watched-or({w-literal(actionTypes_00002,1),w-literal(actionTypes_00002,2),w-literal(actionTypes_00002,3),w-literal(actionTypes_00002,5),watched-and({w-literal(actionTypes_00002,4),diseq(actionTo_00002,3)})}), aux124)
reify(watched-or({w-literal(actionTypes_00002,1),w-literal(actionTypes_00002,2),w-literal(actionTypes_00002,3),w-literal(actionTypes_00002,5),watched-and({w-literal(actionTypes_00002,4),diseq(actionTo_00002,4)})}), aux125)
reify(watched-or({w-literal(actionTypes_00003,1),w-literal(actionTypes_00003,2),w-literal(actionTypes_00003,3),w-literal(actionTypes_00003,5),watched-and({w-literal(actionTypes_00003,4),diseq(actionTo_00003,3)})}), aux126)
reify(watched-or({w-literal(actionTypes_00003,1),w-literal(actionTypes_00003,2),w-literal(actionTypes_00003,3),w-literal(actionTypes_00003,5),watched-and({w-literal(actionTypes_00003,4),diseq(actionTo_00003,4)})}), aux127)
reify(watched-or({w-literal(actionTypes_00004,1),w-literal(actionTypes_00004,2),w-literal(actionTypes_00004,3),w-literal(actionTypes_00004,5),watched-and({w-literal(actionTypes_00004,4),diseq(actionTo_00004,3)})}), aux128)
reify(watched-or({w-literal(actionTypes_00004,1),w-literal(actionTypes_00004,2),w-literal(actionTypes_00004,3),w-literal(actionTypes_00004,5),watched-and({w-literal(actionTypes_00004,4),diseq(actionTo_00004,4)})}), aux129)
reify(watched-or({w-literal(actionTypes_00005,1),w-literal(actionTypes_00005,2),w-literal(actionTypes_00005,3),w-literal(actionTypes_00005,5),watched-and({w-literal(actionTypes_00005,4),diseq(actionTo_00005,3)})}), aux130)
reify(watched-or({w-literal(actionTypes_00005,1),w-literal(actionTypes_00005,2),w-literal(actionTypes_00005,3),w-literal(actionTypes_00005,5),watched-and({w-literal(actionTypes_00005,4),diseq(actionTo_00005,4)})}), aux131)
reify(watched-or({w-literal(actionTypes_00006,1),w-literal(actionTypes_00006,2),w-literal(actionTypes_00006,3),w-literal(actionTypes_00006,5),watched-and({w-literal(actionTypes_00006,4),diseq(actionTo_00006,3)})}), aux132)
reify(watched-or({w-literal(actionTypes_00006,1),w-literal(actionTypes_00006,2),w-literal(actionTypes_00006,3),w-literal(actionTypes_00006,5),watched-and({w-literal(actionTypes_00006,4),diseq(actionTo_00006,4)})}), aux133)
reify(watched-or({w-literal(actionTypes_00007,1),w-literal(actionTypes_00007,2),w-literal(actionTypes_00007,3),w-literal(actionTypes_00007,5),watched-and({w-literal(actionTypes_00007,4),diseq(actionTo_00007,3)})}), aux134)
reify(watched-or({w-literal(actionTypes_00007,1),w-literal(actionTypes_00007,2),w-literal(actionTypes_00007,3),w-literal(actionTypes_00007,5),watched-and({w-literal(actionTypes_00007,4),diseq(actionTo_00007,4)})}), aux135)
reify(watched-or({w-literal(actionTypes_00008,1),w-literal(actionTypes_00008,2),w-literal(actionTypes_00008,3),w-literal(actionTypes_00008,5),watched-and({w-literal(actionTypes_00008,4),diseq(actionTo_00008,3)})}), aux136)
reify(watched-or({w-literal(actionTypes_00008,1),w-literal(actionTypes_00008,2),w-literal(actionTypes_00008,3),w-literal(actionTypes_00008,5),watched-and({w-literal(actionTypes_00008,4),diseq(actionTo_00008,4)})}), aux137)
reify(watched-or({w-literal(actionTypes_00009,1),w-literal(actionTypes_00009,2),w-literal(actionTypes_00009,3),w-literal(actionTypes_00009,5),watched-and({w-literal(actionTypes_00009,4),diseq(actionTo_00009,3)})}), aux138)
reify(watched-or({w-literal(actionTypes_00009,1),w-literal(actionTypes_00009,2),w-literal(actionTypes_00009,3),w-literal(actionTypes_00009,5),watched-and({w-literal(actionTypes_00009,4),diseq(actionTo_00009,4)})}), aux139)
reify(watched-or({w-literal(actionTypes_00010,1),w-literal(actionTypes_00010,2),w-literal(actionTypes_00010,3),w-literal(actionTypes_00010,5),watched-and({w-literal(actionTypes_00010,4),diseq(actionTo_00010,3)})}), aux140)
reify(watched-or({w-literal(actionTypes_00010,1),w-literal(actionTypes_00010,2),w-literal(actionTypes_00010,3),w-literal(actionTypes_00010,5),watched-and({w-literal(actionTypes_00010,4),diseq(actionTo_00010,4)})}), aux141)
reify(watched-or({w-literal(actionTypes_00002,2),w-literal(actionTypes_00002,4)}), aux142)
reify(watched-or({w-literal(actionTypes_00003,2),w-literal(actionTypes_00003,4)}), aux143)
reify(watched-or({w-literal(actionTypes_00004,2),w-literal(actionTypes_00004,4)}), aux144)
reify(watched-or({w-literal(actionTypes_00005,2),w-literal(actionTypes_00005,4)}), aux145)
reify(watched-or({w-literal(actionTypes_00006,2),w-literal(actionTypes_00006,4)}), aux146)
reify(watched-or({w-literal(actionTypes_00007,2),w-literal(actionTypes_00007,4)}), aux147)
reify(watched-or({w-literal(actionTypes_00008,2),w-literal(actionTypes_00008,4)}), aux148)
reify(watched-or({w-literal(actionTypes_00009,2),w-literal(actionTypes_00009,4)}), aux149)
reify(watched-or({w-literal(actionTypes_00010,2),w-literal(actionTypes_00010,4)}), aux150)
reify(w-literal(actionTypes_00002,1), aux151)
reify(w-literal(actionTypes_00002,1), aux152)
reify(w-literal(actionTypes_00002,1), aux153)
reify(w-literal(actionTypes_00002,1), aux154)
reify(w-literal(actionTypes_00002,1), aux155)
reify(w-literal(actionTypes_00003,1), aux157)
reify(w-literal(actionTypes_00003,1), aux158)
reify(w-literal(actionTypes_00003,1), aux159)
reify(w-literal(actionTypes_00003,1), aux160)
reify(w-literal(actionTypes_00003,1), aux161)
reify(w-literal(actionTypes_00004,1), aux163)
reify(w-literal(actionTypes_00004,1), aux164)
reify(w-literal(actionTypes_00004,1), aux165)
reify(w-literal(actionTypes_00004,1), aux166)
reify(w-literal(actionTypes_00004,1), aux167)
reify(w-literal(actionTypes_00005,1), aux169)
reify(w-literal(actionTypes_00005,1), aux170)
reify(w-literal(actionTypes_00005,1), aux171)
reify(w-literal(actionTypes_00005,1), aux172)
reify(w-literal(actionTypes_00005,1), aux173)
reify(w-literal(actionTypes_00006,1), aux175)
reify(w-literal(actionTypes_00006,1), aux176)
reify(w-literal(actionTypes_00006,1), aux177)
reify(w-literal(actionTypes_00006,1), aux178)
reify(w-literal(actionTypes_00006,1), aux179)
reify(w-literal(actionTypes_00007,1), aux181)
reify(w-literal(actionTypes_00007,1), aux182)
reify(w-literal(actionTypes_00007,1), aux183)
reify(w-literal(actionTypes_00007,1), aux184)
reify(w-literal(actionTypes_00007,1), aux185)
reify(w-literal(actionTypes_00008,1), aux187)
reify(w-literal(actionTypes_00008,1), aux188)
reify(w-literal(actionTypes_00008,1), aux189)
reify(w-literal(actionTypes_00008,1), aux190)
reify(w-literal(actionTypes_00008,1), aux191)
reify(w-literal(actionTypes_00009,1), aux193)
reify(w-literal(actionTypes_00009,1), aux194)
reify(w-literal(actionTypes_00009,1), aux195)
reify(w-literal(actionTypes_00009,1), aux196)
reify(w-literal(actionTypes_00009,1), aux197)
reify(w-literal(actionTypes_00010,1), aux199)
reify(w-literal(actionTypes_00010,1), aux200)
reify(w-literal(actionTypes_00010,1), aux201)
reify(w-literal(actionTypes_00010,1), aux202)
reify(w-literal(actionTypes_00010,1), aux203)
reify(w-literal(actionTypes_00002,2), aux205)
reify(w-literal(actionTypes_00002,2), aux206)
reify(w-literal(actionTypes_00002,2), aux207)
reify(w-literal(actionTypes_00002,2), aux208)
reify(w-literal(actionTypes_00002,2), aux209)
reify(w-literal(actionTypes_00002,2), aux210)
reify(w-literal(actionTypes_00003,2), aux212)
reify(w-literal(actionTypes_00003,2), aux213)
reify(w-literal(actionTypes_00003,2), aux214)
reify(w-literal(actionTypes_00003,2), aux215)
reify(w-literal(actionTypes_00003,2), aux216)
reify(w-literal(actionTypes_00003,2), aux217)
reify(w-literal(actionTypes_00003,2), aux218)
reify(w-literal(actionTypes_00004,2), aux220)
reify(w-literal(actionTypes_00004,2), aux221)
reify(w-literal(actionTypes_00004,2), aux222)
reify(w-literal(actionTypes_00004,2), aux223)
reify(w-literal(actionTypes_00004,2), aux224)
reify(w-literal(actionTypes_00004,2), aux225)
reify(w-literal(actionTypes_00004,2), aux226)
reify(w-literal(actionTypes_00005,2), aux228)
reify(w-literal(actionTypes_00005,2), aux229)
reify(w-literal(actionTypes_00005,2), aux230)
reify(w-literal(actionTypes_00005,2), aux231)
reify(w-literal(actionTypes_00005,2), aux232)
reify(w-literal(actionTypes_00005,2), aux233)
reify(w-literal(actionTypes_00005,2), aux234)
reify(w-literal(actionTypes_00006,2), aux236)
reify(w-literal(actionTypes_00006,2), aux237)
reify(w-literal(actionTypes_00006,2), aux238)
reify(w-literal(actionTypes_00006,2), aux239)
reify(w-literal(actionTypes_00006,2), aux240)
reify(w-literal(actionTypes_00006,2), aux241)
reify(w-literal(actionTypes_00006,2), aux242)
reify(w-literal(actionTypes_00007,2), aux244)
reify(w-literal(actionTypes_00007,2), aux245)
reify(w-literal(actionTypes_00007,2), aux246)
reify(w-literal(actionTypes_00007,2), aux247)
reify(w-literal(actionTypes_00007,2), aux248)
reify(w-literal(actionTypes_00007,2), aux249)
reify(w-literal(actionTypes_00007,2), aux250)
reify(w-literal(actionTypes_00008,2), aux252)
reify(w-literal(actionTypes_00008,2), aux253)
reify(w-literal(actionTypes_00008,2), aux254)
reify(w-literal(actionTypes_00008,2), aux255)
reify(w-literal(actionTypes_00008,2), aux256)
reify(w-literal(actionTypes_00008,2), aux257)
reify(w-literal(actionTypes_00008,2), aux258)
reify(w-literal(actionTypes_00009,2), aux260)
reify(w-literal(actionTypes_00009,2), aux261)
reify(w-literal(actionTypes_00009,2), aux262)
reify(w-literal(actionTypes_00009,2), aux263)
reify(w-literal(actionTypes_00009,2), aux264)
reify(w-literal(actionTypes_00009,2), aux265)
reify(w-literal(actionTypes_00009,2), aux266)
reify(w-literal(actionTypes_00010,2), aux268)
reify(w-literal(actionTypes_00010,2), aux269)
reify(w-literal(actionTypes_00010,2), aux270)
reify(w-literal(actionTypes_00010,2), aux271)
reify(w-literal(actionTypes_00010,2), aux272)
reify(w-literal(actionTypes_00010,2), aux273)
reify(w-literal(actionTypes_00002,3), aux274)
reify(w-literal(actionTypes_00002,3), aux275)
reify(w-literal(actionTypes_00002,3), aux276)
reify(w-literal(actionTypes_00002,3), aux277)
reify(w-literal(actionTypes_00002,3), aux278)
reify(w-literal(actionTypes_00002,3), aux279)
reify(w-literal(actionTypes_00003,3), aux280)
reify(w-literal(actionTypes_00003,3), aux281)
reify(w-literal(actionTypes_00003,3), aux282)
reify(w-literal(actionTypes_00003,3), aux283)
reify(w-literal(actionTypes_00003,3), aux284)
reify(w-literal(actionTypes_00003,3), aux285)
reify(w-literal(actionTypes_00004,3), aux286)
reify(w-literal(actionTypes_00004,3), aux287)
reify(w-literal(actionTypes_00004,3), aux288)
reify(w-literal(actionTypes_00004,3), aux289)
reify(w-literal(actionTypes_00004,3), aux290)
reify(w-literal(actionTypes_00004,3), aux291)
reify(w-literal(actionTypes_00005,3), aux292)
reify(w-literal(actionTypes_00005,3), aux293)
reify(w-literal(actionTypes_00005,3), aux294)
reify(w-literal(actionTypes_00005,3), aux295)
reify(w-literal(actionTypes_00005,3), aux296)
reify(w-literal(actionTypes_00005,3), aux297)
reify(w-literal(actionTypes_00006,3), aux298)
reify(w-literal(actionTypes_00006,3), aux299)
reify(w-literal(actionTypes_00006,3), aux300)
reify(w-literal(actionTypes_00006,3), aux301)
reify(w-literal(actionTypes_00006,3), aux302)
reify(w-literal(actionTypes_00006,3), aux303)
reify(w-literal(actionTypes_00007,3), aux304)
reify(w-literal(actionTypes_00007,3), aux305)
reify(w-literal(actionTypes_00007,3), aux306)
reify(w-literal(actionTypes_00007,3), aux307)
reify(w-literal(actionTypes_00007,3), aux308)
reify(w-literal(actionTypes_00007,3), aux309)
reify(w-literal(actionTypes_00008,3), aux310)
reify(w-literal(actionTypes_00008,3), aux311)
reify(w-literal(actionTypes_00008,3), aux312)
reify(w-literal(actionTypes_00008,3), aux313)
reify(w-literal(actionTypes_00008,3), aux314)
reify(w-literal(actionTypes_00008,3), aux315)
reify(w-literal(actionTypes_00009,3), aux316)
reify(w-literal(actionTypes_00009,3), aux317)
reify(w-literal(actionTypes_00009,3), aux318)
reify(w-literal(actionTypes_00009,3), aux319)
reify(w-literal(actionTypes_00009,3), aux320)
reify(w-literal(actionTypes_00009,3), aux321)
reify(w-literal(actionTypes_00010,3), aux322)
reify(w-literal(actionTypes_00010,3), aux323)
reify(w-literal(actionTypes_00010,3), aux324)
reify(w-literal(actionTypes_00010,3), aux325)
reify(w-literal(actionTypes_00010,3), aux326)
reify(w-literal(actionTypes_00010,3), aux327)
reify(w-literal(actionTypes_00002,4), aux328)
reify(w-literal(actionTypes_00002,4), aux329)
reify(w-literal(actionTypes_00002,4), aux330)
reify(w-literal(actionTypes_00002,4), aux331)
reify(w-literal(actionTypes_00002,4), aux332)
reify(w-literal(actionTypes_00003,4), aux333)
reify(w-literal(actionTypes_00003,4), aux334)
reify(w-literal(actionTypes_00003,4), aux335)
reify(w-literal(actionTypes_00003,4), aux336)
reify(w-literal(actionTypes_00003,4), aux337)
reify(w-literal(actionTypes_00003,4), aux338)
reify(w-literal(actionTypes_00004,4), aux339)
reify(w-literal(actionTypes_00004,4), aux340)
reify(w-literal(actionTypes_00004,4), aux341)
reify(w-literal(actionTypes_00004,4), aux342)
reify(w-literal(actionTypes_00004,4), aux343)
reify(w-literal(actionTypes_00004,4), aux344)
reify(w-literal(actionTypes_00005,4), aux345)
reify(w-literal(actionTypes_00005,4), aux346)
reify(w-literal(actionTypes_00005,4), aux347)
reify(w-literal(actionTypes_00005,4), aux348)
reify(w-literal(actionTypes_00005,4), aux349)
reify(w-literal(actionTypes_00005,4), aux350)
reify(w-literal(actionTypes_00006,4), aux351)
reify(w-literal(actionTypes_00006,4), aux352)
reify(w-literal(actionTypes_00006,4), aux353)
reify(w-literal(actionTypes_00006,4), aux354)
reify(w-literal(actionTypes_00006,4), aux355)
reify(w-literal(actionTypes_00006,4), aux356)
reify(w-literal(actionTypes_00007,4), aux357)
reify(w-literal(actionTypes_00007,4), aux358)
reify(w-literal(actionTypes_00007,4), aux359)
reify(w-literal(actionTypes_00007,4), aux360)
reify(w-literal(actionTypes_00007,4), aux361)
reify(w-literal(actionTypes_00007,4), aux362)
reify(w-literal(actionTypes_00008,4), aux363)
reify(w-literal(actionTypes_00008,4), aux364)
reify(w-literal(actionTypes_00008,4), aux365)
reify(w-literal(actionTypes_00008,4), aux366)
reify(w-literal(actionTypes_00008,4), aux367)
reify(w-literal(actionTypes_00008,4), aux368)
reify(w-literal(actionTypes_00009,4), aux369)
reify(w-literal(actionTypes_00009,4), aux370)
reify(w-literal(actionTypes_00009,4), aux371)
reify(w-literal(actionTypes_00009,4), aux372)
reify(w-literal(actionTypes_00009,4), aux373)
reify(w-literal(actionTypes_00009,4), aux374)
reify(w-literal(actionTypes_00010,4), aux375)
reify(w-literal(actionTypes_00010,4), aux376)
reify(w-literal(actionTypes_00010,4), aux377)
reify(w-literal(actionTypes_00010,4), aux378)
reify(w-literal(actionTypes_00010,4), aux379)
reify(w-literal(actionTypes_00010,4), aux380)
reify(w-literal(actionTypes_00002,5), aux381)
reify(w-literal(actionTypes_00002,5), aux382)
reify(w-literal(actionTypes_00002,5), aux383)
reify(w-literal(actionTypes_00002,5), aux384)
watchelement_undefzero([3, -1, -1], aux77, aux385)
reify(w-literal(actionTypes_00002,5), aux386)
reify(w-literal(actionTypes_00002,5), aux387)
reify(w-literal(actionTypes_00002,5), aux388)
watchelement_undefzero([3, -1, -1], aux96, aux389)
reify(w-literal(actionTypes_00002,5), aux390)
reify(w-literal(actionTypes_00003,5), aux391)
reify(w-literal(actionTypes_00003,5), aux392)
reify(w-literal(actionTypes_00003,5), aux393)
reify(w-literal(actionTypes_00003,5), aux394)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002], aux76, aux395)
reify(w-literal(actionTypes_00003,5), aux396)
reify(w-literal(actionTypes_00003,5), aux397)
reify(w-literal(actionTypes_00003,5), aux398)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002], aux93, aux399)
reify(w-literal(actionTypes_00003,5), aux400)
reify(w-literal(actionTypes_00004,5), aux401)
reify(w-literal(actionTypes_00004,5), aux402)
reify(w-literal(actionTypes_00004,5), aux403)
reify(w-literal(actionTypes_00004,5), aux404)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003], aux79, aux405)
reify(w-literal(actionTypes_00004,5), aux406)
reify(w-literal(actionTypes_00004,5), aux407)
reify(w-literal(actionTypes_00004,5), aux408)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003], aux71, aux409)
reify(w-literal(actionTypes_00004,5), aux410)
reify(w-literal(actionTypes_00005,5), aux411)
reify(w-literal(actionTypes_00005,5), aux412)
reify(w-literal(actionTypes_00005,5), aux413)
reify(w-literal(actionTypes_00005,5), aux414)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004], aux78, aux415)
reify(w-literal(actionTypes_00005,5), aux416)
reify(w-literal(actionTypes_00005,5), aux417)
reify(w-literal(actionTypes_00005,5), aux418)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004], aux70, aux419)
reify(w-literal(actionTypes_00005,5), aux420)
reify(w-literal(actionTypes_00006,5), aux421)
reify(w-literal(actionTypes_00006,5), aux422)
reify(w-literal(actionTypes_00006,5), aux423)
reify(w-literal(actionTypes_00006,5), aux424)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005], aux73, aux425)
reify(w-literal(actionTypes_00006,5), aux426)
reify(w-literal(actionTypes_00006,5), aux427)
reify(w-literal(actionTypes_00006,5), aux428)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005], aux94, aux429)
reify(w-literal(actionTypes_00006,5), aux430)
reify(w-literal(actionTypes_00007,5), aux431)
reify(w-literal(actionTypes_00007,5), aux432)
reify(w-literal(actionTypes_00007,5), aux433)
reify(w-literal(actionTypes_00007,5), aux434)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006], aux72, aux435)
reify(w-literal(actionTypes_00007,5), aux436)
reify(w-literal(actionTypes_00007,5), aux437)
reify(w-literal(actionTypes_00007,5), aux438)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006], aux95, aux439)
reify(w-literal(actionTypes_00007,5), aux440)
reify(w-literal(actionTypes_00008,5), aux441)
reify(w-literal(actionTypes_00008,5), aux442)
reify(w-literal(actionTypes_00008,5), aux443)
reify(w-literal(actionTypes_00008,5), aux444)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007], aux75, aux445)
reify(w-literal(actionTypes_00008,5), aux446)
reify(w-literal(actionTypes_00008,5), aux447)
reify(w-literal(actionTypes_00008,5), aux448)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007], aux83, aux449)
reify(w-literal(actionTypes_00008,5), aux450)
reify(w-literal(actionTypes_00009,5), aux451)
reify(w-literal(actionTypes_00009,5), aux452)
reify(w-literal(actionTypes_00009,5), aux453)
reify(w-literal(actionTypes_00009,5), aux454)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008], aux74, aux455)
reify(w-literal(actionTypes_00009,5), aux456)
reify(w-literal(actionTypes_00009,5), aux457)
reify(w-literal(actionTypes_00009,5), aux458)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008], aux81, aux459)
reify(w-literal(actionTypes_00009,5), aux460)
reify(w-literal(actionTypes_00010,5), aux461)
reify(w-literal(actionTypes_00010,5), aux462)
reify(w-literal(actionTypes_00010,5), aux463)
reify(w-literal(actionTypes_00010,5), aux464)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009], aux80, aux465)
reify(w-literal(actionTypes_00010,5), aux466)
reify(w-literal(actionTypes_00010,5), aux467)
reify(w-literal(actionTypes_00010,5), aux468)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009], aux82, aux469)
reify(w-literal(actionTypes_00010,5), aux470)
reify(watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010], aux80, aux64), aux52)
reify(watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008], aux75, aux68), aux53)
reify(watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009], aux74, aux63), aux54)
reify(watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005], aux78, aux65), aux55)
reify(watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006], aux73, aux67), aux56)
reify(watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007], aux72, aux69), aux57)
reify(watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003], aux76, aux61), aux58)
reify(watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004], aux79, aux66), aux59)
reify(watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002], aux77, aux62), aux60)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003], aux93, aux61)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002], aux96, aux62)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009], aux81, aux63)
watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010], aux82, aux64)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005], aux70, aux65)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004], aux71, aux66)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006], aux94, aux67)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008], aux83, aux68)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007], aux95, aux69)
reify(w-inintervalset(actionTo_00010,[2,4]), aux84)
reify(w-inintervalset(actionTo_00002,[2,4]), aux85)
reify(w-inintervalset(actionTo_00003,[2,4]), aux86)
reify(w-inintervalset(actionTo_00004,[2,4]), aux87)
reify(w-inintervalset(actionTo_00005,[2,4]), aux88)
reify(w-inintervalset(actionTo_00006,[2,4]), aux89)
reify(w-inintervalset(actionTo_00007,[2,4]), aux90)
reify(w-inintervalset(actionTo_00008,[2,4]), aux91)
reify(w-inintervalset(actionTo_00009,[2,4]), aux92)
reify(w-inintervalset(actionFrom_00009,[2,4]), aux97)
reify(w-inintervalset(actionFrom_00007,[2,4]), aux98)
reify(w-inintervalset(actionFrom_00008,[2,4]), aux99)
reify(w-inintervalset(actionFrom_00002,[2,4]), aux100)
reify(w-inintervalset(actionFrom_00005,[2,4]), aux101)
reify(w-inintervalset(actionFrom_00006,[2,4]), aux102)
reify(w-inintervalset(actionFrom_00003,[2,4]), aux103)
reify(w-inintervalset(actionFrom_00004,[2,4]), aux104)
reify(w-inintervalset(actionFrom_00010,[2,4]), aux105)
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009],[statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010],[statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00010, 3])})
watched-or({lexless([3, -1, -1],[statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002]),ineq(statePlaces_00002_00002, 3, -1),lexless([1, 0],[pointers_00000_00002, pointers_00001_00002])})
watched-or({lexless([3, -1, -1],[statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003]),ineq(statePlaces_00002_00003, 3, -1),lexless([1, 0],[pointers_00000_00003, pointers_00001_00003])})
watched-or({lexless([3, -1, -1],[statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004]),ineq(statePlaces_00002_00004, 3, -1),lexless([1, 0],[pointers_00000_00004, pointers_00001_00004])})
watched-or({lexless([3, -1, -1],[statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005]),ineq(statePlaces_00002_00005, 3, -1),lexless([1, 0],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([3, -1, -1],[statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006]),ineq(statePlaces_00002_00006, 3, -1),lexless([1, 0],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([3, -1, -1],[statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007]),ineq(statePlaces_00002_00007, 3, -1),lexless([1, 0],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([3, -1, -1],[statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008]),ineq(statePlaces_00002_00008, 3, -1),lexless([1, 0],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([3, -1, -1],[statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009]),ineq(statePlaces_00002_00009, 3, -1),lexless([1, 0],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([3, -1, -1],[statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010]),ineq(statePlaces_00002_00010, 3, -1),lexless([1, 0],[pointers_00000_00010, 3])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002],[statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003]),lexless([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003],[statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00003, pointers_00001_00003])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002],[statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004]),lexless([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004],[statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00004, pointers_00001_00004])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002],[statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005],[statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002],[statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006],[statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002],[statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007],[statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002],[statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008],[statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002],[statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009],[statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002],[statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010],[statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00010, 3])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003],[statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004]),lexless([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004],[statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00004, pointers_00001_00004])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003],[statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005],[statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003],[statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006],[statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003],[statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007],[statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003],[statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008],[statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003],[statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009],[statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003],[statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010],[statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00010, 3])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004],[statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005],[statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004],[statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006],[statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004],[statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007],[statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004],[statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008],[statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004],[statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009],[statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004],[statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010],[statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00010, 3])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005],[statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006],[statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005],[statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007],[statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005],[statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008],[statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005],[statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009],[statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005],[statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010],[statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00010, 3])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006],[statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007],[statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006],[statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008],[statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006],[statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009],[statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006],[statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010],[statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00010, 3])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007],[statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008],[statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007],[statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009],[statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007],[statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010],[statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00010, 3])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008],[statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009],[statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008],[statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010],[statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00010, 3])})
reifyimply(w-literal(pointers_00000_00002,1), aux106)
reifyimply(gaceq(pointers_00000_00002,pointers_00000_00003), aux107)
reifyimply(gaceq(pointers_00000_00003,pointers_00000_00004), aux108)
reifyimply(gaceq(pointers_00000_00004,pointers_00000_00005), aux109)
reifyimply(gaceq(pointers_00000_00005,pointers_00000_00006), aux110)
reifyimply(gaceq(pointers_00000_00006,pointers_00000_00007), aux111)
reifyimply(gaceq(pointers_00000_00007,pointers_00000_00008), aux112)
reifyimply(gaceq(pointers_00000_00008,pointers_00000_00009), aux113)
reifyimply(gaceq(pointers_00000_00009,pointers_00000_00010), aux114)
reifyimply(w-literal(pointers_00001_00002,0), aux115)
reifyimply(gaceq(pointers_00001_00002,pointers_00001_00003), aux116)
reifyimply(gaceq(pointers_00001_00003,pointers_00001_00004), aux117)
reifyimply(gaceq(pointers_00001_00004,pointers_00001_00005), aux118)
reifyimply(gaceq(pointers_00001_00005,pointers_00001_00006), aux119)
reifyimply(gaceq(pointers_00001_00006,pointers_00001_00007), aux120)
reifyimply(gaceq(pointers_00001_00007,pointers_00001_00008), aux121)
reifyimply(gaceq(pointers_00001_00008,pointers_00001_00009), aux122)
reifyimply(w-literal(pointers_00001_00009,3), aux123)
reifyimply(w-literal(statePlaces_00003_00002,-1), aux124)
reifyimply(w-literal(statePlaces_00004_00002,-1), aux125)
reifyimply(gaceq(statePlaces_00003_00002,statePlaces_00003_00003), aux126)
reifyimply(gaceq(statePlaces_00004_00002,statePlaces_00004_00003), aux127)
reifyimply(gaceq(statePlaces_00003_00003,statePlaces_00003_00004), aux128)
reifyimply(gaceq(statePlaces_00004_00003,statePlaces_00004_00004), aux129)
reifyimply(gaceq(statePlaces_00003_00004,statePlaces_00003_00005), aux130)
reifyimply(gaceq(statePlaces_00004_00004,statePlaces_00004_00005), aux131)
reifyimply(gaceq(statePlaces_00003_00005,statePlaces_00003_00006), aux132)
reifyimply(gaceq(statePlaces_00004_00005,statePlaces_00004_00006), aux133)
reifyimply(gaceq(statePlaces_00003_00006,statePlaces_00003_00007), aux134)
reifyimply(gaceq(statePlaces_00004_00006,statePlaces_00004_00007), aux135)
reifyimply(gaceq(statePlaces_00003_00007,statePlaces_00003_00008), aux136)
reifyimply(gaceq(statePlaces_00004_00007,statePlaces_00004_00008), aux137)
reifyimply(gaceq(statePlaces_00003_00008,statePlaces_00003_00009), aux138)
reifyimply(gaceq(statePlaces_00004_00008,statePlaces_00004_00009), aux139)
reifyimply(gaceq(statePlaces_00003_00009,statePlaces_00003_00010), aux140)
reifyimply(gaceq(statePlaces_00004_00009,statePlaces_00004_00010), aux141)
reifyimply(w-literal(statePlaces_00002_00002,3), aux142)
reifyimply(gaceq(statePlaces_00002_00002,statePlaces_00002_00003), aux143)
reifyimply(gaceq(statePlaces_00002_00003,statePlaces_00002_00004), aux144)
reifyimply(gaceq(statePlaces_00002_00004,statePlaces_00002_00005), aux145)
reifyimply(gaceq(statePlaces_00002_00005,statePlaces_00002_00006), aux146)
reifyimply(gaceq(statePlaces_00002_00006,statePlaces_00002_00007), aux147)
reifyimply(gaceq(statePlaces_00002_00007,statePlaces_00002_00008), aux148)
reifyimply(gaceq(statePlaces_00002_00008,statePlaces_00002_00009), aux149)
reifyimply(gaceq(statePlaces_00002_00009,statePlaces_00002_00010), aux150)
reifyimply(w-literal(pointers_00000_00002,2), aux151)
reifyimply(w-literal(actionFrom_00002,0), aux152)
reifyimply(w-literal(actionTo_00002,2), aux153)
reifyimply(w-inintervalset(pointers_00000_00002,[1,3]), aux154)
reifyimply(watchelement_undefzero([3, 2, 1], aux156, statePlaces_00002_00002), aux155)
reifyimply(w-literal(actionFrom_00003,0), aux158)
reifyimply(w-literal(actionTo_00003,2), aux159)
reifyimply(w-inintervalset(pointers_00000_00003,[1,3]), aux160)
reifyimply(watchelement_undefzero([3, 2, 1], aux162, statePlaces_00002_00003), aux161)
reifyimply(w-literal(actionFrom_00004,0), aux164)
reifyimply(w-literal(actionTo_00004,2), aux165)
reifyimply(w-inintervalset(pointers_00000_00004,[1,3]), aux166)
reifyimply(watchelement_undefzero([3, 2, 1], aux168, statePlaces_00002_00004), aux167)
reifyimply(w-literal(actionFrom_00005,0), aux170)
reifyimply(w-literal(actionTo_00005,2), aux171)
reifyimply(w-inintervalset(pointers_00000_00005,[1,3]), aux172)
reifyimply(watchelement_undefzero([3, 2, 1], aux174, statePlaces_00002_00005), aux173)
reifyimply(w-literal(actionFrom_00006,0), aux176)
reifyimply(w-literal(actionTo_00006,2), aux177)
reifyimply(w-inintervalset(pointers_00000_00006,[1,3]), aux178)
reifyimply(watchelement_undefzero([3, 2, 1], aux180, statePlaces_00002_00006), aux179)
reifyimply(w-literal(actionFrom_00007,0), aux182)
reifyimply(w-literal(actionTo_00007,2), aux183)
reifyimply(w-inintervalset(pointers_00000_00007,[1,3]), aux184)
reifyimply(watchelement_undefzero([3, 2, 1], aux186, statePlaces_00002_00007), aux185)
reifyimply(w-literal(actionFrom_00008,0), aux188)
reifyimply(w-literal(actionTo_00008,2), aux189)
reifyimply(w-inintervalset(pointers_00000_00008,[1,3]), aux190)
reifyimply(watchelement_undefzero([3, 2, 1], aux192, statePlaces_00002_00008), aux191)
reifyimply(w-literal(actionFrom_00009,0), aux194)
reifyimply(w-literal(actionTo_00009,2), aux195)
reifyimply(w-inintervalset(pointers_00000_00009,[1,3]), aux196)
reifyimply(watchelement_undefzero([3, 2, 1], aux198, statePlaces_00002_00009), aux197)
reifyimply(w-literal(actionFrom_00010,0), aux200)
reifyimply(w-literal(actionTo_00010,2), aux201)
reifyimply(w-inintervalset(pointers_00000_00010,[1,3]), aux202)
reifyimply(watchelement_undefzero([3, 2, 1], aux204, statePlaces_00002_00010), aux203)
reifyimply(diseq(statePlaces_00002_00002,-1), aux205)
reifyimply(w-literal(pointers_00001_00002,1), aux206)
reifyimply(w-literal(actionFrom_00002,2), aux207)
reifyimply(w-literal(actionTo_00002,1), aux208)
reifyimply(w-inintervalset(pointers_00001_00002,[1,3]), aux209)
reifyimply(watchelement_undefzero([1, 2, 3], aux211, 3), aux210)
reifyimply(diseq(statePlaces_00002_00003,-1), aux212)
reifyimply(diseq(statePlaces_00002_00002,-1), aux213)
reifyimply(w-literal(actionFrom_00003,2), aux215)
reifyimply(w-literal(actionTo_00003,1), aux216)
reifyimply(w-inintervalset(pointers_00001_00003,[1,3]), aux217)
reifyimply(watchelement_undefzero([1, 2, 3], aux219, statePlaces_00002_00002), aux218)
reifyimply(diseq(statePlaces_00002_00004,-1), aux220)
reifyimply(diseq(statePlaces_00002_00003,-1), aux221)
reifyimply(w-literal(actionFrom_00004,2), aux223)
reifyimply(w-literal(actionTo_00004,1), aux224)
reifyimply(w-inintervalset(pointers_00001_00004,[1,3]), aux225)
reifyimply(watchelement_undefzero([1, 2, 3], aux227, statePlaces_00002_00003), aux226)
reifyimply(diseq(statePlaces_00002_00005,-1), aux228)
reifyimply(diseq(statePlaces_00002_00004,-1), aux229)
reifyimply(w-literal(actionFrom_00005,2), aux231)
reifyimply(w-literal(actionTo_00005,1), aux232)
reifyimply(w-inintervalset(pointers_00001_00005,[1,3]), aux233)
reifyimply(watchelement_undefzero([1, 2, 3], aux235, statePlaces_00002_00004), aux234)
reifyimply(diseq(statePlaces_00002_00006,-1), aux236)
reifyimply(diseq(statePlaces_00002_00005,-1), aux237)
reifyimply(w-literal(actionFrom_00006,2), aux239)
reifyimply(w-literal(actionTo_00006,1), aux240)
reifyimply(w-inintervalset(pointers_00001_00006,[1,3]), aux241)
reifyimply(watchelement_undefzero([1, 2, 3], aux243, statePlaces_00002_00005), aux242)
reifyimply(diseq(statePlaces_00002_00007,-1), aux244)
reifyimply(diseq(statePlaces_00002_00006,-1), aux245)
reifyimply(w-literal(actionFrom_00007,2), aux247)
reifyimply(w-literal(actionTo_00007,1), aux248)
reifyimply(w-inintervalset(pointers_00001_00007,[1,3]), aux249)
reifyimply(watchelement_undefzero([1, 2, 3], aux251, statePlaces_00002_00006), aux250)
reifyimply(diseq(statePlaces_00002_00008,-1), aux252)
reifyimply(diseq(statePlaces_00002_00007,-1), aux253)
reifyimply(w-literal(actionFrom_00008,2), aux255)
reifyimply(w-literal(actionTo_00008,1), aux256)
reifyimply(w-inintervalset(pointers_00001_00008,[1,3]), aux257)
reifyimply(watchelement_undefzero([1, 2, 3], aux259, statePlaces_00002_00007), aux258)
reifyimply(diseq(statePlaces_00002_00009,-1), aux260)
reifyimply(diseq(statePlaces_00002_00008,-1), aux261)
reifyimply(w-literal(actionFrom_00009,2), aux263)
reifyimply(w-literal(actionTo_00009,1), aux264)
reifyimply(w-inintervalset(pointers_00001_00009,[1,3]), aux265)
reifyimply(watchelement_undefzero([1, 2, 3], aux267, statePlaces_00002_00008), aux266)
reifyimply(diseq(statePlaces_00002_00010,-1), aux268)
reifyimply(diseq(statePlaces_00002_00009,-1), aux269)
reifyimply(w-literal(pointers_00001_00009,2), aux270)
reifyimply(w-literal(actionFrom_00010,2), aux271)
reifyimply(w-literal(actionTo_00010,1), aux272)
reifyimply(w-literal(statePlaces_00002_00009,3), aux273)
ineq(aux274, aux100, 0)
ineq(aux275, aux60, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux276)
reifyimply(diseq(-1,aux62), aux277)
reifyimply(w-literal(actionTo_00002,2), aux278)
ineq(aux279, aux85, 0)
ineq(aux280, aux103, 0)
ineq(aux281, aux58, 0)
reifyimply(ineq(3, actionFrom_00003, 0), aux282)
reifyimply(diseq(-1,aux61), aux283)
reifyimply(w-literal(actionTo_00003,2), aux284)
ineq(aux285, aux86, 0)
ineq(aux286, aux104, 0)
ineq(aux287, aux59, 0)
reifyimply(ineq(3, actionFrom_00004, 0), aux288)
reifyimply(diseq(-1,aux66), aux289)
reifyimply(w-literal(actionTo_00004,2), aux290)
ineq(aux291, aux87, 0)
ineq(aux292, aux101, 0)
ineq(aux293, aux55, 0)
reifyimply(ineq(3, actionFrom_00005, 0), aux294)
reifyimply(diseq(-1,aux65), aux295)
reifyimply(w-literal(actionTo_00005,2), aux296)
ineq(aux297, aux88, 0)
ineq(aux298, aux102, 0)
ineq(aux299, aux56, 0)
reifyimply(ineq(3, actionFrom_00006, 0), aux300)
reifyimply(diseq(-1,aux67), aux301)
reifyimply(w-literal(actionTo_00006,2), aux302)
ineq(aux303, aux89, 0)
ineq(aux304, aux98, 0)
ineq(aux305, aux57, 0)
reifyimply(ineq(3, actionFrom_00007, 0), aux306)
reifyimply(diseq(-1,aux69), aux307)
reifyimply(w-literal(actionTo_00007,2), aux308)
ineq(aux309, aux90, 0)
ineq(aux310, aux99, 0)
ineq(aux311, aux53, 0)
reifyimply(ineq(3, actionFrom_00008, 0), aux312)
reifyimply(diseq(-1,aux68), aux313)
reifyimply(w-literal(actionTo_00008,2), aux314)
ineq(aux315, aux91, 0)
ineq(aux316, aux97, 0)
ineq(aux317, aux54, 0)
reifyimply(ineq(3, actionFrom_00009, 0), aux318)
reifyimply(diseq(-1,aux63), aux319)
reifyimply(w-literal(actionTo_00009,2), aux320)
ineq(aux321, aux92, 0)
ineq(aux322, aux105, 0)
ineq(aux323, aux52, 0)
reifyimply(ineq(3, actionFrom_00010, 0), aux324)
reifyimply(diseq(-1,aux64), aux325)
reifyimply(w-literal(actionTo_00010,2), aux326)
ineq(aux327, aux84, 0)
reifyimply(ineq(3, actionTo_00002, 0), aux328)
reifyimply(w-literal(actionFrom_00002,2), aux329)
ineq(aux330, aux100, 0)
ineq(aux331, aux85, 0)
ineq(aux332, aux60, 0)
reifyimply(ineq(3, actionTo_00003, 0), aux333)
reifyimply(w-literal(actionFrom_00003,2), aux334)
reifyimply(diseq(statePlaces_00002_00002,-1), aux335)
ineq(aux336, aux103, 0)
ineq(aux337, aux86, 0)
ineq(aux338, aux58, 0)
reifyimply(ineq(3, actionTo_00004, 0), aux339)
reifyimply(w-literal(actionFrom_00004,2), aux340)
reifyimply(diseq(statePlaces_00002_00003,-1), aux341)
ineq(aux342, aux104, 0)
ineq(aux343, aux87, 0)
ineq(aux344, aux59, 0)
reifyimply(ineq(3, actionTo_00005, 0), aux345)
reifyimply(w-literal(actionFrom_00005,2), aux346)
reifyimply(diseq(statePlaces_00002_00004,-1), aux347)
ineq(aux348, aux101, 0)
ineq(aux349, aux88, 0)
ineq(aux350, aux55, 0)
reifyimply(ineq(3, actionTo_00006, 0), aux351)
reifyimply(w-literal(actionFrom_00006,2), aux352)
reifyimply(diseq(statePlaces_00002_00005,-1), aux353)
ineq(aux354, aux102, 0)
ineq(aux355, aux89, 0)
ineq(aux356, aux56, 0)
reifyimply(ineq(3, actionTo_00007, 0), aux357)
reifyimply(w-literal(actionFrom_00007,2), aux358)
reifyimply(diseq(statePlaces_00002_00006,-1), aux359)
ineq(aux360, aux98, 0)
ineq(aux361, aux90, 0)
ineq(aux362, aux57, 0)
reifyimply(ineq(3, actionTo_00008, 0), aux363)
reifyimply(w-literal(actionFrom_00008,2), aux364)
reifyimply(diseq(statePlaces_00002_00007,-1), aux365)
ineq(aux366, aux99, 0)
ineq(aux367, aux91, 0)
ineq(aux368, aux53, 0)
reifyimply(ineq(3, actionTo_00009, 0), aux369)
reifyimply(w-literal(actionFrom_00009,2), aux370)
reifyimply(diseq(statePlaces_00002_00008,-1), aux371)
ineq(aux372, aux97, 0)
ineq(aux373, aux92, 0)
ineq(aux374, aux54, 0)
reifyimply(ineq(3, actionTo_00010, 0), aux375)
reifyimply(w-literal(actionFrom_00010,2), aux376)
reifyimply(diseq(statePlaces_00002_00009,-1), aux377)
ineq(aux378, aux105, 0)
ineq(aux379, aux84, 0)
ineq(aux380, aux52, 0)
ineq(aux381, aux100, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux382)
reifyimply(diseq(-1,aux62), aux383)
reifyimply(diseq(-1,aux385), aux384)
reifyimply(w-literal(actionTo_00002,2), aux386)
ineq(aux387, aux85, 0)
reifyimply(diseq(-1,aux389), aux388)
ineq(aux391, aux103, 0)
reifyimply(ineq(3, actionFrom_00003, 0), aux392)
reifyimply(diseq(-1,aux61), aux393)
reifyimply(diseq(-1,aux395), aux394)
reifyimply(w-literal(actionTo_00003,2), aux396)
ineq(aux397, aux86, 0)
reifyimply(diseq(-1,aux399), aux398)
ineq(aux401, aux104, 0)
reifyimply(ineq(3, actionFrom_00004, 0), aux402)
reifyimply(diseq(-1,aux66), aux403)
reifyimply(diseq(-1,aux405), aux404)
reifyimply(w-literal(actionTo_00004,2), aux406)
ineq(aux407, aux87, 0)
reifyimply(diseq(-1,aux409), aux408)
ineq(aux411, aux101, 0)
reifyimply(ineq(3, actionFrom_00005, 0), aux412)
reifyimply(diseq(-1,aux65), aux413)
reifyimply(diseq(-1,aux415), aux414)
reifyimply(w-literal(actionTo_00005,2), aux416)
ineq(aux417, aux88, 0)
reifyimply(diseq(-1,aux419), aux418)
ineq(aux421, aux102, 0)
reifyimply(ineq(3, actionFrom_00006, 0), aux422)
reifyimply(diseq(-1,aux67), aux423)
reifyimply(diseq(-1,aux425), aux424)
reifyimply(w-literal(actionTo_00006,2), aux426)
ineq(aux427, aux89, 0)
reifyimply(diseq(-1,aux429), aux428)
ineq(aux431, aux98, 0)
reifyimply(ineq(3, actionFrom_00007, 0), aux432)
reifyimply(diseq(-1,aux69), aux433)
reifyimply(diseq(-1,aux435), aux434)
reifyimply(w-literal(actionTo_00007,2), aux436)
ineq(aux437, aux90, 0)
reifyimply(diseq(-1,aux439), aux438)
ineq(aux441, aux99, 0)
reifyimply(ineq(3, actionFrom_00008, 0), aux442)
reifyimply(diseq(-1,aux68), aux443)
reifyimply(diseq(-1,aux445), aux444)
reifyimply(w-literal(actionTo_00008,2), aux446)
ineq(aux447, aux91, 0)
reifyimply(diseq(-1,aux449), aux448)
ineq(aux451, aux97, 0)
reifyimply(ineq(3, actionFrom_00009, 0), aux452)
reifyimply(diseq(-1,aux63), aux453)
reifyimply(diseq(-1,aux455), aux454)
reifyimply(w-literal(actionTo_00009,2), aux456)
ineq(aux457, aux92, 0)
reifyimply(diseq(-1,aux459), aux458)
ineq(aux461, aux105, 0)
reifyimply(ineq(3, actionFrom_00010, 0), aux462)
reifyimply(diseq(-1,aux64), aux463)
reifyimply(diseq(-1,aux465), aux464)
reifyimply(w-literal(actionTo_00010,2), aux466)
ineq(aux467, aux84, 0)
reifyimply(diseq(-1,aux469), aux468)
sumleq([pointers_00000_00002,-1],aux156)
sumgeq([pointers_00000_00002,-1],aux156)
sumleq([pointers_00000_00003,-1],aux162)
sumgeq([pointers_00000_00003,-1],aux162)
sumleq([pointers_00000_00004,-1],aux168)
sumgeq([pointers_00000_00004,-1],aux168)
sumleq([pointers_00000_00005,-1],aux174)
sumgeq([pointers_00000_00005,-1],aux174)
sumleq([pointers_00000_00006,-1],aux180)
sumgeq([pointers_00000_00006,-1],aux180)
sumleq([pointers_00000_00007,-1],aux186)
sumgeq([pointers_00000_00007,-1],aux186)
sumleq([pointers_00000_00008,-1],aux192)
sumgeq([pointers_00000_00008,-1],aux192)
sumleq([pointers_00000_00009,-1],aux198)
sumgeq([pointers_00000_00009,-1],aux198)
sumleq([pointers_00000_00010,-1],aux204)
sumgeq([pointers_00000_00010,-1],aux204)
sumleq([pointers_00001_00002,-1],aux211)
sumgeq([pointers_00001_00002,-1],aux211)
sumleq([pointers_00001_00003,-1],aux219)
sumgeq([pointers_00001_00003,-1],aux219)
sumleq([pointers_00001_00004,-1],aux227)
sumgeq([pointers_00001_00004,-1],aux227)
sumleq([pointers_00001_00005,-1],aux235)
sumgeq([pointers_00001_00005,-1],aux235)
sumleq([pointers_00001_00006,-1],aux243)
sumgeq([pointers_00001_00006,-1],aux243)
sumleq([pointers_00001_00007,-1],aux251)
sumgeq([pointers_00001_00007,-1],aux251)
sumleq([pointers_00001_00008,-1],aux259)
sumgeq([pointers_00001_00008,-1],aux259)
sumleq([pointers_00001_00009,-1],aux267)
sumgeq([pointers_00001_00009,-1],aux267)
sumleq([actionFrom_00005,-2],aux70)
sumgeq([actionFrom_00005,-2],aux70)
sumleq([actionFrom_00004,-2],aux71)
sumgeq([actionFrom_00004,-2],aux71)
sumleq([actionTo_00007,-2],aux72)
sumgeq([actionTo_00007,-2],aux72)
sumleq([actionTo_00006,-2],aux73)
sumgeq([actionTo_00006,-2],aux73)
sumleq([actionTo_00009,-2],aux74)
sumgeq([actionTo_00009,-2],aux74)
sumleq([actionTo_00008,-2],aux75)
sumgeq([actionTo_00008,-2],aux75)
sumleq([actionTo_00003,-2],aux76)
sumgeq([actionTo_00003,-2],aux76)
sumleq([actionTo_00002,-2],aux77)
sumgeq([actionTo_00002,-2],aux77)
sumleq([actionTo_00005,-2],aux78)
sumgeq([actionTo_00005,-2],aux78)
sumleq([actionTo_00004,-2],aux79)
sumgeq([actionTo_00004,-2],aux79)
sumleq([actionTo_00010,-2],aux80)
sumgeq([actionTo_00010,-2],aux80)
sumleq([actionFrom_00009,-2],aux81)
sumgeq([actionFrom_00009,-2],aux81)
sumleq([actionFrom_00010,-2],aux82)
sumgeq([actionFrom_00010,-2],aux82)
sumleq([actionFrom_00008,-2],aux83)
sumgeq([actionFrom_00008,-2],aux83)
sumleq([actionFrom_00003,-2],aux93)
sumgeq([actionFrom_00003,-2],aux93)
sumleq([actionFrom_00006,-2],aux94)
sumgeq([actionFrom_00006,-2],aux94)
sumleq([actionFrom_00007,-2],aux95)
sumgeq([actionFrom_00007,-2],aux95)
sumleq([actionFrom_00002,-2],aux96)
sumgeq([actionFrom_00002,-2],aux96)
reifyimply(sumleq([pointers_00000_00002,1],pointers_00000_00003), aux157)
reifyimply(sumgeq([pointers_00000_00002,1],pointers_00000_00003), aux157)
reifyimply(sumleq([pointers_00000_00003,1],pointers_00000_00004), aux163)
reifyimply(sumgeq([pointers_00000_00003,1],pointers_00000_00004), aux163)
reifyimply(sumleq([pointers_00000_00004,1],pointers_00000_00005), aux169)
reifyimply(sumgeq([pointers_00000_00004,1],pointers_00000_00005), aux169)
reifyimply(sumleq([pointers_00000_00005,1],pointers_00000_00006), aux175)
reifyimply(sumgeq([pointers_00000_00005,1],pointers_00000_00006), aux175)
reifyimply(sumleq([pointers_00000_00006,1],pointers_00000_00007), aux181)
reifyimply(sumgeq([pointers_00000_00006,1],pointers_00000_00007), aux181)
reifyimply(sumleq([pointers_00000_00007,1],pointers_00000_00008), aux187)
reifyimply(sumgeq([pointers_00000_00007,1],pointers_00000_00008), aux187)
reifyimply(sumleq([pointers_00000_00008,1],pointers_00000_00009), aux193)
reifyimply(sumgeq([pointers_00000_00008,1],pointers_00000_00009), aux193)
reifyimply(sumleq([pointers_00000_00009,1],pointers_00000_00010), aux199)
reifyimply(sumgeq([pointers_00000_00009,1],pointers_00000_00010), aux199)
reifyimply(sumleq([pointers_00001_00002,1],pointers_00001_00003), aux214)
reifyimply(sumgeq([pointers_00001_00002,1],pointers_00001_00003), aux214)
reifyimply(sumleq([pointers_00001_00003,1],pointers_00001_00004), aux222)
reifyimply(sumgeq([pointers_00001_00003,1],pointers_00001_00004), aux222)
reifyimply(sumleq([pointers_00001_00004,1],pointers_00001_00005), aux230)
reifyimply(sumgeq([pointers_00001_00004,1],pointers_00001_00005), aux230)
reifyimply(sumleq([pointers_00001_00005,1],pointers_00001_00006), aux238)
reifyimply(sumgeq([pointers_00001_00005,1],pointers_00001_00006), aux238)
reifyimply(sumleq([pointers_00001_00006,1],pointers_00001_00007), aux246)
reifyimply(sumgeq([pointers_00001_00006,1],pointers_00001_00007), aux246)
reifyimply(sumleq([pointers_00001_00007,1],pointers_00001_00008), aux254)
reifyimply(sumgeq([pointers_00001_00007,1],pointers_00001_00008), aux254)
reifyimply(sumleq([pointers_00001_00008,1],pointers_00001_00009), aux262)
reifyimply(sumgeq([pointers_00001_00008,1],pointers_00001_00009), aux262)
reifyimply(sumleq([3,aux62],statePlaces_00002_00002), aux390)
reifyimply(sumgeq([3,aux62],statePlaces_00002_00002), aux390)
reifyimply(sumleq([statePlaces_00002_00002,aux61],statePlaces_00002_00003), aux400)
reifyimply(sumgeq([statePlaces_00002_00002,aux61],statePlaces_00002_00003), aux400)
reifyimply(sumleq([statePlaces_00002_00003,aux66],statePlaces_00002_00004), aux410)
reifyimply(sumgeq([statePlaces_00002_00003,aux66],statePlaces_00002_00004), aux410)
reifyimply(sumleq([statePlaces_00002_00004,aux65],statePlaces_00002_00005), aux420)
reifyimply(sumgeq([statePlaces_00002_00004,aux65],statePlaces_00002_00005), aux420)
reifyimply(sumleq([statePlaces_00002_00005,aux67],statePlaces_00002_00006), aux430)
reifyimply(sumgeq([statePlaces_00002_00005,aux67],statePlaces_00002_00006), aux430)
reifyimply(sumleq([statePlaces_00002_00006,aux69],statePlaces_00002_00007), aux440)
reifyimply(sumgeq([statePlaces_00002_00006,aux69],statePlaces_00002_00007), aux440)
reifyimply(sumleq([statePlaces_00002_00007,aux68],statePlaces_00002_00008), aux450)
reifyimply(sumgeq([statePlaces_00002_00007,aux68],statePlaces_00002_00008), aux450)
reifyimply(sumleq([statePlaces_00002_00008,aux63],statePlaces_00002_00009), aux460)
reifyimply(sumgeq([statePlaces_00002_00008,aux63],statePlaces_00002_00009), aux460)
reifyimply(sumleq([statePlaces_00002_00009,aux64],statePlaces_00002_00010), aux470)
reifyimply(sumgeq([statePlaces_00002_00009,aux64],statePlaces_00002_00010), aux470)
**EOF**
