MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 98
# CSE_active_eliminated_expressions = 376
# CSE_active_total_size = 864
**VARIABLES**
DISCRETE statePlaces_00002_00002 #
{-1..100}
DISCRETE statePlaces_00002_00003 #
{-1..100}
DISCRETE statePlaces_00002_00004 #
{-1..100}
DISCRETE statePlaces_00002_00005 #
{-1..100}
DISCRETE statePlaces_00002_00006 #
{-1..100}
DISCRETE statePlaces_00002_00007 #
{-1..100}
DISCRETE statePlaces_00002_00008 #
{-1..100}
DISCRETE statePlaces_00002_00009 #
{-1..100}
DISCRETE statePlaces_00002_00010 #
{-1..100}
DISCRETE statePlaces_00003_00002 #
{-1..100}
DISCRETE statePlaces_00003_00003 #
{-1..100}
DISCRETE statePlaces_00003_00004 #
{-1..100}
DISCRETE statePlaces_00003_00005 #
{-1..100}
DISCRETE statePlaces_00003_00006 #
{-1..100}
DISCRETE statePlaces_00003_00007 #
{-1..100}
DISCRETE statePlaces_00003_00008 #
{-1..100}
DISCRETE statePlaces_00003_00009 #
{-1..100}
DISCRETE statePlaces_00003_00010 #
{-1..100}
DISCRETE statePlaces_00003_00011 #
{-1..100}
DISCRETE statePlaces_00004_00002 #
{-1..100}
DISCRETE statePlaces_00004_00003 #
{-1..100}
DISCRETE statePlaces_00004_00004 #
{-1..100}
DISCRETE statePlaces_00004_00005 #
{-1..100}
DISCRETE statePlaces_00004_00006 #
{-1..100}
DISCRETE statePlaces_00004_00007 #
{-1..100}
DISCRETE statePlaces_00004_00008 #
{-1..100}
DISCRETE statePlaces_00004_00009 #
{-1..100}
DISCRETE statePlaces_00004_00010 #
{-1..100}
DISCRETE statePlaces_00004_00011 #
{-1..100}
DISCRETE statePlaces_00005_00002 #
{-1..100}
DISCRETE statePlaces_00005_00003 #
{-1..100}
DISCRETE statePlaces_00005_00004 #
{-1..100}
DISCRETE statePlaces_00005_00005 #
{-1..100}
DISCRETE statePlaces_00005_00006 #
{-1..100}
DISCRETE statePlaces_00005_00007 #
{-1..100}
DISCRETE statePlaces_00005_00008 #
{-1..100}
DISCRETE statePlaces_00005_00009 #
{-1..100}
DISCRETE statePlaces_00005_00010 #
{-1..100}
DISCRETE statePlaces_00005_00011 #
{-1..100}
DISCRETE actionTypes_00002 #
{1..8}
DISCRETE actionTypes_00003 #
{1..8}
DISCRETE actionTypes_00004 #
{1..8}
DISCRETE actionTypes_00005 #
{1..8}
DISCRETE actionTypes_00006 #
{1..8}
DISCRETE actionTypes_00007 #
{1..8}
DISCRETE actionTypes_00008 #
{1..8}
DISCRETE actionTypes_00009 #
{1..8}
DISCRETE actionTypes_00010 #
{1..8}
DISCRETE actionTypes_00011 #
{1..8}
DISCRETE actionFrom_00002 #
{0..5}
DISCRETE actionFrom_00003 #
{0..5}
DISCRETE actionFrom_00004 #
{0..5}
DISCRETE actionFrom_00005 #
{0..5}
DISCRETE actionFrom_00006 #
{0..5}
DISCRETE actionFrom_00007 #
{0..5}
DISCRETE actionFrom_00008 #
{0..5}
DISCRETE actionFrom_00009 #
{0..5}
DISCRETE actionFrom_00010 #
{0..5}
DISCRETE actionFrom_00011 #
{0..5}
DISCRETE actionTo_00002 #
{0..5}
DISCRETE actionTo_00003 #
{0..5}
DISCRETE actionTo_00004 #
{0..5}
DISCRETE actionTo_00005 #
{0..5}
DISCRETE actionTo_00006 #
{0..5}
DISCRETE actionTo_00007 #
{0..5}
DISCRETE actionTo_00008 #
{0..5}
DISCRETE actionTo_00009 #
{0..5}
DISCRETE actionTo_00010 #
{0..5}
DISCRETE actionTo_00011 #
{0..5}
DISCRETE pointers_00000_00002 #
{0..6}
DISCRETE pointers_00000_00003 #
{0..6}
DISCRETE pointers_00000_00004 #
{0..6}
DISCRETE pointers_00000_00005 #
{0..6}
DISCRETE pointers_00000_00006 #
{0..6}
DISCRETE pointers_00000_00007 #
{0..6}
DISCRETE pointers_00000_00008 #
{0..6}
DISCRETE pointers_00000_00009 #
{0..6}
DISCRETE pointers_00000_00010 #
{0..6}
DISCRETE pointers_00000_00011 #
{0..6}
DISCRETE pointers_00001_00002 #
{0..6}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00002, [0,2,4,6])
**VARIABLES**
DISCRETE pointers_00001_00003 #
{0..6}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00003, [0,2,4,6])
**VARIABLES**
DISCRETE pointers_00001_00004 #
{0..6}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00004, [0,2,4,6])
**VARIABLES**
DISCRETE pointers_00001_00005 #
{0..6}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00005, [0,2,4,6])
**VARIABLES**
DISCRETE pointers_00001_00006 #
{0..6}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00006, [0,2,4,6])
**VARIABLES**
DISCRETE pointers_00001_00007 #
{0..6}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00007, [0,2,4,6])
**VARIABLES**
DISCRETE pointers_00001_00008 #
{0..6}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00008, [0,2,4,6])
**VARIABLES**
DISCRETE pointers_00001_00009 #
{0..6}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00009, [0,2,4,6])
**VARIABLES**
DISCRETE pointers_00001_00010 #
{0..6}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00010, [0,2,4,6])
**VARIABLES**
BOOL aux59 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007], (actionTo_00007 + -2))=SafeElement([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007], (actionFrom_00007 + -2)))
BOOL aux60 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008], (actionTo_00008 + -2))=SafeElement([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008], (actionFrom_00008 + -2)))
BOOL aux61 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005], (actionTo_00005 + -2))=SafeElement([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005], (actionFrom_00005 + -2)))
BOOL aux62 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006], (actionTo_00006 + -2))=SafeElement([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006], (actionFrom_00006 + -2)))
BOOL aux63 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009], (actionTo_00009 + -2))=SafeElement([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009], (actionFrom_00009 + -2)))
BOOL aux64 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011], (actionFrom_00011 + -2))=SafeElement([6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011], (actionTo_00011 + -2)))
BOOL aux65 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003], (actionTo_00003 + -2))=SafeElement([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003], (actionFrom_00003 + -2)))
BOOL aux66 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010], (actionTo_00010 + -2))=SafeElement([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010], (actionFrom_00010 + -2)))
BOOL aux67 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004], (actionTo_00004 + -2))=SafeElement([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004], (actionFrom_00004 + -2)))
BOOL aux68 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002], (actionTo_00002 + -2))=SafeElement([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002], (actionFrom_00002 + -2)))
BOOL aux69 #Active-CSE: 2 occurrences of this expression or equivalent: ([6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011;int(2..5)] <lex [statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010;int(2..5)])
BOOL aux70 #Active-CSE: 2 occurrences of this expression or equivalent: ([6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011;int(2..5)] <lex [statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002;int(2..5)])
BOOL aux71 #Active-CSE: 2 occurrences of this expression or equivalent: ([6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011;int(2..5)] <lex [statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003;int(2..5)])
BOOL aux72 #Active-CSE: 2 occurrences of this expression or equivalent: ([6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011;int(2..5)] <lex [statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004;int(2..5)])
BOOL aux73 #Active-CSE: 2 occurrences of this expression or equivalent: ([6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011;int(2..5)] <lex [statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005;int(2..5)])
BOOL aux74 #Active-CSE: 2 occurrences of this expression or equivalent: ([6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011;int(2..5)] <lex [statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006;int(2..5)])
BOOL aux75 #Active-CSE: 2 occurrences of this expression or equivalent: ([6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011;int(2..5)] <lex [statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007;int(2..5)])
BOOL aux76 #Active-CSE: 2 occurrences of this expression or equivalent: ([6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011;int(2..5)] <lex [statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008;int(2..5)])
BOOL aux77 #Active-CSE: 2 occurrences of this expression or equivalent: ([6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011;int(2..5)] <lex [statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009;int(2..5)])
BOOL aux78 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002;int(2..5)] <lex [6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011;int(2..5)])
BOOL aux79 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003;int(2..5)] <lex [6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011;int(2..5)])
BOOL aux80 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004;int(2..5)] <lex [6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011;int(2..5)])
BOOL aux81 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005;int(2..5)] <lex [6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011;int(2..5)])
BOOL aux82 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006;int(2..5)] <lex [6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011;int(2..5)])
BOOL aux83 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007;int(2..5)] <lex [6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011;int(2..5)])
BOOL aux84 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008;int(2..5)] <lex [6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011;int(2..5)])
BOOL aux85 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009;int(2..5)] <lex [6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011;int(2..5)])
BOOL aux86 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010;int(2..5)] <lex [6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011;int(2..5)])
DISCRETE aux87 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005], (actionFrom_00006 + -2))
{-1..100}
DISCRETE aux88 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006], (actionFrom_00007 + -2))
{-1..100}
DISCRETE aux89 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004], (actionFrom_00004 + -2))
{-1..100}
DISCRETE aux90 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004], (actionFrom_00005 + -2))
{-1..100}
DISCRETE aux91 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008], (actionFrom_00008 + -2))
{-1..100}
DISCRETE aux92 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003], (actionFrom_00004 + -2))
{-1..100}
DISCRETE aux93 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010], (actionTo_00011 + -2))
{-1..100}
DISCRETE aux94 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002], (actionFrom_00003 + -2))
{-1..100}
DISCRETE aux95 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009], (actionTo_00010 + -2))
{-1..100}
DISCRETE aux96 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007], (actionTo_00008 + -2))
{-1..100}
DISCRETE aux97 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008], (actionTo_00009 + -2))
{-1..100}
DISCRETE aux98 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005], (actionFrom_00005 + -2))
{-1..100}
DISCRETE aux99 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010], (actionFrom_00010 + -2))
{-1..100}
DISCRETE aux100 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004], (actionTo_00005 + -2))
{-1..100}
DISCRETE aux101 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005], (actionTo_00006 + -2))
{-1..100}
DISCRETE aux102 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006], (actionTo_00007 + -2))
{-1..100}
DISCRETE aux103 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002], (actionTo_00003 + -2))
{-1..100}
DISCRETE aux104 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003], (actionTo_00004 + -2))
{-1..100}
DISCRETE aux105 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009], (actionFrom_00009 + -2))
{-1..100}
DISCRETE aux106 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002], (actionFrom_00002 + -2))
{-1..100}
DISCRETE aux107 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011], (actionFrom_00011 + -2))
{-1..100}
DISCRETE aux108 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006], (actionFrom_00006 + -2))
{-1..100}
DISCRETE aux109 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009], (actionFrom_00010 + -2))
{-1..100}
DISCRETE aux110 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([4, -1, -1, -1], (actionTo_00002 + -2))
{-1..4}
**CONSTRAINTS**
w-inintervalset(aux110, [-1,0,4,4])
**VARIABLES**
DISCRETE aux111 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003], (actionFrom_00003 + -2))
{-1..100}
DISCRETE aux112 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008], (actionFrom_00009 + -2))
{-1..100}
DISCRETE aux113 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007], (actionFrom_00007 + -2))
{-1..100}
DISCRETE aux114 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010], (actionFrom_00011 + -2))
{-1..100}
DISCRETE aux115 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([4, -1, -1, -1], (actionFrom_00002 + -2))
{-1..4}
**CONSTRAINTS**
w-inintervalset(aux115, [-1,0,4,4])
**VARIABLES**
DISCRETE aux116 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007], (actionFrom_00008 + -2))
{-1..100}
BOOL aux117 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00011 in int(2..5))
DISCRETE aux118 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00009 + -2)
{-2..3}
BOOL aux119 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00009 in int(2..5))
BOOL aux120 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00004 in int(2..5))
BOOL aux121 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00003 in int(2..5))
BOOL aux122 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00010 in int(2..5))
BOOL aux123 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00008 in int(2..5))
BOOL aux124 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00011 in int(2..5))
BOOL aux125 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00010 in int(2..5))
DISCRETE aux126 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00002 + -2)
{-2..3}
DISCRETE aux127 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00007 + -2)
{-2..3}
DISCRETE aux128 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00010 + -2)
{-2..3}
BOOL aux129 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00005 in int(2..5))
DISCRETE aux130 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00011 + -2)
{-2..3}
DISCRETE aux131 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00010 + -2)
{-2..3}
BOOL aux132 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00009 in int(2..5))
DISCRETE aux133 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00008 + -2)
{-2..3}
DISCRETE aux134 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00011 + -2)
{-2..3}
BOOL aux135 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00006 in int(2..5))
DISCRETE aux136 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00005 + -2)
{-2..3}
DISCRETE aux137 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00008 + -2)
{-2..3}
DISCRETE aux138 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00009 + -2)
{-2..3}
DISCRETE aux139 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00007 + -2)
{-2..3}
DISCRETE aux140 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00006 + -2)
{-2..3}
DISCRETE aux141 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00005 + -2)
{-2..3}
DISCRETE aux142 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00004 + -2)
{-2..3}
DISCRETE aux143 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00003 + -2)
{-2..3}
DISCRETE aux144 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00002 + -2)
{-2..3}
DISCRETE aux145 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00006 + -2)
{-2..3}
BOOL aux146 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00007 in int(2..5))
DISCRETE aux147 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00003 + -2)
{-2..3}
BOOL aux148 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00006 in int(2..5))
BOOL aux149 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00005 in int(2..5))
BOOL aux150 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00004 in int(2..5))
BOOL aux151 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00008 in int(2..5))
BOOL aux152 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00007 in int(2..5))
BOOL aux153 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00002 in int(2..5))
BOOL aux154 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00003 in int(2..5))
BOOL aux155 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00002 in int(2..5))
DISCRETE aux156 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00004 + -2)
{-2..3}
BOOL aux157 #(1 != actionTypes_00002)
BOOL aux158 #(1 != actionTypes_00003)
BOOL aux159 #(1 != actionTypes_00004)
BOOL aux160 #(1 != actionTypes_00005)
BOOL aux161 #(1 != actionTypes_00006)
BOOL aux162 #(1 != actionTypes_00007)
BOOL aux163 #(1 != actionTypes_00008)
BOOL aux164 #(1 != actionTypes_00009)
BOOL aux165 #(1 != actionTypes_00010)
BOOL aux166 #(1 != actionTypes_00011)
BOOL aux167 #(2 != actionTypes_00002)
BOOL aux168 #(2 != actionTypes_00003)
BOOL aux169 #(2 != actionTypes_00004)
BOOL aux170 #(2 != actionTypes_00005)
BOOL aux171 #(2 != actionTypes_00006)
BOOL aux172 #(2 != actionTypes_00007)
BOOL aux173 #(2 != actionTypes_00008)
BOOL aux174 #(2 != actionTypes_00009)
BOOL aux175 #(2 != actionTypes_00010)
BOOL aux176 #(2 != actionTypes_00011)
BOOL aux177 #(((7=actionTypes_00002) /\ (actionFrom_00002 != 3)) \/ ((8=actionTypes_00002) /\ (actionFrom_00002 != 3)) \/ (1=actionTypes_00002) \/ (2=actionTypes_00002) \/ (3=actionTypes_00002) \/ (5=actionTypes_00002) \/ (6=actionTypes_00002) \/ ((4=actionTypes_00002) /\ (actionTo_00002 != 3)))
BOOL aux178 #(((7=actionTypes_00002) /\ (actionFrom_00002 != 4)) \/ ((8=actionTypes_00002) /\ (actionFrom_00002 != 4)) \/ (1=actionTypes_00002) \/ (2=actionTypes_00002) \/ (3=actionTypes_00002) \/ (5=actionTypes_00002) \/ (6=actionTypes_00002) \/ ((4=actionTypes_00002) /\ (actionTo_00002 != 4)))
BOOL aux179 #(((7=actionTypes_00002) /\ (actionFrom_00002 != 5)) \/ ((8=actionTypes_00002) /\ (actionFrom_00002 != 5)) \/ (1=actionTypes_00002) \/ (2=actionTypes_00002) \/ (3=actionTypes_00002) \/ (5=actionTypes_00002) \/ (6=actionTypes_00002) \/ ((4=actionTypes_00002) /\ (actionTo_00002 != 5)))
BOOL aux180 #(((7=actionTypes_00003) /\ (actionFrom_00003 != 3)) \/ ((8=actionTypes_00003) /\ (actionFrom_00003 != 3)) \/ (1=actionTypes_00003) \/ (2=actionTypes_00003) \/ (3=actionTypes_00003) \/ (5=actionTypes_00003) \/ (6=actionTypes_00003) \/ ((4=actionTypes_00003) /\ (actionTo_00003 != 3)))
BOOL aux181 #(((7=actionTypes_00003) /\ (actionFrom_00003 != 4)) \/ ((8=actionTypes_00003) /\ (actionFrom_00003 != 4)) \/ (1=actionTypes_00003) \/ (2=actionTypes_00003) \/ (3=actionTypes_00003) \/ (5=actionTypes_00003) \/ (6=actionTypes_00003) \/ ((4=actionTypes_00003) /\ (actionTo_00003 != 4)))
BOOL aux182 #(((7=actionTypes_00003) /\ (actionFrom_00003 != 5)) \/ ((8=actionTypes_00003) /\ (actionFrom_00003 != 5)) \/ (1=actionTypes_00003) \/ (2=actionTypes_00003) \/ (3=actionTypes_00003) \/ (5=actionTypes_00003) \/ (6=actionTypes_00003) \/ ((4=actionTypes_00003) /\ (actionTo_00003 != 5)))
BOOL aux183 #(((7=actionTypes_00004) /\ (actionFrom_00004 != 3)) \/ ((8=actionTypes_00004) /\ (actionFrom_00004 != 3)) \/ (1=actionTypes_00004) \/ (2=actionTypes_00004) \/ (3=actionTypes_00004) \/ (5=actionTypes_00004) \/ (6=actionTypes_00004) \/ ((4=actionTypes_00004) /\ (actionTo_00004 != 3)))
BOOL aux184 #(((7=actionTypes_00004) /\ (actionFrom_00004 != 4)) \/ ((8=actionTypes_00004) /\ (actionFrom_00004 != 4)) \/ (1=actionTypes_00004) \/ (2=actionTypes_00004) \/ (3=actionTypes_00004) \/ (5=actionTypes_00004) \/ (6=actionTypes_00004) \/ ((4=actionTypes_00004) /\ (actionTo_00004 != 4)))
BOOL aux185 #(((7=actionTypes_00004) /\ (actionFrom_00004 != 5)) \/ ((8=actionTypes_00004) /\ (actionFrom_00004 != 5)) \/ (1=actionTypes_00004) \/ (2=actionTypes_00004) \/ (3=actionTypes_00004) \/ (5=actionTypes_00004) \/ (6=actionTypes_00004) \/ ((4=actionTypes_00004) /\ (actionTo_00004 != 5)))
BOOL aux186 #(((7=actionTypes_00005) /\ (actionFrom_00005 != 3)) \/ ((8=actionTypes_00005) /\ (actionFrom_00005 != 3)) \/ (1=actionTypes_00005) \/ (2=actionTypes_00005) \/ (3=actionTypes_00005) \/ (5=actionTypes_00005) \/ (6=actionTypes_00005) \/ ((4=actionTypes_00005) /\ (actionTo_00005 != 3)))
BOOL aux187 #(((7=actionTypes_00005) /\ (actionFrom_00005 != 4)) \/ ((8=actionTypes_00005) /\ (actionFrom_00005 != 4)) \/ (1=actionTypes_00005) \/ (2=actionTypes_00005) \/ (3=actionTypes_00005) \/ (5=actionTypes_00005) \/ (6=actionTypes_00005) \/ ((4=actionTypes_00005) /\ (actionTo_00005 != 4)))
BOOL aux188 #(((7=actionTypes_00005) /\ (actionFrom_00005 != 5)) \/ ((8=actionTypes_00005) /\ (actionFrom_00005 != 5)) \/ (1=actionTypes_00005) \/ (2=actionTypes_00005) \/ (3=actionTypes_00005) \/ (5=actionTypes_00005) \/ (6=actionTypes_00005) \/ ((4=actionTypes_00005) /\ (actionTo_00005 != 5)))
BOOL aux189 #(((7=actionTypes_00006) /\ (actionFrom_00006 != 3)) \/ ((8=actionTypes_00006) /\ (actionFrom_00006 != 3)) \/ (1=actionTypes_00006) \/ (2=actionTypes_00006) \/ (3=actionTypes_00006) \/ (5=actionTypes_00006) \/ (6=actionTypes_00006) \/ ((4=actionTypes_00006) /\ (actionTo_00006 != 3)))
BOOL aux190 #(((7=actionTypes_00006) /\ (actionFrom_00006 != 4)) \/ ((8=actionTypes_00006) /\ (actionFrom_00006 != 4)) \/ (1=actionTypes_00006) \/ (2=actionTypes_00006) \/ (3=actionTypes_00006) \/ (5=actionTypes_00006) \/ (6=actionTypes_00006) \/ ((4=actionTypes_00006) /\ (actionTo_00006 != 4)))
BOOL aux191 #(((7=actionTypes_00006) /\ (actionFrom_00006 != 5)) \/ ((8=actionTypes_00006) /\ (actionFrom_00006 != 5)) \/ (1=actionTypes_00006) \/ (2=actionTypes_00006) \/ (3=actionTypes_00006) \/ (5=actionTypes_00006) \/ (6=actionTypes_00006) \/ ((4=actionTypes_00006) /\ (actionTo_00006 != 5)))
BOOL aux192 #(((7=actionTypes_00007) /\ (actionFrom_00007 != 3)) \/ ((8=actionTypes_00007) /\ (actionFrom_00007 != 3)) \/ (1=actionTypes_00007) \/ (2=actionTypes_00007) \/ (3=actionTypes_00007) \/ (5=actionTypes_00007) \/ (6=actionTypes_00007) \/ ((4=actionTypes_00007) /\ (actionTo_00007 != 3)))
BOOL aux193 #(((7=actionTypes_00007) /\ (actionFrom_00007 != 4)) \/ ((8=actionTypes_00007) /\ (actionFrom_00007 != 4)) \/ (1=actionTypes_00007) \/ (2=actionTypes_00007) \/ (3=actionTypes_00007) \/ (5=actionTypes_00007) \/ (6=actionTypes_00007) \/ ((4=actionTypes_00007) /\ (actionTo_00007 != 4)))
BOOL aux194 #(((7=actionTypes_00007) /\ (actionFrom_00007 != 5)) \/ ((8=actionTypes_00007) /\ (actionFrom_00007 != 5)) \/ (1=actionTypes_00007) \/ (2=actionTypes_00007) \/ (3=actionTypes_00007) \/ (5=actionTypes_00007) \/ (6=actionTypes_00007) \/ ((4=actionTypes_00007) /\ (actionTo_00007 != 5)))
BOOL aux195 #(((7=actionTypes_00008) /\ (actionFrom_00008 != 3)) \/ ((8=actionTypes_00008) /\ (actionFrom_00008 != 3)) \/ (1=actionTypes_00008) \/ (2=actionTypes_00008) \/ (3=actionTypes_00008) \/ (5=actionTypes_00008) \/ (6=actionTypes_00008) \/ ((4=actionTypes_00008) /\ (actionTo_00008 != 3)))
BOOL aux196 #(((7=actionTypes_00008) /\ (actionFrom_00008 != 4)) \/ ((8=actionTypes_00008) /\ (actionFrom_00008 != 4)) \/ (1=actionTypes_00008) \/ (2=actionTypes_00008) \/ (3=actionTypes_00008) \/ (5=actionTypes_00008) \/ (6=actionTypes_00008) \/ ((4=actionTypes_00008) /\ (actionTo_00008 != 4)))
BOOL aux197 #(((7=actionTypes_00008) /\ (actionFrom_00008 != 5)) \/ ((8=actionTypes_00008) /\ (actionFrom_00008 != 5)) \/ (1=actionTypes_00008) \/ (2=actionTypes_00008) \/ (3=actionTypes_00008) \/ (5=actionTypes_00008) \/ (6=actionTypes_00008) \/ ((4=actionTypes_00008) /\ (actionTo_00008 != 5)))
BOOL aux198 #(((7=actionTypes_00009) /\ (actionFrom_00009 != 3)) \/ ((8=actionTypes_00009) /\ (actionFrom_00009 != 3)) \/ (1=actionTypes_00009) \/ (2=actionTypes_00009) \/ (3=actionTypes_00009) \/ (5=actionTypes_00009) \/ (6=actionTypes_00009) \/ ((4=actionTypes_00009) /\ (actionTo_00009 != 3)))
BOOL aux199 #(((7=actionTypes_00009) /\ (actionFrom_00009 != 4)) \/ ((8=actionTypes_00009) /\ (actionFrom_00009 != 4)) \/ (1=actionTypes_00009) \/ (2=actionTypes_00009) \/ (3=actionTypes_00009) \/ (5=actionTypes_00009) \/ (6=actionTypes_00009) \/ ((4=actionTypes_00009) /\ (actionTo_00009 != 4)))
BOOL aux200 #(((7=actionTypes_00009) /\ (actionFrom_00009 != 5)) \/ ((8=actionTypes_00009) /\ (actionFrom_00009 != 5)) \/ (1=actionTypes_00009) \/ (2=actionTypes_00009) \/ (3=actionTypes_00009) \/ (5=actionTypes_00009) \/ (6=actionTypes_00009) \/ ((4=actionTypes_00009) /\ (actionTo_00009 != 5)))
BOOL aux201 #(((7=actionTypes_00010) /\ (actionFrom_00010 != 3)) \/ ((8=actionTypes_00010) /\ (actionFrom_00010 != 3)) \/ (1=actionTypes_00010) \/ (2=actionTypes_00010) \/ (3=actionTypes_00010) \/ (5=actionTypes_00010) \/ (6=actionTypes_00010) \/ ((4=actionTypes_00010) /\ (actionTo_00010 != 3)))
BOOL aux202 #(((7=actionTypes_00010) /\ (actionFrom_00010 != 4)) \/ ((8=actionTypes_00010) /\ (actionFrom_00010 != 4)) \/ (1=actionTypes_00010) \/ (2=actionTypes_00010) \/ (3=actionTypes_00010) \/ (5=actionTypes_00010) \/ (6=actionTypes_00010) \/ ((4=actionTypes_00010) /\ (actionTo_00010 != 4)))
BOOL aux203 #(((7=actionTypes_00010) /\ (actionFrom_00010 != 5)) \/ ((8=actionTypes_00010) /\ (actionFrom_00010 != 5)) \/ (1=actionTypes_00010) \/ (2=actionTypes_00010) \/ (3=actionTypes_00010) \/ (5=actionTypes_00010) \/ (6=actionTypes_00010) \/ ((4=actionTypes_00010) /\ (actionTo_00010 != 5)))
BOOL aux204 #(((7=actionTypes_00011) /\ (actionFrom_00011 != 3)) \/ ((8=actionTypes_00011) /\ (actionFrom_00011 != 3)) \/ (1=actionTypes_00011) \/ (2=actionTypes_00011) \/ (3=actionTypes_00011) \/ (5=actionTypes_00011) \/ (6=actionTypes_00011) \/ ((4=actionTypes_00011) /\ (actionTo_00011 != 3)))
BOOL aux205 #(((7=actionTypes_00011) /\ (actionFrom_00011 != 4)) \/ ((8=actionTypes_00011) /\ (actionFrom_00011 != 4)) \/ (1=actionTypes_00011) \/ (2=actionTypes_00011) \/ (3=actionTypes_00011) \/ (5=actionTypes_00011) \/ (6=actionTypes_00011) \/ ((4=actionTypes_00011) /\ (actionTo_00011 != 4)))
BOOL aux206 #(((7=actionTypes_00011) /\ (actionFrom_00011 != 5)) \/ ((8=actionTypes_00011) /\ (actionFrom_00011 != 5)) \/ (1=actionTypes_00011) \/ (2=actionTypes_00011) \/ (3=actionTypes_00011) \/ (5=actionTypes_00011) \/ (6=actionTypes_00011) \/ ((4=actionTypes_00011) /\ (actionTo_00011 != 5)))
BOOL aux207 #((2=actionTypes_00002) \/ (4=actionTypes_00002))
BOOL aux208 #((2=actionTypes_00003) \/ (4=actionTypes_00003))
BOOL aux209 #((2=actionTypes_00004) \/ (4=actionTypes_00004))
BOOL aux210 #((2=actionTypes_00005) \/ (4=actionTypes_00005))
BOOL aux211 #((2=actionTypes_00006) \/ (4=actionTypes_00006))
BOOL aux212 #((2=actionTypes_00007) \/ (4=actionTypes_00007))
BOOL aux213 #((2=actionTypes_00008) \/ (4=actionTypes_00008))
BOOL aux214 #((2=actionTypes_00009) \/ (4=actionTypes_00009))
BOOL aux215 #((2=actionTypes_00010) \/ (4=actionTypes_00010))
BOOL aux216 #((2=actionTypes_00011) \/ (4=actionTypes_00011))
BOOL aux217 #(1=actionTypes_00002)
BOOL aux218 #(1=actionTypes_00002)
BOOL aux219 #(1=actionTypes_00002)
BOOL aux220 #(1=actionTypes_00002)
BOOL aux221 #(1=actionTypes_00002)
DISCRETE aux222 #(pointers_00000_00002 + -1)
{-1..5}
BOOL aux223 #(1=actionTypes_00003)
BOOL aux224 #(1=actionTypes_00003)
BOOL aux225 #(1=actionTypes_00003)
BOOL aux226 #(1=actionTypes_00003)
BOOL aux227 #(1=actionTypes_00003)
DISCRETE aux228 #(pointers_00000_00003 + -1)
{-1..5}
BOOL aux229 #(1=actionTypes_00004)
BOOL aux230 #(1=actionTypes_00004)
BOOL aux231 #(1=actionTypes_00004)
BOOL aux232 #(1=actionTypes_00004)
BOOL aux233 #(1=actionTypes_00004)
DISCRETE aux234 #(pointers_00000_00004 + -1)
{-1..5}
BOOL aux235 #(1=actionTypes_00005)
BOOL aux236 #(1=actionTypes_00005)
BOOL aux237 #(1=actionTypes_00005)
BOOL aux238 #(1=actionTypes_00005)
BOOL aux239 #(1=actionTypes_00005)
DISCRETE aux240 #(pointers_00000_00005 + -1)
{-1..5}
BOOL aux241 #(1=actionTypes_00006)
BOOL aux242 #(1=actionTypes_00006)
BOOL aux243 #(1=actionTypes_00006)
BOOL aux244 #(1=actionTypes_00006)
BOOL aux245 #(1=actionTypes_00006)
DISCRETE aux246 #(pointers_00000_00006 + -1)
{-1..5}
BOOL aux247 #(1=actionTypes_00007)
BOOL aux248 #(1=actionTypes_00007)
BOOL aux249 #(1=actionTypes_00007)
BOOL aux250 #(1=actionTypes_00007)
BOOL aux251 #(1=actionTypes_00007)
DISCRETE aux252 #(pointers_00000_00007 + -1)
{-1..5}
BOOL aux253 #(1=actionTypes_00008)
BOOL aux254 #(1=actionTypes_00008)
BOOL aux255 #(1=actionTypes_00008)
BOOL aux256 #(1=actionTypes_00008)
BOOL aux257 #(1=actionTypes_00008)
DISCRETE aux258 #(pointers_00000_00008 + -1)
{-1..5}
BOOL aux259 #(1=actionTypes_00009)
BOOL aux260 #(1=actionTypes_00009)
BOOL aux261 #(1=actionTypes_00009)
BOOL aux262 #(1=actionTypes_00009)
BOOL aux263 #(1=actionTypes_00009)
DISCRETE aux264 #(pointers_00000_00009 + -1)
{-1..5}
BOOL aux265 #(1=actionTypes_00010)
BOOL aux266 #(1=actionTypes_00010)
BOOL aux267 #(1=actionTypes_00010)
BOOL aux268 #(1=actionTypes_00010)
BOOL aux269 #(1=actionTypes_00010)
DISCRETE aux270 #(pointers_00000_00010 + -1)
{-1..5}
BOOL aux271 #(1=actionTypes_00011)
BOOL aux272 #(1=actionTypes_00011)
BOOL aux273 #(1=actionTypes_00011)
BOOL aux274 #(1=actionTypes_00011)
BOOL aux275 #(1=actionTypes_00011)
DISCRETE aux276 #(pointers_00000_00011 + -1)
{-1..5}
BOOL aux277 #(2=actionTypes_00002)
BOOL aux278 #(2=actionTypes_00002)
BOOL aux279 #(2=actionTypes_00002)
BOOL aux280 #(2=actionTypes_00002)
BOOL aux281 #(2=actionTypes_00002)
BOOL aux282 #(2=actionTypes_00002)
BOOL aux283 #(2=actionTypes_00002)
DISCRETE aux284 #(pointers_00001_00002 + -1)
{-1..5}
**CONSTRAINTS**
w-inintervalset(aux284, [-1,1,3,5])
**VARIABLES**
BOOL aux285 #(2=actionTypes_00003)
BOOL aux286 #(2=actionTypes_00003)
BOOL aux287 #(2=actionTypes_00003)
BOOL aux288 #(2=actionTypes_00003)
BOOL aux289 #(2=actionTypes_00003)
BOOL aux290 #(2=actionTypes_00003)
BOOL aux291 #(2=actionTypes_00003)
BOOL aux292 #(2=actionTypes_00003)
DISCRETE aux293 #(pointers_00001_00003 + -1)
{-1..5}
**CONSTRAINTS**
w-inintervalset(aux293, [-1,1,3,5])
**VARIABLES**
BOOL aux294 #(2=actionTypes_00004)
BOOL aux295 #(2=actionTypes_00004)
BOOL aux296 #(2=actionTypes_00004)
BOOL aux297 #(2=actionTypes_00004)
BOOL aux298 #(2=actionTypes_00004)
BOOL aux299 #(2=actionTypes_00004)
BOOL aux300 #(2=actionTypes_00004)
BOOL aux301 #(2=actionTypes_00004)
DISCRETE aux302 #(pointers_00001_00004 + -1)
{-1..5}
**CONSTRAINTS**
w-inintervalset(aux302, [-1,1,3,5])
**VARIABLES**
BOOL aux303 #(2=actionTypes_00005)
BOOL aux304 #(2=actionTypes_00005)
BOOL aux305 #(2=actionTypes_00005)
BOOL aux306 #(2=actionTypes_00005)
BOOL aux307 #(2=actionTypes_00005)
BOOL aux308 #(2=actionTypes_00005)
BOOL aux309 #(2=actionTypes_00005)
BOOL aux310 #(2=actionTypes_00005)
DISCRETE aux311 #(pointers_00001_00005 + -1)
{-1..5}
**CONSTRAINTS**
w-inintervalset(aux311, [-1,1,3,5])
**VARIABLES**
BOOL aux312 #(2=actionTypes_00006)
BOOL aux313 #(2=actionTypes_00006)
BOOL aux314 #(2=actionTypes_00006)
BOOL aux315 #(2=actionTypes_00006)
BOOL aux316 #(2=actionTypes_00006)
BOOL aux317 #(2=actionTypes_00006)
BOOL aux318 #(2=actionTypes_00006)
BOOL aux319 #(2=actionTypes_00006)
DISCRETE aux320 #(pointers_00001_00006 + -1)
{-1..5}
**CONSTRAINTS**
w-inintervalset(aux320, [-1,1,3,5])
**VARIABLES**
BOOL aux321 #(2=actionTypes_00007)
BOOL aux322 #(2=actionTypes_00007)
BOOL aux323 #(2=actionTypes_00007)
BOOL aux324 #(2=actionTypes_00007)
BOOL aux325 #(2=actionTypes_00007)
BOOL aux326 #(2=actionTypes_00007)
BOOL aux327 #(2=actionTypes_00007)
BOOL aux328 #(2=actionTypes_00007)
DISCRETE aux329 #(pointers_00001_00007 + -1)
{-1..5}
**CONSTRAINTS**
w-inintervalset(aux329, [-1,1,3,5])
**VARIABLES**
BOOL aux330 #(2=actionTypes_00008)
BOOL aux331 #(2=actionTypes_00008)
BOOL aux332 #(2=actionTypes_00008)
BOOL aux333 #(2=actionTypes_00008)
BOOL aux334 #(2=actionTypes_00008)
BOOL aux335 #(2=actionTypes_00008)
BOOL aux336 #(2=actionTypes_00008)
BOOL aux337 #(2=actionTypes_00008)
DISCRETE aux338 #(pointers_00001_00008 + -1)
{-1..5}
**CONSTRAINTS**
w-inintervalset(aux338, [-1,1,3,5])
**VARIABLES**
BOOL aux339 #(2=actionTypes_00009)
BOOL aux340 #(2=actionTypes_00009)
BOOL aux341 #(2=actionTypes_00009)
BOOL aux342 #(2=actionTypes_00009)
BOOL aux343 #(2=actionTypes_00009)
BOOL aux344 #(2=actionTypes_00009)
BOOL aux345 #(2=actionTypes_00009)
BOOL aux346 #(2=actionTypes_00009)
DISCRETE aux347 #(pointers_00001_00009 + -1)
{-1..5}
**CONSTRAINTS**
w-inintervalset(aux347, [-1,1,3,5])
**VARIABLES**
BOOL aux348 #(2=actionTypes_00010)
BOOL aux349 #(2=actionTypes_00010)
BOOL aux350 #(2=actionTypes_00010)
BOOL aux351 #(2=actionTypes_00010)
BOOL aux352 #(2=actionTypes_00010)
BOOL aux353 #(2=actionTypes_00010)
BOOL aux354 #(2=actionTypes_00010)
BOOL aux355 #(2=actionTypes_00010)
DISCRETE aux356 #(pointers_00001_00010 + -1)
{-1..5}
**CONSTRAINTS**
w-inintervalset(aux356, [-1,1,3,5])
**VARIABLES**
BOOL aux357 #(2=actionTypes_00011)
BOOL aux358 #(2=actionTypes_00011)
BOOL aux359 #(2=actionTypes_00011)
BOOL aux360 #(2=actionTypes_00011)
BOOL aux361 #(2=actionTypes_00011)
BOOL aux362 #(3=actionTypes_00002)
BOOL aux363 #(3=actionTypes_00002)
BOOL aux364 #(3=actionTypes_00002)
BOOL aux365 #(3=actionTypes_00002)
BOOL aux366 #(3=actionTypes_00002)
BOOL aux367 #(3=actionTypes_00002)
BOOL aux368 #(3=actionTypes_00003)
BOOL aux369 #(3=actionTypes_00003)
BOOL aux370 #(3=actionTypes_00003)
BOOL aux371 #(3=actionTypes_00003)
BOOL aux372 #(3=actionTypes_00003)
BOOL aux373 #(3=actionTypes_00003)
BOOL aux374 #(3=actionTypes_00004)
BOOL aux375 #(3=actionTypes_00004)
BOOL aux376 #(3=actionTypes_00004)
BOOL aux377 #(3=actionTypes_00004)
BOOL aux378 #(3=actionTypes_00004)
BOOL aux379 #(3=actionTypes_00004)
BOOL aux380 #(3=actionTypes_00005)
BOOL aux381 #(3=actionTypes_00005)
BOOL aux382 #(3=actionTypes_00005)
BOOL aux383 #(3=actionTypes_00005)
BOOL aux384 #(3=actionTypes_00005)
BOOL aux385 #(3=actionTypes_00005)
BOOL aux386 #(3=actionTypes_00006)
BOOL aux387 #(3=actionTypes_00006)
BOOL aux388 #(3=actionTypes_00006)
BOOL aux389 #(3=actionTypes_00006)
BOOL aux390 #(3=actionTypes_00006)
BOOL aux391 #(3=actionTypes_00006)
BOOL aux392 #(3=actionTypes_00007)
BOOL aux393 #(3=actionTypes_00007)
BOOL aux394 #(3=actionTypes_00007)
BOOL aux395 #(3=actionTypes_00007)
BOOL aux396 #(3=actionTypes_00007)
BOOL aux397 #(3=actionTypes_00007)
BOOL aux398 #(3=actionTypes_00008)
BOOL aux399 #(3=actionTypes_00008)
BOOL aux400 #(3=actionTypes_00008)
BOOL aux401 #(3=actionTypes_00008)
BOOL aux402 #(3=actionTypes_00008)
BOOL aux403 #(3=actionTypes_00008)
BOOL aux404 #(3=actionTypes_00009)
BOOL aux405 #(3=actionTypes_00009)
BOOL aux406 #(3=actionTypes_00009)
BOOL aux407 #(3=actionTypes_00009)
BOOL aux408 #(3=actionTypes_00009)
BOOL aux409 #(3=actionTypes_00009)
BOOL aux410 #(3=actionTypes_00010)
BOOL aux411 #(3=actionTypes_00010)
BOOL aux412 #(3=actionTypes_00010)
BOOL aux413 #(3=actionTypes_00010)
BOOL aux414 #(3=actionTypes_00010)
BOOL aux415 #(3=actionTypes_00010)
BOOL aux416 #(3=actionTypes_00011)
BOOL aux417 #(3=actionTypes_00011)
BOOL aux418 #(3=actionTypes_00011)
BOOL aux419 #(3=actionTypes_00011)
BOOL aux420 #(3=actionTypes_00011)
BOOL aux421 #(3=actionTypes_00011)
BOOL aux422 #(4=actionTypes_00002)
BOOL aux423 #(4=actionTypes_00002)
BOOL aux424 #(4=actionTypes_00002)
BOOL aux425 #(4=actionTypes_00002)
BOOL aux426 #(4=actionTypes_00002)
BOOL aux427 #(4=actionTypes_00003)
BOOL aux428 #(4=actionTypes_00003)
BOOL aux429 #(4=actionTypes_00003)
BOOL aux430 #(4=actionTypes_00003)
BOOL aux431 #(4=actionTypes_00003)
BOOL aux432 #(4=actionTypes_00003)
BOOL aux433 #(4=actionTypes_00004)
BOOL aux434 #(4=actionTypes_00004)
BOOL aux435 #(4=actionTypes_00004)
BOOL aux436 #(4=actionTypes_00004)
BOOL aux437 #(4=actionTypes_00004)
BOOL aux438 #(4=actionTypes_00004)
BOOL aux439 #(4=actionTypes_00005)
BOOL aux440 #(4=actionTypes_00005)
BOOL aux441 #(4=actionTypes_00005)
BOOL aux442 #(4=actionTypes_00005)
BOOL aux443 #(4=actionTypes_00005)
BOOL aux444 #(4=actionTypes_00005)
BOOL aux445 #(4=actionTypes_00006)
BOOL aux446 #(4=actionTypes_00006)
BOOL aux447 #(4=actionTypes_00006)
BOOL aux448 #(4=actionTypes_00006)
BOOL aux449 #(4=actionTypes_00006)
BOOL aux450 #(4=actionTypes_00006)
BOOL aux451 #(4=actionTypes_00007)
BOOL aux452 #(4=actionTypes_00007)
BOOL aux453 #(4=actionTypes_00007)
BOOL aux454 #(4=actionTypes_00007)
BOOL aux455 #(4=actionTypes_00007)
BOOL aux456 #(4=actionTypes_00007)
BOOL aux457 #(4=actionTypes_00008)
BOOL aux458 #(4=actionTypes_00008)
BOOL aux459 #(4=actionTypes_00008)
BOOL aux460 #(4=actionTypes_00008)
BOOL aux461 #(4=actionTypes_00008)
BOOL aux462 #(4=actionTypes_00008)
BOOL aux463 #(4=actionTypes_00009)
BOOL aux464 #(4=actionTypes_00009)
BOOL aux465 #(4=actionTypes_00009)
BOOL aux466 #(4=actionTypes_00009)
BOOL aux467 #(4=actionTypes_00009)
BOOL aux468 #(4=actionTypes_00009)
BOOL aux469 #(4=actionTypes_00010)
BOOL aux470 #(4=actionTypes_00010)
BOOL aux471 #(4=actionTypes_00010)
BOOL aux472 #(4=actionTypes_00010)
BOOL aux473 #(4=actionTypes_00010)
BOOL aux474 #(4=actionTypes_00010)
BOOL aux475 #(4=actionTypes_00011)
BOOL aux476 #(4=actionTypes_00011)
BOOL aux477 #(4=actionTypes_00011)
BOOL aux478 #(4=actionTypes_00011)
BOOL aux479 #(4=actionTypes_00011)
BOOL aux480 #(4=actionTypes_00011)
BOOL aux481 #(5=actionTypes_00002)
BOOL aux482 #(5=actionTypes_00002)
BOOL aux483 #(5=actionTypes_00002)
BOOL aux484 #(5=actionTypes_00002)
BOOL aux485 #(5=actionTypes_00002)
BOOL aux486 #(5=actionTypes_00002)
BOOL aux487 #(5=actionTypes_00002)
BOOL aux488 #(5=actionTypes_00002)
BOOL aux489 #(5=actionTypes_00003)
BOOL aux490 #(5=actionTypes_00003)
BOOL aux491 #(5=actionTypes_00003)
BOOL aux492 #(5=actionTypes_00003)
BOOL aux493 #(5=actionTypes_00003)
BOOL aux494 #(5=actionTypes_00003)
BOOL aux495 #(5=actionTypes_00003)
BOOL aux496 #(5=actionTypes_00003)
BOOL aux497 #(5=actionTypes_00004)
BOOL aux498 #(5=actionTypes_00004)
BOOL aux499 #(5=actionTypes_00004)
BOOL aux500 #(5=actionTypes_00004)
BOOL aux501 #(5=actionTypes_00004)
BOOL aux502 #(5=actionTypes_00004)
BOOL aux503 #(5=actionTypes_00004)
BOOL aux504 #(5=actionTypes_00004)
BOOL aux505 #(5=actionTypes_00005)
BOOL aux506 #(5=actionTypes_00005)
BOOL aux507 #(5=actionTypes_00005)
BOOL aux508 #(5=actionTypes_00005)
BOOL aux509 #(5=actionTypes_00005)
BOOL aux510 #(5=actionTypes_00005)
BOOL aux511 #(5=actionTypes_00005)
BOOL aux512 #(5=actionTypes_00005)
BOOL aux513 #(5=actionTypes_00006)
BOOL aux514 #(5=actionTypes_00006)
BOOL aux515 #(5=actionTypes_00006)
BOOL aux516 #(5=actionTypes_00006)
BOOL aux517 #(5=actionTypes_00006)
BOOL aux518 #(5=actionTypes_00006)
BOOL aux519 #(5=actionTypes_00006)
BOOL aux520 #(5=actionTypes_00006)
BOOL aux521 #(5=actionTypes_00007)
BOOL aux522 #(5=actionTypes_00007)
BOOL aux523 #(5=actionTypes_00007)
BOOL aux524 #(5=actionTypes_00007)
BOOL aux525 #(5=actionTypes_00007)
BOOL aux526 #(5=actionTypes_00007)
BOOL aux527 #(5=actionTypes_00007)
BOOL aux528 #(5=actionTypes_00007)
BOOL aux529 #(5=actionTypes_00008)
BOOL aux530 #(5=actionTypes_00008)
BOOL aux531 #(5=actionTypes_00008)
BOOL aux532 #(5=actionTypes_00008)
BOOL aux533 #(5=actionTypes_00008)
BOOL aux534 #(5=actionTypes_00008)
BOOL aux535 #(5=actionTypes_00008)
BOOL aux536 #(5=actionTypes_00008)
BOOL aux537 #(5=actionTypes_00009)
BOOL aux538 #(5=actionTypes_00009)
BOOL aux539 #(5=actionTypes_00009)
BOOL aux540 #(5=actionTypes_00009)
BOOL aux541 #(5=actionTypes_00009)
BOOL aux542 #(5=actionTypes_00009)
BOOL aux543 #(5=actionTypes_00009)
BOOL aux544 #(5=actionTypes_00009)
BOOL aux545 #(5=actionTypes_00010)
BOOL aux546 #(5=actionTypes_00010)
BOOL aux547 #(5=actionTypes_00010)
BOOL aux548 #(5=actionTypes_00010)
BOOL aux549 #(5=actionTypes_00010)
BOOL aux550 #(5=actionTypes_00010)
BOOL aux551 #(5=actionTypes_00010)
BOOL aux552 #(5=actionTypes_00010)
BOOL aux553 #(5=actionTypes_00011)
BOOL aux554 #(5=actionTypes_00011)
BOOL aux555 #(5=actionTypes_00011)
BOOL aux556 #(5=actionTypes_00011)
BOOL aux557 #(5=actionTypes_00011)
BOOL aux558 #(5=actionTypes_00011)
BOOL aux559 #(5=actionTypes_00011)
BOOL aux560 #(5=actionTypes_00011)
BOOL aux561 #(6=actionTypes_00002)
BOOL aux562 #(6=actionTypes_00002)
BOOL aux563 #(6=actionTypes_00002)
BOOL aux564 #(6=actionTypes_00002)
BOOL aux565 #(6=actionTypes_00002)
BOOL aux566 #(6=actionTypes_00002)
BOOL aux567 #(6=actionTypes_00002)
BOOL aux568 #(6=actionTypes_00003)
BOOL aux569 #(6=actionTypes_00003)
BOOL aux570 #(6=actionTypes_00003)
BOOL aux571 #(6=actionTypes_00003)
BOOL aux572 #(6=actionTypes_00003)
BOOL aux573 #(6=actionTypes_00003)
BOOL aux574 #(6=actionTypes_00003)
BOOL aux575 #(6=actionTypes_00004)
BOOL aux576 #(6=actionTypes_00004)
BOOL aux577 #(6=actionTypes_00004)
BOOL aux578 #(6=actionTypes_00004)
BOOL aux579 #(6=actionTypes_00004)
BOOL aux580 #(6=actionTypes_00004)
BOOL aux581 #(6=actionTypes_00004)
BOOL aux582 #(6=actionTypes_00005)
BOOL aux583 #(6=actionTypes_00005)
BOOL aux584 #(6=actionTypes_00005)
BOOL aux585 #(6=actionTypes_00005)
BOOL aux586 #(6=actionTypes_00005)
BOOL aux587 #(6=actionTypes_00005)
BOOL aux588 #(6=actionTypes_00005)
BOOL aux589 #(6=actionTypes_00006)
BOOL aux590 #(6=actionTypes_00006)
BOOL aux591 #(6=actionTypes_00006)
BOOL aux592 #(6=actionTypes_00006)
BOOL aux593 #(6=actionTypes_00006)
BOOL aux594 #(6=actionTypes_00006)
BOOL aux595 #(6=actionTypes_00006)
BOOL aux596 #(6=actionTypes_00007)
BOOL aux597 #(6=actionTypes_00007)
BOOL aux598 #(6=actionTypes_00007)
BOOL aux599 #(6=actionTypes_00007)
BOOL aux600 #(6=actionTypes_00007)
BOOL aux601 #(6=actionTypes_00007)
BOOL aux602 #(6=actionTypes_00007)
BOOL aux603 #(6=actionTypes_00008)
BOOL aux604 #(6=actionTypes_00008)
BOOL aux605 #(6=actionTypes_00008)
BOOL aux606 #(6=actionTypes_00008)
BOOL aux607 #(6=actionTypes_00008)
BOOL aux608 #(6=actionTypes_00008)
BOOL aux609 #(6=actionTypes_00008)
BOOL aux610 #(6=actionTypes_00009)
BOOL aux611 #(6=actionTypes_00009)
BOOL aux612 #(6=actionTypes_00009)
BOOL aux613 #(6=actionTypes_00009)
BOOL aux614 #(6=actionTypes_00009)
BOOL aux615 #(6=actionTypes_00009)
BOOL aux616 #(6=actionTypes_00009)
BOOL aux617 #(6=actionTypes_00010)
BOOL aux618 #(6=actionTypes_00010)
BOOL aux619 #(6=actionTypes_00010)
BOOL aux620 #(6=actionTypes_00010)
BOOL aux621 #(6=actionTypes_00010)
BOOL aux622 #(6=actionTypes_00010)
BOOL aux623 #(6=actionTypes_00010)
BOOL aux624 #(6=actionTypes_00011)
BOOL aux625 #(6=actionTypes_00011)
BOOL aux626 #(6=actionTypes_00011)
BOOL aux627 #(6=actionTypes_00011)
BOOL aux628 #(6=actionTypes_00011)
BOOL aux629 #(6=actionTypes_00011)
BOOL aux630 #(6=actionTypes_00011)
BOOL aux631 #(7=actionTypes_00002)
BOOL aux632 #(7=actionTypes_00002)
BOOL aux633 #(7=actionTypes_00002)
BOOL aux634 #(7=actionTypes_00002)
BOOL aux635 #(7=actionTypes_00002)
BOOL aux636 #(7=actionTypes_00002)
BOOL aux637 #(7=actionTypes_00002)
BOOL aux638 #(7=actionTypes_00003)
BOOL aux639 #(7=actionTypes_00003)
BOOL aux640 #(7=actionTypes_00003)
BOOL aux641 #(7=actionTypes_00003)
BOOL aux642 #(7=actionTypes_00003)
BOOL aux643 #(7=actionTypes_00003)
BOOL aux644 #(7=actionTypes_00003)
BOOL aux645 #(7=actionTypes_00004)
BOOL aux646 #(7=actionTypes_00004)
BOOL aux647 #(7=actionTypes_00004)
BOOL aux648 #(7=actionTypes_00004)
BOOL aux649 #(7=actionTypes_00004)
BOOL aux650 #(7=actionTypes_00004)
BOOL aux651 #(7=actionTypes_00004)
BOOL aux652 #(7=actionTypes_00005)
BOOL aux653 #(7=actionTypes_00005)
BOOL aux654 #(7=actionTypes_00005)
BOOL aux655 #(7=actionTypes_00005)
BOOL aux656 #(7=actionTypes_00005)
BOOL aux657 #(7=actionTypes_00005)
BOOL aux658 #(7=actionTypes_00005)
BOOL aux659 #(7=actionTypes_00006)
BOOL aux660 #(7=actionTypes_00006)
BOOL aux661 #(7=actionTypes_00006)
BOOL aux662 #(7=actionTypes_00006)
BOOL aux663 #(7=actionTypes_00006)
BOOL aux664 #(7=actionTypes_00006)
BOOL aux665 #(7=actionTypes_00006)
BOOL aux666 #(7=actionTypes_00007)
BOOL aux667 #(7=actionTypes_00007)
BOOL aux668 #(7=actionTypes_00007)
BOOL aux669 #(7=actionTypes_00007)
BOOL aux670 #(7=actionTypes_00007)
BOOL aux671 #(7=actionTypes_00007)
BOOL aux672 #(7=actionTypes_00007)
BOOL aux673 #(7=actionTypes_00008)
BOOL aux674 #(7=actionTypes_00008)
BOOL aux675 #(7=actionTypes_00008)
BOOL aux676 #(7=actionTypes_00008)
BOOL aux677 #(7=actionTypes_00008)
BOOL aux678 #(7=actionTypes_00008)
BOOL aux679 #(7=actionTypes_00008)
BOOL aux680 #(7=actionTypes_00009)
BOOL aux681 #(7=actionTypes_00009)
BOOL aux682 #(7=actionTypes_00009)
BOOL aux683 #(7=actionTypes_00009)
BOOL aux684 #(7=actionTypes_00009)
BOOL aux685 #(7=actionTypes_00009)
BOOL aux686 #(7=actionTypes_00009)
BOOL aux687 #(7=actionTypes_00010)
BOOL aux688 #(7=actionTypes_00010)
BOOL aux689 #(7=actionTypes_00010)
BOOL aux690 #(7=actionTypes_00010)
BOOL aux691 #(7=actionTypes_00010)
BOOL aux692 #(7=actionTypes_00010)
BOOL aux693 #(7=actionTypes_00010)
BOOL aux694 #(7=actionTypes_00011)
BOOL aux695 #(7=actionTypes_00011)
BOOL aux696 #(7=actionTypes_00011)
BOOL aux697 #(7=actionTypes_00011)
BOOL aux698 #(7=actionTypes_00011)
BOOL aux699 #(7=actionTypes_00011)
BOOL aux700 #(7=actionTypes_00011)
BOOL aux701 #(8=actionTypes_00002)
BOOL aux702 #(8=actionTypes_00002)
BOOL aux703 #(8=actionTypes_00002)
BOOL aux704 #(8=actionTypes_00002)
BOOL aux705 #(8=actionTypes_00002)
BOOL aux706 #(8=actionTypes_00002)
BOOL aux707 #(8=actionTypes_00003)
BOOL aux708 #(8=actionTypes_00003)
BOOL aux709 #(8=actionTypes_00003)
BOOL aux710 #(8=actionTypes_00003)
BOOL aux711 #(8=actionTypes_00003)
BOOL aux712 #(8=actionTypes_00003)
BOOL aux713 #(8=actionTypes_00004)
BOOL aux714 #(8=actionTypes_00004)
BOOL aux715 #(8=actionTypes_00004)
BOOL aux716 #(8=actionTypes_00004)
BOOL aux717 #(8=actionTypes_00004)
BOOL aux718 #(8=actionTypes_00004)
BOOL aux719 #(8=actionTypes_00005)
BOOL aux720 #(8=actionTypes_00005)
BOOL aux721 #(8=actionTypes_00005)
BOOL aux722 #(8=actionTypes_00005)
BOOL aux723 #(8=actionTypes_00005)
BOOL aux724 #(8=actionTypes_00005)
BOOL aux725 #(8=actionTypes_00006)
BOOL aux726 #(8=actionTypes_00006)
BOOL aux727 #(8=actionTypes_00006)
BOOL aux728 #(8=actionTypes_00006)
BOOL aux729 #(8=actionTypes_00006)
BOOL aux730 #(8=actionTypes_00006)
BOOL aux731 #(8=actionTypes_00007)
BOOL aux732 #(8=actionTypes_00007)
BOOL aux733 #(8=actionTypes_00007)
BOOL aux734 #(8=actionTypes_00007)
BOOL aux735 #(8=actionTypes_00007)
BOOL aux736 #(8=actionTypes_00007)
BOOL aux737 #(8=actionTypes_00008)
BOOL aux738 #(8=actionTypes_00008)
BOOL aux739 #(8=actionTypes_00008)
BOOL aux740 #(8=actionTypes_00008)
BOOL aux741 #(8=actionTypes_00008)
BOOL aux742 #(8=actionTypes_00008)
BOOL aux743 #(8=actionTypes_00009)
BOOL aux744 #(8=actionTypes_00009)
BOOL aux745 #(8=actionTypes_00009)
BOOL aux746 #(8=actionTypes_00009)
BOOL aux747 #(8=actionTypes_00009)
BOOL aux748 #(8=actionTypes_00009)
BOOL aux749 #(8=actionTypes_00010)
BOOL aux750 #(8=actionTypes_00010)
BOOL aux751 #(8=actionTypes_00010)
BOOL aux752 #(8=actionTypes_00010)
BOOL aux753 #(8=actionTypes_00010)
BOOL aux754 #(8=actionTypes_00010)
BOOL aux755 #(8=actionTypes_00011)
BOOL aux756 #(8=actionTypes_00011)
BOOL aux757 #(8=actionTypes_00011)
BOOL aux758 #(8=actionTypes_00011)
BOOL aux759 #(8=actionTypes_00011)
BOOL aux760 #(8=actionTypes_00011)
**VARIABLES**
ALIAS output[3]=[0, 5, 6]
**VARIABLES**
ALIAS input[6]=[4, 2, 3, 2, 8, 5]
**SEARCH**
PRINT[[statePlaces_00002_00002],[statePlaces_00002_00003],[statePlaces_00002_00004],[statePlaces_00002_00005],[statePlaces_00002_00006],[statePlaces_00002_00007],[statePlaces_00002_00008],[statePlaces_00002_00009],[statePlaces_00002_00010],[statePlaces_00003_00002],[statePlaces_00003_00003],[statePlaces_00003_00004],[statePlaces_00003_00005],[statePlaces_00003_00006],[statePlaces_00003_00007],[statePlaces_00003_00008],[statePlaces_00003_00009],[statePlaces_00003_00010],[statePlaces_00003_00011],[statePlaces_00004_00002],[statePlaces_00004_00003],[statePlaces_00004_00004],[statePlaces_00004_00005],[statePlaces_00004_00006],[statePlaces_00004_00007],[statePlaces_00004_00008],[statePlaces_00004_00009],[statePlaces_00004_00010],[statePlaces_00004_00011],[statePlaces_00005_00002],[statePlaces_00005_00003],[statePlaces_00005_00004],[statePlaces_00005_00005],[statePlaces_00005_00006],[statePlaces_00005_00007],[statePlaces_00005_00008],[statePlaces_00005_00009],[statePlaces_00005_00010],[statePlaces_00005_00011],[actionTypes_00002],[actionTypes_00003],[actionTypes_00004],[actionTypes_00005],[actionTypes_00006],[actionTypes_00007],[actionTypes_00008],[actionTypes_00009],[actionTypes_00010],[actionTypes_00011],[actionFrom_00002],[actionFrom_00003],[actionFrom_00004],[actionFrom_00005],[actionFrom_00006],[actionFrom_00007],[actionFrom_00008],[actionFrom_00009],[actionFrom_00010],[actionFrom_00011],[actionTo_00002],[actionTo_00003],[actionTo_00004],[actionTo_00005],[actionTo_00006],[actionTo_00007],[actionTo_00008],[actionTo_00009],[actionTo_00010],[actionTo_00011],[pointers_00000_00002],[pointers_00000_00003],[pointers_00000_00004],[pointers_00000_00005],[pointers_00000_00006],[pointers_00000_00007],[pointers_00000_00008],[pointers_00000_00009],[pointers_00000_00010],[pointers_00000_00011],[pointers_00001_00002],[pointers_00001_00003],[pointers_00001_00004],[pointers_00001_00005],[pointers_00001_00006],[pointers_00001_00007],[pointers_00001_00008],[pointers_00001_00009],[pointers_00001_00010]]
**CONSTRAINTS**
reify(diseq(1,actionTypes_00002), aux157)
reify(diseq(1,actionTypes_00003), aux158)
reify(diseq(1,actionTypes_00004), aux159)
reify(diseq(1,actionTypes_00005), aux160)
reify(diseq(1,actionTypes_00006), aux161)
reify(diseq(1,actionTypes_00007), aux162)
reify(diseq(1,actionTypes_00008), aux163)
reify(diseq(1,actionTypes_00009), aux164)
reify(diseq(1,actionTypes_00010), aux165)
reify(diseq(1,actionTypes_00011), aux166)
reify(diseq(2,actionTypes_00002), aux167)
reify(diseq(2,actionTypes_00003), aux168)
reify(diseq(2,actionTypes_00004), aux169)
reify(diseq(2,actionTypes_00005), aux170)
reify(diseq(2,actionTypes_00006), aux171)
reify(diseq(2,actionTypes_00007), aux172)
reify(diseq(2,actionTypes_00008), aux173)
reify(diseq(2,actionTypes_00009), aux174)
reify(diseq(2,actionTypes_00010), aux175)
reify(diseq(2,actionTypes_00011), aux176)
reify(watched-or({watched-and({w-literal(actionTypes_00002,7),diseq(actionFrom_00002,3)}),watched-and({w-literal(actionTypes_00002,8),diseq(actionFrom_00002,3)}),w-literal(actionTypes_00002,1),w-literal(actionTypes_00002,2),w-literal(actionTypes_00002,3),w-literal(actionTypes_00002,5),w-literal(actionTypes_00002,6),watched-and({w-literal(actionTypes_00002,4),diseq(actionTo_00002,3)})}), aux177)
reify(watched-or({watched-and({w-literal(actionTypes_00002,7),diseq(actionFrom_00002,4)}),watched-and({w-literal(actionTypes_00002,8),diseq(actionFrom_00002,4)}),w-literal(actionTypes_00002,1),w-literal(actionTypes_00002,2),w-literal(actionTypes_00002,3),w-literal(actionTypes_00002,5),w-literal(actionTypes_00002,6),watched-and({w-literal(actionTypes_00002,4),diseq(actionTo_00002,4)})}), aux178)
reify(watched-or({watched-and({w-literal(actionTypes_00002,7),diseq(actionFrom_00002,5)}),watched-and({w-literal(actionTypes_00002,8),diseq(actionFrom_00002,5)}),w-literal(actionTypes_00002,1),w-literal(actionTypes_00002,2),w-literal(actionTypes_00002,3),w-literal(actionTypes_00002,5),w-literal(actionTypes_00002,6),watched-and({w-literal(actionTypes_00002,4),diseq(actionTo_00002,5)})}), aux179)
reify(watched-or({watched-and({w-literal(actionTypes_00003,7),diseq(actionFrom_00003,3)}),watched-and({w-literal(actionTypes_00003,8),diseq(actionFrom_00003,3)}),w-literal(actionTypes_00003,1),w-literal(actionTypes_00003,2),w-literal(actionTypes_00003,3),w-literal(actionTypes_00003,5),w-literal(actionTypes_00003,6),watched-and({w-literal(actionTypes_00003,4),diseq(actionTo_00003,3)})}), aux180)
reify(watched-or({watched-and({w-literal(actionTypes_00003,7),diseq(actionFrom_00003,4)}),watched-and({w-literal(actionTypes_00003,8),diseq(actionFrom_00003,4)}),w-literal(actionTypes_00003,1),w-literal(actionTypes_00003,2),w-literal(actionTypes_00003,3),w-literal(actionTypes_00003,5),w-literal(actionTypes_00003,6),watched-and({w-literal(actionTypes_00003,4),diseq(actionTo_00003,4)})}), aux181)
reify(watched-or({watched-and({w-literal(actionTypes_00003,7),diseq(actionFrom_00003,5)}),watched-and({w-literal(actionTypes_00003,8),diseq(actionFrom_00003,5)}),w-literal(actionTypes_00003,1),w-literal(actionTypes_00003,2),w-literal(actionTypes_00003,3),w-literal(actionTypes_00003,5),w-literal(actionTypes_00003,6),watched-and({w-literal(actionTypes_00003,4),diseq(actionTo_00003,5)})}), aux182)
reify(watched-or({watched-and({w-literal(actionTypes_00004,7),diseq(actionFrom_00004,3)}),watched-and({w-literal(actionTypes_00004,8),diseq(actionFrom_00004,3)}),w-literal(actionTypes_00004,1),w-literal(actionTypes_00004,2),w-literal(actionTypes_00004,3),w-literal(actionTypes_00004,5),w-literal(actionTypes_00004,6),watched-and({w-literal(actionTypes_00004,4),diseq(actionTo_00004,3)})}), aux183)
reify(watched-or({watched-and({w-literal(actionTypes_00004,7),diseq(actionFrom_00004,4)}),watched-and({w-literal(actionTypes_00004,8),diseq(actionFrom_00004,4)}),w-literal(actionTypes_00004,1),w-literal(actionTypes_00004,2),w-literal(actionTypes_00004,3),w-literal(actionTypes_00004,5),w-literal(actionTypes_00004,6),watched-and({w-literal(actionTypes_00004,4),diseq(actionTo_00004,4)})}), aux184)
reify(watched-or({watched-and({w-literal(actionTypes_00004,7),diseq(actionFrom_00004,5)}),watched-and({w-literal(actionTypes_00004,8),diseq(actionFrom_00004,5)}),w-literal(actionTypes_00004,1),w-literal(actionTypes_00004,2),w-literal(actionTypes_00004,3),w-literal(actionTypes_00004,5),w-literal(actionTypes_00004,6),watched-and({w-literal(actionTypes_00004,4),diseq(actionTo_00004,5)})}), aux185)
reify(watched-or({watched-and({w-literal(actionTypes_00005,7),diseq(actionFrom_00005,3)}),watched-and({w-literal(actionTypes_00005,8),diseq(actionFrom_00005,3)}),w-literal(actionTypes_00005,1),w-literal(actionTypes_00005,2),w-literal(actionTypes_00005,3),w-literal(actionTypes_00005,5),w-literal(actionTypes_00005,6),watched-and({w-literal(actionTypes_00005,4),diseq(actionTo_00005,3)})}), aux186)
reify(watched-or({watched-and({w-literal(actionTypes_00005,7),diseq(actionFrom_00005,4)}),watched-and({w-literal(actionTypes_00005,8),diseq(actionFrom_00005,4)}),w-literal(actionTypes_00005,1),w-literal(actionTypes_00005,2),w-literal(actionTypes_00005,3),w-literal(actionTypes_00005,5),w-literal(actionTypes_00005,6),watched-and({w-literal(actionTypes_00005,4),diseq(actionTo_00005,4)})}), aux187)
reify(watched-or({watched-and({w-literal(actionTypes_00005,7),diseq(actionFrom_00005,5)}),watched-and({w-literal(actionTypes_00005,8),diseq(actionFrom_00005,5)}),w-literal(actionTypes_00005,1),w-literal(actionTypes_00005,2),w-literal(actionTypes_00005,3),w-literal(actionTypes_00005,5),w-literal(actionTypes_00005,6),watched-and({w-literal(actionTypes_00005,4),diseq(actionTo_00005,5)})}), aux188)
reify(watched-or({watched-and({w-literal(actionTypes_00006,7),diseq(actionFrom_00006,3)}),watched-and({w-literal(actionTypes_00006,8),diseq(actionFrom_00006,3)}),w-literal(actionTypes_00006,1),w-literal(actionTypes_00006,2),w-literal(actionTypes_00006,3),w-literal(actionTypes_00006,5),w-literal(actionTypes_00006,6),watched-and({w-literal(actionTypes_00006,4),diseq(actionTo_00006,3)})}), aux189)
reify(watched-or({watched-and({w-literal(actionTypes_00006,7),diseq(actionFrom_00006,4)}),watched-and({w-literal(actionTypes_00006,8),diseq(actionFrom_00006,4)}),w-literal(actionTypes_00006,1),w-literal(actionTypes_00006,2),w-literal(actionTypes_00006,3),w-literal(actionTypes_00006,5),w-literal(actionTypes_00006,6),watched-and({w-literal(actionTypes_00006,4),diseq(actionTo_00006,4)})}), aux190)
reify(watched-or({watched-and({w-literal(actionTypes_00006,7),diseq(actionFrom_00006,5)}),watched-and({w-literal(actionTypes_00006,8),diseq(actionFrom_00006,5)}),w-literal(actionTypes_00006,1),w-literal(actionTypes_00006,2),w-literal(actionTypes_00006,3),w-literal(actionTypes_00006,5),w-literal(actionTypes_00006,6),watched-and({w-literal(actionTypes_00006,4),diseq(actionTo_00006,5)})}), aux191)
reify(watched-or({watched-and({w-literal(actionTypes_00007,7),diseq(actionFrom_00007,3)}),watched-and({w-literal(actionTypes_00007,8),diseq(actionFrom_00007,3)}),w-literal(actionTypes_00007,1),w-literal(actionTypes_00007,2),w-literal(actionTypes_00007,3),w-literal(actionTypes_00007,5),w-literal(actionTypes_00007,6),watched-and({w-literal(actionTypes_00007,4),diseq(actionTo_00007,3)})}), aux192)
reify(watched-or({watched-and({w-literal(actionTypes_00007,7),diseq(actionFrom_00007,4)}),watched-and({w-literal(actionTypes_00007,8),diseq(actionFrom_00007,4)}),w-literal(actionTypes_00007,1),w-literal(actionTypes_00007,2),w-literal(actionTypes_00007,3),w-literal(actionTypes_00007,5),w-literal(actionTypes_00007,6),watched-and({w-literal(actionTypes_00007,4),diseq(actionTo_00007,4)})}), aux193)
reify(watched-or({watched-and({w-literal(actionTypes_00007,7),diseq(actionFrom_00007,5)}),watched-and({w-literal(actionTypes_00007,8),diseq(actionFrom_00007,5)}),w-literal(actionTypes_00007,1),w-literal(actionTypes_00007,2),w-literal(actionTypes_00007,3),w-literal(actionTypes_00007,5),w-literal(actionTypes_00007,6),watched-and({w-literal(actionTypes_00007,4),diseq(actionTo_00007,5)})}), aux194)
reify(watched-or({watched-and({w-literal(actionTypes_00008,7),diseq(actionFrom_00008,3)}),watched-and({w-literal(actionTypes_00008,8),diseq(actionFrom_00008,3)}),w-literal(actionTypes_00008,1),w-literal(actionTypes_00008,2),w-literal(actionTypes_00008,3),w-literal(actionTypes_00008,5),w-literal(actionTypes_00008,6),watched-and({w-literal(actionTypes_00008,4),diseq(actionTo_00008,3)})}), aux195)
reify(watched-or({watched-and({w-literal(actionTypes_00008,7),diseq(actionFrom_00008,4)}),watched-and({w-literal(actionTypes_00008,8),diseq(actionFrom_00008,4)}),w-literal(actionTypes_00008,1),w-literal(actionTypes_00008,2),w-literal(actionTypes_00008,3),w-literal(actionTypes_00008,5),w-literal(actionTypes_00008,6),watched-and({w-literal(actionTypes_00008,4),diseq(actionTo_00008,4)})}), aux196)
reify(watched-or({watched-and({w-literal(actionTypes_00008,7),diseq(actionFrom_00008,5)}),watched-and({w-literal(actionTypes_00008,8),diseq(actionFrom_00008,5)}),w-literal(actionTypes_00008,1),w-literal(actionTypes_00008,2),w-literal(actionTypes_00008,3),w-literal(actionTypes_00008,5),w-literal(actionTypes_00008,6),watched-and({w-literal(actionTypes_00008,4),diseq(actionTo_00008,5)})}), aux197)
reify(watched-or({watched-and({w-literal(actionTypes_00009,7),diseq(actionFrom_00009,3)}),watched-and({w-literal(actionTypes_00009,8),diseq(actionFrom_00009,3)}),w-literal(actionTypes_00009,1),w-literal(actionTypes_00009,2),w-literal(actionTypes_00009,3),w-literal(actionTypes_00009,5),w-literal(actionTypes_00009,6),watched-and({w-literal(actionTypes_00009,4),diseq(actionTo_00009,3)})}), aux198)
reify(watched-or({watched-and({w-literal(actionTypes_00009,7),diseq(actionFrom_00009,4)}),watched-and({w-literal(actionTypes_00009,8),diseq(actionFrom_00009,4)}),w-literal(actionTypes_00009,1),w-literal(actionTypes_00009,2),w-literal(actionTypes_00009,3),w-literal(actionTypes_00009,5),w-literal(actionTypes_00009,6),watched-and({w-literal(actionTypes_00009,4),diseq(actionTo_00009,4)})}), aux199)
reify(watched-or({watched-and({w-literal(actionTypes_00009,7),diseq(actionFrom_00009,5)}),watched-and({w-literal(actionTypes_00009,8),diseq(actionFrom_00009,5)}),w-literal(actionTypes_00009,1),w-literal(actionTypes_00009,2),w-literal(actionTypes_00009,3),w-literal(actionTypes_00009,5),w-literal(actionTypes_00009,6),watched-and({w-literal(actionTypes_00009,4),diseq(actionTo_00009,5)})}), aux200)
reify(watched-or({watched-and({w-literal(actionTypes_00010,7),diseq(actionFrom_00010,3)}),watched-and({w-literal(actionTypes_00010,8),diseq(actionFrom_00010,3)}),w-literal(actionTypes_00010,1),w-literal(actionTypes_00010,2),w-literal(actionTypes_00010,3),w-literal(actionTypes_00010,5),w-literal(actionTypes_00010,6),watched-and({w-literal(actionTypes_00010,4),diseq(actionTo_00010,3)})}), aux201)
reify(watched-or({watched-and({w-literal(actionTypes_00010,7),diseq(actionFrom_00010,4)}),watched-and({w-literal(actionTypes_00010,8),diseq(actionFrom_00010,4)}),w-literal(actionTypes_00010,1),w-literal(actionTypes_00010,2),w-literal(actionTypes_00010,3),w-literal(actionTypes_00010,5),w-literal(actionTypes_00010,6),watched-and({w-literal(actionTypes_00010,4),diseq(actionTo_00010,4)})}), aux202)
reify(watched-or({watched-and({w-literal(actionTypes_00010,7),diseq(actionFrom_00010,5)}),watched-and({w-literal(actionTypes_00010,8),diseq(actionFrom_00010,5)}),w-literal(actionTypes_00010,1),w-literal(actionTypes_00010,2),w-literal(actionTypes_00010,3),w-literal(actionTypes_00010,5),w-literal(actionTypes_00010,6),watched-and({w-literal(actionTypes_00010,4),diseq(actionTo_00010,5)})}), aux203)
reify(watched-or({watched-and({w-literal(actionTypes_00011,7),diseq(actionFrom_00011,3)}),watched-and({w-literal(actionTypes_00011,8),diseq(actionFrom_00011,3)}),w-literal(actionTypes_00011,1),w-literal(actionTypes_00011,2),w-literal(actionTypes_00011,3),w-literal(actionTypes_00011,5),w-literal(actionTypes_00011,6),watched-and({w-literal(actionTypes_00011,4),diseq(actionTo_00011,3)})}), aux204)
reify(watched-or({watched-and({w-literal(actionTypes_00011,7),diseq(actionFrom_00011,4)}),watched-and({w-literal(actionTypes_00011,8),diseq(actionFrom_00011,4)}),w-literal(actionTypes_00011,1),w-literal(actionTypes_00011,2),w-literal(actionTypes_00011,3),w-literal(actionTypes_00011,5),w-literal(actionTypes_00011,6),watched-and({w-literal(actionTypes_00011,4),diseq(actionTo_00011,4)})}), aux205)
reify(watched-or({watched-and({w-literal(actionTypes_00011,7),diseq(actionFrom_00011,5)}),watched-and({w-literal(actionTypes_00011,8),diseq(actionFrom_00011,5)}),w-literal(actionTypes_00011,1),w-literal(actionTypes_00011,2),w-literal(actionTypes_00011,3),w-literal(actionTypes_00011,5),w-literal(actionTypes_00011,6),watched-and({w-literal(actionTypes_00011,4),diseq(actionTo_00011,5)})}), aux206)
reify(watched-or({w-literal(actionTypes_00002,2),w-literal(actionTypes_00002,4)}), aux207)
reify(watched-or({w-literal(actionTypes_00003,2),w-literal(actionTypes_00003,4)}), aux208)
reify(watched-or({w-literal(actionTypes_00004,2),w-literal(actionTypes_00004,4)}), aux209)
reify(watched-or({w-literal(actionTypes_00005,2),w-literal(actionTypes_00005,4)}), aux210)
reify(watched-or({w-literal(actionTypes_00006,2),w-literal(actionTypes_00006,4)}), aux211)
reify(watched-or({w-literal(actionTypes_00007,2),w-literal(actionTypes_00007,4)}), aux212)
reify(watched-or({w-literal(actionTypes_00008,2),w-literal(actionTypes_00008,4)}), aux213)
reify(watched-or({w-literal(actionTypes_00009,2),w-literal(actionTypes_00009,4)}), aux214)
reify(watched-or({w-literal(actionTypes_00010,2),w-literal(actionTypes_00010,4)}), aux215)
reify(watched-or({w-literal(actionTypes_00011,2),w-literal(actionTypes_00011,4)}), aux216)
reify(w-literal(actionTypes_00002,1), aux217)
reify(w-literal(actionTypes_00002,1), aux218)
reify(w-literal(actionTypes_00002,1), aux219)
reify(w-literal(actionTypes_00002,1), aux220)
reify(w-literal(actionTypes_00002,1), aux221)
reify(w-literal(actionTypes_00003,1), aux223)
reify(w-literal(actionTypes_00003,1), aux224)
reify(w-literal(actionTypes_00003,1), aux225)
reify(w-literal(actionTypes_00003,1), aux226)
reify(w-literal(actionTypes_00003,1), aux227)
reify(w-literal(actionTypes_00004,1), aux229)
reify(w-literal(actionTypes_00004,1), aux230)
reify(w-literal(actionTypes_00004,1), aux231)
reify(w-literal(actionTypes_00004,1), aux232)
reify(w-literal(actionTypes_00004,1), aux233)
reify(w-literal(actionTypes_00005,1), aux235)
reify(w-literal(actionTypes_00005,1), aux236)
reify(w-literal(actionTypes_00005,1), aux237)
reify(w-literal(actionTypes_00005,1), aux238)
reify(w-literal(actionTypes_00005,1), aux239)
reify(w-literal(actionTypes_00006,1), aux241)
reify(w-literal(actionTypes_00006,1), aux242)
reify(w-literal(actionTypes_00006,1), aux243)
reify(w-literal(actionTypes_00006,1), aux244)
reify(w-literal(actionTypes_00006,1), aux245)
reify(w-literal(actionTypes_00007,1), aux247)
reify(w-literal(actionTypes_00007,1), aux248)
reify(w-literal(actionTypes_00007,1), aux249)
reify(w-literal(actionTypes_00007,1), aux250)
reify(w-literal(actionTypes_00007,1), aux251)
reify(w-literal(actionTypes_00008,1), aux253)
reify(w-literal(actionTypes_00008,1), aux254)
reify(w-literal(actionTypes_00008,1), aux255)
reify(w-literal(actionTypes_00008,1), aux256)
reify(w-literal(actionTypes_00008,1), aux257)
reify(w-literal(actionTypes_00009,1), aux259)
reify(w-literal(actionTypes_00009,1), aux260)
reify(w-literal(actionTypes_00009,1), aux261)
reify(w-literal(actionTypes_00009,1), aux262)
reify(w-literal(actionTypes_00009,1), aux263)
reify(w-literal(actionTypes_00010,1), aux265)
reify(w-literal(actionTypes_00010,1), aux266)
reify(w-literal(actionTypes_00010,1), aux267)
reify(w-literal(actionTypes_00010,1), aux268)
reify(w-literal(actionTypes_00010,1), aux269)
reify(w-literal(actionTypes_00011,1), aux271)
reify(w-literal(actionTypes_00011,1), aux272)
reify(w-literal(actionTypes_00011,1), aux273)
reify(w-literal(actionTypes_00011,1), aux274)
reify(w-literal(actionTypes_00011,1), aux275)
reify(w-literal(actionTypes_00002,2), aux277)
reify(w-literal(actionTypes_00002,2), aux278)
reify(w-literal(actionTypes_00002,2), aux279)
reify(w-literal(actionTypes_00002,2), aux280)
reify(w-literal(actionTypes_00002,2), aux281)
reify(w-literal(actionTypes_00002,2), aux282)
reify(w-literal(actionTypes_00002,2), aux283)
reify(w-literal(actionTypes_00003,2), aux285)
reify(w-literal(actionTypes_00003,2), aux286)
reify(w-literal(actionTypes_00003,2), aux287)
reify(w-literal(actionTypes_00003,2), aux288)
reify(w-literal(actionTypes_00003,2), aux289)
reify(w-literal(actionTypes_00003,2), aux290)
reify(w-literal(actionTypes_00003,2), aux291)
reify(w-literal(actionTypes_00003,2), aux292)
reify(w-literal(actionTypes_00004,2), aux294)
reify(w-literal(actionTypes_00004,2), aux295)
reify(w-literal(actionTypes_00004,2), aux296)
reify(w-literal(actionTypes_00004,2), aux297)
reify(w-literal(actionTypes_00004,2), aux298)
reify(w-literal(actionTypes_00004,2), aux299)
reify(w-literal(actionTypes_00004,2), aux300)
reify(w-literal(actionTypes_00004,2), aux301)
reify(w-literal(actionTypes_00005,2), aux303)
reify(w-literal(actionTypes_00005,2), aux304)
reify(w-literal(actionTypes_00005,2), aux305)
reify(w-literal(actionTypes_00005,2), aux306)
reify(w-literal(actionTypes_00005,2), aux307)
reify(w-literal(actionTypes_00005,2), aux308)
reify(w-literal(actionTypes_00005,2), aux309)
reify(w-literal(actionTypes_00005,2), aux310)
reify(w-literal(actionTypes_00006,2), aux312)
reify(w-literal(actionTypes_00006,2), aux313)
reify(w-literal(actionTypes_00006,2), aux314)
reify(w-literal(actionTypes_00006,2), aux315)
reify(w-literal(actionTypes_00006,2), aux316)
reify(w-literal(actionTypes_00006,2), aux317)
reify(w-literal(actionTypes_00006,2), aux318)
reify(w-literal(actionTypes_00006,2), aux319)
reify(w-literal(actionTypes_00007,2), aux321)
reify(w-literal(actionTypes_00007,2), aux322)
reify(w-literal(actionTypes_00007,2), aux323)
reify(w-literal(actionTypes_00007,2), aux324)
reify(w-literal(actionTypes_00007,2), aux325)
reify(w-literal(actionTypes_00007,2), aux326)
reify(w-literal(actionTypes_00007,2), aux327)
reify(w-literal(actionTypes_00007,2), aux328)
reify(w-literal(actionTypes_00008,2), aux330)
reify(w-literal(actionTypes_00008,2), aux331)
reify(w-literal(actionTypes_00008,2), aux332)
reify(w-literal(actionTypes_00008,2), aux333)
reify(w-literal(actionTypes_00008,2), aux334)
reify(w-literal(actionTypes_00008,2), aux335)
reify(w-literal(actionTypes_00008,2), aux336)
reify(w-literal(actionTypes_00008,2), aux337)
reify(w-literal(actionTypes_00009,2), aux339)
reify(w-literal(actionTypes_00009,2), aux340)
reify(w-literal(actionTypes_00009,2), aux341)
reify(w-literal(actionTypes_00009,2), aux342)
reify(w-literal(actionTypes_00009,2), aux343)
reify(w-literal(actionTypes_00009,2), aux344)
reify(w-literal(actionTypes_00009,2), aux345)
reify(w-literal(actionTypes_00009,2), aux346)
reify(w-literal(actionTypes_00010,2), aux348)
reify(w-literal(actionTypes_00010,2), aux349)
reify(w-literal(actionTypes_00010,2), aux350)
reify(w-literal(actionTypes_00010,2), aux351)
reify(w-literal(actionTypes_00010,2), aux352)
reify(w-literal(actionTypes_00010,2), aux353)
reify(w-literal(actionTypes_00010,2), aux354)
reify(w-literal(actionTypes_00010,2), aux355)
reify(w-literal(actionTypes_00011,2), aux357)
reify(w-literal(actionTypes_00011,2), aux358)
reify(w-literal(actionTypes_00011,2), aux359)
reify(w-literal(actionTypes_00011,2), aux360)
reify(w-literal(actionTypes_00011,2), aux361)
reify(w-literal(actionTypes_00002,3), aux362)
reify(w-literal(actionTypes_00002,3), aux363)
reify(w-literal(actionTypes_00002,3), aux364)
reify(w-literal(actionTypes_00002,3), aux365)
reify(w-literal(actionTypes_00002,3), aux366)
reify(w-literal(actionTypes_00002,3), aux367)
reify(w-literal(actionTypes_00003,3), aux368)
reify(w-literal(actionTypes_00003,3), aux369)
reify(w-literal(actionTypes_00003,3), aux370)
reify(w-literal(actionTypes_00003,3), aux371)
reify(w-literal(actionTypes_00003,3), aux372)
reify(w-literal(actionTypes_00003,3), aux373)
reify(w-literal(actionTypes_00004,3), aux374)
reify(w-literal(actionTypes_00004,3), aux375)
reify(w-literal(actionTypes_00004,3), aux376)
reify(w-literal(actionTypes_00004,3), aux377)
reify(w-literal(actionTypes_00004,3), aux378)
reify(w-literal(actionTypes_00004,3), aux379)
reify(w-literal(actionTypes_00005,3), aux380)
reify(w-literal(actionTypes_00005,3), aux381)
reify(w-literal(actionTypes_00005,3), aux382)
reify(w-literal(actionTypes_00005,3), aux383)
reify(w-literal(actionTypes_00005,3), aux384)
reify(w-literal(actionTypes_00005,3), aux385)
reify(w-literal(actionTypes_00006,3), aux386)
reify(w-literal(actionTypes_00006,3), aux387)
reify(w-literal(actionTypes_00006,3), aux388)
reify(w-literal(actionTypes_00006,3), aux389)
reify(w-literal(actionTypes_00006,3), aux390)
reify(w-literal(actionTypes_00006,3), aux391)
reify(w-literal(actionTypes_00007,3), aux392)
reify(w-literal(actionTypes_00007,3), aux393)
reify(w-literal(actionTypes_00007,3), aux394)
reify(w-literal(actionTypes_00007,3), aux395)
reify(w-literal(actionTypes_00007,3), aux396)
reify(w-literal(actionTypes_00007,3), aux397)
reify(w-literal(actionTypes_00008,3), aux398)
reify(w-literal(actionTypes_00008,3), aux399)
reify(w-literal(actionTypes_00008,3), aux400)
reify(w-literal(actionTypes_00008,3), aux401)
reify(w-literal(actionTypes_00008,3), aux402)
reify(w-literal(actionTypes_00008,3), aux403)
reify(w-literal(actionTypes_00009,3), aux404)
reify(w-literal(actionTypes_00009,3), aux405)
reify(w-literal(actionTypes_00009,3), aux406)
reify(w-literal(actionTypes_00009,3), aux407)
reify(w-literal(actionTypes_00009,3), aux408)
reify(w-literal(actionTypes_00009,3), aux409)
reify(w-literal(actionTypes_00010,3), aux410)
reify(w-literal(actionTypes_00010,3), aux411)
reify(w-literal(actionTypes_00010,3), aux412)
reify(w-literal(actionTypes_00010,3), aux413)
reify(w-literal(actionTypes_00010,3), aux414)
reify(w-literal(actionTypes_00010,3), aux415)
reify(w-literal(actionTypes_00011,3), aux416)
reify(w-literal(actionTypes_00011,3), aux417)
reify(w-literal(actionTypes_00011,3), aux418)
reify(w-literal(actionTypes_00011,3), aux419)
reify(w-literal(actionTypes_00011,3), aux420)
reify(w-literal(actionTypes_00011,3), aux421)
reify(w-literal(actionTypes_00002,4), aux422)
reify(w-literal(actionTypes_00002,4), aux423)
reify(w-literal(actionTypes_00002,4), aux424)
reify(w-literal(actionTypes_00002,4), aux425)
reify(w-literal(actionTypes_00002,4), aux426)
reify(w-literal(actionTypes_00003,4), aux427)
reify(w-literal(actionTypes_00003,4), aux428)
reify(w-literal(actionTypes_00003,4), aux429)
reify(w-literal(actionTypes_00003,4), aux430)
reify(w-literal(actionTypes_00003,4), aux431)
reify(w-literal(actionTypes_00003,4), aux432)
reify(w-literal(actionTypes_00004,4), aux433)
reify(w-literal(actionTypes_00004,4), aux434)
reify(w-literal(actionTypes_00004,4), aux435)
reify(w-literal(actionTypes_00004,4), aux436)
reify(w-literal(actionTypes_00004,4), aux437)
reify(w-literal(actionTypes_00004,4), aux438)
reify(w-literal(actionTypes_00005,4), aux439)
reify(w-literal(actionTypes_00005,4), aux440)
reify(w-literal(actionTypes_00005,4), aux441)
reify(w-literal(actionTypes_00005,4), aux442)
reify(w-literal(actionTypes_00005,4), aux443)
reify(w-literal(actionTypes_00005,4), aux444)
reify(w-literal(actionTypes_00006,4), aux445)
reify(w-literal(actionTypes_00006,4), aux446)
reify(w-literal(actionTypes_00006,4), aux447)
reify(w-literal(actionTypes_00006,4), aux448)
reify(w-literal(actionTypes_00006,4), aux449)
reify(w-literal(actionTypes_00006,4), aux450)
reify(w-literal(actionTypes_00007,4), aux451)
reify(w-literal(actionTypes_00007,4), aux452)
reify(w-literal(actionTypes_00007,4), aux453)
reify(w-literal(actionTypes_00007,4), aux454)
reify(w-literal(actionTypes_00007,4), aux455)
reify(w-literal(actionTypes_00007,4), aux456)
reify(w-literal(actionTypes_00008,4), aux457)
reify(w-literal(actionTypes_00008,4), aux458)
reify(w-literal(actionTypes_00008,4), aux459)
reify(w-literal(actionTypes_00008,4), aux460)
reify(w-literal(actionTypes_00008,4), aux461)
reify(w-literal(actionTypes_00008,4), aux462)
reify(w-literal(actionTypes_00009,4), aux463)
reify(w-literal(actionTypes_00009,4), aux464)
reify(w-literal(actionTypes_00009,4), aux465)
reify(w-literal(actionTypes_00009,4), aux466)
reify(w-literal(actionTypes_00009,4), aux467)
reify(w-literal(actionTypes_00009,4), aux468)
reify(w-literal(actionTypes_00010,4), aux469)
reify(w-literal(actionTypes_00010,4), aux470)
reify(w-literal(actionTypes_00010,4), aux471)
reify(w-literal(actionTypes_00010,4), aux472)
reify(w-literal(actionTypes_00010,4), aux473)
reify(w-literal(actionTypes_00010,4), aux474)
reify(w-literal(actionTypes_00011,4), aux475)
reify(w-literal(actionTypes_00011,4), aux476)
reify(w-literal(actionTypes_00011,4), aux477)
reify(w-literal(actionTypes_00011,4), aux478)
reify(w-literal(actionTypes_00011,4), aux479)
reify(w-literal(actionTypes_00011,4), aux480)
reify(w-literal(actionTypes_00002,5), aux481)
reify(w-literal(actionTypes_00002,5), aux482)
reify(w-literal(actionTypes_00002,5), aux483)
reify(w-literal(actionTypes_00002,5), aux484)
reify(w-literal(actionTypes_00002,5), aux485)
reify(w-literal(actionTypes_00002,5), aux486)
reify(w-literal(actionTypes_00002,5), aux487)
reify(w-literal(actionTypes_00002,5), aux488)
reify(w-literal(actionTypes_00003,5), aux489)
reify(w-literal(actionTypes_00003,5), aux490)
reify(w-literal(actionTypes_00003,5), aux491)
reify(w-literal(actionTypes_00003,5), aux492)
reify(w-literal(actionTypes_00003,5), aux493)
reify(w-literal(actionTypes_00003,5), aux494)
reify(w-literal(actionTypes_00003,5), aux495)
reify(w-literal(actionTypes_00003,5), aux496)
reify(w-literal(actionTypes_00004,5), aux497)
reify(w-literal(actionTypes_00004,5), aux498)
reify(w-literal(actionTypes_00004,5), aux499)
reify(w-literal(actionTypes_00004,5), aux500)
reify(w-literal(actionTypes_00004,5), aux501)
reify(w-literal(actionTypes_00004,5), aux502)
reify(w-literal(actionTypes_00004,5), aux503)
reify(w-literal(actionTypes_00004,5), aux504)
reify(w-literal(actionTypes_00005,5), aux505)
reify(w-literal(actionTypes_00005,5), aux506)
reify(w-literal(actionTypes_00005,5), aux507)
reify(w-literal(actionTypes_00005,5), aux508)
reify(w-literal(actionTypes_00005,5), aux509)
reify(w-literal(actionTypes_00005,5), aux510)
reify(w-literal(actionTypes_00005,5), aux511)
reify(w-literal(actionTypes_00005,5), aux512)
reify(w-literal(actionTypes_00006,5), aux513)
reify(w-literal(actionTypes_00006,5), aux514)
reify(w-literal(actionTypes_00006,5), aux515)
reify(w-literal(actionTypes_00006,5), aux516)
reify(w-literal(actionTypes_00006,5), aux517)
reify(w-literal(actionTypes_00006,5), aux518)
reify(w-literal(actionTypes_00006,5), aux519)
reify(w-literal(actionTypes_00006,5), aux520)
reify(w-literal(actionTypes_00007,5), aux521)
reify(w-literal(actionTypes_00007,5), aux522)
reify(w-literal(actionTypes_00007,5), aux523)
reify(w-literal(actionTypes_00007,5), aux524)
reify(w-literal(actionTypes_00007,5), aux525)
reify(w-literal(actionTypes_00007,5), aux526)
reify(w-literal(actionTypes_00007,5), aux527)
reify(w-literal(actionTypes_00007,5), aux528)
reify(w-literal(actionTypes_00008,5), aux529)
reify(w-literal(actionTypes_00008,5), aux530)
reify(w-literal(actionTypes_00008,5), aux531)
reify(w-literal(actionTypes_00008,5), aux532)
reify(w-literal(actionTypes_00008,5), aux533)
reify(w-literal(actionTypes_00008,5), aux534)
reify(w-literal(actionTypes_00008,5), aux535)
reify(w-literal(actionTypes_00008,5), aux536)
reify(w-literal(actionTypes_00009,5), aux537)
reify(w-literal(actionTypes_00009,5), aux538)
reify(w-literal(actionTypes_00009,5), aux539)
reify(w-literal(actionTypes_00009,5), aux540)
reify(w-literal(actionTypes_00009,5), aux541)
reify(w-literal(actionTypes_00009,5), aux542)
reify(w-literal(actionTypes_00009,5), aux543)
reify(w-literal(actionTypes_00009,5), aux544)
reify(w-literal(actionTypes_00010,5), aux545)
reify(w-literal(actionTypes_00010,5), aux546)
reify(w-literal(actionTypes_00010,5), aux547)
reify(w-literal(actionTypes_00010,5), aux548)
reify(w-literal(actionTypes_00010,5), aux549)
reify(w-literal(actionTypes_00010,5), aux550)
reify(w-literal(actionTypes_00010,5), aux551)
reify(w-literal(actionTypes_00010,5), aux552)
reify(w-literal(actionTypes_00011,5), aux553)
reify(w-literal(actionTypes_00011,5), aux554)
reify(w-literal(actionTypes_00011,5), aux555)
reify(w-literal(actionTypes_00011,5), aux556)
reify(w-literal(actionTypes_00011,5), aux557)
reify(w-literal(actionTypes_00011,5), aux558)
reify(w-literal(actionTypes_00011,5), aux559)
reify(w-literal(actionTypes_00011,5), aux560)
reify(w-literal(actionTypes_00002,6), aux561)
reify(w-literal(actionTypes_00002,6), aux562)
reify(w-literal(actionTypes_00002,6), aux563)
reify(w-literal(actionTypes_00002,6), aux564)
reify(w-literal(actionTypes_00002,6), aux565)
reify(w-literal(actionTypes_00002,6), aux566)
reify(w-literal(actionTypes_00002,6), aux567)
reify(w-literal(actionTypes_00003,6), aux568)
reify(w-literal(actionTypes_00003,6), aux569)
reify(w-literal(actionTypes_00003,6), aux570)
reify(w-literal(actionTypes_00003,6), aux571)
reify(w-literal(actionTypes_00003,6), aux572)
reify(w-literal(actionTypes_00003,6), aux573)
reify(w-literal(actionTypes_00003,6), aux574)
reify(w-literal(actionTypes_00004,6), aux575)
reify(w-literal(actionTypes_00004,6), aux576)
reify(w-literal(actionTypes_00004,6), aux577)
reify(w-literal(actionTypes_00004,6), aux578)
reify(w-literal(actionTypes_00004,6), aux579)
reify(w-literal(actionTypes_00004,6), aux580)
reify(w-literal(actionTypes_00004,6), aux581)
reify(w-literal(actionTypes_00005,6), aux582)
reify(w-literal(actionTypes_00005,6), aux583)
reify(w-literal(actionTypes_00005,6), aux584)
reify(w-literal(actionTypes_00005,6), aux585)
reify(w-literal(actionTypes_00005,6), aux586)
reify(w-literal(actionTypes_00005,6), aux587)
reify(w-literal(actionTypes_00005,6), aux588)
reify(w-literal(actionTypes_00006,6), aux589)
reify(w-literal(actionTypes_00006,6), aux590)
reify(w-literal(actionTypes_00006,6), aux591)
reify(w-literal(actionTypes_00006,6), aux592)
reify(w-literal(actionTypes_00006,6), aux593)
reify(w-literal(actionTypes_00006,6), aux594)
reify(w-literal(actionTypes_00006,6), aux595)
reify(w-literal(actionTypes_00007,6), aux596)
reify(w-literal(actionTypes_00007,6), aux597)
reify(w-literal(actionTypes_00007,6), aux598)
reify(w-literal(actionTypes_00007,6), aux599)
reify(w-literal(actionTypes_00007,6), aux600)
reify(w-literal(actionTypes_00007,6), aux601)
reify(w-literal(actionTypes_00007,6), aux602)
reify(w-literal(actionTypes_00008,6), aux603)
reify(w-literal(actionTypes_00008,6), aux604)
reify(w-literal(actionTypes_00008,6), aux605)
reify(w-literal(actionTypes_00008,6), aux606)
reify(w-literal(actionTypes_00008,6), aux607)
reify(w-literal(actionTypes_00008,6), aux608)
reify(w-literal(actionTypes_00008,6), aux609)
reify(w-literal(actionTypes_00009,6), aux610)
reify(w-literal(actionTypes_00009,6), aux611)
reify(w-literal(actionTypes_00009,6), aux612)
reify(w-literal(actionTypes_00009,6), aux613)
reify(w-literal(actionTypes_00009,6), aux614)
reify(w-literal(actionTypes_00009,6), aux615)
reify(w-literal(actionTypes_00009,6), aux616)
reify(w-literal(actionTypes_00010,6), aux617)
reify(w-literal(actionTypes_00010,6), aux618)
reify(w-literal(actionTypes_00010,6), aux619)
reify(w-literal(actionTypes_00010,6), aux620)
reify(w-literal(actionTypes_00010,6), aux621)
reify(w-literal(actionTypes_00010,6), aux622)
reify(w-literal(actionTypes_00010,6), aux623)
reify(w-literal(actionTypes_00011,6), aux624)
reify(w-literal(actionTypes_00011,6), aux625)
reify(w-literal(actionTypes_00011,6), aux626)
reify(w-literal(actionTypes_00011,6), aux627)
reify(w-literal(actionTypes_00011,6), aux628)
reify(w-literal(actionTypes_00011,6), aux629)
reify(w-literal(actionTypes_00011,6), aux630)
reify(w-literal(actionTypes_00002,7), aux631)
reify(w-literal(actionTypes_00002,7), aux632)
reify(w-literal(actionTypes_00002,7), aux633)
reify(w-literal(actionTypes_00002,7), aux634)
reify(w-literal(actionTypes_00002,7), aux635)
reify(w-literal(actionTypes_00002,7), aux636)
reify(w-literal(actionTypes_00002,7), aux637)
reify(w-literal(actionTypes_00003,7), aux638)
reify(w-literal(actionTypes_00003,7), aux639)
reify(w-literal(actionTypes_00003,7), aux640)
reify(w-literal(actionTypes_00003,7), aux641)
reify(w-literal(actionTypes_00003,7), aux642)
reify(w-literal(actionTypes_00003,7), aux643)
reify(w-literal(actionTypes_00003,7), aux644)
reify(w-literal(actionTypes_00004,7), aux645)
reify(w-literal(actionTypes_00004,7), aux646)
reify(w-literal(actionTypes_00004,7), aux647)
reify(w-literal(actionTypes_00004,7), aux648)
reify(w-literal(actionTypes_00004,7), aux649)
reify(w-literal(actionTypes_00004,7), aux650)
reify(w-literal(actionTypes_00004,7), aux651)
reify(w-literal(actionTypes_00005,7), aux652)
reify(w-literal(actionTypes_00005,7), aux653)
reify(w-literal(actionTypes_00005,7), aux654)
reify(w-literal(actionTypes_00005,7), aux655)
reify(w-literal(actionTypes_00005,7), aux656)
reify(w-literal(actionTypes_00005,7), aux657)
reify(w-literal(actionTypes_00005,7), aux658)
reify(w-literal(actionTypes_00006,7), aux659)
reify(w-literal(actionTypes_00006,7), aux660)
reify(w-literal(actionTypes_00006,7), aux661)
reify(w-literal(actionTypes_00006,7), aux662)
reify(w-literal(actionTypes_00006,7), aux663)
reify(w-literal(actionTypes_00006,7), aux664)
reify(w-literal(actionTypes_00006,7), aux665)
reify(w-literal(actionTypes_00007,7), aux666)
reify(w-literal(actionTypes_00007,7), aux667)
reify(w-literal(actionTypes_00007,7), aux668)
reify(w-literal(actionTypes_00007,7), aux669)
reify(w-literal(actionTypes_00007,7), aux670)
reify(w-literal(actionTypes_00007,7), aux671)
reify(w-literal(actionTypes_00007,7), aux672)
reify(w-literal(actionTypes_00008,7), aux673)
reify(w-literal(actionTypes_00008,7), aux674)
reify(w-literal(actionTypes_00008,7), aux675)
reify(w-literal(actionTypes_00008,7), aux676)
reify(w-literal(actionTypes_00008,7), aux677)
reify(w-literal(actionTypes_00008,7), aux678)
reify(w-literal(actionTypes_00008,7), aux679)
reify(w-literal(actionTypes_00009,7), aux680)
reify(w-literal(actionTypes_00009,7), aux681)
reify(w-literal(actionTypes_00009,7), aux682)
reify(w-literal(actionTypes_00009,7), aux683)
reify(w-literal(actionTypes_00009,7), aux684)
reify(w-literal(actionTypes_00009,7), aux685)
reify(w-literal(actionTypes_00009,7), aux686)
reify(w-literal(actionTypes_00010,7), aux687)
reify(w-literal(actionTypes_00010,7), aux688)
reify(w-literal(actionTypes_00010,7), aux689)
reify(w-literal(actionTypes_00010,7), aux690)
reify(w-literal(actionTypes_00010,7), aux691)
reify(w-literal(actionTypes_00010,7), aux692)
reify(w-literal(actionTypes_00010,7), aux693)
reify(w-literal(actionTypes_00011,7), aux694)
reify(w-literal(actionTypes_00011,7), aux695)
reify(w-literal(actionTypes_00011,7), aux696)
reify(w-literal(actionTypes_00011,7), aux697)
reify(w-literal(actionTypes_00011,7), aux698)
reify(w-literal(actionTypes_00011,7), aux699)
reify(w-literal(actionTypes_00011,7), aux700)
reify(w-literal(actionTypes_00002,8), aux701)
reify(w-literal(actionTypes_00002,8), aux702)
reify(w-literal(actionTypes_00002,8), aux703)
reify(w-literal(actionTypes_00002,8), aux704)
reify(w-literal(actionTypes_00002,8), aux705)
reify(w-literal(actionTypes_00002,8), aux706)
reify(w-literal(actionTypes_00003,8), aux707)
reify(w-literal(actionTypes_00003,8), aux708)
reify(w-literal(actionTypes_00003,8), aux709)
reify(w-literal(actionTypes_00003,8), aux710)
reify(w-literal(actionTypes_00003,8), aux711)
reify(w-literal(actionTypes_00003,8), aux712)
reify(w-literal(actionTypes_00004,8), aux713)
reify(w-literal(actionTypes_00004,8), aux714)
reify(w-literal(actionTypes_00004,8), aux715)
reify(w-literal(actionTypes_00004,8), aux716)
reify(w-literal(actionTypes_00004,8), aux717)
reify(w-literal(actionTypes_00004,8), aux718)
reify(w-literal(actionTypes_00005,8), aux719)
reify(w-literal(actionTypes_00005,8), aux720)
reify(w-literal(actionTypes_00005,8), aux721)
reify(w-literal(actionTypes_00005,8), aux722)
reify(w-literal(actionTypes_00005,8), aux723)
reify(w-literal(actionTypes_00005,8), aux724)
reify(w-literal(actionTypes_00006,8), aux725)
reify(w-literal(actionTypes_00006,8), aux726)
reify(w-literal(actionTypes_00006,8), aux727)
reify(w-literal(actionTypes_00006,8), aux728)
reify(w-literal(actionTypes_00006,8), aux729)
reify(w-literal(actionTypes_00006,8), aux730)
reify(w-literal(actionTypes_00007,8), aux731)
reify(w-literal(actionTypes_00007,8), aux732)
reify(w-literal(actionTypes_00007,8), aux733)
reify(w-literal(actionTypes_00007,8), aux734)
reify(w-literal(actionTypes_00007,8), aux735)
reify(w-literal(actionTypes_00007,8), aux736)
reify(w-literal(actionTypes_00008,8), aux737)
reify(w-literal(actionTypes_00008,8), aux738)
reify(w-literal(actionTypes_00008,8), aux739)
reify(w-literal(actionTypes_00008,8), aux740)
reify(w-literal(actionTypes_00008,8), aux741)
reify(w-literal(actionTypes_00008,8), aux742)
reify(w-literal(actionTypes_00009,8), aux743)
reify(w-literal(actionTypes_00009,8), aux744)
reify(w-literal(actionTypes_00009,8), aux745)
reify(w-literal(actionTypes_00009,8), aux746)
reify(w-literal(actionTypes_00009,8), aux747)
reify(w-literal(actionTypes_00009,8), aux748)
reify(w-literal(actionTypes_00010,8), aux749)
reify(w-literal(actionTypes_00010,8), aux750)
reify(w-literal(actionTypes_00010,8), aux751)
reify(w-literal(actionTypes_00010,8), aux752)
reify(w-literal(actionTypes_00010,8), aux753)
reify(w-literal(actionTypes_00010,8), aux754)
reify(w-literal(actionTypes_00011,8), aux755)
reify(w-literal(actionTypes_00011,8), aux756)
reify(w-literal(actionTypes_00011,8), aux757)
reify(w-literal(actionTypes_00011,8), aux758)
reify(w-literal(actionTypes_00011,8), aux759)
reify(w-literal(actionTypes_00011,8), aux760)
reify(watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007], aux139, aux113), aux59)
reify(watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008], aux137, aux91), aux60)
reify(watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005], aux141, aux98), aux61)
reify(watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006], aux140, aux108), aux62)
reify(watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009], aux138, aux105), aux63)
reify(watchelement_undefzero([6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011], aux130, aux107), aux64)
reify(watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003], aux143, aux111), aux65)
reify(watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010], aux131, aux99), aux66)
reify(watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004], aux142, aux89), aux67)
reify(watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002], aux144, aux106), aux68)
reify(lexless([6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011],[statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010]), aux69)
reify(lexless([6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011],[statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002]), aux70)
reify(lexless([6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011],[statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003]), aux71)
reify(lexless([6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011],[statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004]), aux72)
reify(lexless([6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011],[statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005]), aux73)
reify(lexless([6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011],[statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006]), aux74)
reify(lexless([6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011],[statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007]), aux75)
reify(lexless([6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011],[statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008]), aux76)
reify(lexless([6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011],[statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009]), aux77)
reify(lexless([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002],[6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011]), aux78)
reify(lexless([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003],[6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011]), aux79)
reify(lexless([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004],[6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011]), aux80)
reify(lexless([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005],[6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011]), aux81)
reify(lexless([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006],[6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011]), aux82)
reify(lexless([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007],[6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011]), aux83)
reify(lexless([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008],[6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011]), aux84)
reify(lexless([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009],[6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011]), aux85)
reify(lexless([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010],[6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011]), aux86)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005], aux145, aux87)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006], aux127, aux88)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004], aux156, aux89)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004], aux136, aux90)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008], aux133, aux91)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003], aux156, aux92)
watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010], aux130, aux93)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002], aux147, aux94)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009], aux131, aux95)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007], aux137, aux96)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008], aux138, aux97)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005], aux136, aux98)
watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010], aux128, aux99)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004], aux141, aux100)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005], aux140, aux101)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006], aux139, aux102)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002], aux143, aux103)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003], aux142, aux104)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009], aux118, aux105)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002], aux126, aux106)
watchelement_undefzero([6, statePlaces_00003_00011, statePlaces_00004_00011, statePlaces_00005_00011], aux134, aux107)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006], aux145, aux108)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009], aux128, aux109)
watchelement_undefzero([4, -1, -1, -1], aux144, aux110)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003], aux147, aux111)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008], aux118, aux112)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007], aux127, aux113)
watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010], aux134, aux114)
watchelement_undefzero([4, -1, -1, -1], aux126, aux115)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007], aux133, aux116)
reify(w-inintervalset(actionFrom_00011,[2,5]), aux117)
reify(w-inintervalset(actionTo_00009,[2,5]), aux119)
reify(w-inintervalset(actionFrom_00004,[2,5]), aux120)
reify(w-inintervalset(actionFrom_00003,[2,5]), aux121)
reify(w-inintervalset(actionFrom_00010,[2,5]), aux122)
reify(w-inintervalset(actionFrom_00008,[2,5]), aux123)
reify(w-inintervalset(actionTo_00011,[2,5]), aux124)
reify(w-inintervalset(actionTo_00010,[2,5]), aux125)
reify(w-inintervalset(actionFrom_00005,[2,5]), aux129)
reify(w-inintervalset(actionFrom_00009,[2,5]), aux132)
reify(w-inintervalset(actionFrom_00006,[2,5]), aux135)
reify(w-inintervalset(actionFrom_00007,[2,5]), aux146)
reify(w-inintervalset(actionTo_00006,[2,5]), aux148)
reify(w-inintervalset(actionTo_00005,[2,5]), aux149)
reify(w-inintervalset(actionTo_00004,[2,5]), aux150)
reify(w-inintervalset(actionTo_00008,[2,5]), aux151)
reify(w-inintervalset(actionTo_00007,[2,5]), aux152)
reify(w-inintervalset(actionFrom_00002,[2,5]), aux153)
reify(w-inintervalset(actionTo_00003,[2,5]), aux154)
reify(w-inintervalset(actionTo_00002,[2,5]), aux155)
watched-or({ineq(statePlaces_00002_00002, 4, -1),lexless([4, -1, -1, -1],[statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002]),lexless([1, 0],[pointers_00000_00002, pointers_00001_00002])})
watched-or({ineq(statePlaces_00002_00003, 4, -1),lexless([4, -1, -1, -1],[statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003]),lexless([1, 0],[pointers_00000_00003, pointers_00001_00003])})
watched-or({ineq(statePlaces_00002_00004, 4, -1),lexless([4, -1, -1, -1],[statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004]),lexless([1, 0],[pointers_00000_00004, pointers_00001_00004])})
watched-or({ineq(statePlaces_00002_00005, 4, -1),lexless([4, -1, -1, -1],[statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005]),lexless([1, 0],[pointers_00000_00005, pointers_00001_00005])})
watched-or({ineq(statePlaces_00002_00006, 4, -1),lexless([4, -1, -1, -1],[statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006]),lexless([1, 0],[pointers_00000_00006, pointers_00001_00006])})
watched-or({ineq(statePlaces_00002_00007, 4, -1),lexless([4, -1, -1, -1],[statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007]),lexless([1, 0],[pointers_00000_00007, pointers_00001_00007])})
watched-or({ineq(statePlaces_00002_00008, 4, -1),lexless([4, -1, -1, -1],[statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008]),lexless([1, 0],[pointers_00000_00008, pointers_00001_00008])})
watched-or({ineq(statePlaces_00002_00009, 4, -1),lexless([4, -1, -1, -1],[statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009]),lexless([1, 0],[pointers_00000_00009, pointers_00001_00009])})
watched-or({ineq(statePlaces_00002_00010, 4, -1),lexless([4, -1, -1, -1],[statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010]),lexless([1, 0],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00003, pointers_00001_00003]),lexless([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002],[statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003]),lexless([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003],[statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002])})
watched-or({lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00004, pointers_00001_00004]),lexless([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002],[statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004]),lexless([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004],[statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002])})
watched-or({lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00005, pointers_00001_00005]),lexless([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002],[statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005],[statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002])})
watched-or({lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00006, pointers_00001_00006]),lexless([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002],[statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006],[statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002])})
watched-or({lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00007, pointers_00001_00007]),lexless([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002],[statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007],[statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002])})
watched-or({lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00008, pointers_00001_00008]),lexless([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002],[statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008],[statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002])})
watched-or({lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00009, pointers_00001_00009]),lexless([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002],[statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009],[statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002])})
watched-or({lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00010, pointers_00001_00010]),lexless([statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002],[statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010],[statePlaces_00002_00002, statePlaces_00003_00002, statePlaces_00004_00002, statePlaces_00005_00002])})
watched-or({w-literal(aux70,1),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00011, 2]),w-literal(aux78,1)})
watched-or({w-literal(aux70,1),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00011, 3]),w-literal(aux78,1)})
watched-or({lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00004, pointers_00001_00004]),lexless([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003],[statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004]),lexless([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004],[statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003])})
watched-or({lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00005, pointers_00001_00005]),lexless([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003],[statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005],[statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003])})
watched-or({lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00006, pointers_00001_00006]),lexless([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003],[statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006],[statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003])})
watched-or({lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00007, pointers_00001_00007]),lexless([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003],[statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007],[statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003])})
watched-or({lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00008, pointers_00001_00008]),lexless([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003],[statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008],[statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003])})
watched-or({lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00009, pointers_00001_00009]),lexless([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003],[statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009],[statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003])})
watched-or({lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00010, pointers_00001_00010]),lexless([statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003],[statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010],[statePlaces_00002_00003, statePlaces_00003_00003, statePlaces_00004_00003, statePlaces_00005_00003])})
watched-or({w-literal(aux71,1),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00011, 2]),w-literal(aux79,1)})
watched-or({w-literal(aux71,1),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00011, 3]),w-literal(aux79,1)})
watched-or({lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00005, pointers_00001_00005]),lexless([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004],[statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005],[statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004])})
watched-or({lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00006, pointers_00001_00006]),lexless([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004],[statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006],[statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004])})
watched-or({lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00007, pointers_00001_00007]),lexless([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004],[statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007],[statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004])})
watched-or({lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00008, pointers_00001_00008]),lexless([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004],[statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008],[statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004])})
watched-or({lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00009, pointers_00001_00009]),lexless([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004],[statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009],[statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004])})
watched-or({lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00010, pointers_00001_00010]),lexless([statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004],[statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010],[statePlaces_00002_00004, statePlaces_00003_00004, statePlaces_00004_00004, statePlaces_00005_00004])})
watched-or({w-literal(aux72,1),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00011, 2]),w-literal(aux80,1)})
watched-or({w-literal(aux72,1),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00011, 3]),w-literal(aux80,1)})
watched-or({lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00006, pointers_00001_00006]),lexless([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005],[statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006],[statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005])})
watched-or({lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00007, pointers_00001_00007]),lexless([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005],[statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007],[statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005])})
watched-or({lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00008, pointers_00001_00008]),lexless([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005],[statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008],[statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005])})
watched-or({lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00009, pointers_00001_00009]),lexless([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005],[statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009],[statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005])})
watched-or({lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00010, pointers_00001_00010]),lexless([statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005],[statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010],[statePlaces_00002_00005, statePlaces_00003_00005, statePlaces_00004_00005, statePlaces_00005_00005])})
watched-or({w-literal(aux73,1),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00011, 2]),w-literal(aux81,1)})
watched-or({w-literal(aux73,1),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00011, 3]),w-literal(aux81,1)})
watched-or({lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00007, pointers_00001_00007]),lexless([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006],[statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007],[statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006])})
watched-or({lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00008, pointers_00001_00008]),lexless([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006],[statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008],[statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006])})
watched-or({lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00009, pointers_00001_00009]),lexless([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006],[statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009],[statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006])})
watched-or({lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00010, pointers_00001_00010]),lexless([statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006],[statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010],[statePlaces_00002_00006, statePlaces_00003_00006, statePlaces_00004_00006, statePlaces_00005_00006])})
watched-or({w-literal(aux74,1),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00011, 2]),w-literal(aux82,1)})
watched-or({w-literal(aux74,1),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00011, 3]),w-literal(aux82,1)})
watched-or({lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00008, pointers_00001_00008]),lexless([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007],[statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008],[statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007])})
watched-or({lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00009, pointers_00001_00009]),lexless([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007],[statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009],[statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007])})
watched-or({lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00010, pointers_00001_00010]),lexless([statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007],[statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010],[statePlaces_00002_00007, statePlaces_00003_00007, statePlaces_00004_00007, statePlaces_00005_00007])})
watched-or({w-literal(aux75,1),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00011, 2]),w-literal(aux83,1)})
watched-or({w-literal(aux75,1),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00011, 3]),w-literal(aux83,1)})
watched-or({lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00009, pointers_00001_00009]),lexless([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008],[statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009],[statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008])})
watched-or({lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00010, pointers_00001_00010]),lexless([statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008],[statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010],[statePlaces_00002_00008, statePlaces_00003_00008, statePlaces_00004_00008, statePlaces_00005_00008])})
watched-or({w-literal(aux76,1),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00011, 2]),w-literal(aux84,1)})
watched-or({w-literal(aux76,1),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00011, 3]),w-literal(aux84,1)})
watched-or({lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00010, pointers_00001_00010]),lexless([statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009],[statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010, statePlaces_00004_00010, statePlaces_00005_00010],[statePlaces_00002_00009, statePlaces_00003_00009, statePlaces_00004_00009, statePlaces_00005_00009])})
watched-or({w-literal(aux77,1),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00011, 2]),w-literal(aux85,1)})
watched-or({w-literal(aux77,1),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00011, 3]),w-literal(aux85,1)})
watched-or({w-literal(aux69,1),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00011, 2]),w-literal(aux86,1)})
watched-or({w-literal(aux69,1),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00011, 3]),w-literal(aux86,1)})
reifyimply(w-literal(pointers_00000_00002,1), aux157)
reifyimply(gaceq(pointers_00000_00002,pointers_00000_00003), aux158)
reifyimply(gaceq(pointers_00000_00003,pointers_00000_00004), aux159)
reifyimply(gaceq(pointers_00000_00004,pointers_00000_00005), aux160)
reifyimply(gaceq(pointers_00000_00005,pointers_00000_00006), aux161)
reifyimply(gaceq(pointers_00000_00006,pointers_00000_00007), aux162)
reifyimply(gaceq(pointers_00000_00007,pointers_00000_00008), aux163)
reifyimply(gaceq(pointers_00000_00008,pointers_00000_00009), aux164)
reifyimply(gaceq(pointers_00000_00009,pointers_00000_00010), aux165)
reifyimply(gaceq(pointers_00000_00010,pointers_00000_00011), aux166)
reifyimply(w-literal(pointers_00001_00002,0), aux167)
reifyimply(gaceq(pointers_00001_00002,pointers_00001_00003), aux168)
reifyimply(gaceq(pointers_00001_00003,pointers_00001_00004), aux169)
reifyimply(gaceq(pointers_00001_00004,pointers_00001_00005), aux170)
reifyimply(gaceq(pointers_00001_00005,pointers_00001_00006), aux171)
reifyimply(gaceq(pointers_00001_00006,pointers_00001_00007), aux172)
reifyimply(gaceq(pointers_00001_00007,pointers_00001_00008), aux173)
reifyimply(gaceq(pointers_00001_00008,pointers_00001_00009), aux174)
reifyimply(gaceq(pointers_00001_00009,pointers_00001_00010), aux175)
reifyimply(w-literal(pointers_00001_00010,2), aux176)
reifyimply(w-literal(statePlaces_00003_00002,-1), aux177)
reifyimply(w-literal(statePlaces_00004_00002,-1), aux178)
reifyimply(w-literal(statePlaces_00005_00002,-1), aux179)
reifyimply(gaceq(statePlaces_00003_00002,statePlaces_00003_00003), aux180)
reifyimply(gaceq(statePlaces_00004_00002,statePlaces_00004_00003), aux181)
reifyimply(gaceq(statePlaces_00005_00002,statePlaces_00005_00003), aux182)
reifyimply(gaceq(statePlaces_00003_00003,statePlaces_00003_00004), aux183)
reifyimply(gaceq(statePlaces_00004_00003,statePlaces_00004_00004), aux184)
reifyimply(gaceq(statePlaces_00005_00003,statePlaces_00005_00004), aux185)
reifyimply(gaceq(statePlaces_00003_00004,statePlaces_00003_00005), aux186)
reifyimply(gaceq(statePlaces_00004_00004,statePlaces_00004_00005), aux187)
reifyimply(gaceq(statePlaces_00005_00004,statePlaces_00005_00005), aux188)
reifyimply(gaceq(statePlaces_00003_00005,statePlaces_00003_00006), aux189)
reifyimply(gaceq(statePlaces_00004_00005,statePlaces_00004_00006), aux190)
reifyimply(gaceq(statePlaces_00005_00005,statePlaces_00005_00006), aux191)
reifyimply(gaceq(statePlaces_00003_00006,statePlaces_00003_00007), aux192)
reifyimply(gaceq(statePlaces_00004_00006,statePlaces_00004_00007), aux193)
reifyimply(gaceq(statePlaces_00005_00006,statePlaces_00005_00007), aux194)
reifyimply(gaceq(statePlaces_00003_00007,statePlaces_00003_00008), aux195)
reifyimply(gaceq(statePlaces_00004_00007,statePlaces_00004_00008), aux196)
reifyimply(gaceq(statePlaces_00005_00007,statePlaces_00005_00008), aux197)
reifyimply(gaceq(statePlaces_00003_00008,statePlaces_00003_00009), aux198)
reifyimply(gaceq(statePlaces_00004_00008,statePlaces_00004_00009), aux199)
reifyimply(gaceq(statePlaces_00005_00008,statePlaces_00005_00009), aux200)
reifyimply(gaceq(statePlaces_00003_00009,statePlaces_00003_00010), aux201)
reifyimply(gaceq(statePlaces_00004_00009,statePlaces_00004_00010), aux202)
reifyimply(gaceq(statePlaces_00005_00009,statePlaces_00005_00010), aux203)
reifyimply(gaceq(statePlaces_00003_00010,statePlaces_00003_00011), aux204)
reifyimply(gaceq(statePlaces_00004_00010,statePlaces_00004_00011), aux205)
reifyimply(gaceq(statePlaces_00005_00010,statePlaces_00005_00011), aux206)
reifyimply(w-literal(statePlaces_00002_00002,4), aux207)
reifyimply(gaceq(statePlaces_00002_00002,statePlaces_00002_00003), aux208)
reifyimply(gaceq(statePlaces_00002_00003,statePlaces_00002_00004), aux209)
reifyimply(gaceq(statePlaces_00002_00004,statePlaces_00002_00005), aux210)
reifyimply(gaceq(statePlaces_00002_00005,statePlaces_00002_00006), aux211)
reifyimply(gaceq(statePlaces_00002_00006,statePlaces_00002_00007), aux212)
reifyimply(gaceq(statePlaces_00002_00007,statePlaces_00002_00008), aux213)
reifyimply(gaceq(statePlaces_00002_00008,statePlaces_00002_00009), aux214)
reifyimply(gaceq(statePlaces_00002_00009,statePlaces_00002_00010), aux215)
reifyimply(w-literal(statePlaces_00002_00010,6), aux216)
reifyimply(w-literal(pointers_00000_00002,2), aux217)
reifyimply(w-literal(actionFrom_00002,0), aux218)
reifyimply(w-literal(actionTo_00002,2), aux219)
reifyimply(w-inintervalset(pointers_00000_00002,[1,6]), aux220)
reifyimply(watchelement_undefzero([4, 2, 3, 2, 8, 5], aux222, statePlaces_00002_00002), aux221)
reifyimply(w-literal(actionFrom_00003,0), aux224)
reifyimply(w-literal(actionTo_00003,2), aux225)
reifyimply(w-inintervalset(pointers_00000_00003,[1,6]), aux226)
reifyimply(watchelement_undefzero([4, 2, 3, 2, 8, 5], aux228, statePlaces_00002_00003), aux227)
reifyimply(w-literal(actionFrom_00004,0), aux230)
reifyimply(w-literal(actionTo_00004,2), aux231)
reifyimply(w-inintervalset(pointers_00000_00004,[1,6]), aux232)
reifyimply(watchelement_undefzero([4, 2, 3, 2, 8, 5], aux234, statePlaces_00002_00004), aux233)
reifyimply(w-literal(actionFrom_00005,0), aux236)
reifyimply(w-literal(actionTo_00005,2), aux237)
reifyimply(w-inintervalset(pointers_00000_00005,[1,6]), aux238)
reifyimply(watchelement_undefzero([4, 2, 3, 2, 8, 5], aux240, statePlaces_00002_00005), aux239)
reifyimply(w-literal(actionFrom_00006,0), aux242)
reifyimply(w-literal(actionTo_00006,2), aux243)
reifyimply(w-inintervalset(pointers_00000_00006,[1,6]), aux244)
reifyimply(watchelement_undefzero([4, 2, 3, 2, 8, 5], aux246, statePlaces_00002_00006), aux245)
reifyimply(w-literal(actionFrom_00007,0), aux248)
reifyimply(w-literal(actionTo_00007,2), aux249)
reifyimply(w-inintervalset(pointers_00000_00007,[1,6]), aux250)
reifyimply(watchelement_undefzero([4, 2, 3, 2, 8, 5], aux252, statePlaces_00002_00007), aux251)
reifyimply(w-literal(actionFrom_00008,0), aux254)
reifyimply(w-literal(actionTo_00008,2), aux255)
reifyimply(w-inintervalset(pointers_00000_00008,[1,6]), aux256)
reifyimply(watchelement_undefzero([4, 2, 3, 2, 8, 5], aux258, statePlaces_00002_00008), aux257)
reifyimply(w-literal(actionFrom_00009,0), aux260)
reifyimply(w-literal(actionTo_00009,2), aux261)
reifyimply(w-inintervalset(pointers_00000_00009,[1,6]), aux262)
reifyimply(watchelement_undefzero([4, 2, 3, 2, 8, 5], aux264, statePlaces_00002_00009), aux263)
reifyimply(w-literal(actionFrom_00010,0), aux266)
reifyimply(w-literal(actionTo_00010,2), aux267)
reifyimply(w-inintervalset(pointers_00000_00010,[1,6]), aux268)
reifyimply(watchelement_undefzero([4, 2, 3, 2, 8, 5], aux270, statePlaces_00002_00010), aux269)
reifyimply(w-literal(actionFrom_00011,0), aux272)
reifyimply(w-literal(actionTo_00011,2), aux273)
reifyimply(w-inintervalset(pointers_00000_00011,[1,6]), aux274)
reifyimply(watchelement_undefzero([4, 2, 3, 2, 8, 5], aux276, 6), aux275)
reifyimply(diseq(statePlaces_00002_00002,-1), aux277)
reifyimply(ineq(pointers_00001_00002, 3, 0), aux278)
reifyimply(w-literal(pointers_00001_00002,1), aux279)
reifyimply(w-literal(actionFrom_00002,2), aux280)
reifyimply(w-literal(actionTo_00002,1), aux281)
reifyimply(w-inintervalset(pointers_00001_00002,[1,3]), aux282)
reifyimply(watchelement_undefzero([0, 5, 6], aux284, 4), aux283)
reifyimply(diseq(statePlaces_00002_00003,-1), aux285)
reifyimply(diseq(statePlaces_00002_00002,-1), aux286)
reifyimply(ineq(pointers_00001_00003, 3, 0), aux287)
reifyimply(w-literal(actionFrom_00003,2), aux289)
reifyimply(w-literal(actionTo_00003,1), aux290)
reifyimply(w-inintervalset(pointers_00001_00003,[1,3]), aux291)
reifyimply(watchelement_undefzero([0, 5, 6], aux293, statePlaces_00002_00002), aux292)
reifyimply(diseq(statePlaces_00002_00004,-1), aux294)
reifyimply(diseq(statePlaces_00002_00003,-1), aux295)
reifyimply(ineq(pointers_00001_00004, 3, 0), aux296)
reifyimply(w-literal(actionFrom_00004,2), aux298)
reifyimply(w-literal(actionTo_00004,1), aux299)
reifyimply(w-inintervalset(pointers_00001_00004,[1,3]), aux300)
reifyimply(watchelement_undefzero([0, 5, 6], aux302, statePlaces_00002_00003), aux301)
reifyimply(diseq(statePlaces_00002_00005,-1), aux303)
reifyimply(diseq(statePlaces_00002_00004,-1), aux304)
reifyimply(ineq(pointers_00001_00005, 3, 0), aux305)
reifyimply(w-literal(actionFrom_00005,2), aux307)
reifyimply(w-literal(actionTo_00005,1), aux308)
reifyimply(w-inintervalset(pointers_00001_00005,[1,3]), aux309)
reifyimply(watchelement_undefzero([0, 5, 6], aux311, statePlaces_00002_00004), aux310)
reifyimply(diseq(statePlaces_00002_00006,-1), aux312)
reifyimply(diseq(statePlaces_00002_00005,-1), aux313)
reifyimply(ineq(pointers_00001_00006, 3, 0), aux314)
reifyimply(w-literal(actionFrom_00006,2), aux316)
reifyimply(w-literal(actionTo_00006,1), aux317)
reifyimply(w-inintervalset(pointers_00001_00006,[1,3]), aux318)
reifyimply(watchelement_undefzero([0, 5, 6], aux320, statePlaces_00002_00005), aux319)
reifyimply(diseq(statePlaces_00002_00007,-1), aux321)
reifyimply(diseq(statePlaces_00002_00006,-1), aux322)
reifyimply(ineq(pointers_00001_00007, 3, 0), aux323)
reifyimply(w-literal(actionFrom_00007,2), aux325)
reifyimply(w-literal(actionTo_00007,1), aux326)
reifyimply(w-inintervalset(pointers_00001_00007,[1,3]), aux327)
reifyimply(watchelement_undefzero([0, 5, 6], aux329, statePlaces_00002_00006), aux328)
reifyimply(diseq(statePlaces_00002_00008,-1), aux330)
reifyimply(diseq(statePlaces_00002_00007,-1), aux331)
reifyimply(ineq(pointers_00001_00008, 3, 0), aux332)
reifyimply(w-literal(actionFrom_00008,2), aux334)
reifyimply(w-literal(actionTo_00008,1), aux335)
reifyimply(w-inintervalset(pointers_00001_00008,[1,3]), aux336)
reifyimply(watchelement_undefzero([0, 5, 6], aux338, statePlaces_00002_00007), aux337)
reifyimply(diseq(statePlaces_00002_00009,-1), aux339)
reifyimply(diseq(statePlaces_00002_00008,-1), aux340)
reifyimply(ineq(pointers_00001_00009, 3, 0), aux341)
reifyimply(w-literal(actionFrom_00009,2), aux343)
reifyimply(w-literal(actionTo_00009,1), aux344)
reifyimply(w-inintervalset(pointers_00001_00009,[1,3]), aux345)
reifyimply(watchelement_undefzero([0, 5, 6], aux347, statePlaces_00002_00008), aux346)
reifyimply(diseq(statePlaces_00002_00010,-1), aux348)
reifyimply(diseq(statePlaces_00002_00009,-1), aux349)
reifyimply(ineq(pointers_00001_00010, 3, 0), aux350)
reifyimply(w-literal(actionFrom_00010,2), aux352)
reifyimply(w-literal(actionTo_00010,1), aux353)
reifyimply(w-inintervalset(pointers_00001_00010,[1,3]), aux354)
reifyimply(watchelement_undefzero([0, 5, 6], aux356, statePlaces_00002_00009), aux355)
reifyimply(diseq(statePlaces_00002_00010,-1), aux357)
reifyimply(w-literal(pointers_00001_00010,1), aux358)
reifyimply(w-literal(actionFrom_00011,2), aux359)
reifyimply(w-literal(actionTo_00011,1), aux360)
reifyimply(w-literal(statePlaces_00002_00010,5), aux361)
ineq(aux362, aux155, 0)
ineq(aux363, aux68, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux364)
reifyimply(diseq(-1,aux106), aux365)
reifyimply(w-literal(actionTo_00002,2), aux366)
ineq(aux367, aux153, 0)
ineq(aux368, aux154, 0)
ineq(aux369, aux65, 0)
reifyimply(ineq(3, actionFrom_00003, 0), aux370)
reifyimply(diseq(-1,aux111), aux371)
reifyimply(w-literal(actionTo_00003,2), aux372)
ineq(aux373, aux121, 0)
ineq(aux374, aux150, 0)
ineq(aux375, aux67, 0)
reifyimply(ineq(3, actionFrom_00004, 0), aux376)
reifyimply(diseq(-1,aux89), aux377)
reifyimply(w-literal(actionTo_00004,2), aux378)
ineq(aux379, aux120, 0)
ineq(aux380, aux149, 0)
ineq(aux381, aux61, 0)
reifyimply(ineq(3, actionFrom_00005, 0), aux382)
reifyimply(diseq(-1,aux98), aux383)
reifyimply(w-literal(actionTo_00005,2), aux384)
ineq(aux385, aux129, 0)
ineq(aux386, aux148, 0)
ineq(aux387, aux62, 0)
reifyimply(ineq(3, actionFrom_00006, 0), aux388)
reifyimply(diseq(-1,aux108), aux389)
reifyimply(w-literal(actionTo_00006,2), aux390)
ineq(aux391, aux135, 0)
ineq(aux392, aux152, 0)
ineq(aux393, aux59, 0)
reifyimply(ineq(3, actionFrom_00007, 0), aux394)
reifyimply(diseq(-1,aux113), aux395)
reifyimply(w-literal(actionTo_00007,2), aux396)
ineq(aux397, aux146, 0)
ineq(aux398, aux151, 0)
ineq(aux399, aux60, 0)
reifyimply(ineq(3, actionFrom_00008, 0), aux400)
reifyimply(diseq(-1,aux91), aux401)
reifyimply(w-literal(actionTo_00008,2), aux402)
ineq(aux403, aux123, 0)
ineq(aux404, aux119, 0)
ineq(aux405, aux63, 0)
reifyimply(ineq(3, actionFrom_00009, 0), aux406)
reifyimply(diseq(-1,aux105), aux407)
reifyimply(w-literal(actionTo_00009,2), aux408)
ineq(aux409, aux132, 0)
ineq(aux410, aux125, 0)
ineq(aux411, aux66, 0)
reifyimply(ineq(3, actionFrom_00010, 0), aux412)
reifyimply(diseq(-1,aux99), aux413)
reifyimply(w-literal(actionTo_00010,2), aux414)
ineq(aux415, aux122, 0)
ineq(aux416, aux124, 0)
ineq(aux417, aux64, 0)
reifyimply(ineq(3, actionFrom_00011, 0), aux418)
reifyimply(diseq(aux107,-1), aux419)
reifyimply(w-literal(actionTo_00011,2), aux420)
ineq(aux421, aux117, 0)
reifyimply(ineq(3, actionTo_00002, 0), aux422)
reifyimply(w-literal(actionFrom_00002,2), aux423)
ineq(aux424, aux153, 0)
ineq(aux425, aux155, 0)
ineq(aux426, aux68, 0)
reifyimply(ineq(3, actionTo_00003, 0), aux427)
reifyimply(w-literal(actionFrom_00003,2), aux428)
reifyimply(diseq(statePlaces_00002_00002,-1), aux429)
ineq(aux430, aux121, 0)
ineq(aux431, aux154, 0)
ineq(aux432, aux65, 0)
reifyimply(ineq(3, actionTo_00004, 0), aux433)
reifyimply(w-literal(actionFrom_00004,2), aux434)
reifyimply(diseq(statePlaces_00002_00003,-1), aux435)
ineq(aux436, aux120, 0)
ineq(aux437, aux150, 0)
ineq(aux438, aux67, 0)
reifyimply(ineq(3, actionTo_00005, 0), aux439)
reifyimply(w-literal(actionFrom_00005,2), aux440)
reifyimply(diseq(statePlaces_00002_00004,-1), aux441)
ineq(aux442, aux129, 0)
ineq(aux443, aux149, 0)
ineq(aux444, aux61, 0)
reifyimply(ineq(3, actionTo_00006, 0), aux445)
reifyimply(w-literal(actionFrom_00006,2), aux446)
reifyimply(diseq(statePlaces_00002_00005,-1), aux447)
ineq(aux448, aux135, 0)
ineq(aux449, aux148, 0)
ineq(aux450, aux62, 0)
reifyimply(ineq(3, actionTo_00007, 0), aux451)
reifyimply(w-literal(actionFrom_00007,2), aux452)
reifyimply(diseq(statePlaces_00002_00006,-1), aux453)
ineq(aux454, aux146, 0)
ineq(aux455, aux152, 0)
ineq(aux456, aux59, 0)
reifyimply(ineq(3, actionTo_00008, 0), aux457)
reifyimply(w-literal(actionFrom_00008,2), aux458)
reifyimply(diseq(statePlaces_00002_00007,-1), aux459)
ineq(aux460, aux123, 0)
ineq(aux461, aux151, 0)
ineq(aux462, aux60, 0)
reifyimply(ineq(3, actionTo_00009, 0), aux463)
reifyimply(w-literal(actionFrom_00009,2), aux464)
reifyimply(diseq(statePlaces_00002_00008,-1), aux465)
ineq(aux466, aux132, 0)
ineq(aux467, aux119, 0)
ineq(aux468, aux63, 0)
reifyimply(ineq(3, actionTo_00010, 0), aux469)
reifyimply(w-literal(actionFrom_00010,2), aux470)
reifyimply(diseq(statePlaces_00002_00009,-1), aux471)
ineq(aux472, aux122, 0)
ineq(aux473, aux125, 0)
ineq(aux474, aux66, 0)
reifyimply(ineq(3, actionTo_00011, 0), aux475)
reifyimply(w-literal(actionFrom_00011,2), aux476)
reifyimply(diseq(statePlaces_00002_00010,-1), aux477)
ineq(aux478, aux117, 0)
ineq(aux479, aux124, 0)
ineq(aux480, aux64, 0)
ineq(aux481, aux155, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux482)
reifyimply(diseq(-1,aux106), aux483)
reifyimply(diseq(-1,aux110), aux484)
reifyimply(w-literal(actionTo_00002,2), aux485)
ineq(aux486, aux153, 0)
reifyimply(diseq(aux115,-1), aux487)
ineq(aux489, aux154, 0)
reifyimply(ineq(3, actionFrom_00003, 0), aux490)
reifyimply(diseq(-1,aux111), aux491)
reifyimply(diseq(-1,aux103), aux492)
reifyimply(w-literal(actionTo_00003,2), aux493)
ineq(aux494, aux121, 0)
reifyimply(diseq(-1,aux94), aux495)
ineq(aux497, aux150, 0)
reifyimply(ineq(3, actionFrom_00004, 0), aux498)
reifyimply(diseq(-1,aux89), aux499)
reifyimply(diseq(-1,aux104), aux500)
reifyimply(w-literal(actionTo_00004,2), aux501)
ineq(aux502, aux120, 0)
reifyimply(diseq(-1,aux92), aux503)
ineq(aux505, aux149, 0)
reifyimply(ineq(3, actionFrom_00005, 0), aux506)
reifyimply(diseq(-1,aux98), aux507)
reifyimply(diseq(-1,aux100), aux508)
reifyimply(w-literal(actionTo_00005,2), aux509)
ineq(aux510, aux129, 0)
reifyimply(diseq(-1,aux90), aux511)
ineq(aux513, aux148, 0)
reifyimply(ineq(3, actionFrom_00006, 0), aux514)
reifyimply(diseq(-1,aux108), aux515)
reifyimply(diseq(-1,aux101), aux516)
reifyimply(w-literal(actionTo_00006,2), aux517)
ineq(aux518, aux135, 0)
reifyimply(diseq(-1,aux87), aux519)
ineq(aux521, aux152, 0)
reifyimply(ineq(3, actionFrom_00007, 0), aux522)
reifyimply(diseq(-1,aux113), aux523)
reifyimply(diseq(-1,aux102), aux524)
reifyimply(w-literal(actionTo_00007,2), aux525)
ineq(aux526, aux146, 0)
reifyimply(diseq(-1,aux88), aux527)
ineq(aux529, aux151, 0)
reifyimply(ineq(3, actionFrom_00008, 0), aux530)
reifyimply(diseq(-1,aux91), aux531)
reifyimply(diseq(-1,aux96), aux532)
reifyimply(w-literal(actionTo_00008,2), aux533)
ineq(aux534, aux123, 0)
reifyimply(diseq(-1,aux116), aux535)
ineq(aux537, aux119, 0)
reifyimply(ineq(3, actionFrom_00009, 0), aux538)
reifyimply(diseq(-1,aux105), aux539)
reifyimply(diseq(-1,aux97), aux540)
reifyimply(w-literal(actionTo_00009,2), aux541)
ineq(aux542, aux132, 0)
reifyimply(diseq(-1,aux112), aux543)
ineq(aux545, aux125, 0)
reifyimply(ineq(3, actionFrom_00010, 0), aux546)
reifyimply(diseq(-1,aux99), aux547)
reifyimply(diseq(-1,aux95), aux548)
reifyimply(w-literal(actionTo_00010,2), aux549)
ineq(aux550, aux122, 0)
reifyimply(diseq(-1,aux109), aux551)
ineq(aux553, aux124, 0)
reifyimply(ineq(3, actionFrom_00011, 0), aux554)
reifyimply(diseq(aux107,-1), aux555)
reifyimply(diseq(-1,aux93), aux556)
reifyimply(w-literal(actionTo_00011,2), aux557)
ineq(aux558, aux117, 0)
reifyimply(diseq(-1,aux114), aux559)
ineq(aux561, aux155, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux562)
reifyimply(diseq(-1,aux106), aux563)
reifyimply(diseq(-1,aux110), aux564)
reifyimply(w-literal(actionTo_00002,2), aux565)
ineq(aux566, aux153, 0)
ineq(aux568, aux154, 0)
reifyimply(ineq(3, actionFrom_00003, 0), aux569)
reifyimply(diseq(-1,aux111), aux570)
reifyimply(diseq(-1,aux103), aux571)
reifyimply(w-literal(actionTo_00003,2), aux572)
ineq(aux573, aux121, 0)
ineq(aux575, aux150, 0)
reifyimply(ineq(3, actionFrom_00004, 0), aux576)
reifyimply(diseq(-1,aux89), aux577)
reifyimply(diseq(-1,aux104), aux578)
reifyimply(w-literal(actionTo_00004,2), aux579)
ineq(aux580, aux120, 0)
ineq(aux582, aux149, 0)
reifyimply(ineq(3, actionFrom_00005, 0), aux583)
reifyimply(diseq(-1,aux98), aux584)
reifyimply(diseq(-1,aux100), aux585)
reifyimply(w-literal(actionTo_00005,2), aux586)
ineq(aux587, aux129, 0)
ineq(aux589, aux148, 0)
reifyimply(ineq(3, actionFrom_00006, 0), aux590)
reifyimply(diseq(-1,aux108), aux591)
reifyimply(diseq(-1,aux101), aux592)
reifyimply(w-literal(actionTo_00006,2), aux593)
ineq(aux594, aux135, 0)
ineq(aux596, aux152, 0)
reifyimply(ineq(3, actionFrom_00007, 0), aux597)
reifyimply(diseq(-1,aux113), aux598)
reifyimply(diseq(-1,aux102), aux599)
reifyimply(w-literal(actionTo_00007,2), aux600)
ineq(aux601, aux146, 0)
ineq(aux603, aux151, 0)
reifyimply(ineq(3, actionFrom_00008, 0), aux604)
reifyimply(diseq(-1,aux91), aux605)
reifyimply(diseq(-1,aux96), aux606)
reifyimply(w-literal(actionTo_00008,2), aux607)
ineq(aux608, aux123, 0)
ineq(aux610, aux119, 0)
reifyimply(ineq(3, actionFrom_00009, 0), aux611)
reifyimply(diseq(-1,aux105), aux612)
reifyimply(diseq(-1,aux97), aux613)
reifyimply(w-literal(actionTo_00009,2), aux614)
ineq(aux615, aux132, 0)
ineq(aux617, aux125, 0)
reifyimply(ineq(3, actionFrom_00010, 0), aux618)
reifyimply(diseq(-1,aux99), aux619)
reifyimply(diseq(-1,aux95), aux620)
reifyimply(w-literal(actionTo_00010,2), aux621)
ineq(aux622, aux122, 0)
ineq(aux624, aux124, 0)
reifyimply(ineq(3, actionFrom_00011, 0), aux625)
reifyimply(diseq(aux107,-1), aux626)
reifyimply(diseq(-1,aux93), aux627)
reifyimply(w-literal(actionTo_00011,2), aux628)
ineq(aux629, aux117, 0)
ineq(aux631, aux155, 0)
ineq(aux632, aux68, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux633)
reifyimply(w-literal(actionTo_00002,2), aux634)
ineq(aux635, aux153, 0)
reifyimply(diseq(aux115,-1), aux636)
ineq(aux638, aux154, 0)
ineq(aux639, aux65, 0)
reifyimply(ineq(3, actionFrom_00003, 0), aux640)
reifyimply(w-literal(actionTo_00003,2), aux641)
ineq(aux642, aux121, 0)
reifyimply(diseq(-1,aux94), aux643)
ineq(aux645, aux150, 0)
ineq(aux646, aux67, 0)
reifyimply(ineq(3, actionFrom_00004, 0), aux647)
reifyimply(w-literal(actionTo_00004,2), aux648)
ineq(aux649, aux120, 0)
reifyimply(diseq(-1,aux92), aux650)
ineq(aux652, aux149, 0)
ineq(aux653, aux61, 0)
reifyimply(ineq(3, actionFrom_00005, 0), aux654)
reifyimply(w-literal(actionTo_00005,2), aux655)
ineq(aux656, aux129, 0)
reifyimply(diseq(-1,aux90), aux657)
ineq(aux659, aux148, 0)
ineq(aux660, aux62, 0)
reifyimply(ineq(3, actionFrom_00006, 0), aux661)
reifyimply(w-literal(actionTo_00006,2), aux662)
ineq(aux663, aux135, 0)
reifyimply(diseq(-1,aux87), aux664)
ineq(aux666, aux152, 0)
ineq(aux667, aux59, 0)
reifyimply(ineq(3, actionFrom_00007, 0), aux668)
reifyimply(w-literal(actionTo_00007,2), aux669)
ineq(aux670, aux146, 0)
reifyimply(diseq(-1,aux88), aux671)
ineq(aux673, aux151, 0)
ineq(aux674, aux60, 0)
reifyimply(ineq(3, actionFrom_00008, 0), aux675)
reifyimply(w-literal(actionTo_00008,2), aux676)
ineq(aux677, aux123, 0)
reifyimply(diseq(-1,aux116), aux678)
ineq(aux680, aux119, 0)
ineq(aux681, aux63, 0)
reifyimply(ineq(3, actionFrom_00009, 0), aux682)
reifyimply(w-literal(actionTo_00009,2), aux683)
ineq(aux684, aux132, 0)
reifyimply(diseq(-1,aux112), aux685)
ineq(aux687, aux125, 0)
ineq(aux688, aux66, 0)
reifyimply(ineq(3, actionFrom_00010, 0), aux689)
reifyimply(w-literal(actionTo_00010,2), aux690)
ineq(aux691, aux122, 0)
reifyimply(diseq(-1,aux109), aux692)
ineq(aux694, aux124, 0)
ineq(aux695, aux64, 0)
reifyimply(ineq(3, actionFrom_00011, 0), aux696)
reifyimply(w-literal(actionTo_00011,2), aux697)
ineq(aux698, aux117, 0)
reifyimply(diseq(-1,aux114), aux699)
reifyimply(gaceq(statePlaces_00002_00002,aux106), aux701)
reifyimply(ineq(3, actionFrom_00002, 0), aux702)
reifyimply(w-literal(actionTo_00002,2), aux703)
ineq(aux704, aux153, 0)
reifyimply(diseq(aux115,-1), aux706)
reifyimply(gaceq(statePlaces_00002_00003,aux111), aux707)
reifyimply(ineq(3, actionFrom_00003, 0), aux708)
reifyimply(w-literal(actionTo_00003,2), aux709)
ineq(aux710, aux121, 0)
reifyimply(diseq(-1,aux94), aux712)
reifyimply(gaceq(statePlaces_00002_00004,aux89), aux713)
reifyimply(ineq(3, actionFrom_00004, 0), aux714)
reifyimply(w-literal(actionTo_00004,2), aux715)
ineq(aux716, aux120, 0)
reifyimply(diseq(-1,aux92), aux718)
reifyimply(gaceq(statePlaces_00002_00005,aux98), aux719)
reifyimply(ineq(3, actionFrom_00005, 0), aux720)
reifyimply(w-literal(actionTo_00005,2), aux721)
ineq(aux722, aux129, 0)
reifyimply(diseq(-1,aux90), aux724)
reifyimply(gaceq(statePlaces_00002_00006,aux108), aux725)
reifyimply(ineq(3, actionFrom_00006, 0), aux726)
reifyimply(w-literal(actionTo_00006,2), aux727)
ineq(aux728, aux135, 0)
reifyimply(diseq(-1,aux87), aux730)
reifyimply(gaceq(statePlaces_00002_00007,aux113), aux731)
reifyimply(ineq(3, actionFrom_00007, 0), aux732)
reifyimply(w-literal(actionTo_00007,2), aux733)
ineq(aux734, aux146, 0)
reifyimply(diseq(-1,aux88), aux736)
reifyimply(gaceq(statePlaces_00002_00008,aux91), aux737)
reifyimply(ineq(3, actionFrom_00008, 0), aux738)
reifyimply(w-literal(actionTo_00008,2), aux739)
ineq(aux740, aux123, 0)
reifyimply(diseq(-1,aux116), aux742)
reifyimply(gaceq(statePlaces_00002_00009,aux105), aux743)
reifyimply(ineq(3, actionFrom_00009, 0), aux744)
reifyimply(w-literal(actionTo_00009,2), aux745)
ineq(aux746, aux132, 0)
reifyimply(diseq(-1,aux112), aux748)
reifyimply(gaceq(statePlaces_00002_00010,aux99), aux749)
reifyimply(ineq(3, actionFrom_00010, 0), aux750)
reifyimply(w-literal(actionTo_00010,2), aux751)
ineq(aux752, aux122, 0)
reifyimply(diseq(-1,aux109), aux754)
reifyimply(w-literal(aux107,6), aux755)
reifyimply(ineq(3, actionFrom_00011, 0), aux756)
reifyimply(w-literal(actionTo_00011,2), aux757)
ineq(aux758, aux117, 0)
reifyimply(diseq(-1,aux114), aux760)
sumleq([pointers_00000_00002,-1],aux222)
sumgeq([pointers_00000_00002,-1],aux222)
sumleq([pointers_00000_00003,-1],aux228)
sumgeq([pointers_00000_00003,-1],aux228)
sumleq([pointers_00000_00004,-1],aux234)
sumgeq([pointers_00000_00004,-1],aux234)
sumleq([pointers_00000_00005,-1],aux240)
sumgeq([pointers_00000_00005,-1],aux240)
sumleq([pointers_00000_00006,-1],aux246)
sumgeq([pointers_00000_00006,-1],aux246)
sumleq([pointers_00000_00007,-1],aux252)
sumgeq([pointers_00000_00007,-1],aux252)
sumleq([pointers_00000_00008,-1],aux258)
sumgeq([pointers_00000_00008,-1],aux258)
sumleq([pointers_00000_00009,-1],aux264)
sumgeq([pointers_00000_00009,-1],aux264)
sumleq([pointers_00000_00010,-1],aux270)
sumgeq([pointers_00000_00010,-1],aux270)
sumleq([pointers_00000_00011,-1],aux276)
sumgeq([pointers_00000_00011,-1],aux276)
sumleq([pointers_00001_00002,-1],aux284)
sumgeq([pointers_00001_00002,-1],aux284)
sumleq([pointers_00001_00003,-1],aux293)
sumgeq([pointers_00001_00003,-1],aux293)
sumleq([pointers_00001_00004,-1],aux302)
sumgeq([pointers_00001_00004,-1],aux302)
sumleq([pointers_00001_00005,-1],aux311)
sumgeq([pointers_00001_00005,-1],aux311)
sumleq([pointers_00001_00006,-1],aux320)
sumgeq([pointers_00001_00006,-1],aux320)
sumleq([pointers_00001_00007,-1],aux329)
sumgeq([pointers_00001_00007,-1],aux329)
sumleq([pointers_00001_00008,-1],aux338)
sumgeq([pointers_00001_00008,-1],aux338)
sumleq([pointers_00001_00009,-1],aux347)
sumgeq([pointers_00001_00009,-1],aux347)
sumleq([pointers_00001_00010,-1],aux356)
sumgeq([pointers_00001_00010,-1],aux356)
sumleq([actionFrom_00009,-2],aux118)
sumgeq([actionFrom_00009,-2],aux118)
sumleq([actionFrom_00002,-2],aux126)
sumgeq([actionFrom_00002,-2],aux126)
sumleq([actionFrom_00007,-2],aux127)
sumgeq([actionFrom_00007,-2],aux127)
sumleq([actionFrom_00010,-2],aux128)
sumgeq([actionFrom_00010,-2],aux128)
sumleq([actionTo_00011,-2],aux130)
sumgeq([actionTo_00011,-2],aux130)
sumleq([actionTo_00010,-2],aux131)
sumgeq([actionTo_00010,-2],aux131)
sumleq([actionFrom_00008,-2],aux133)
sumgeq([actionFrom_00008,-2],aux133)
sumleq([actionFrom_00011,-2],aux134)
sumgeq([actionFrom_00011,-2],aux134)
sumleq([actionFrom_00005,-2],aux136)
sumgeq([actionFrom_00005,-2],aux136)
sumleq([actionTo_00008,-2],aux137)
sumgeq([actionTo_00008,-2],aux137)
sumleq([actionTo_00009,-2],aux138)
sumgeq([actionTo_00009,-2],aux138)
sumleq([actionTo_00007,-2],aux139)
sumgeq([actionTo_00007,-2],aux139)
sumleq([actionTo_00006,-2],aux140)
sumgeq([actionTo_00006,-2],aux140)
sumleq([actionTo_00005,-2],aux141)
sumgeq([actionTo_00005,-2],aux141)
sumleq([actionTo_00004,-2],aux142)
sumgeq([actionTo_00004,-2],aux142)
sumleq([actionTo_00003,-2],aux143)
sumgeq([actionTo_00003,-2],aux143)
sumleq([actionTo_00002,-2],aux144)
sumgeq([actionTo_00002,-2],aux144)
sumleq([actionFrom_00006,-2],aux145)
sumgeq([actionFrom_00006,-2],aux145)
sumleq([actionFrom_00003,-2],aux147)
sumgeq([actionFrom_00003,-2],aux147)
sumleq([actionFrom_00004,-2],aux156)
sumgeq([actionFrom_00004,-2],aux156)
reifyimply(sumleq([pointers_00000_00002,1],pointers_00000_00003), aux223)
reifyimply(sumgeq([pointers_00000_00002,1],pointers_00000_00003), aux223)
reifyimply(sumleq([pointers_00000_00003,1],pointers_00000_00004), aux229)
reifyimply(sumgeq([pointers_00000_00003,1],pointers_00000_00004), aux229)
reifyimply(sumleq([pointers_00000_00004,1],pointers_00000_00005), aux235)
reifyimply(sumgeq([pointers_00000_00004,1],pointers_00000_00005), aux235)
reifyimply(sumleq([pointers_00000_00005,1],pointers_00000_00006), aux241)
reifyimply(sumgeq([pointers_00000_00005,1],pointers_00000_00006), aux241)
reifyimply(sumleq([pointers_00000_00006,1],pointers_00000_00007), aux247)
reifyimply(sumgeq([pointers_00000_00006,1],pointers_00000_00007), aux247)
reifyimply(sumleq([pointers_00000_00007,1],pointers_00000_00008), aux253)
reifyimply(sumgeq([pointers_00000_00007,1],pointers_00000_00008), aux253)
reifyimply(sumleq([pointers_00000_00008,1],pointers_00000_00009), aux259)
reifyimply(sumgeq([pointers_00000_00008,1],pointers_00000_00009), aux259)
reifyimply(sumleq([pointers_00000_00009,1],pointers_00000_00010), aux265)
reifyimply(sumgeq([pointers_00000_00009,1],pointers_00000_00010), aux265)
reifyimply(sumleq([pointers_00000_00010,1],pointers_00000_00011), aux271)
reifyimply(sumgeq([pointers_00000_00010,1],pointers_00000_00011), aux271)
reifyimply(sumleq([pointers_00001_00002,1],pointers_00001_00003), aux288)
reifyimply(sumgeq([pointers_00001_00002,1],pointers_00001_00003), aux288)
reifyimply(sumleq([pointers_00001_00003,1],pointers_00001_00004), aux297)
reifyimply(sumgeq([pointers_00001_00003,1],pointers_00001_00004), aux297)
reifyimply(sumleq([pointers_00001_00004,1],pointers_00001_00005), aux306)
reifyimply(sumgeq([pointers_00001_00004,1],pointers_00001_00005), aux306)
reifyimply(sumleq([pointers_00001_00005,1],pointers_00001_00006), aux315)
reifyimply(sumgeq([pointers_00001_00005,1],pointers_00001_00006), aux315)
reifyimply(sumleq([pointers_00001_00006,1],pointers_00001_00007), aux324)
reifyimply(sumgeq([pointers_00001_00006,1],pointers_00001_00007), aux324)
reifyimply(sumleq([pointers_00001_00007,1],pointers_00001_00008), aux333)
reifyimply(sumgeq([pointers_00001_00007,1],pointers_00001_00008), aux333)
reifyimply(sumleq([pointers_00001_00008,1],pointers_00001_00009), aux342)
reifyimply(sumgeq([pointers_00001_00008,1],pointers_00001_00009), aux342)
reifyimply(sumleq([pointers_00001_00009,1],pointers_00001_00010), aux351)
reifyimply(sumgeq([pointers_00001_00009,1],pointers_00001_00010), aux351)
reifyimply(sumleq([aux106,4],statePlaces_00002_00002), aux488)
reifyimply(sumgeq([aux106,4],statePlaces_00002_00002), aux488)
reifyimply(sumleq([aux111,statePlaces_00002_00002],statePlaces_00002_00003), aux496)
reifyimply(sumgeq([aux111,statePlaces_00002_00002],statePlaces_00002_00003), aux496)
reifyimply(sumleq([statePlaces_00002_00003,aux89],statePlaces_00002_00004), aux504)
reifyimply(sumgeq([statePlaces_00002_00003,aux89],statePlaces_00002_00004), aux504)
reifyimply(sumleq([statePlaces_00002_00004,aux98],statePlaces_00002_00005), aux512)
reifyimply(sumgeq([statePlaces_00002_00004,aux98],statePlaces_00002_00005), aux512)
reifyimply(sumleq([aux108,statePlaces_00002_00005],statePlaces_00002_00006), aux520)
reifyimply(sumgeq([aux108,statePlaces_00002_00005],statePlaces_00002_00006), aux520)
reifyimply(sumleq([aux113,statePlaces_00002_00006],statePlaces_00002_00007), aux528)
reifyimply(sumgeq([aux113,statePlaces_00002_00006],statePlaces_00002_00007), aux528)
reifyimply(sumleq([statePlaces_00002_00007,aux91],statePlaces_00002_00008), aux536)
reifyimply(sumgeq([statePlaces_00002_00007,aux91],statePlaces_00002_00008), aux536)
reifyimply(sumleq([aux105,statePlaces_00002_00008],statePlaces_00002_00009), aux544)
reifyimply(sumgeq([aux105,statePlaces_00002_00008],statePlaces_00002_00009), aux544)
reifyimply(sumleq([statePlaces_00002_00009,aux99],statePlaces_00002_00010), aux552)
reifyimply(sumgeq([statePlaces_00002_00009,aux99],statePlaces_00002_00010), aux552)
reifyimply(sumleq([aux107,statePlaces_00002_00010],6), aux560)
reifyimply(sumgeq([aux107,statePlaces_00002_00010],6), aux560)
reifyimply(weightedsumleq([-1,1],[aux106,4],statePlaces_00002_00002), aux567)
reifyimply(weightedsumgeq([-1,1],[aux106,4],statePlaces_00002_00002), aux567)
reifyimply(weightedsumleq([-1,1],[aux111,statePlaces_00002_00002],statePlaces_00002_00003), aux574)
reifyimply(weightedsumgeq([-1,1],[aux111,statePlaces_00002_00002],statePlaces_00002_00003), aux574)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00003,aux89],statePlaces_00002_00004), aux581)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00003,aux89],statePlaces_00002_00004), aux581)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00004,aux98],statePlaces_00002_00005), aux588)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00004,aux98],statePlaces_00002_00005), aux588)
reifyimply(weightedsumleq([-1,1],[aux108,statePlaces_00002_00005],statePlaces_00002_00006), aux595)
reifyimply(weightedsumgeq([-1,1],[aux108,statePlaces_00002_00005],statePlaces_00002_00006), aux595)
reifyimply(weightedsumleq([-1,1],[aux113,statePlaces_00002_00006],statePlaces_00002_00007), aux602)
reifyimply(weightedsumgeq([-1,1],[aux113,statePlaces_00002_00006],statePlaces_00002_00007), aux602)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00007,aux91],statePlaces_00002_00008), aux609)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00007,aux91],statePlaces_00002_00008), aux609)
reifyimply(weightedsumleq([-1,1],[aux105,statePlaces_00002_00008],statePlaces_00002_00009), aux616)
reifyimply(weightedsumgeq([-1,1],[aux105,statePlaces_00002_00008],statePlaces_00002_00009), aux616)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00009,aux99],statePlaces_00002_00010), aux623)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00009,aux99],statePlaces_00002_00010), aux623)
reifyimply(weightedsumleq([-1,1],[aux107,statePlaces_00002_00010],6), aux630)
reifyimply(weightedsumgeq([-1,1],[aux107,statePlaces_00002_00010],6), aux630)
reifyimply(sumleq([aux115,1],aux106), aux637)
reifyimply(sumgeq([aux115,1],aux106), aux637)
reifyimply(sumleq([1,aux94],aux111), aux644)
reifyimply(sumgeq([1,aux94],aux111), aux644)
reifyimply(sumleq([1,aux92],aux89), aux651)
reifyimply(sumgeq([1,aux92],aux89), aux651)
reifyimply(sumleq([1,aux90],aux98), aux658)
reifyimply(sumgeq([1,aux90],aux98), aux658)
reifyimply(sumleq([1,aux87],aux108), aux665)
reifyimply(sumgeq([1,aux87],aux108), aux665)
reifyimply(sumleq([1,aux88],aux113), aux672)
reifyimply(sumgeq([1,aux88],aux113), aux672)
reifyimply(sumleq([aux116,1],aux91), aux679)
reifyimply(sumgeq([aux116,1],aux91), aux679)
reifyimply(sumleq([aux112,1],aux105), aux686)
reifyimply(sumgeq([aux112,1],aux105), aux686)
reifyimply(sumleq([aux109,1],aux99), aux693)
reifyimply(sumgeq([aux109,1],aux99), aux693)
reifyimply(sumleq([aux114,1],aux107), aux700)
reifyimply(sumgeq([aux114,1],aux107), aux700)
reifyimply(sumleq([aux115,-1],aux106), aux705)
reifyimply(sumgeq([aux115,-1],aux106), aux705)
reifyimply(sumleq([-1,aux94],aux111), aux711)
reifyimply(sumgeq([-1,aux94],aux111), aux711)
reifyimply(sumleq([-1,aux92],aux89), aux717)
reifyimply(sumgeq([-1,aux92],aux89), aux717)
reifyimply(sumleq([-1,aux90],aux98), aux723)
reifyimply(sumgeq([-1,aux90],aux98), aux723)
reifyimply(sumleq([-1,aux87],aux108), aux729)
reifyimply(sumgeq([-1,aux87],aux108), aux729)
reifyimply(sumleq([-1,aux88],aux113), aux735)
reifyimply(sumgeq([-1,aux88],aux113), aux735)
reifyimply(sumleq([aux116,-1],aux91), aux741)
reifyimply(sumgeq([aux116,-1],aux91), aux741)
reifyimply(sumleq([aux112,-1],aux105), aux747)
reifyimply(sumgeq([aux112,-1],aux105), aux747)
reifyimply(sumleq([aux109,-1],aux99), aux753)
reifyimply(sumgeq([aux109,-1],aux99), aux753)
reifyimply(sumleq([aux114,-1],aux107), aux759)
reifyimply(sumgeq([aux114,-1],aux107), aux759)
**EOF**
