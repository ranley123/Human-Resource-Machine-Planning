MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 104
# CSE_active_eliminated_expressions = 442
# CSE_active_total_size = 689
**VARIABLES**
DISCRETE statePlaces_00002_00002 #
{-1..100}
DISCRETE statePlaces_00002_00003 #
{-1..100}
DISCRETE statePlaces_00002_00004 #
{-1..100}
DISCRETE statePlaces_00002_00005 #
{-1..100}
DISCRETE statePlaces_00002_00006 #
{-1..100}
DISCRETE statePlaces_00002_00007 #
{-1..100}
DISCRETE statePlaces_00002_00008 #
{-1..100}
DISCRETE statePlaces_00002_00009 #
{-1..100}
DISCRETE statePlaces_00002_00010 #
{-1..100}
DISCRETE statePlaces_00002_00011 #
{-1..100}
DISCRETE statePlaces_00002_00012 #
{-1..100}
DISCRETE statePlaces_00002_00013 #
{-1..100}
DISCRETE statePlaces_00002_00014 #
{-1..100}
DISCRETE statePlaces_00003_00002 #
{-1..100}
DISCRETE statePlaces_00003_00003 #
{-1..100}
DISCRETE statePlaces_00003_00004 #
{-1..100}
DISCRETE statePlaces_00003_00005 #
{-1..100}
DISCRETE statePlaces_00003_00006 #
{-1..100}
DISCRETE statePlaces_00003_00007 #
{-1..100}
DISCRETE statePlaces_00003_00008 #
{-1..100}
DISCRETE statePlaces_00003_00009 #
{-1..100}
DISCRETE statePlaces_00003_00010 #
{-1..100}
DISCRETE statePlaces_00003_00011 #
{-1..100}
DISCRETE statePlaces_00003_00012 #
{-1..100}
DISCRETE statePlaces_00003_00013 #
{-1..100}
DISCRETE statePlaces_00003_00014 #
{-1..100}
DISCRETE actionTypes_00002 #
{1..8}
DISCRETE actionTypes_00003 #
{1..8}
DISCRETE actionTypes_00004 #
{1..8}
DISCRETE actionTypes_00005 #
{1..8}
DISCRETE actionTypes_00006 #
{1..8}
DISCRETE actionTypes_00007 #
{1..8}
DISCRETE actionTypes_00008 #
{1..8}
DISCRETE actionTypes_00009 #
{1..8}
DISCRETE actionTypes_00010 #
{1..8}
DISCRETE actionTypes_00011 #
{1..8}
DISCRETE actionTypes_00012 #
{1..8}
DISCRETE actionTypes_00013 #
{1..8}
DISCRETE actionTypes_00014 #
{1..8}
DISCRETE actionFrom_00002 #
{0..3}
DISCRETE actionFrom_00003 #
{0..3}
DISCRETE actionFrom_00004 #
{0..3}
DISCRETE actionFrom_00005 #
{0..3}
DISCRETE actionFrom_00006 #
{0..3}
DISCRETE actionFrom_00007 #
{0..3}
DISCRETE actionFrom_00008 #
{0..3}
DISCRETE actionFrom_00009 #
{0..3}
DISCRETE actionFrom_00010 #
{0..3}
DISCRETE actionFrom_00011 #
{0..3}
DISCRETE actionFrom_00012 #
{0..3}
DISCRETE actionFrom_00013 #
{0..3}
DISCRETE actionFrom_00014 #
{0..3}
DISCRETE actionTo_00002 #
{0..3}
DISCRETE actionTo_00003 #
{0..3}
DISCRETE actionTo_00004 #
{0..3}
DISCRETE actionTo_00005 #
{0..3}
DISCRETE actionTo_00006 #
{0..3}
DISCRETE actionTo_00007 #
{0..3}
DISCRETE actionTo_00008 #
{0..3}
DISCRETE actionTo_00009 #
{0..3}
DISCRETE actionTo_00010 #
{0..3}
DISCRETE actionTo_00011 #
{0..3}
DISCRETE actionTo_00012 #
{0..3}
DISCRETE actionTo_00013 #
{0..3}
DISCRETE actionTo_00014 #
{0..3}
DISCRETE pointers_00000_00002 #
{0..3}
DISCRETE pointers_00000_00003 #
{0..3}
DISCRETE pointers_00000_00004 #
{0..3}
DISCRETE pointers_00000_00005 #
{0..3}
DISCRETE pointers_00000_00006 #
{0..3}
DISCRETE pointers_00000_00007 #
{0..3}
DISCRETE pointers_00000_00008 #
{0..3}
DISCRETE pointers_00000_00009 #
{0..3}
DISCRETE pointers_00000_00010 #
{0..3}
DISCRETE pointers_00000_00011 #
{0..3}
DISCRETE pointers_00000_00012 #
{0..3}
DISCRETE pointers_00000_00013 #
{0..3}
DISCRETE pointers_00000_00014 #
{0..3}
DISCRETE pointers_00001_00002 #
{0..3}
DISCRETE pointers_00001_00003 #
{0..3}
DISCRETE pointers_00001_00004 #
{0..3}
DISCRETE pointers_00001_00005 #
{0..3}
DISCRETE pointers_00001_00006 #
{0..3}
DISCRETE pointers_00001_00007 #
{0..3}
DISCRETE pointers_00001_00008 #
{0..3}
DISCRETE pointers_00001_00009 #
{0..3}
DISCRETE pointers_00001_00010 #
{0..3}
DISCRETE pointers_00001_00011 #
{0..3}
DISCRETE pointers_00001_00012 #
{0..3}
DISCRETE pointers_00001_00013 #
{0..3}
BOOL aux52 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00014, statePlaces_00003_00014], (actionTo_00014 + -2))=SafeElement([statePlaces_00002_00014, statePlaces_00003_00014], (actionFrom_00014 + -2)))
BOOL aux53 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00013, statePlaces_00003_00013], (actionTo_00013 + -2))=SafeElement([statePlaces_00002_00013, statePlaces_00003_00013], (actionFrom_00013 + -2)))
BOOL aux54 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionTo_00010 + -2))=SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionFrom_00010 + -2)))
BOOL aux55 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionTo_00012 + -2))=SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionFrom_00012 + -2)))
BOOL aux56 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionTo_00011 + -2))=SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionFrom_00011 + -2)))
BOOL aux57 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionTo_00006 + -2))=SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionFrom_00006 + -2)))
BOOL aux58 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionTo_00005 + -2))=SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionFrom_00005 + -2)))
BOOL aux59 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionTo_00009 + -2))=SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionFrom_00009 + -2)))
BOOL aux60 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionTo_00008 + -2))=SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionFrom_00008 + -2)))
BOOL aux61 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionTo_00007 + -2))=SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionFrom_00007 + -2)))
BOOL aux62 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionTo_00002 + -2))=SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionFrom_00002 + -2)))
BOOL aux63 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionTo_00004 + -2))=SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionFrom_00004 + -2)))
BOOL aux64 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionTo_00003 + -2))=SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionFrom_00003 + -2)))
DISCRETE aux65 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionFrom_00013 + -2))
{-1..100}
DISCRETE aux66 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionFrom_00010 + -2))
{-1..100}
DISCRETE aux67 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionFrom_00003 + -2))
{-1..100}
DISCRETE aux68 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionFrom_00009 + -2))
{-1..100}
DISCRETE aux69 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([4, -1], (actionFrom_00002 + -2))
{-1..4}
**CONSTRAINTS**
w-inintervalset(aux69, [-1,0,4,4])
**VARIABLES**
DISCRETE aux70 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionFrom_00008 + -2))
{-1..100}
DISCRETE aux71 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionFrom_00004 + -2))
{-1..100}
DISCRETE aux72 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionFrom_00005 + -2))
{-1..100}
DISCRETE aux73 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionFrom_00003 + -2))
{-1..100}
DISCRETE aux74 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionFrom_00012 + -2))
{-1..100}
DISCRETE aux75 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionFrom_00007 + -2))
{-1..100}
DISCRETE aux76 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionFrom_00008 + -2))
{-1..100}
DISCRETE aux77 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionFrom_00004 + -2))
{-1..100}
DISCRETE aux78 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00014, statePlaces_00003_00014], (actionFrom_00014 + -2))
{-1..100}
DISCRETE aux79 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionFrom_00002 + -2))
{-1..100}
DISCRETE aux80 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionFrom_00012 + -2))
{-1..100}
DISCRETE aux81 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionFrom_00011 + -2))
{-1..100}
DISCRETE aux82 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionFrom_00007 + -2))
{-1..100}
DISCRETE aux83 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00013, statePlaces_00003_00013], (actionFrom_00013 + -2))
{-1..100}
DISCRETE aux84 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionFrom_00010 + -2))
{-1..100}
DISCRETE aux85 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionFrom_00006 + -2))
{-1..100}
DISCRETE aux86 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00013, statePlaces_00003_00013], (actionFrom_00014 + -2))
{-1..100}
DISCRETE aux87 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionFrom_00011 + -2))
{-1..100}
DISCRETE aux88 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionFrom_00009 + -2))
{-1..100}
DISCRETE aux89 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionFrom_00006 + -2))
{-1..100}
DISCRETE aux90 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([4, -1], (actionTo_00002 + -2))
{-1..4}
**CONSTRAINTS**
w-inintervalset(aux90, [-1,0,4,4])
**VARIABLES**
DISCRETE aux91 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionTo_00011 + -2))
{-1..100}
DISCRETE aux92 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionTo_00012 + -2))
{-1..100}
DISCRETE aux93 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionTo_00013 + -2))
{-1..100}
DISCRETE aux94 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00013, statePlaces_00003_00013], (actionTo_00014 + -2))
{-1..100}
DISCRETE aux95 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionTo_00009 + -2))
{-1..100}
DISCRETE aux96 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionTo_00010 + -2))
{-1..100}
DISCRETE aux97 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionTo_00004 + -2))
{-1..100}
DISCRETE aux98 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionTo_00003 + -2))
{-1..100}
DISCRETE aux99 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionTo_00008 + -2))
{-1..100}
DISCRETE aux100 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionTo_00007 + -2))
{-1..100}
DISCRETE aux101 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionTo_00006 + -2))
{-1..100}
DISCRETE aux102 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionTo_00005 + -2))
{-1..100}
DISCRETE aux103 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionFrom_00005 + -2))
{-1..100}
BOOL aux104 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00007 in int(2..3))
DISCRETE aux105 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00009 + -2)
{-2..1}
DISCRETE aux106 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00012 + -2)
{-2..1}
BOOL aux107 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00008 in int(2..3))
BOOL aux108 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00007 in int(2..3))
BOOL aux109 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00009 in int(2..3))
BOOL aux110 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00003 in int(2..3))
BOOL aux111 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00002 in int(2..3))
BOOL aux112 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00006 in int(2..3))
BOOL aux113 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00005 in int(2..3))
BOOL aux114 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00004 in int(2..3))
DISCRETE aux115 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00002 + -2)
{-2..1}
DISCRETE aux116 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00013 + -2)
{-2..1}
BOOL aux117 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00002 in int(2..3))
BOOL aux118 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00014 in int(2..3))
DISCRETE aux119 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00007 + -2)
{-2..1}
DISCRETE aux120 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00010 + -2)
{-2..1}
DISCRETE aux121 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00014 + -2)
{-2..1}
DISCRETE aux122 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00012 + -2)
{-2..1}
DISCRETE aux123 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00013 + -2)
{-2..1}
DISCRETE aux124 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00011 + -2)
{-2..1}
DISCRETE aux125 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00010 + -2)
{-2..1}
BOOL aux126 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00011 in int(2..3))
BOOL aux127 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00010 in int(2..3))
BOOL aux128 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00003 in int(2..3))
BOOL aux129 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00014 in int(2..3))
DISCRETE aux130 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00008 + -2)
{-2..1}
BOOL aux131 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00013 in int(2..3))
DISCRETE aux132 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00011 + -2)
{-2..1}
BOOL aux133 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00008 in int(2..3))
BOOL aux134 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00012 in int(2..3))
BOOL aux135 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00011 in int(2..3))
BOOL aux136 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00010 in int(2..3))
DISCRETE aux137 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00005 + -2)
{-2..1}
BOOL aux138 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00005 in int(2..3))
BOOL aux139 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00012 in int(2..3))
DISCRETE aux140 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00008 + -2)
{-2..1}
DISCRETE aux141 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00009 + -2)
{-2..1}
DISCRETE aux142 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00007 + -2)
{-2..1}
DISCRETE aux143 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00006 + -2)
{-2..1}
BOOL aux144 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00004 in int(2..3))
DISCRETE aux145 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00005 + -2)
{-2..1}
DISCRETE aux146 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00004 + -2)
{-2..1}
DISCRETE aux147 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00003 + -2)
{-2..1}
DISCRETE aux148 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00002 + -2)
{-2..1}
DISCRETE aux149 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00006 + -2)
{-2..1}
BOOL aux150 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00009 in int(2..3))
BOOL aux151 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00006 in int(2..3))
BOOL aux152 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00013 in int(2..3))
DISCRETE aux153 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00003 + -2)
{-2..1}
DISCRETE aux154 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00014 + -2)
{-2..1}
DISCRETE aux155 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00004 + -2)
{-2..1}
BOOL aux156 #(1 != actionTypes_00002)
BOOL aux157 #(1 != actionTypes_00003)
BOOL aux158 #(1 != actionTypes_00004)
BOOL aux159 #(1 != actionTypes_00005)
BOOL aux160 #(1 != actionTypes_00006)
BOOL aux161 #(1 != actionTypes_00007)
BOOL aux162 #(1 != actionTypes_00008)
BOOL aux163 #(1 != actionTypes_00009)
BOOL aux164 #(1 != actionTypes_00010)
BOOL aux165 #(1 != actionTypes_00011)
BOOL aux166 #(1 != actionTypes_00012)
BOOL aux167 #(1 != actionTypes_00013)
BOOL aux168 #(1 != actionTypes_00014)
BOOL aux169 #(2 != actionTypes_00002)
BOOL aux170 #(2 != actionTypes_00003)
BOOL aux171 #(2 != actionTypes_00004)
BOOL aux172 #(2 != actionTypes_00005)
BOOL aux173 #(2 != actionTypes_00006)
BOOL aux174 #(2 != actionTypes_00007)
BOOL aux175 #(2 != actionTypes_00008)
BOOL aux176 #(2 != actionTypes_00009)
BOOL aux177 #(2 != actionTypes_00010)
BOOL aux178 #(2 != actionTypes_00011)
BOOL aux179 #(2 != actionTypes_00012)
BOOL aux180 #(2 != actionTypes_00013)
BOOL aux181 #(2 != actionTypes_00014)
BOOL aux182 #(((7=actionTypes_00002) /\ (actionFrom_00002 != 3)) \/ ((8=actionTypes_00002) /\ (actionFrom_00002 != 3)) \/ (1=actionTypes_00002) \/ (2=actionTypes_00002) \/ (3=actionTypes_00002) \/ (5=actionTypes_00002) \/ (6=actionTypes_00002) \/ ((4=actionTypes_00002) /\ (actionTo_00002 != 3)))
BOOL aux183 #(((7=actionTypes_00003) /\ (actionFrom_00003 != 3)) \/ ((8=actionTypes_00003) /\ (actionFrom_00003 != 3)) \/ (1=actionTypes_00003) \/ (2=actionTypes_00003) \/ (3=actionTypes_00003) \/ (5=actionTypes_00003) \/ (6=actionTypes_00003) \/ ((4=actionTypes_00003) /\ (actionTo_00003 != 3)))
BOOL aux184 #(((7=actionTypes_00004) /\ (actionFrom_00004 != 3)) \/ ((8=actionTypes_00004) /\ (actionFrom_00004 != 3)) \/ (1=actionTypes_00004) \/ (2=actionTypes_00004) \/ (3=actionTypes_00004) \/ (5=actionTypes_00004) \/ (6=actionTypes_00004) \/ ((4=actionTypes_00004) /\ (actionTo_00004 != 3)))
BOOL aux185 #(((7=actionTypes_00005) /\ (actionFrom_00005 != 3)) \/ ((8=actionTypes_00005) /\ (actionFrom_00005 != 3)) \/ (1=actionTypes_00005) \/ (2=actionTypes_00005) \/ (3=actionTypes_00005) \/ (5=actionTypes_00005) \/ (6=actionTypes_00005) \/ ((4=actionTypes_00005) /\ (actionTo_00005 != 3)))
BOOL aux186 #(((7=actionTypes_00006) /\ (actionFrom_00006 != 3)) \/ ((8=actionTypes_00006) /\ (actionFrom_00006 != 3)) \/ (1=actionTypes_00006) \/ (2=actionTypes_00006) \/ (3=actionTypes_00006) \/ (5=actionTypes_00006) \/ (6=actionTypes_00006) \/ ((4=actionTypes_00006) /\ (actionTo_00006 != 3)))
BOOL aux187 #(((7=actionTypes_00007) /\ (actionFrom_00007 != 3)) \/ ((8=actionTypes_00007) /\ (actionFrom_00007 != 3)) \/ (1=actionTypes_00007) \/ (2=actionTypes_00007) \/ (3=actionTypes_00007) \/ (5=actionTypes_00007) \/ (6=actionTypes_00007) \/ ((4=actionTypes_00007) /\ (actionTo_00007 != 3)))
BOOL aux188 #(((7=actionTypes_00008) /\ (actionFrom_00008 != 3)) \/ ((8=actionTypes_00008) /\ (actionFrom_00008 != 3)) \/ (1=actionTypes_00008) \/ (2=actionTypes_00008) \/ (3=actionTypes_00008) \/ (5=actionTypes_00008) \/ (6=actionTypes_00008) \/ ((4=actionTypes_00008) /\ (actionTo_00008 != 3)))
BOOL aux189 #(((7=actionTypes_00009) /\ (actionFrom_00009 != 3)) \/ ((8=actionTypes_00009) /\ (actionFrom_00009 != 3)) \/ (1=actionTypes_00009) \/ (2=actionTypes_00009) \/ (3=actionTypes_00009) \/ (5=actionTypes_00009) \/ (6=actionTypes_00009) \/ ((4=actionTypes_00009) /\ (actionTo_00009 != 3)))
BOOL aux190 #(((7=actionTypes_00010) /\ (actionFrom_00010 != 3)) \/ ((8=actionTypes_00010) /\ (actionFrom_00010 != 3)) \/ (1=actionTypes_00010) \/ (2=actionTypes_00010) \/ (3=actionTypes_00010) \/ (5=actionTypes_00010) \/ (6=actionTypes_00010) \/ ((4=actionTypes_00010) /\ (actionTo_00010 != 3)))
BOOL aux191 #(((7=actionTypes_00011) /\ (actionFrom_00011 != 3)) \/ ((8=actionTypes_00011) /\ (actionFrom_00011 != 3)) \/ (1=actionTypes_00011) \/ (2=actionTypes_00011) \/ (3=actionTypes_00011) \/ (5=actionTypes_00011) \/ (6=actionTypes_00011) \/ ((4=actionTypes_00011) /\ (actionTo_00011 != 3)))
BOOL aux192 #(((7=actionTypes_00012) /\ (actionFrom_00012 != 3)) \/ ((8=actionTypes_00012) /\ (actionFrom_00012 != 3)) \/ (1=actionTypes_00012) \/ (2=actionTypes_00012) \/ (3=actionTypes_00012) \/ (5=actionTypes_00012) \/ (6=actionTypes_00012) \/ ((4=actionTypes_00012) /\ (actionTo_00012 != 3)))
BOOL aux193 #(((7=actionTypes_00013) /\ (actionFrom_00013 != 3)) \/ ((8=actionTypes_00013) /\ (actionFrom_00013 != 3)) \/ (1=actionTypes_00013) \/ (2=actionTypes_00013) \/ (3=actionTypes_00013) \/ (5=actionTypes_00013) \/ (6=actionTypes_00013) \/ ((4=actionTypes_00013) /\ (actionTo_00013 != 3)))
BOOL aux194 #(((7=actionTypes_00014) /\ (actionFrom_00014 != 3)) \/ ((8=actionTypes_00014) /\ (actionFrom_00014 != 3)) \/ (1=actionTypes_00014) \/ (2=actionTypes_00014) \/ (3=actionTypes_00014) \/ (5=actionTypes_00014) \/ (6=actionTypes_00014) \/ ((4=actionTypes_00014) /\ (actionTo_00014 != 3)))
BOOL aux195 #((2=actionTypes_00002) \/ (4=actionTypes_00002))
BOOL aux196 #((2=actionTypes_00003) \/ (4=actionTypes_00003))
BOOL aux197 #((2=actionTypes_00004) \/ (4=actionTypes_00004))
BOOL aux198 #((2=actionTypes_00005) \/ (4=actionTypes_00005))
BOOL aux199 #((2=actionTypes_00006) \/ (4=actionTypes_00006))
BOOL aux200 #((2=actionTypes_00007) \/ (4=actionTypes_00007))
BOOL aux201 #((2=actionTypes_00008) \/ (4=actionTypes_00008))
BOOL aux202 #((2=actionTypes_00009) \/ (4=actionTypes_00009))
BOOL aux203 #((2=actionTypes_00010) \/ (4=actionTypes_00010))
BOOL aux204 #((2=actionTypes_00011) \/ (4=actionTypes_00011))
BOOL aux205 #((2=actionTypes_00012) \/ (4=actionTypes_00012))
BOOL aux206 #((2=actionTypes_00013) \/ (4=actionTypes_00013))
BOOL aux207 #((2=actionTypes_00014) \/ (4=actionTypes_00014))
BOOL aux208 #(1=actionTypes_00002)
BOOL aux209 #(1=actionTypes_00002)
BOOL aux210 #(1=actionTypes_00002)
BOOL aux211 #(1=actionTypes_00002)
BOOL aux212 #(1=actionTypes_00002)
DISCRETE aux213 #(pointers_00000_00002 + -1)
{-1..2}
BOOL aux214 #(1=actionTypes_00003)
BOOL aux215 #(1=actionTypes_00003)
BOOL aux216 #(1=actionTypes_00003)
BOOL aux217 #(1=actionTypes_00003)
BOOL aux218 #(1=actionTypes_00003)
DISCRETE aux219 #(pointers_00000_00003 + -1)
{-1..2}
BOOL aux220 #(1=actionTypes_00004)
BOOL aux221 #(1=actionTypes_00004)
BOOL aux222 #(1=actionTypes_00004)
BOOL aux223 #(1=actionTypes_00004)
BOOL aux224 #(1=actionTypes_00004)
DISCRETE aux225 #(pointers_00000_00004 + -1)
{-1..2}
BOOL aux226 #(1=actionTypes_00005)
BOOL aux227 #(1=actionTypes_00005)
BOOL aux228 #(1=actionTypes_00005)
BOOL aux229 #(1=actionTypes_00005)
BOOL aux230 #(1=actionTypes_00005)
DISCRETE aux231 #(pointers_00000_00005 + -1)
{-1..2}
BOOL aux232 #(1=actionTypes_00006)
BOOL aux233 #(1=actionTypes_00006)
BOOL aux234 #(1=actionTypes_00006)
BOOL aux235 #(1=actionTypes_00006)
BOOL aux236 #(1=actionTypes_00006)
DISCRETE aux237 #(pointers_00000_00006 + -1)
{-1..2}
BOOL aux238 #(1=actionTypes_00007)
BOOL aux239 #(1=actionTypes_00007)
BOOL aux240 #(1=actionTypes_00007)
BOOL aux241 #(1=actionTypes_00007)
BOOL aux242 #(1=actionTypes_00007)
DISCRETE aux243 #(pointers_00000_00007 + -1)
{-1..2}
BOOL aux244 #(1=actionTypes_00008)
BOOL aux245 #(1=actionTypes_00008)
BOOL aux246 #(1=actionTypes_00008)
BOOL aux247 #(1=actionTypes_00008)
BOOL aux248 #(1=actionTypes_00008)
DISCRETE aux249 #(pointers_00000_00008 + -1)
{-1..2}
BOOL aux250 #(1=actionTypes_00009)
BOOL aux251 #(1=actionTypes_00009)
BOOL aux252 #(1=actionTypes_00009)
BOOL aux253 #(1=actionTypes_00009)
BOOL aux254 #(1=actionTypes_00009)
DISCRETE aux255 #(pointers_00000_00009 + -1)
{-1..2}
BOOL aux256 #(1=actionTypes_00010)
BOOL aux257 #(1=actionTypes_00010)
BOOL aux258 #(1=actionTypes_00010)
BOOL aux259 #(1=actionTypes_00010)
BOOL aux260 #(1=actionTypes_00010)
DISCRETE aux261 #(pointers_00000_00010 + -1)
{-1..2}
BOOL aux262 #(1=actionTypes_00011)
BOOL aux263 #(1=actionTypes_00011)
BOOL aux264 #(1=actionTypes_00011)
BOOL aux265 #(1=actionTypes_00011)
BOOL aux266 #(1=actionTypes_00011)
DISCRETE aux267 #(pointers_00000_00011 + -1)
{-1..2}
BOOL aux268 #(1=actionTypes_00012)
BOOL aux269 #(1=actionTypes_00012)
BOOL aux270 #(1=actionTypes_00012)
BOOL aux271 #(1=actionTypes_00012)
BOOL aux272 #(1=actionTypes_00012)
DISCRETE aux273 #(pointers_00000_00012 + -1)
{-1..2}
BOOL aux274 #(1=actionTypes_00013)
BOOL aux275 #(1=actionTypes_00013)
BOOL aux276 #(1=actionTypes_00013)
BOOL aux277 #(1=actionTypes_00013)
BOOL aux278 #(1=actionTypes_00013)
DISCRETE aux279 #(pointers_00000_00013 + -1)
{-1..2}
BOOL aux280 #(1=actionTypes_00014)
BOOL aux281 #(1=actionTypes_00014)
BOOL aux282 #(1=actionTypes_00014)
BOOL aux283 #(1=actionTypes_00014)
BOOL aux284 #(1=actionTypes_00014)
DISCRETE aux285 #(pointers_00000_00014 + -1)
{-1..2}
BOOL aux286 #(2=actionTypes_00002)
BOOL aux287 #(2=actionTypes_00002)
BOOL aux288 #(2=actionTypes_00002)
BOOL aux289 #(2=actionTypes_00002)
BOOL aux290 #(2=actionTypes_00002)
BOOL aux291 #(2=actionTypes_00002)
DISCRETE aux292 #(pointers_00001_00002 + -1)
{-1..2}
BOOL aux293 #(2=actionTypes_00003)
BOOL aux294 #(2=actionTypes_00003)
BOOL aux295 #(2=actionTypes_00003)
BOOL aux296 #(2=actionTypes_00003)
BOOL aux297 #(2=actionTypes_00003)
BOOL aux298 #(2=actionTypes_00003)
BOOL aux299 #(2=actionTypes_00003)
DISCRETE aux300 #(pointers_00001_00003 + -1)
{-1..2}
BOOL aux301 #(2=actionTypes_00004)
BOOL aux302 #(2=actionTypes_00004)
BOOL aux303 #(2=actionTypes_00004)
BOOL aux304 #(2=actionTypes_00004)
BOOL aux305 #(2=actionTypes_00004)
BOOL aux306 #(2=actionTypes_00004)
BOOL aux307 #(2=actionTypes_00004)
DISCRETE aux308 #(pointers_00001_00004 + -1)
{-1..2}
BOOL aux309 #(2=actionTypes_00005)
BOOL aux310 #(2=actionTypes_00005)
BOOL aux311 #(2=actionTypes_00005)
BOOL aux312 #(2=actionTypes_00005)
BOOL aux313 #(2=actionTypes_00005)
BOOL aux314 #(2=actionTypes_00005)
BOOL aux315 #(2=actionTypes_00005)
DISCRETE aux316 #(pointers_00001_00005 + -1)
{-1..2}
BOOL aux317 #(2=actionTypes_00006)
BOOL aux318 #(2=actionTypes_00006)
BOOL aux319 #(2=actionTypes_00006)
BOOL aux320 #(2=actionTypes_00006)
BOOL aux321 #(2=actionTypes_00006)
BOOL aux322 #(2=actionTypes_00006)
BOOL aux323 #(2=actionTypes_00006)
DISCRETE aux324 #(pointers_00001_00006 + -1)
{-1..2}
BOOL aux325 #(2=actionTypes_00007)
BOOL aux326 #(2=actionTypes_00007)
BOOL aux327 #(2=actionTypes_00007)
BOOL aux328 #(2=actionTypes_00007)
BOOL aux329 #(2=actionTypes_00007)
BOOL aux330 #(2=actionTypes_00007)
BOOL aux331 #(2=actionTypes_00007)
DISCRETE aux332 #(pointers_00001_00007 + -1)
{-1..2}
BOOL aux333 #(2=actionTypes_00008)
BOOL aux334 #(2=actionTypes_00008)
BOOL aux335 #(2=actionTypes_00008)
BOOL aux336 #(2=actionTypes_00008)
BOOL aux337 #(2=actionTypes_00008)
BOOL aux338 #(2=actionTypes_00008)
BOOL aux339 #(2=actionTypes_00008)
DISCRETE aux340 #(pointers_00001_00008 + -1)
{-1..2}
BOOL aux341 #(2=actionTypes_00009)
BOOL aux342 #(2=actionTypes_00009)
BOOL aux343 #(2=actionTypes_00009)
BOOL aux344 #(2=actionTypes_00009)
BOOL aux345 #(2=actionTypes_00009)
BOOL aux346 #(2=actionTypes_00009)
BOOL aux347 #(2=actionTypes_00009)
DISCRETE aux348 #(pointers_00001_00009 + -1)
{-1..2}
BOOL aux349 #(2=actionTypes_00010)
BOOL aux350 #(2=actionTypes_00010)
BOOL aux351 #(2=actionTypes_00010)
BOOL aux352 #(2=actionTypes_00010)
BOOL aux353 #(2=actionTypes_00010)
BOOL aux354 #(2=actionTypes_00010)
BOOL aux355 #(2=actionTypes_00010)
DISCRETE aux356 #(pointers_00001_00010 + -1)
{-1..2}
BOOL aux357 #(2=actionTypes_00011)
BOOL aux358 #(2=actionTypes_00011)
BOOL aux359 #(2=actionTypes_00011)
BOOL aux360 #(2=actionTypes_00011)
BOOL aux361 #(2=actionTypes_00011)
BOOL aux362 #(2=actionTypes_00011)
BOOL aux363 #(2=actionTypes_00011)
DISCRETE aux364 #(pointers_00001_00011 + -1)
{-1..2}
BOOL aux365 #(2=actionTypes_00012)
BOOL aux366 #(2=actionTypes_00012)
BOOL aux367 #(2=actionTypes_00012)
BOOL aux368 #(2=actionTypes_00012)
BOOL aux369 #(2=actionTypes_00012)
BOOL aux370 #(2=actionTypes_00012)
BOOL aux371 #(2=actionTypes_00012)
DISCRETE aux372 #(pointers_00001_00012 + -1)
{-1..2}
BOOL aux373 #(2=actionTypes_00013)
BOOL aux374 #(2=actionTypes_00013)
BOOL aux375 #(2=actionTypes_00013)
BOOL aux376 #(2=actionTypes_00013)
BOOL aux377 #(2=actionTypes_00013)
BOOL aux378 #(2=actionTypes_00013)
BOOL aux379 #(2=actionTypes_00013)
DISCRETE aux380 #(pointers_00001_00013 + -1)
{-1..2}
BOOL aux381 #(2=actionTypes_00014)
BOOL aux382 #(2=actionTypes_00014)
BOOL aux383 #(2=actionTypes_00014)
BOOL aux384 #(2=actionTypes_00014)
BOOL aux385 #(2=actionTypes_00014)
BOOL aux386 #(2=actionTypes_00014)
BOOL aux387 #(3=actionTypes_00002)
BOOL aux388 #(3=actionTypes_00002)
BOOL aux389 #(3=actionTypes_00002)
BOOL aux390 #(3=actionTypes_00002)
BOOL aux391 #(3=actionTypes_00002)
BOOL aux392 #(3=actionTypes_00002)
BOOL aux393 #(3=actionTypes_00003)
BOOL aux394 #(3=actionTypes_00003)
BOOL aux395 #(3=actionTypes_00003)
BOOL aux396 #(3=actionTypes_00003)
BOOL aux397 #(3=actionTypes_00003)
BOOL aux398 #(3=actionTypes_00003)
BOOL aux399 #(3=actionTypes_00004)
BOOL aux400 #(3=actionTypes_00004)
BOOL aux401 #(3=actionTypes_00004)
BOOL aux402 #(3=actionTypes_00004)
BOOL aux403 #(3=actionTypes_00004)
BOOL aux404 #(3=actionTypes_00004)
BOOL aux405 #(3=actionTypes_00005)
BOOL aux406 #(3=actionTypes_00005)
BOOL aux407 #(3=actionTypes_00005)
BOOL aux408 #(3=actionTypes_00005)
BOOL aux409 #(3=actionTypes_00005)
BOOL aux410 #(3=actionTypes_00005)
BOOL aux411 #(3=actionTypes_00006)
BOOL aux412 #(3=actionTypes_00006)
BOOL aux413 #(3=actionTypes_00006)
BOOL aux414 #(3=actionTypes_00006)
BOOL aux415 #(3=actionTypes_00006)
BOOL aux416 #(3=actionTypes_00006)
BOOL aux417 #(3=actionTypes_00007)
BOOL aux418 #(3=actionTypes_00007)
BOOL aux419 #(3=actionTypes_00007)
BOOL aux420 #(3=actionTypes_00007)
BOOL aux421 #(3=actionTypes_00007)
BOOL aux422 #(3=actionTypes_00007)
BOOL aux423 #(3=actionTypes_00008)
BOOL aux424 #(3=actionTypes_00008)
BOOL aux425 #(3=actionTypes_00008)
BOOL aux426 #(3=actionTypes_00008)
BOOL aux427 #(3=actionTypes_00008)
BOOL aux428 #(3=actionTypes_00008)
BOOL aux429 #(3=actionTypes_00009)
BOOL aux430 #(3=actionTypes_00009)
BOOL aux431 #(3=actionTypes_00009)
BOOL aux432 #(3=actionTypes_00009)
BOOL aux433 #(3=actionTypes_00009)
BOOL aux434 #(3=actionTypes_00009)
BOOL aux435 #(3=actionTypes_00010)
BOOL aux436 #(3=actionTypes_00010)
BOOL aux437 #(3=actionTypes_00010)
BOOL aux438 #(3=actionTypes_00010)
BOOL aux439 #(3=actionTypes_00010)
BOOL aux440 #(3=actionTypes_00010)
BOOL aux441 #(3=actionTypes_00011)
BOOL aux442 #(3=actionTypes_00011)
BOOL aux443 #(3=actionTypes_00011)
BOOL aux444 #(3=actionTypes_00011)
BOOL aux445 #(3=actionTypes_00011)
BOOL aux446 #(3=actionTypes_00011)
BOOL aux447 #(3=actionTypes_00012)
BOOL aux448 #(3=actionTypes_00012)
BOOL aux449 #(3=actionTypes_00012)
BOOL aux450 #(3=actionTypes_00012)
BOOL aux451 #(3=actionTypes_00012)
BOOL aux452 #(3=actionTypes_00012)
BOOL aux453 #(3=actionTypes_00013)
BOOL aux454 #(3=actionTypes_00013)
BOOL aux455 #(3=actionTypes_00013)
BOOL aux456 #(3=actionTypes_00013)
BOOL aux457 #(3=actionTypes_00013)
BOOL aux458 #(3=actionTypes_00013)
BOOL aux459 #(3=actionTypes_00014)
BOOL aux460 #(3=actionTypes_00014)
BOOL aux461 #(3=actionTypes_00014)
BOOL aux462 #(3=actionTypes_00014)
BOOL aux463 #(3=actionTypes_00014)
BOOL aux464 #(3=actionTypes_00014)
BOOL aux465 #(4=actionTypes_00002)
BOOL aux466 #(4=actionTypes_00002)
BOOL aux467 #(4=actionTypes_00002)
BOOL aux468 #(4=actionTypes_00002)
BOOL aux469 #(4=actionTypes_00002)
BOOL aux470 #(4=actionTypes_00003)
BOOL aux471 #(4=actionTypes_00003)
BOOL aux472 #(4=actionTypes_00003)
BOOL aux473 #(4=actionTypes_00003)
BOOL aux474 #(4=actionTypes_00003)
BOOL aux475 #(4=actionTypes_00003)
BOOL aux476 #(4=actionTypes_00004)
BOOL aux477 #(4=actionTypes_00004)
BOOL aux478 #(4=actionTypes_00004)
BOOL aux479 #(4=actionTypes_00004)
BOOL aux480 #(4=actionTypes_00004)
BOOL aux481 #(4=actionTypes_00004)
BOOL aux482 #(4=actionTypes_00005)
BOOL aux483 #(4=actionTypes_00005)
BOOL aux484 #(4=actionTypes_00005)
BOOL aux485 #(4=actionTypes_00005)
BOOL aux486 #(4=actionTypes_00005)
BOOL aux487 #(4=actionTypes_00005)
BOOL aux488 #(4=actionTypes_00006)
BOOL aux489 #(4=actionTypes_00006)
BOOL aux490 #(4=actionTypes_00006)
BOOL aux491 #(4=actionTypes_00006)
BOOL aux492 #(4=actionTypes_00006)
BOOL aux493 #(4=actionTypes_00006)
BOOL aux494 #(4=actionTypes_00007)
BOOL aux495 #(4=actionTypes_00007)
BOOL aux496 #(4=actionTypes_00007)
BOOL aux497 #(4=actionTypes_00007)
BOOL aux498 #(4=actionTypes_00007)
BOOL aux499 #(4=actionTypes_00007)
BOOL aux500 #(4=actionTypes_00008)
BOOL aux501 #(4=actionTypes_00008)
BOOL aux502 #(4=actionTypes_00008)
BOOL aux503 #(4=actionTypes_00008)
BOOL aux504 #(4=actionTypes_00008)
BOOL aux505 #(4=actionTypes_00008)
BOOL aux506 #(4=actionTypes_00009)
BOOL aux507 #(4=actionTypes_00009)
BOOL aux508 #(4=actionTypes_00009)
BOOL aux509 #(4=actionTypes_00009)
BOOL aux510 #(4=actionTypes_00009)
BOOL aux511 #(4=actionTypes_00009)
BOOL aux512 #(4=actionTypes_00010)
BOOL aux513 #(4=actionTypes_00010)
BOOL aux514 #(4=actionTypes_00010)
BOOL aux515 #(4=actionTypes_00010)
BOOL aux516 #(4=actionTypes_00010)
BOOL aux517 #(4=actionTypes_00010)
BOOL aux518 #(4=actionTypes_00011)
BOOL aux519 #(4=actionTypes_00011)
BOOL aux520 #(4=actionTypes_00011)
BOOL aux521 #(4=actionTypes_00011)
BOOL aux522 #(4=actionTypes_00011)
BOOL aux523 #(4=actionTypes_00011)
BOOL aux524 #(4=actionTypes_00012)
BOOL aux525 #(4=actionTypes_00012)
BOOL aux526 #(4=actionTypes_00012)
BOOL aux527 #(4=actionTypes_00012)
BOOL aux528 #(4=actionTypes_00012)
BOOL aux529 #(4=actionTypes_00012)
BOOL aux530 #(4=actionTypes_00013)
BOOL aux531 #(4=actionTypes_00013)
BOOL aux532 #(4=actionTypes_00013)
BOOL aux533 #(4=actionTypes_00013)
BOOL aux534 #(4=actionTypes_00013)
BOOL aux535 #(4=actionTypes_00013)
BOOL aux536 #(4=actionTypes_00014)
BOOL aux537 #(4=actionTypes_00014)
BOOL aux538 #(4=actionTypes_00014)
BOOL aux539 #(4=actionTypes_00014)
BOOL aux540 #(4=actionTypes_00014)
BOOL aux541 #(4=actionTypes_00014)
BOOL aux542 #(5=actionTypes_00002)
BOOL aux543 #(5=actionTypes_00002)
BOOL aux544 #(5=actionTypes_00002)
BOOL aux545 #(5=actionTypes_00002)
BOOL aux546 #(5=actionTypes_00002)
BOOL aux547 #(5=actionTypes_00002)
BOOL aux548 #(5=actionTypes_00002)
BOOL aux549 #(5=actionTypes_00002)
BOOL aux550 #(5=actionTypes_00003)
BOOL aux551 #(5=actionTypes_00003)
BOOL aux552 #(5=actionTypes_00003)
BOOL aux553 #(5=actionTypes_00003)
BOOL aux554 #(5=actionTypes_00003)
BOOL aux555 #(5=actionTypes_00003)
BOOL aux556 #(5=actionTypes_00003)
BOOL aux557 #(5=actionTypes_00003)
BOOL aux558 #(5=actionTypes_00004)
BOOL aux559 #(5=actionTypes_00004)
BOOL aux560 #(5=actionTypes_00004)
BOOL aux561 #(5=actionTypes_00004)
BOOL aux562 #(5=actionTypes_00004)
BOOL aux563 #(5=actionTypes_00004)
BOOL aux564 #(5=actionTypes_00004)
BOOL aux565 #(5=actionTypes_00004)
BOOL aux566 #(5=actionTypes_00005)
BOOL aux567 #(5=actionTypes_00005)
BOOL aux568 #(5=actionTypes_00005)
BOOL aux569 #(5=actionTypes_00005)
BOOL aux570 #(5=actionTypes_00005)
BOOL aux571 #(5=actionTypes_00005)
BOOL aux572 #(5=actionTypes_00005)
BOOL aux573 #(5=actionTypes_00005)
BOOL aux574 #(5=actionTypes_00006)
BOOL aux575 #(5=actionTypes_00006)
BOOL aux576 #(5=actionTypes_00006)
BOOL aux577 #(5=actionTypes_00006)
BOOL aux578 #(5=actionTypes_00006)
BOOL aux579 #(5=actionTypes_00006)
BOOL aux580 #(5=actionTypes_00006)
BOOL aux581 #(5=actionTypes_00006)
BOOL aux582 #(5=actionTypes_00007)
BOOL aux583 #(5=actionTypes_00007)
BOOL aux584 #(5=actionTypes_00007)
BOOL aux585 #(5=actionTypes_00007)
BOOL aux586 #(5=actionTypes_00007)
BOOL aux587 #(5=actionTypes_00007)
BOOL aux588 #(5=actionTypes_00007)
BOOL aux589 #(5=actionTypes_00007)
BOOL aux590 #(5=actionTypes_00008)
BOOL aux591 #(5=actionTypes_00008)
BOOL aux592 #(5=actionTypes_00008)
BOOL aux593 #(5=actionTypes_00008)
BOOL aux594 #(5=actionTypes_00008)
BOOL aux595 #(5=actionTypes_00008)
BOOL aux596 #(5=actionTypes_00008)
BOOL aux597 #(5=actionTypes_00008)
BOOL aux598 #(5=actionTypes_00009)
BOOL aux599 #(5=actionTypes_00009)
BOOL aux600 #(5=actionTypes_00009)
BOOL aux601 #(5=actionTypes_00009)
BOOL aux602 #(5=actionTypes_00009)
BOOL aux603 #(5=actionTypes_00009)
BOOL aux604 #(5=actionTypes_00009)
BOOL aux605 #(5=actionTypes_00009)
BOOL aux606 #(5=actionTypes_00010)
BOOL aux607 #(5=actionTypes_00010)
BOOL aux608 #(5=actionTypes_00010)
BOOL aux609 #(5=actionTypes_00010)
BOOL aux610 #(5=actionTypes_00010)
BOOL aux611 #(5=actionTypes_00010)
BOOL aux612 #(5=actionTypes_00010)
BOOL aux613 #(5=actionTypes_00010)
BOOL aux614 #(5=actionTypes_00011)
BOOL aux615 #(5=actionTypes_00011)
BOOL aux616 #(5=actionTypes_00011)
BOOL aux617 #(5=actionTypes_00011)
BOOL aux618 #(5=actionTypes_00011)
BOOL aux619 #(5=actionTypes_00011)
BOOL aux620 #(5=actionTypes_00011)
BOOL aux621 #(5=actionTypes_00011)
BOOL aux622 #(5=actionTypes_00012)
BOOL aux623 #(5=actionTypes_00012)
BOOL aux624 #(5=actionTypes_00012)
BOOL aux625 #(5=actionTypes_00012)
BOOL aux626 #(5=actionTypes_00012)
BOOL aux627 #(5=actionTypes_00012)
BOOL aux628 #(5=actionTypes_00012)
BOOL aux629 #(5=actionTypes_00012)
BOOL aux630 #(5=actionTypes_00013)
BOOL aux631 #(5=actionTypes_00013)
BOOL aux632 #(5=actionTypes_00013)
BOOL aux633 #(5=actionTypes_00013)
BOOL aux634 #(5=actionTypes_00013)
BOOL aux635 #(5=actionTypes_00013)
BOOL aux636 #(5=actionTypes_00013)
BOOL aux637 #(5=actionTypes_00013)
BOOL aux638 #(5=actionTypes_00014)
BOOL aux639 #(5=actionTypes_00014)
BOOL aux640 #(5=actionTypes_00014)
BOOL aux641 #(5=actionTypes_00014)
BOOL aux642 #(5=actionTypes_00014)
BOOL aux643 #(5=actionTypes_00014)
BOOL aux644 #(5=actionTypes_00014)
BOOL aux645 #(5=actionTypes_00014)
BOOL aux646 #(6=actionTypes_00002)
BOOL aux647 #(6=actionTypes_00002)
BOOL aux648 #(6=actionTypes_00002)
BOOL aux649 #(6=actionTypes_00002)
BOOL aux650 #(6=actionTypes_00002)
BOOL aux651 #(6=actionTypes_00002)
BOOL aux652 #(6=actionTypes_00002)
BOOL aux653 #(6=actionTypes_00003)
BOOL aux654 #(6=actionTypes_00003)
BOOL aux655 #(6=actionTypes_00003)
BOOL aux656 #(6=actionTypes_00003)
BOOL aux657 #(6=actionTypes_00003)
BOOL aux658 #(6=actionTypes_00003)
BOOL aux659 #(6=actionTypes_00003)
BOOL aux660 #(6=actionTypes_00004)
BOOL aux661 #(6=actionTypes_00004)
BOOL aux662 #(6=actionTypes_00004)
BOOL aux663 #(6=actionTypes_00004)
BOOL aux664 #(6=actionTypes_00004)
BOOL aux665 #(6=actionTypes_00004)
BOOL aux666 #(6=actionTypes_00004)
BOOL aux667 #(6=actionTypes_00005)
BOOL aux668 #(6=actionTypes_00005)
BOOL aux669 #(6=actionTypes_00005)
BOOL aux670 #(6=actionTypes_00005)
BOOL aux671 #(6=actionTypes_00005)
BOOL aux672 #(6=actionTypes_00005)
BOOL aux673 #(6=actionTypes_00005)
BOOL aux674 #(6=actionTypes_00006)
BOOL aux675 #(6=actionTypes_00006)
BOOL aux676 #(6=actionTypes_00006)
BOOL aux677 #(6=actionTypes_00006)
BOOL aux678 #(6=actionTypes_00006)
BOOL aux679 #(6=actionTypes_00006)
BOOL aux680 #(6=actionTypes_00006)
BOOL aux681 #(6=actionTypes_00007)
BOOL aux682 #(6=actionTypes_00007)
BOOL aux683 #(6=actionTypes_00007)
BOOL aux684 #(6=actionTypes_00007)
BOOL aux685 #(6=actionTypes_00007)
BOOL aux686 #(6=actionTypes_00007)
BOOL aux687 #(6=actionTypes_00007)
BOOL aux688 #(6=actionTypes_00008)
BOOL aux689 #(6=actionTypes_00008)
BOOL aux690 #(6=actionTypes_00008)
BOOL aux691 #(6=actionTypes_00008)
BOOL aux692 #(6=actionTypes_00008)
BOOL aux693 #(6=actionTypes_00008)
BOOL aux694 #(6=actionTypes_00008)
BOOL aux695 #(6=actionTypes_00009)
BOOL aux696 #(6=actionTypes_00009)
BOOL aux697 #(6=actionTypes_00009)
BOOL aux698 #(6=actionTypes_00009)
BOOL aux699 #(6=actionTypes_00009)
BOOL aux700 #(6=actionTypes_00009)
BOOL aux701 #(6=actionTypes_00009)
BOOL aux702 #(6=actionTypes_00010)
BOOL aux703 #(6=actionTypes_00010)
BOOL aux704 #(6=actionTypes_00010)
BOOL aux705 #(6=actionTypes_00010)
BOOL aux706 #(6=actionTypes_00010)
BOOL aux707 #(6=actionTypes_00010)
BOOL aux708 #(6=actionTypes_00010)
BOOL aux709 #(6=actionTypes_00011)
BOOL aux710 #(6=actionTypes_00011)
BOOL aux711 #(6=actionTypes_00011)
BOOL aux712 #(6=actionTypes_00011)
BOOL aux713 #(6=actionTypes_00011)
BOOL aux714 #(6=actionTypes_00011)
BOOL aux715 #(6=actionTypes_00011)
BOOL aux716 #(6=actionTypes_00012)
BOOL aux717 #(6=actionTypes_00012)
BOOL aux718 #(6=actionTypes_00012)
BOOL aux719 #(6=actionTypes_00012)
BOOL aux720 #(6=actionTypes_00012)
BOOL aux721 #(6=actionTypes_00012)
BOOL aux722 #(6=actionTypes_00012)
BOOL aux723 #(6=actionTypes_00013)
BOOL aux724 #(6=actionTypes_00013)
BOOL aux725 #(6=actionTypes_00013)
BOOL aux726 #(6=actionTypes_00013)
BOOL aux727 #(6=actionTypes_00013)
BOOL aux728 #(6=actionTypes_00013)
BOOL aux729 #(6=actionTypes_00013)
BOOL aux730 #(6=actionTypes_00014)
BOOL aux731 #(6=actionTypes_00014)
BOOL aux732 #(6=actionTypes_00014)
BOOL aux733 #(6=actionTypes_00014)
BOOL aux734 #(6=actionTypes_00014)
BOOL aux735 #(6=actionTypes_00014)
BOOL aux736 #(6=actionTypes_00014)
BOOL aux737 #(7=actionTypes_00002)
BOOL aux738 #(7=actionTypes_00002)
BOOL aux739 #(7=actionTypes_00002)
BOOL aux740 #(7=actionTypes_00002)
BOOL aux741 #(7=actionTypes_00002)
BOOL aux742 #(7=actionTypes_00002)
BOOL aux743 #(7=actionTypes_00002)
BOOL aux744 #(7=actionTypes_00003)
BOOL aux745 #(7=actionTypes_00003)
BOOL aux746 #(7=actionTypes_00003)
BOOL aux747 #(7=actionTypes_00003)
BOOL aux748 #(7=actionTypes_00003)
BOOL aux749 #(7=actionTypes_00003)
BOOL aux750 #(7=actionTypes_00003)
BOOL aux751 #(7=actionTypes_00004)
BOOL aux752 #(7=actionTypes_00004)
BOOL aux753 #(7=actionTypes_00004)
BOOL aux754 #(7=actionTypes_00004)
BOOL aux755 #(7=actionTypes_00004)
BOOL aux756 #(7=actionTypes_00004)
BOOL aux757 #(7=actionTypes_00004)
BOOL aux758 #(7=actionTypes_00005)
BOOL aux759 #(7=actionTypes_00005)
BOOL aux760 #(7=actionTypes_00005)
BOOL aux761 #(7=actionTypes_00005)
BOOL aux762 #(7=actionTypes_00005)
BOOL aux763 #(7=actionTypes_00005)
BOOL aux764 #(7=actionTypes_00005)
BOOL aux765 #(7=actionTypes_00006)
BOOL aux766 #(7=actionTypes_00006)
BOOL aux767 #(7=actionTypes_00006)
BOOL aux768 #(7=actionTypes_00006)
BOOL aux769 #(7=actionTypes_00006)
BOOL aux770 #(7=actionTypes_00006)
BOOL aux771 #(7=actionTypes_00006)
BOOL aux772 #(7=actionTypes_00007)
BOOL aux773 #(7=actionTypes_00007)
BOOL aux774 #(7=actionTypes_00007)
BOOL aux775 #(7=actionTypes_00007)
BOOL aux776 #(7=actionTypes_00007)
BOOL aux777 #(7=actionTypes_00007)
BOOL aux778 #(7=actionTypes_00007)
BOOL aux779 #(7=actionTypes_00008)
BOOL aux780 #(7=actionTypes_00008)
BOOL aux781 #(7=actionTypes_00008)
BOOL aux782 #(7=actionTypes_00008)
BOOL aux783 #(7=actionTypes_00008)
BOOL aux784 #(7=actionTypes_00008)
BOOL aux785 #(7=actionTypes_00008)
BOOL aux786 #(7=actionTypes_00009)
BOOL aux787 #(7=actionTypes_00009)
BOOL aux788 #(7=actionTypes_00009)
BOOL aux789 #(7=actionTypes_00009)
BOOL aux790 #(7=actionTypes_00009)
BOOL aux791 #(7=actionTypes_00009)
BOOL aux792 #(7=actionTypes_00009)
BOOL aux793 #(7=actionTypes_00010)
BOOL aux794 #(7=actionTypes_00010)
BOOL aux795 #(7=actionTypes_00010)
BOOL aux796 #(7=actionTypes_00010)
BOOL aux797 #(7=actionTypes_00010)
BOOL aux798 #(7=actionTypes_00010)
BOOL aux799 #(7=actionTypes_00010)
BOOL aux800 #(7=actionTypes_00011)
BOOL aux801 #(7=actionTypes_00011)
BOOL aux802 #(7=actionTypes_00011)
BOOL aux803 #(7=actionTypes_00011)
BOOL aux804 #(7=actionTypes_00011)
BOOL aux805 #(7=actionTypes_00011)
BOOL aux806 #(7=actionTypes_00011)
BOOL aux807 #(7=actionTypes_00012)
BOOL aux808 #(7=actionTypes_00012)
BOOL aux809 #(7=actionTypes_00012)
BOOL aux810 #(7=actionTypes_00012)
BOOL aux811 #(7=actionTypes_00012)
BOOL aux812 #(7=actionTypes_00012)
BOOL aux813 #(7=actionTypes_00012)
BOOL aux814 #(7=actionTypes_00013)
BOOL aux815 #(7=actionTypes_00013)
BOOL aux816 #(7=actionTypes_00013)
BOOL aux817 #(7=actionTypes_00013)
BOOL aux818 #(7=actionTypes_00013)
BOOL aux819 #(7=actionTypes_00013)
BOOL aux820 #(7=actionTypes_00013)
BOOL aux821 #(7=actionTypes_00014)
BOOL aux822 #(7=actionTypes_00014)
BOOL aux823 #(7=actionTypes_00014)
BOOL aux824 #(7=actionTypes_00014)
BOOL aux825 #(7=actionTypes_00014)
BOOL aux826 #(7=actionTypes_00014)
BOOL aux827 #(7=actionTypes_00014)
BOOL aux828 #(8=actionTypes_00002)
BOOL aux829 #(8=actionTypes_00002)
BOOL aux830 #(8=actionTypes_00002)
BOOL aux831 #(8=actionTypes_00002)
BOOL aux832 #(8=actionTypes_00002)
BOOL aux833 #(8=actionTypes_00002)
BOOL aux834 #(8=actionTypes_00003)
BOOL aux835 #(8=actionTypes_00003)
BOOL aux836 #(8=actionTypes_00003)
BOOL aux837 #(8=actionTypes_00003)
BOOL aux838 #(8=actionTypes_00003)
BOOL aux839 #(8=actionTypes_00003)
BOOL aux840 #(8=actionTypes_00004)
BOOL aux841 #(8=actionTypes_00004)
BOOL aux842 #(8=actionTypes_00004)
BOOL aux843 #(8=actionTypes_00004)
BOOL aux844 #(8=actionTypes_00004)
BOOL aux845 #(8=actionTypes_00004)
BOOL aux846 #(8=actionTypes_00005)
BOOL aux847 #(8=actionTypes_00005)
BOOL aux848 #(8=actionTypes_00005)
BOOL aux849 #(8=actionTypes_00005)
BOOL aux850 #(8=actionTypes_00005)
BOOL aux851 #(8=actionTypes_00005)
BOOL aux852 #(8=actionTypes_00006)
BOOL aux853 #(8=actionTypes_00006)
BOOL aux854 #(8=actionTypes_00006)
BOOL aux855 #(8=actionTypes_00006)
BOOL aux856 #(8=actionTypes_00006)
BOOL aux857 #(8=actionTypes_00006)
BOOL aux858 #(8=actionTypes_00007)
BOOL aux859 #(8=actionTypes_00007)
BOOL aux860 #(8=actionTypes_00007)
BOOL aux861 #(8=actionTypes_00007)
BOOL aux862 #(8=actionTypes_00007)
BOOL aux863 #(8=actionTypes_00007)
BOOL aux864 #(8=actionTypes_00008)
BOOL aux865 #(8=actionTypes_00008)
BOOL aux866 #(8=actionTypes_00008)
BOOL aux867 #(8=actionTypes_00008)
BOOL aux868 #(8=actionTypes_00008)
BOOL aux869 #(8=actionTypes_00008)
BOOL aux870 #(8=actionTypes_00009)
BOOL aux871 #(8=actionTypes_00009)
BOOL aux872 #(8=actionTypes_00009)
BOOL aux873 #(8=actionTypes_00009)
BOOL aux874 #(8=actionTypes_00009)
BOOL aux875 #(8=actionTypes_00009)
BOOL aux876 #(8=actionTypes_00010)
BOOL aux877 #(8=actionTypes_00010)
BOOL aux878 #(8=actionTypes_00010)
BOOL aux879 #(8=actionTypes_00010)
BOOL aux880 #(8=actionTypes_00010)
BOOL aux881 #(8=actionTypes_00010)
BOOL aux882 #(8=actionTypes_00011)
BOOL aux883 #(8=actionTypes_00011)
BOOL aux884 #(8=actionTypes_00011)
BOOL aux885 #(8=actionTypes_00011)
BOOL aux886 #(8=actionTypes_00011)
BOOL aux887 #(8=actionTypes_00011)
BOOL aux888 #(8=actionTypes_00012)
BOOL aux889 #(8=actionTypes_00012)
BOOL aux890 #(8=actionTypes_00012)
BOOL aux891 #(8=actionTypes_00012)
BOOL aux892 #(8=actionTypes_00012)
BOOL aux893 #(8=actionTypes_00012)
BOOL aux894 #(8=actionTypes_00013)
BOOL aux895 #(8=actionTypes_00013)
BOOL aux896 #(8=actionTypes_00013)
BOOL aux897 #(8=actionTypes_00013)
BOOL aux898 #(8=actionTypes_00013)
BOOL aux899 #(8=actionTypes_00013)
BOOL aux900 #(8=actionTypes_00014)
BOOL aux901 #(8=actionTypes_00014)
BOOL aux902 #(8=actionTypes_00014)
BOOL aux903 #(8=actionTypes_00014)
BOOL aux904 #(8=actionTypes_00014)
BOOL aux905 #(8=actionTypes_00014)
**VARIABLES**
ALIAS output[3]=[32, 64, 40]
**VARIABLES**
ALIAS input[3]=[4, 8, 5]
**SEARCH**
PRINT[[statePlaces_00002_00002],[statePlaces_00002_00003],[statePlaces_00002_00004],[statePlaces_00002_00005],[statePlaces_00002_00006],[statePlaces_00002_00007],[statePlaces_00002_00008],[statePlaces_00002_00009],[statePlaces_00002_00010],[statePlaces_00002_00011],[statePlaces_00002_00012],[statePlaces_00002_00013],[statePlaces_00002_00014],[statePlaces_00003_00002],[statePlaces_00003_00003],[statePlaces_00003_00004],[statePlaces_00003_00005],[statePlaces_00003_00006],[statePlaces_00003_00007],[statePlaces_00003_00008],[statePlaces_00003_00009],[statePlaces_00003_00010],[statePlaces_00003_00011],[statePlaces_00003_00012],[statePlaces_00003_00013],[statePlaces_00003_00014],[actionTypes_00002],[actionTypes_00003],[actionTypes_00004],[actionTypes_00005],[actionTypes_00006],[actionTypes_00007],[actionTypes_00008],[actionTypes_00009],[actionTypes_00010],[actionTypes_00011],[actionTypes_00012],[actionTypes_00013],[actionTypes_00014],[actionFrom_00002],[actionFrom_00003],[actionFrom_00004],[actionFrom_00005],[actionFrom_00006],[actionFrom_00007],[actionFrom_00008],[actionFrom_00009],[actionFrom_00010],[actionFrom_00011],[actionFrom_00012],[actionFrom_00013],[actionFrom_00014],[actionTo_00002],[actionTo_00003],[actionTo_00004],[actionTo_00005],[actionTo_00006],[actionTo_00007],[actionTo_00008],[actionTo_00009],[actionTo_00010],[actionTo_00011],[actionTo_00012],[actionTo_00013],[actionTo_00014],[pointers_00000_00002],[pointers_00000_00003],[pointers_00000_00004],[pointers_00000_00005],[pointers_00000_00006],[pointers_00000_00007],[pointers_00000_00008],[pointers_00000_00009],[pointers_00000_00010],[pointers_00000_00011],[pointers_00000_00012],[pointers_00000_00013],[pointers_00000_00014],[pointers_00001_00002],[pointers_00001_00003],[pointers_00001_00004],[pointers_00001_00005],[pointers_00001_00006],[pointers_00001_00007],[pointers_00001_00008],[pointers_00001_00009],[pointers_00001_00010],[pointers_00001_00011],[pointers_00001_00012],[pointers_00001_00013]]
**CONSTRAINTS**
reify(diseq(1,actionTypes_00002), aux156)
reify(diseq(1,actionTypes_00003), aux157)
reify(diseq(1,actionTypes_00004), aux158)
reify(diseq(1,actionTypes_00005), aux159)
reify(diseq(1,actionTypes_00006), aux160)
reify(diseq(1,actionTypes_00007), aux161)
reify(diseq(1,actionTypes_00008), aux162)
reify(diseq(1,actionTypes_00009), aux163)
reify(diseq(1,actionTypes_00010), aux164)
reify(diseq(1,actionTypes_00011), aux165)
reify(diseq(1,actionTypes_00012), aux166)
reify(diseq(1,actionTypes_00013), aux167)
reify(diseq(1,actionTypes_00014), aux168)
reify(diseq(2,actionTypes_00002), aux169)
reify(diseq(2,actionTypes_00003), aux170)
reify(diseq(2,actionTypes_00004), aux171)
reify(diseq(2,actionTypes_00005), aux172)
reify(diseq(2,actionTypes_00006), aux173)
reify(diseq(2,actionTypes_00007), aux174)
reify(diseq(2,actionTypes_00008), aux175)
reify(diseq(2,actionTypes_00009), aux176)
reify(diseq(2,actionTypes_00010), aux177)
reify(diseq(2,actionTypes_00011), aux178)
reify(diseq(2,actionTypes_00012), aux179)
reify(diseq(2,actionTypes_00013), aux180)
reify(diseq(2,actionTypes_00014), aux181)
reify(watched-or({watched-and({w-literal(actionTypes_00002,7),diseq(actionFrom_00002,3)}),watched-and({w-literal(actionTypes_00002,8),diseq(actionFrom_00002,3)}),w-literal(actionTypes_00002,1),w-literal(actionTypes_00002,2),w-literal(actionTypes_00002,3),w-literal(actionTypes_00002,5),w-literal(actionTypes_00002,6),watched-and({w-literal(actionTypes_00002,4),diseq(actionTo_00002,3)})}), aux182)
reify(watched-or({watched-and({w-literal(actionTypes_00003,7),diseq(actionFrom_00003,3)}),watched-and({w-literal(actionTypes_00003,8),diseq(actionFrom_00003,3)}),w-literal(actionTypes_00003,1),w-literal(actionTypes_00003,2),w-literal(actionTypes_00003,3),w-literal(actionTypes_00003,5),w-literal(actionTypes_00003,6),watched-and({w-literal(actionTypes_00003,4),diseq(actionTo_00003,3)})}), aux183)
reify(watched-or({watched-and({w-literal(actionTypes_00004,7),diseq(actionFrom_00004,3)}),watched-and({w-literal(actionTypes_00004,8),diseq(actionFrom_00004,3)}),w-literal(actionTypes_00004,1),w-literal(actionTypes_00004,2),w-literal(actionTypes_00004,3),w-literal(actionTypes_00004,5),w-literal(actionTypes_00004,6),watched-and({w-literal(actionTypes_00004,4),diseq(actionTo_00004,3)})}), aux184)
reify(watched-or({watched-and({w-literal(actionTypes_00005,7),diseq(actionFrom_00005,3)}),watched-and({w-literal(actionTypes_00005,8),diseq(actionFrom_00005,3)}),w-literal(actionTypes_00005,1),w-literal(actionTypes_00005,2),w-literal(actionTypes_00005,3),w-literal(actionTypes_00005,5),w-literal(actionTypes_00005,6),watched-and({w-literal(actionTypes_00005,4),diseq(actionTo_00005,3)})}), aux185)
reify(watched-or({watched-and({w-literal(actionTypes_00006,7),diseq(actionFrom_00006,3)}),watched-and({w-literal(actionTypes_00006,8),diseq(actionFrom_00006,3)}),w-literal(actionTypes_00006,1),w-literal(actionTypes_00006,2),w-literal(actionTypes_00006,3),w-literal(actionTypes_00006,5),w-literal(actionTypes_00006,6),watched-and({w-literal(actionTypes_00006,4),diseq(actionTo_00006,3)})}), aux186)
reify(watched-or({watched-and({w-literal(actionTypes_00007,7),diseq(actionFrom_00007,3)}),watched-and({w-literal(actionTypes_00007,8),diseq(actionFrom_00007,3)}),w-literal(actionTypes_00007,1),w-literal(actionTypes_00007,2),w-literal(actionTypes_00007,3),w-literal(actionTypes_00007,5),w-literal(actionTypes_00007,6),watched-and({w-literal(actionTypes_00007,4),diseq(actionTo_00007,3)})}), aux187)
reify(watched-or({watched-and({w-literal(actionTypes_00008,7),diseq(actionFrom_00008,3)}),watched-and({w-literal(actionTypes_00008,8),diseq(actionFrom_00008,3)}),w-literal(actionTypes_00008,1),w-literal(actionTypes_00008,2),w-literal(actionTypes_00008,3),w-literal(actionTypes_00008,5),w-literal(actionTypes_00008,6),watched-and({w-literal(actionTypes_00008,4),diseq(actionTo_00008,3)})}), aux188)
reify(watched-or({watched-and({w-literal(actionTypes_00009,7),diseq(actionFrom_00009,3)}),watched-and({w-literal(actionTypes_00009,8),diseq(actionFrom_00009,3)}),w-literal(actionTypes_00009,1),w-literal(actionTypes_00009,2),w-literal(actionTypes_00009,3),w-literal(actionTypes_00009,5),w-literal(actionTypes_00009,6),watched-and({w-literal(actionTypes_00009,4),diseq(actionTo_00009,3)})}), aux189)
reify(watched-or({watched-and({w-literal(actionTypes_00010,7),diseq(actionFrom_00010,3)}),watched-and({w-literal(actionTypes_00010,8),diseq(actionFrom_00010,3)}),w-literal(actionTypes_00010,1),w-literal(actionTypes_00010,2),w-literal(actionTypes_00010,3),w-literal(actionTypes_00010,5),w-literal(actionTypes_00010,6),watched-and({w-literal(actionTypes_00010,4),diseq(actionTo_00010,3)})}), aux190)
reify(watched-or({watched-and({w-literal(actionTypes_00011,7),diseq(actionFrom_00011,3)}),watched-and({w-literal(actionTypes_00011,8),diseq(actionFrom_00011,3)}),w-literal(actionTypes_00011,1),w-literal(actionTypes_00011,2),w-literal(actionTypes_00011,3),w-literal(actionTypes_00011,5),w-literal(actionTypes_00011,6),watched-and({w-literal(actionTypes_00011,4),diseq(actionTo_00011,3)})}), aux191)
reify(watched-or({watched-and({w-literal(actionTypes_00012,7),diseq(actionFrom_00012,3)}),watched-and({w-literal(actionTypes_00012,8),diseq(actionFrom_00012,3)}),w-literal(actionTypes_00012,1),w-literal(actionTypes_00012,2),w-literal(actionTypes_00012,3),w-literal(actionTypes_00012,5),w-literal(actionTypes_00012,6),watched-and({w-literal(actionTypes_00012,4),diseq(actionTo_00012,3)})}), aux192)
reify(watched-or({watched-and({w-literal(actionTypes_00013,7),diseq(actionFrom_00013,3)}),watched-and({w-literal(actionTypes_00013,8),diseq(actionFrom_00013,3)}),w-literal(actionTypes_00013,1),w-literal(actionTypes_00013,2),w-literal(actionTypes_00013,3),w-literal(actionTypes_00013,5),w-literal(actionTypes_00013,6),watched-and({w-literal(actionTypes_00013,4),diseq(actionTo_00013,3)})}), aux193)
reify(watched-or({watched-and({w-literal(actionTypes_00014,7),diseq(actionFrom_00014,3)}),watched-and({w-literal(actionTypes_00014,8),diseq(actionFrom_00014,3)}),w-literal(actionTypes_00014,1),w-literal(actionTypes_00014,2),w-literal(actionTypes_00014,3),w-literal(actionTypes_00014,5),w-literal(actionTypes_00014,6),watched-and({w-literal(actionTypes_00014,4),diseq(actionTo_00014,3)})}), aux194)
reify(watched-or({w-literal(actionTypes_00002,2),w-literal(actionTypes_00002,4)}), aux195)
reify(watched-or({w-literal(actionTypes_00003,2),w-literal(actionTypes_00003,4)}), aux196)
reify(watched-or({w-literal(actionTypes_00004,2),w-literal(actionTypes_00004,4)}), aux197)
reify(watched-or({w-literal(actionTypes_00005,2),w-literal(actionTypes_00005,4)}), aux198)
reify(watched-or({w-literal(actionTypes_00006,2),w-literal(actionTypes_00006,4)}), aux199)
reify(watched-or({w-literal(actionTypes_00007,2),w-literal(actionTypes_00007,4)}), aux200)
reify(watched-or({w-literal(actionTypes_00008,2),w-literal(actionTypes_00008,4)}), aux201)
reify(watched-or({w-literal(actionTypes_00009,2),w-literal(actionTypes_00009,4)}), aux202)
reify(watched-or({w-literal(actionTypes_00010,2),w-literal(actionTypes_00010,4)}), aux203)
reify(watched-or({w-literal(actionTypes_00011,2),w-literal(actionTypes_00011,4)}), aux204)
reify(watched-or({w-literal(actionTypes_00012,2),w-literal(actionTypes_00012,4)}), aux205)
reify(watched-or({w-literal(actionTypes_00013,2),w-literal(actionTypes_00013,4)}), aux206)
reify(watched-or({w-literal(actionTypes_00014,2),w-literal(actionTypes_00014,4)}), aux207)
reify(w-literal(actionTypes_00002,1), aux208)
reify(w-literal(actionTypes_00002,1), aux209)
reify(w-literal(actionTypes_00002,1), aux210)
reify(w-literal(actionTypes_00002,1), aux211)
reify(w-literal(actionTypes_00002,1), aux212)
reify(w-literal(actionTypes_00003,1), aux214)
reify(w-literal(actionTypes_00003,1), aux215)
reify(w-literal(actionTypes_00003,1), aux216)
reify(w-literal(actionTypes_00003,1), aux217)
reify(w-literal(actionTypes_00003,1), aux218)
reify(w-literal(actionTypes_00004,1), aux220)
reify(w-literal(actionTypes_00004,1), aux221)
reify(w-literal(actionTypes_00004,1), aux222)
reify(w-literal(actionTypes_00004,1), aux223)
reify(w-literal(actionTypes_00004,1), aux224)
reify(w-literal(actionTypes_00005,1), aux226)
reify(w-literal(actionTypes_00005,1), aux227)
reify(w-literal(actionTypes_00005,1), aux228)
reify(w-literal(actionTypes_00005,1), aux229)
reify(w-literal(actionTypes_00005,1), aux230)
reify(w-literal(actionTypes_00006,1), aux232)
reify(w-literal(actionTypes_00006,1), aux233)
reify(w-literal(actionTypes_00006,1), aux234)
reify(w-literal(actionTypes_00006,1), aux235)
reify(w-literal(actionTypes_00006,1), aux236)
reify(w-literal(actionTypes_00007,1), aux238)
reify(w-literal(actionTypes_00007,1), aux239)
reify(w-literal(actionTypes_00007,1), aux240)
reify(w-literal(actionTypes_00007,1), aux241)
reify(w-literal(actionTypes_00007,1), aux242)
reify(w-literal(actionTypes_00008,1), aux244)
reify(w-literal(actionTypes_00008,1), aux245)
reify(w-literal(actionTypes_00008,1), aux246)
reify(w-literal(actionTypes_00008,1), aux247)
reify(w-literal(actionTypes_00008,1), aux248)
reify(w-literal(actionTypes_00009,1), aux250)
reify(w-literal(actionTypes_00009,1), aux251)
reify(w-literal(actionTypes_00009,1), aux252)
reify(w-literal(actionTypes_00009,1), aux253)
reify(w-literal(actionTypes_00009,1), aux254)
reify(w-literal(actionTypes_00010,1), aux256)
reify(w-literal(actionTypes_00010,1), aux257)
reify(w-literal(actionTypes_00010,1), aux258)
reify(w-literal(actionTypes_00010,1), aux259)
reify(w-literal(actionTypes_00010,1), aux260)
reify(w-literal(actionTypes_00011,1), aux262)
reify(w-literal(actionTypes_00011,1), aux263)
reify(w-literal(actionTypes_00011,1), aux264)
reify(w-literal(actionTypes_00011,1), aux265)
reify(w-literal(actionTypes_00011,1), aux266)
reify(w-literal(actionTypes_00012,1), aux268)
reify(w-literal(actionTypes_00012,1), aux269)
reify(w-literal(actionTypes_00012,1), aux270)
reify(w-literal(actionTypes_00012,1), aux271)
reify(w-literal(actionTypes_00012,1), aux272)
reify(w-literal(actionTypes_00013,1), aux274)
reify(w-literal(actionTypes_00013,1), aux275)
reify(w-literal(actionTypes_00013,1), aux276)
reify(w-literal(actionTypes_00013,1), aux277)
reify(w-literal(actionTypes_00013,1), aux278)
reify(w-literal(actionTypes_00014,1), aux280)
reify(w-literal(actionTypes_00014,1), aux281)
reify(w-literal(actionTypes_00014,1), aux282)
reify(w-literal(actionTypes_00014,1), aux283)
reify(w-literal(actionTypes_00014,1), aux284)
reify(w-literal(actionTypes_00002,2), aux286)
reify(w-literal(actionTypes_00002,2), aux287)
reify(w-literal(actionTypes_00002,2), aux288)
reify(w-literal(actionTypes_00002,2), aux289)
reify(w-literal(actionTypes_00002,2), aux290)
reify(w-literal(actionTypes_00002,2), aux291)
reify(w-literal(actionTypes_00003,2), aux293)
reify(w-literal(actionTypes_00003,2), aux294)
reify(w-literal(actionTypes_00003,2), aux295)
reify(w-literal(actionTypes_00003,2), aux296)
reify(w-literal(actionTypes_00003,2), aux297)
reify(w-literal(actionTypes_00003,2), aux298)
reify(w-literal(actionTypes_00003,2), aux299)
reify(w-literal(actionTypes_00004,2), aux301)
reify(w-literal(actionTypes_00004,2), aux302)
reify(w-literal(actionTypes_00004,2), aux303)
reify(w-literal(actionTypes_00004,2), aux304)
reify(w-literal(actionTypes_00004,2), aux305)
reify(w-literal(actionTypes_00004,2), aux306)
reify(w-literal(actionTypes_00004,2), aux307)
reify(w-literal(actionTypes_00005,2), aux309)
reify(w-literal(actionTypes_00005,2), aux310)
reify(w-literal(actionTypes_00005,2), aux311)
reify(w-literal(actionTypes_00005,2), aux312)
reify(w-literal(actionTypes_00005,2), aux313)
reify(w-literal(actionTypes_00005,2), aux314)
reify(w-literal(actionTypes_00005,2), aux315)
reify(w-literal(actionTypes_00006,2), aux317)
reify(w-literal(actionTypes_00006,2), aux318)
reify(w-literal(actionTypes_00006,2), aux319)
reify(w-literal(actionTypes_00006,2), aux320)
reify(w-literal(actionTypes_00006,2), aux321)
reify(w-literal(actionTypes_00006,2), aux322)
reify(w-literal(actionTypes_00006,2), aux323)
reify(w-literal(actionTypes_00007,2), aux325)
reify(w-literal(actionTypes_00007,2), aux326)
reify(w-literal(actionTypes_00007,2), aux327)
reify(w-literal(actionTypes_00007,2), aux328)
reify(w-literal(actionTypes_00007,2), aux329)
reify(w-literal(actionTypes_00007,2), aux330)
reify(w-literal(actionTypes_00007,2), aux331)
reify(w-literal(actionTypes_00008,2), aux333)
reify(w-literal(actionTypes_00008,2), aux334)
reify(w-literal(actionTypes_00008,2), aux335)
reify(w-literal(actionTypes_00008,2), aux336)
reify(w-literal(actionTypes_00008,2), aux337)
reify(w-literal(actionTypes_00008,2), aux338)
reify(w-literal(actionTypes_00008,2), aux339)
reify(w-literal(actionTypes_00009,2), aux341)
reify(w-literal(actionTypes_00009,2), aux342)
reify(w-literal(actionTypes_00009,2), aux343)
reify(w-literal(actionTypes_00009,2), aux344)
reify(w-literal(actionTypes_00009,2), aux345)
reify(w-literal(actionTypes_00009,2), aux346)
reify(w-literal(actionTypes_00009,2), aux347)
reify(w-literal(actionTypes_00010,2), aux349)
reify(w-literal(actionTypes_00010,2), aux350)
reify(w-literal(actionTypes_00010,2), aux351)
reify(w-literal(actionTypes_00010,2), aux352)
reify(w-literal(actionTypes_00010,2), aux353)
reify(w-literal(actionTypes_00010,2), aux354)
reify(w-literal(actionTypes_00010,2), aux355)
reify(w-literal(actionTypes_00011,2), aux357)
reify(w-literal(actionTypes_00011,2), aux358)
reify(w-literal(actionTypes_00011,2), aux359)
reify(w-literal(actionTypes_00011,2), aux360)
reify(w-literal(actionTypes_00011,2), aux361)
reify(w-literal(actionTypes_00011,2), aux362)
reify(w-literal(actionTypes_00011,2), aux363)
reify(w-literal(actionTypes_00012,2), aux365)
reify(w-literal(actionTypes_00012,2), aux366)
reify(w-literal(actionTypes_00012,2), aux367)
reify(w-literal(actionTypes_00012,2), aux368)
reify(w-literal(actionTypes_00012,2), aux369)
reify(w-literal(actionTypes_00012,2), aux370)
reify(w-literal(actionTypes_00012,2), aux371)
reify(w-literal(actionTypes_00013,2), aux373)
reify(w-literal(actionTypes_00013,2), aux374)
reify(w-literal(actionTypes_00013,2), aux375)
reify(w-literal(actionTypes_00013,2), aux376)
reify(w-literal(actionTypes_00013,2), aux377)
reify(w-literal(actionTypes_00013,2), aux378)
reify(w-literal(actionTypes_00013,2), aux379)
reify(w-literal(actionTypes_00014,2), aux381)
reify(w-literal(actionTypes_00014,2), aux382)
reify(w-literal(actionTypes_00014,2), aux383)
reify(w-literal(actionTypes_00014,2), aux384)
reify(w-literal(actionTypes_00014,2), aux385)
reify(w-literal(actionTypes_00014,2), aux386)
reify(w-literal(actionTypes_00002,3), aux387)
reify(w-literal(actionTypes_00002,3), aux388)
reify(w-literal(actionTypes_00002,3), aux389)
reify(w-literal(actionTypes_00002,3), aux390)
reify(w-literal(actionTypes_00002,3), aux391)
reify(w-literal(actionTypes_00002,3), aux392)
reify(w-literal(actionTypes_00003,3), aux393)
reify(w-literal(actionTypes_00003,3), aux394)
reify(w-literal(actionTypes_00003,3), aux395)
reify(w-literal(actionTypes_00003,3), aux396)
reify(w-literal(actionTypes_00003,3), aux397)
reify(w-literal(actionTypes_00003,3), aux398)
reify(w-literal(actionTypes_00004,3), aux399)
reify(w-literal(actionTypes_00004,3), aux400)
reify(w-literal(actionTypes_00004,3), aux401)
reify(w-literal(actionTypes_00004,3), aux402)
reify(w-literal(actionTypes_00004,3), aux403)
reify(w-literal(actionTypes_00004,3), aux404)
reify(w-literal(actionTypes_00005,3), aux405)
reify(w-literal(actionTypes_00005,3), aux406)
reify(w-literal(actionTypes_00005,3), aux407)
reify(w-literal(actionTypes_00005,3), aux408)
reify(w-literal(actionTypes_00005,3), aux409)
reify(w-literal(actionTypes_00005,3), aux410)
reify(w-literal(actionTypes_00006,3), aux411)
reify(w-literal(actionTypes_00006,3), aux412)
reify(w-literal(actionTypes_00006,3), aux413)
reify(w-literal(actionTypes_00006,3), aux414)
reify(w-literal(actionTypes_00006,3), aux415)
reify(w-literal(actionTypes_00006,3), aux416)
reify(w-literal(actionTypes_00007,3), aux417)
reify(w-literal(actionTypes_00007,3), aux418)
reify(w-literal(actionTypes_00007,3), aux419)
reify(w-literal(actionTypes_00007,3), aux420)
reify(w-literal(actionTypes_00007,3), aux421)
reify(w-literal(actionTypes_00007,3), aux422)
reify(w-literal(actionTypes_00008,3), aux423)
reify(w-literal(actionTypes_00008,3), aux424)
reify(w-literal(actionTypes_00008,3), aux425)
reify(w-literal(actionTypes_00008,3), aux426)
reify(w-literal(actionTypes_00008,3), aux427)
reify(w-literal(actionTypes_00008,3), aux428)
reify(w-literal(actionTypes_00009,3), aux429)
reify(w-literal(actionTypes_00009,3), aux430)
reify(w-literal(actionTypes_00009,3), aux431)
reify(w-literal(actionTypes_00009,3), aux432)
reify(w-literal(actionTypes_00009,3), aux433)
reify(w-literal(actionTypes_00009,3), aux434)
reify(w-literal(actionTypes_00010,3), aux435)
reify(w-literal(actionTypes_00010,3), aux436)
reify(w-literal(actionTypes_00010,3), aux437)
reify(w-literal(actionTypes_00010,3), aux438)
reify(w-literal(actionTypes_00010,3), aux439)
reify(w-literal(actionTypes_00010,3), aux440)
reify(w-literal(actionTypes_00011,3), aux441)
reify(w-literal(actionTypes_00011,3), aux442)
reify(w-literal(actionTypes_00011,3), aux443)
reify(w-literal(actionTypes_00011,3), aux444)
reify(w-literal(actionTypes_00011,3), aux445)
reify(w-literal(actionTypes_00011,3), aux446)
reify(w-literal(actionTypes_00012,3), aux447)
reify(w-literal(actionTypes_00012,3), aux448)
reify(w-literal(actionTypes_00012,3), aux449)
reify(w-literal(actionTypes_00012,3), aux450)
reify(w-literal(actionTypes_00012,3), aux451)
reify(w-literal(actionTypes_00012,3), aux452)
reify(w-literal(actionTypes_00013,3), aux453)
reify(w-literal(actionTypes_00013,3), aux454)
reify(w-literal(actionTypes_00013,3), aux455)
reify(w-literal(actionTypes_00013,3), aux456)
reify(w-literal(actionTypes_00013,3), aux457)
reify(w-literal(actionTypes_00013,3), aux458)
reify(w-literal(actionTypes_00014,3), aux459)
reify(w-literal(actionTypes_00014,3), aux460)
reify(w-literal(actionTypes_00014,3), aux461)
reify(w-literal(actionTypes_00014,3), aux462)
reify(w-literal(actionTypes_00014,3), aux463)
reify(w-literal(actionTypes_00014,3), aux464)
reify(w-literal(actionTypes_00002,4), aux465)
reify(w-literal(actionTypes_00002,4), aux466)
reify(w-literal(actionTypes_00002,4), aux467)
reify(w-literal(actionTypes_00002,4), aux468)
reify(w-literal(actionTypes_00002,4), aux469)
reify(w-literal(actionTypes_00003,4), aux470)
reify(w-literal(actionTypes_00003,4), aux471)
reify(w-literal(actionTypes_00003,4), aux472)
reify(w-literal(actionTypes_00003,4), aux473)
reify(w-literal(actionTypes_00003,4), aux474)
reify(w-literal(actionTypes_00003,4), aux475)
reify(w-literal(actionTypes_00004,4), aux476)
reify(w-literal(actionTypes_00004,4), aux477)
reify(w-literal(actionTypes_00004,4), aux478)
reify(w-literal(actionTypes_00004,4), aux479)
reify(w-literal(actionTypes_00004,4), aux480)
reify(w-literal(actionTypes_00004,4), aux481)
reify(w-literal(actionTypes_00005,4), aux482)
reify(w-literal(actionTypes_00005,4), aux483)
reify(w-literal(actionTypes_00005,4), aux484)
reify(w-literal(actionTypes_00005,4), aux485)
reify(w-literal(actionTypes_00005,4), aux486)
reify(w-literal(actionTypes_00005,4), aux487)
reify(w-literal(actionTypes_00006,4), aux488)
reify(w-literal(actionTypes_00006,4), aux489)
reify(w-literal(actionTypes_00006,4), aux490)
reify(w-literal(actionTypes_00006,4), aux491)
reify(w-literal(actionTypes_00006,4), aux492)
reify(w-literal(actionTypes_00006,4), aux493)
reify(w-literal(actionTypes_00007,4), aux494)
reify(w-literal(actionTypes_00007,4), aux495)
reify(w-literal(actionTypes_00007,4), aux496)
reify(w-literal(actionTypes_00007,4), aux497)
reify(w-literal(actionTypes_00007,4), aux498)
reify(w-literal(actionTypes_00007,4), aux499)
reify(w-literal(actionTypes_00008,4), aux500)
reify(w-literal(actionTypes_00008,4), aux501)
reify(w-literal(actionTypes_00008,4), aux502)
reify(w-literal(actionTypes_00008,4), aux503)
reify(w-literal(actionTypes_00008,4), aux504)
reify(w-literal(actionTypes_00008,4), aux505)
reify(w-literal(actionTypes_00009,4), aux506)
reify(w-literal(actionTypes_00009,4), aux507)
reify(w-literal(actionTypes_00009,4), aux508)
reify(w-literal(actionTypes_00009,4), aux509)
reify(w-literal(actionTypes_00009,4), aux510)
reify(w-literal(actionTypes_00009,4), aux511)
reify(w-literal(actionTypes_00010,4), aux512)
reify(w-literal(actionTypes_00010,4), aux513)
reify(w-literal(actionTypes_00010,4), aux514)
reify(w-literal(actionTypes_00010,4), aux515)
reify(w-literal(actionTypes_00010,4), aux516)
reify(w-literal(actionTypes_00010,4), aux517)
reify(w-literal(actionTypes_00011,4), aux518)
reify(w-literal(actionTypes_00011,4), aux519)
reify(w-literal(actionTypes_00011,4), aux520)
reify(w-literal(actionTypes_00011,4), aux521)
reify(w-literal(actionTypes_00011,4), aux522)
reify(w-literal(actionTypes_00011,4), aux523)
reify(w-literal(actionTypes_00012,4), aux524)
reify(w-literal(actionTypes_00012,4), aux525)
reify(w-literal(actionTypes_00012,4), aux526)
reify(w-literal(actionTypes_00012,4), aux527)
reify(w-literal(actionTypes_00012,4), aux528)
reify(w-literal(actionTypes_00012,4), aux529)
reify(w-literal(actionTypes_00013,4), aux530)
reify(w-literal(actionTypes_00013,4), aux531)
reify(w-literal(actionTypes_00013,4), aux532)
reify(w-literal(actionTypes_00013,4), aux533)
reify(w-literal(actionTypes_00013,4), aux534)
reify(w-literal(actionTypes_00013,4), aux535)
reify(w-literal(actionTypes_00014,4), aux536)
reify(w-literal(actionTypes_00014,4), aux537)
reify(w-literal(actionTypes_00014,4), aux538)
reify(w-literal(actionTypes_00014,4), aux539)
reify(w-literal(actionTypes_00014,4), aux540)
reify(w-literal(actionTypes_00014,4), aux541)
reify(w-literal(actionTypes_00002,5), aux542)
reify(w-literal(actionTypes_00002,5), aux543)
reify(w-literal(actionTypes_00002,5), aux544)
reify(w-literal(actionTypes_00002,5), aux545)
reify(w-literal(actionTypes_00002,5), aux546)
reify(w-literal(actionTypes_00002,5), aux547)
reify(w-literal(actionTypes_00002,5), aux548)
reify(w-literal(actionTypes_00002,5), aux549)
reify(w-literal(actionTypes_00003,5), aux550)
reify(w-literal(actionTypes_00003,5), aux551)
reify(w-literal(actionTypes_00003,5), aux552)
reify(w-literal(actionTypes_00003,5), aux553)
reify(w-literal(actionTypes_00003,5), aux554)
reify(w-literal(actionTypes_00003,5), aux555)
reify(w-literal(actionTypes_00003,5), aux556)
reify(w-literal(actionTypes_00003,5), aux557)
reify(w-literal(actionTypes_00004,5), aux558)
reify(w-literal(actionTypes_00004,5), aux559)
reify(w-literal(actionTypes_00004,5), aux560)
reify(w-literal(actionTypes_00004,5), aux561)
reify(w-literal(actionTypes_00004,5), aux562)
reify(w-literal(actionTypes_00004,5), aux563)
reify(w-literal(actionTypes_00004,5), aux564)
reify(w-literal(actionTypes_00004,5), aux565)
reify(w-literal(actionTypes_00005,5), aux566)
reify(w-literal(actionTypes_00005,5), aux567)
reify(w-literal(actionTypes_00005,5), aux568)
reify(w-literal(actionTypes_00005,5), aux569)
reify(w-literal(actionTypes_00005,5), aux570)
reify(w-literal(actionTypes_00005,5), aux571)
reify(w-literal(actionTypes_00005,5), aux572)
reify(w-literal(actionTypes_00005,5), aux573)
reify(w-literal(actionTypes_00006,5), aux574)
reify(w-literal(actionTypes_00006,5), aux575)
reify(w-literal(actionTypes_00006,5), aux576)
reify(w-literal(actionTypes_00006,5), aux577)
reify(w-literal(actionTypes_00006,5), aux578)
reify(w-literal(actionTypes_00006,5), aux579)
reify(w-literal(actionTypes_00006,5), aux580)
reify(w-literal(actionTypes_00006,5), aux581)
reify(w-literal(actionTypes_00007,5), aux582)
reify(w-literal(actionTypes_00007,5), aux583)
reify(w-literal(actionTypes_00007,5), aux584)
reify(w-literal(actionTypes_00007,5), aux585)
reify(w-literal(actionTypes_00007,5), aux586)
reify(w-literal(actionTypes_00007,5), aux587)
reify(w-literal(actionTypes_00007,5), aux588)
reify(w-literal(actionTypes_00007,5), aux589)
reify(w-literal(actionTypes_00008,5), aux590)
reify(w-literal(actionTypes_00008,5), aux591)
reify(w-literal(actionTypes_00008,5), aux592)
reify(w-literal(actionTypes_00008,5), aux593)
reify(w-literal(actionTypes_00008,5), aux594)
reify(w-literal(actionTypes_00008,5), aux595)
reify(w-literal(actionTypes_00008,5), aux596)
reify(w-literal(actionTypes_00008,5), aux597)
reify(w-literal(actionTypes_00009,5), aux598)
reify(w-literal(actionTypes_00009,5), aux599)
reify(w-literal(actionTypes_00009,5), aux600)
reify(w-literal(actionTypes_00009,5), aux601)
reify(w-literal(actionTypes_00009,5), aux602)
reify(w-literal(actionTypes_00009,5), aux603)
reify(w-literal(actionTypes_00009,5), aux604)
reify(w-literal(actionTypes_00009,5), aux605)
reify(w-literal(actionTypes_00010,5), aux606)
reify(w-literal(actionTypes_00010,5), aux607)
reify(w-literal(actionTypes_00010,5), aux608)
reify(w-literal(actionTypes_00010,5), aux609)
reify(w-literal(actionTypes_00010,5), aux610)
reify(w-literal(actionTypes_00010,5), aux611)
reify(w-literal(actionTypes_00010,5), aux612)
reify(w-literal(actionTypes_00010,5), aux613)
reify(w-literal(actionTypes_00011,5), aux614)
reify(w-literal(actionTypes_00011,5), aux615)
reify(w-literal(actionTypes_00011,5), aux616)
reify(w-literal(actionTypes_00011,5), aux617)
reify(w-literal(actionTypes_00011,5), aux618)
reify(w-literal(actionTypes_00011,5), aux619)
reify(w-literal(actionTypes_00011,5), aux620)
reify(w-literal(actionTypes_00011,5), aux621)
reify(w-literal(actionTypes_00012,5), aux622)
reify(w-literal(actionTypes_00012,5), aux623)
reify(w-literal(actionTypes_00012,5), aux624)
reify(w-literal(actionTypes_00012,5), aux625)
reify(w-literal(actionTypes_00012,5), aux626)
reify(w-literal(actionTypes_00012,5), aux627)
reify(w-literal(actionTypes_00012,5), aux628)
reify(w-literal(actionTypes_00012,5), aux629)
reify(w-literal(actionTypes_00013,5), aux630)
reify(w-literal(actionTypes_00013,5), aux631)
reify(w-literal(actionTypes_00013,5), aux632)
reify(w-literal(actionTypes_00013,5), aux633)
reify(w-literal(actionTypes_00013,5), aux634)
reify(w-literal(actionTypes_00013,5), aux635)
reify(w-literal(actionTypes_00013,5), aux636)
reify(w-literal(actionTypes_00013,5), aux637)
reify(w-literal(actionTypes_00014,5), aux638)
reify(w-literal(actionTypes_00014,5), aux639)
reify(w-literal(actionTypes_00014,5), aux640)
reify(w-literal(actionTypes_00014,5), aux641)
reify(w-literal(actionTypes_00014,5), aux642)
reify(w-literal(actionTypes_00014,5), aux643)
reify(w-literal(actionTypes_00014,5), aux644)
reify(w-literal(actionTypes_00014,5), aux645)
reify(w-literal(actionTypes_00002,6), aux646)
reify(w-literal(actionTypes_00002,6), aux647)
reify(w-literal(actionTypes_00002,6), aux648)
reify(w-literal(actionTypes_00002,6), aux649)
reify(w-literal(actionTypes_00002,6), aux650)
reify(w-literal(actionTypes_00002,6), aux651)
reify(w-literal(actionTypes_00002,6), aux652)
reify(w-literal(actionTypes_00003,6), aux653)
reify(w-literal(actionTypes_00003,6), aux654)
reify(w-literal(actionTypes_00003,6), aux655)
reify(w-literal(actionTypes_00003,6), aux656)
reify(w-literal(actionTypes_00003,6), aux657)
reify(w-literal(actionTypes_00003,6), aux658)
reify(w-literal(actionTypes_00003,6), aux659)
reify(w-literal(actionTypes_00004,6), aux660)
reify(w-literal(actionTypes_00004,6), aux661)
reify(w-literal(actionTypes_00004,6), aux662)
reify(w-literal(actionTypes_00004,6), aux663)
reify(w-literal(actionTypes_00004,6), aux664)
reify(w-literal(actionTypes_00004,6), aux665)
reify(w-literal(actionTypes_00004,6), aux666)
reify(w-literal(actionTypes_00005,6), aux667)
reify(w-literal(actionTypes_00005,6), aux668)
reify(w-literal(actionTypes_00005,6), aux669)
reify(w-literal(actionTypes_00005,6), aux670)
reify(w-literal(actionTypes_00005,6), aux671)
reify(w-literal(actionTypes_00005,6), aux672)
reify(w-literal(actionTypes_00005,6), aux673)
reify(w-literal(actionTypes_00006,6), aux674)
reify(w-literal(actionTypes_00006,6), aux675)
reify(w-literal(actionTypes_00006,6), aux676)
reify(w-literal(actionTypes_00006,6), aux677)
reify(w-literal(actionTypes_00006,6), aux678)
reify(w-literal(actionTypes_00006,6), aux679)
reify(w-literal(actionTypes_00006,6), aux680)
reify(w-literal(actionTypes_00007,6), aux681)
reify(w-literal(actionTypes_00007,6), aux682)
reify(w-literal(actionTypes_00007,6), aux683)
reify(w-literal(actionTypes_00007,6), aux684)
reify(w-literal(actionTypes_00007,6), aux685)
reify(w-literal(actionTypes_00007,6), aux686)
reify(w-literal(actionTypes_00007,6), aux687)
reify(w-literal(actionTypes_00008,6), aux688)
reify(w-literal(actionTypes_00008,6), aux689)
reify(w-literal(actionTypes_00008,6), aux690)
reify(w-literal(actionTypes_00008,6), aux691)
reify(w-literal(actionTypes_00008,6), aux692)
reify(w-literal(actionTypes_00008,6), aux693)
reify(w-literal(actionTypes_00008,6), aux694)
reify(w-literal(actionTypes_00009,6), aux695)
reify(w-literal(actionTypes_00009,6), aux696)
reify(w-literal(actionTypes_00009,6), aux697)
reify(w-literal(actionTypes_00009,6), aux698)
reify(w-literal(actionTypes_00009,6), aux699)
reify(w-literal(actionTypes_00009,6), aux700)
reify(w-literal(actionTypes_00009,6), aux701)
reify(w-literal(actionTypes_00010,6), aux702)
reify(w-literal(actionTypes_00010,6), aux703)
reify(w-literal(actionTypes_00010,6), aux704)
reify(w-literal(actionTypes_00010,6), aux705)
reify(w-literal(actionTypes_00010,6), aux706)
reify(w-literal(actionTypes_00010,6), aux707)
reify(w-literal(actionTypes_00010,6), aux708)
reify(w-literal(actionTypes_00011,6), aux709)
reify(w-literal(actionTypes_00011,6), aux710)
reify(w-literal(actionTypes_00011,6), aux711)
reify(w-literal(actionTypes_00011,6), aux712)
reify(w-literal(actionTypes_00011,6), aux713)
reify(w-literal(actionTypes_00011,6), aux714)
reify(w-literal(actionTypes_00011,6), aux715)
reify(w-literal(actionTypes_00012,6), aux716)
reify(w-literal(actionTypes_00012,6), aux717)
reify(w-literal(actionTypes_00012,6), aux718)
reify(w-literal(actionTypes_00012,6), aux719)
reify(w-literal(actionTypes_00012,6), aux720)
reify(w-literal(actionTypes_00012,6), aux721)
reify(w-literal(actionTypes_00012,6), aux722)
reify(w-literal(actionTypes_00013,6), aux723)
reify(w-literal(actionTypes_00013,6), aux724)
reify(w-literal(actionTypes_00013,6), aux725)
reify(w-literal(actionTypes_00013,6), aux726)
reify(w-literal(actionTypes_00013,6), aux727)
reify(w-literal(actionTypes_00013,6), aux728)
reify(w-literal(actionTypes_00013,6), aux729)
reify(w-literal(actionTypes_00014,6), aux730)
reify(w-literal(actionTypes_00014,6), aux731)
reify(w-literal(actionTypes_00014,6), aux732)
reify(w-literal(actionTypes_00014,6), aux733)
reify(w-literal(actionTypes_00014,6), aux734)
reify(w-literal(actionTypes_00014,6), aux735)
reify(w-literal(actionTypes_00014,6), aux736)
reify(w-literal(actionTypes_00002,7), aux737)
reify(w-literal(actionTypes_00002,7), aux738)
reify(w-literal(actionTypes_00002,7), aux739)
reify(w-literal(actionTypes_00002,7), aux740)
reify(w-literal(actionTypes_00002,7), aux741)
reify(w-literal(actionTypes_00002,7), aux742)
reify(w-literal(actionTypes_00002,7), aux743)
reify(w-literal(actionTypes_00003,7), aux744)
reify(w-literal(actionTypes_00003,7), aux745)
reify(w-literal(actionTypes_00003,7), aux746)
reify(w-literal(actionTypes_00003,7), aux747)
reify(w-literal(actionTypes_00003,7), aux748)
reify(w-literal(actionTypes_00003,7), aux749)
reify(w-literal(actionTypes_00003,7), aux750)
reify(w-literal(actionTypes_00004,7), aux751)
reify(w-literal(actionTypes_00004,7), aux752)
reify(w-literal(actionTypes_00004,7), aux753)
reify(w-literal(actionTypes_00004,7), aux754)
reify(w-literal(actionTypes_00004,7), aux755)
reify(w-literal(actionTypes_00004,7), aux756)
reify(w-literal(actionTypes_00004,7), aux757)
reify(w-literal(actionTypes_00005,7), aux758)
reify(w-literal(actionTypes_00005,7), aux759)
reify(w-literal(actionTypes_00005,7), aux760)
reify(w-literal(actionTypes_00005,7), aux761)
reify(w-literal(actionTypes_00005,7), aux762)
reify(w-literal(actionTypes_00005,7), aux763)
reify(w-literal(actionTypes_00005,7), aux764)
reify(w-literal(actionTypes_00006,7), aux765)
reify(w-literal(actionTypes_00006,7), aux766)
reify(w-literal(actionTypes_00006,7), aux767)
reify(w-literal(actionTypes_00006,7), aux768)
reify(w-literal(actionTypes_00006,7), aux769)
reify(w-literal(actionTypes_00006,7), aux770)
reify(w-literal(actionTypes_00006,7), aux771)
reify(w-literal(actionTypes_00007,7), aux772)
reify(w-literal(actionTypes_00007,7), aux773)
reify(w-literal(actionTypes_00007,7), aux774)
reify(w-literal(actionTypes_00007,7), aux775)
reify(w-literal(actionTypes_00007,7), aux776)
reify(w-literal(actionTypes_00007,7), aux777)
reify(w-literal(actionTypes_00007,7), aux778)
reify(w-literal(actionTypes_00008,7), aux779)
reify(w-literal(actionTypes_00008,7), aux780)
reify(w-literal(actionTypes_00008,7), aux781)
reify(w-literal(actionTypes_00008,7), aux782)
reify(w-literal(actionTypes_00008,7), aux783)
reify(w-literal(actionTypes_00008,7), aux784)
reify(w-literal(actionTypes_00008,7), aux785)
reify(w-literal(actionTypes_00009,7), aux786)
reify(w-literal(actionTypes_00009,7), aux787)
reify(w-literal(actionTypes_00009,7), aux788)
reify(w-literal(actionTypes_00009,7), aux789)
reify(w-literal(actionTypes_00009,7), aux790)
reify(w-literal(actionTypes_00009,7), aux791)
reify(w-literal(actionTypes_00009,7), aux792)
reify(w-literal(actionTypes_00010,7), aux793)
reify(w-literal(actionTypes_00010,7), aux794)
reify(w-literal(actionTypes_00010,7), aux795)
reify(w-literal(actionTypes_00010,7), aux796)
reify(w-literal(actionTypes_00010,7), aux797)
reify(w-literal(actionTypes_00010,7), aux798)
reify(w-literal(actionTypes_00010,7), aux799)
reify(w-literal(actionTypes_00011,7), aux800)
reify(w-literal(actionTypes_00011,7), aux801)
reify(w-literal(actionTypes_00011,7), aux802)
reify(w-literal(actionTypes_00011,7), aux803)
reify(w-literal(actionTypes_00011,7), aux804)
reify(w-literal(actionTypes_00011,7), aux805)
reify(w-literal(actionTypes_00011,7), aux806)
reify(w-literal(actionTypes_00012,7), aux807)
reify(w-literal(actionTypes_00012,7), aux808)
reify(w-literal(actionTypes_00012,7), aux809)
reify(w-literal(actionTypes_00012,7), aux810)
reify(w-literal(actionTypes_00012,7), aux811)
reify(w-literal(actionTypes_00012,7), aux812)
reify(w-literal(actionTypes_00012,7), aux813)
reify(w-literal(actionTypes_00013,7), aux814)
reify(w-literal(actionTypes_00013,7), aux815)
reify(w-literal(actionTypes_00013,7), aux816)
reify(w-literal(actionTypes_00013,7), aux817)
reify(w-literal(actionTypes_00013,7), aux818)
reify(w-literal(actionTypes_00013,7), aux819)
reify(w-literal(actionTypes_00013,7), aux820)
reify(w-literal(actionTypes_00014,7), aux821)
reify(w-literal(actionTypes_00014,7), aux822)
reify(w-literal(actionTypes_00014,7), aux823)
reify(w-literal(actionTypes_00014,7), aux824)
reify(w-literal(actionTypes_00014,7), aux825)
reify(w-literal(actionTypes_00014,7), aux826)
reify(w-literal(actionTypes_00014,7), aux827)
reify(w-literal(actionTypes_00002,8), aux828)
reify(w-literal(actionTypes_00002,8), aux829)
reify(w-literal(actionTypes_00002,8), aux830)
reify(w-literal(actionTypes_00002,8), aux831)
reify(w-literal(actionTypes_00002,8), aux832)
reify(w-literal(actionTypes_00002,8), aux833)
reify(w-literal(actionTypes_00003,8), aux834)
reify(w-literal(actionTypes_00003,8), aux835)
reify(w-literal(actionTypes_00003,8), aux836)
reify(w-literal(actionTypes_00003,8), aux837)
reify(w-literal(actionTypes_00003,8), aux838)
reify(w-literal(actionTypes_00003,8), aux839)
reify(w-literal(actionTypes_00004,8), aux840)
reify(w-literal(actionTypes_00004,8), aux841)
reify(w-literal(actionTypes_00004,8), aux842)
reify(w-literal(actionTypes_00004,8), aux843)
reify(w-literal(actionTypes_00004,8), aux844)
reify(w-literal(actionTypes_00004,8), aux845)
reify(w-literal(actionTypes_00005,8), aux846)
reify(w-literal(actionTypes_00005,8), aux847)
reify(w-literal(actionTypes_00005,8), aux848)
reify(w-literal(actionTypes_00005,8), aux849)
reify(w-literal(actionTypes_00005,8), aux850)
reify(w-literal(actionTypes_00005,8), aux851)
reify(w-literal(actionTypes_00006,8), aux852)
reify(w-literal(actionTypes_00006,8), aux853)
reify(w-literal(actionTypes_00006,8), aux854)
reify(w-literal(actionTypes_00006,8), aux855)
reify(w-literal(actionTypes_00006,8), aux856)
reify(w-literal(actionTypes_00006,8), aux857)
reify(w-literal(actionTypes_00007,8), aux858)
reify(w-literal(actionTypes_00007,8), aux859)
reify(w-literal(actionTypes_00007,8), aux860)
reify(w-literal(actionTypes_00007,8), aux861)
reify(w-literal(actionTypes_00007,8), aux862)
reify(w-literal(actionTypes_00007,8), aux863)
reify(w-literal(actionTypes_00008,8), aux864)
reify(w-literal(actionTypes_00008,8), aux865)
reify(w-literal(actionTypes_00008,8), aux866)
reify(w-literal(actionTypes_00008,8), aux867)
reify(w-literal(actionTypes_00008,8), aux868)
reify(w-literal(actionTypes_00008,8), aux869)
reify(w-literal(actionTypes_00009,8), aux870)
reify(w-literal(actionTypes_00009,8), aux871)
reify(w-literal(actionTypes_00009,8), aux872)
reify(w-literal(actionTypes_00009,8), aux873)
reify(w-literal(actionTypes_00009,8), aux874)
reify(w-literal(actionTypes_00009,8), aux875)
reify(w-literal(actionTypes_00010,8), aux876)
reify(w-literal(actionTypes_00010,8), aux877)
reify(w-literal(actionTypes_00010,8), aux878)
reify(w-literal(actionTypes_00010,8), aux879)
reify(w-literal(actionTypes_00010,8), aux880)
reify(w-literal(actionTypes_00010,8), aux881)
reify(w-literal(actionTypes_00011,8), aux882)
reify(w-literal(actionTypes_00011,8), aux883)
reify(w-literal(actionTypes_00011,8), aux884)
reify(w-literal(actionTypes_00011,8), aux885)
reify(w-literal(actionTypes_00011,8), aux886)
reify(w-literal(actionTypes_00011,8), aux887)
reify(w-literal(actionTypes_00012,8), aux888)
reify(w-literal(actionTypes_00012,8), aux889)
reify(w-literal(actionTypes_00012,8), aux890)
reify(w-literal(actionTypes_00012,8), aux891)
reify(w-literal(actionTypes_00012,8), aux892)
reify(w-literal(actionTypes_00012,8), aux893)
reify(w-literal(actionTypes_00013,8), aux894)
reify(w-literal(actionTypes_00013,8), aux895)
reify(w-literal(actionTypes_00013,8), aux896)
reify(w-literal(actionTypes_00013,8), aux897)
reify(w-literal(actionTypes_00013,8), aux898)
reify(w-literal(actionTypes_00013,8), aux899)
reify(w-literal(actionTypes_00014,8), aux900)
reify(w-literal(actionTypes_00014,8), aux901)
reify(w-literal(actionTypes_00014,8), aux902)
reify(w-literal(actionTypes_00014,8), aux903)
reify(w-literal(actionTypes_00014,8), aux904)
reify(w-literal(actionTypes_00014,8), aux905)
reify(watchelement_undefzero([statePlaces_00002_00014, statePlaces_00003_00014], aux121, aux78), aux52)
reify(watchelement_undefzero([statePlaces_00002_00013, statePlaces_00003_00013], aux123, aux83), aux53)
reify(watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux125, aux66), aux54)
reify(watchelement_undefzero([statePlaces_00002_00012, statePlaces_00003_00012], aux122, aux80), aux55)
reify(watchelement_undefzero([statePlaces_00002_00011, statePlaces_00003_00011], aux124, aux87), aux56)
reify(watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux143, aux89), aux57)
reify(watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux145, aux72), aux58)
reify(watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux141, aux68), aux59)
reify(watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux140, aux76), aux60)
reify(watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux142, aux82), aux61)
reify(watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux148, aux79), aux62)
reify(watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux146, aux77), aux63)
reify(watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux147, aux73), aux64)
watchelement_undefzero([statePlaces_00002_00012, statePlaces_00003_00012], aux116, aux65)
watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux120, aux66)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux153, aux67)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux105, aux68)
watchelement_undefzero([4, -1], aux115, aux69)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux130, aux70)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux155, aux71)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux137, aux72)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux153, aux73)
watchelement_undefzero([statePlaces_00002_00011, statePlaces_00003_00011], aux106, aux74)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux119, aux75)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux130, aux76)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux155, aux77)
watchelement_undefzero([statePlaces_00002_00014, statePlaces_00003_00014], aux154, aux78)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux115, aux79)
watchelement_undefzero([statePlaces_00002_00012, statePlaces_00003_00012], aux106, aux80)
watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux132, aux81)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux119, aux82)
watchelement_undefzero([statePlaces_00002_00013, statePlaces_00003_00013], aux116, aux83)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux120, aux84)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux149, aux85)
watchelement_undefzero([statePlaces_00002_00013, statePlaces_00003_00013], aux154, aux86)
watchelement_undefzero([statePlaces_00002_00011, statePlaces_00003_00011], aux132, aux87)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux105, aux88)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux149, aux89)
watchelement_undefzero([4, -1], aux148, aux90)
watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux124, aux91)
watchelement_undefzero([statePlaces_00002_00011, statePlaces_00003_00011], aux122, aux92)
watchelement_undefzero([statePlaces_00002_00012, statePlaces_00003_00012], aux123, aux93)
watchelement_undefzero([statePlaces_00002_00013, statePlaces_00003_00013], aux121, aux94)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux141, aux95)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux125, aux96)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux146, aux97)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux147, aux98)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux140, aux99)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux142, aux100)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux143, aux101)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux145, aux102)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux137, aux103)
reify(w-inintervalset(actionFrom_00007,[2,3]), aux104)
reify(w-inintervalset(actionTo_00008,[2,3]), aux107)
reify(w-inintervalset(actionTo_00007,[2,3]), aux108)
reify(w-inintervalset(actionTo_00009,[2,3]), aux109)
reify(w-inintervalset(actionTo_00003,[2,3]), aux110)
reify(w-inintervalset(actionTo_00002,[2,3]), aux111)
reify(w-inintervalset(actionTo_00006,[2,3]), aux112)
reify(w-inintervalset(actionTo_00005,[2,3]), aux113)
reify(w-inintervalset(actionTo_00004,[2,3]), aux114)
reify(w-inintervalset(actionFrom_00002,[2,3]), aux117)
reify(w-inintervalset(actionFrom_00014,[2,3]), aux118)
reify(w-inintervalset(actionFrom_00011,[2,3]), aux126)
reify(w-inintervalset(actionFrom_00010,[2,3]), aux127)
reify(w-inintervalset(actionFrom_00003,[2,3]), aux128)
reify(w-inintervalset(actionTo_00014,[2,3]), aux129)
reify(w-inintervalset(actionTo_00013,[2,3]), aux131)
reify(w-inintervalset(actionFrom_00008,[2,3]), aux133)
reify(w-inintervalset(actionTo_00012,[2,3]), aux134)
reify(w-inintervalset(actionTo_00011,[2,3]), aux135)
reify(w-inintervalset(actionTo_00010,[2,3]), aux136)
reify(w-inintervalset(actionFrom_00005,[2,3]), aux138)
reify(w-inintervalset(actionFrom_00012,[2,3]), aux139)
reify(w-inintervalset(actionFrom_00004,[2,3]), aux144)
reify(w-inintervalset(actionFrom_00009,[2,3]), aux150)
reify(w-inintervalset(actionFrom_00006,[2,3]), aux151)
reify(w-inintervalset(actionFrom_00013,[2,3]), aux152)
watched-or({lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([pointers_00000_00013, pointers_00001_00013],[pointers_00000_00014, 3])})
watched-or({ineq(statePlaces_00002_00002, 4, -1),lexless([1, 0],[pointers_00000_00002, pointers_00001_00002]),lexless([4, -1],[statePlaces_00002_00002, statePlaces_00003_00002])})
watched-or({ineq(statePlaces_00002_00003, 4, -1),lexless([1, 0],[pointers_00000_00003, pointers_00001_00003]),lexless([4, -1],[statePlaces_00002_00003, statePlaces_00003_00003])})
watched-or({ineq(statePlaces_00002_00004, 4, -1),lexless([1, 0],[pointers_00000_00004, pointers_00001_00004]),lexless([4, -1],[statePlaces_00002_00004, statePlaces_00003_00004])})
watched-or({ineq(statePlaces_00002_00005, 4, -1),lexless([1, 0],[pointers_00000_00005, pointers_00001_00005]),lexless([4, -1],[statePlaces_00002_00005, statePlaces_00003_00005])})
watched-or({ineq(statePlaces_00002_00006, 4, -1),lexless([1, 0],[pointers_00000_00006, pointers_00001_00006]),lexless([4, -1],[statePlaces_00002_00006, statePlaces_00003_00006])})
watched-or({ineq(statePlaces_00002_00007, 4, -1),lexless([1, 0],[pointers_00000_00007, pointers_00001_00007]),lexless([4, -1],[statePlaces_00002_00007, statePlaces_00003_00007])})
watched-or({ineq(statePlaces_00002_00008, 4, -1),lexless([1, 0],[pointers_00000_00008, pointers_00001_00008]),lexless([4, -1],[statePlaces_00002_00008, statePlaces_00003_00008])})
watched-or({ineq(statePlaces_00002_00009, 4, -1),lexless([1, 0],[pointers_00000_00009, pointers_00001_00009]),lexless([4, -1],[statePlaces_00002_00009, statePlaces_00003_00009])})
watched-or({ineq(statePlaces_00002_00010, 4, -1),lexless([1, 0],[pointers_00000_00010, pointers_00001_00010]),lexless([4, -1],[statePlaces_00002_00010, statePlaces_00003_00010])})
watched-or({ineq(statePlaces_00002_00011, 4, -1),lexless([1, 0],[pointers_00000_00011, pointers_00001_00011]),lexless([4, -1],[statePlaces_00002_00011, statePlaces_00003_00011])})
watched-or({ineq(statePlaces_00002_00012, 4, -1),lexless([1, 0],[pointers_00000_00012, pointers_00001_00012]),lexless([4, -1],[statePlaces_00002_00012, statePlaces_00003_00012])})
watched-or({ineq(statePlaces_00002_00013, 4, -1),lexless([1, 0],[pointers_00000_00013, pointers_00001_00013]),lexless([4, -1],[statePlaces_00002_00013, statePlaces_00003_00013])})
watched-or({ineq(statePlaces_00002_00014, 4, -1),lexless([1, 0],[pointers_00000_00014, 3]),lexless([4, -1],[statePlaces_00002_00014, statePlaces_00003_00014])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00003, pointers_00001_00003])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00004, pointers_00001_00004])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00014, 3])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00004, pointers_00001_00004])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00014, 3])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00014, 3])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00014, 3])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00014, 3])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00014, 3])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00014, 3])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00014, 3])})
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00014, 3])})
watched-or({lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([pointers_00000_00011, pointers_00001_00011],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([pointers_00000_00011, pointers_00001_00011],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([pointers_00000_00011, pointers_00001_00011],[pointers_00000_00014, 3])})
watched-or({lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([pointers_00000_00012, pointers_00001_00012],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([pointers_00000_00012, pointers_00001_00012],[pointers_00000_00014, 3])})
reifyimply(w-literal(pointers_00000_00002,1), aux156)
reifyimply(gaceq(pointers_00000_00002,pointers_00000_00003), aux157)
reifyimply(gaceq(pointers_00000_00003,pointers_00000_00004), aux158)
reifyimply(gaceq(pointers_00000_00004,pointers_00000_00005), aux159)
reifyimply(gaceq(pointers_00000_00005,pointers_00000_00006), aux160)
reifyimply(gaceq(pointers_00000_00006,pointers_00000_00007), aux161)
reifyimply(gaceq(pointers_00000_00007,pointers_00000_00008), aux162)
reifyimply(gaceq(pointers_00000_00008,pointers_00000_00009), aux163)
reifyimply(gaceq(pointers_00000_00009,pointers_00000_00010), aux164)
reifyimply(gaceq(pointers_00000_00010,pointers_00000_00011), aux165)
reifyimply(gaceq(pointers_00000_00011,pointers_00000_00012), aux166)
reifyimply(gaceq(pointers_00000_00012,pointers_00000_00013), aux167)
reifyimply(gaceq(pointers_00000_00013,pointers_00000_00014), aux168)
reifyimply(w-literal(pointers_00001_00002,0), aux169)
reifyimply(gaceq(pointers_00001_00002,pointers_00001_00003), aux170)
reifyimply(gaceq(pointers_00001_00003,pointers_00001_00004), aux171)
reifyimply(gaceq(pointers_00001_00004,pointers_00001_00005), aux172)
reifyimply(gaceq(pointers_00001_00005,pointers_00001_00006), aux173)
reifyimply(gaceq(pointers_00001_00006,pointers_00001_00007), aux174)
reifyimply(gaceq(pointers_00001_00007,pointers_00001_00008), aux175)
reifyimply(gaceq(pointers_00001_00008,pointers_00001_00009), aux176)
reifyimply(gaceq(pointers_00001_00009,pointers_00001_00010), aux177)
reifyimply(gaceq(pointers_00001_00010,pointers_00001_00011), aux178)
reifyimply(gaceq(pointers_00001_00011,pointers_00001_00012), aux179)
reifyimply(gaceq(pointers_00001_00012,pointers_00001_00013), aux180)
reifyimply(w-literal(pointers_00001_00013,3), aux181)
reifyimply(w-literal(statePlaces_00003_00002,-1), aux182)
reifyimply(gaceq(statePlaces_00003_00002,statePlaces_00003_00003), aux183)
reifyimply(gaceq(statePlaces_00003_00003,statePlaces_00003_00004), aux184)
reifyimply(gaceq(statePlaces_00003_00004,statePlaces_00003_00005), aux185)
reifyimply(gaceq(statePlaces_00003_00005,statePlaces_00003_00006), aux186)
reifyimply(gaceq(statePlaces_00003_00006,statePlaces_00003_00007), aux187)
reifyimply(gaceq(statePlaces_00003_00007,statePlaces_00003_00008), aux188)
reifyimply(gaceq(statePlaces_00003_00008,statePlaces_00003_00009), aux189)
reifyimply(gaceq(statePlaces_00003_00009,statePlaces_00003_00010), aux190)
reifyimply(gaceq(statePlaces_00003_00010,statePlaces_00003_00011), aux191)
reifyimply(gaceq(statePlaces_00003_00011,statePlaces_00003_00012), aux192)
reifyimply(gaceq(statePlaces_00003_00012,statePlaces_00003_00013), aux193)
reifyimply(gaceq(statePlaces_00003_00013,statePlaces_00003_00014), aux194)
reifyimply(w-literal(statePlaces_00002_00002,4), aux195)
reifyimply(gaceq(statePlaces_00002_00002,statePlaces_00002_00003), aux196)
reifyimply(gaceq(statePlaces_00002_00003,statePlaces_00002_00004), aux197)
reifyimply(gaceq(statePlaces_00002_00004,statePlaces_00002_00005), aux198)
reifyimply(gaceq(statePlaces_00002_00005,statePlaces_00002_00006), aux199)
reifyimply(gaceq(statePlaces_00002_00006,statePlaces_00002_00007), aux200)
reifyimply(gaceq(statePlaces_00002_00007,statePlaces_00002_00008), aux201)
reifyimply(gaceq(statePlaces_00002_00008,statePlaces_00002_00009), aux202)
reifyimply(gaceq(statePlaces_00002_00009,statePlaces_00002_00010), aux203)
reifyimply(gaceq(statePlaces_00002_00010,statePlaces_00002_00011), aux204)
reifyimply(gaceq(statePlaces_00002_00011,statePlaces_00002_00012), aux205)
reifyimply(gaceq(statePlaces_00002_00012,statePlaces_00002_00013), aux206)
reifyimply(gaceq(statePlaces_00002_00013,statePlaces_00002_00014), aux207)
reifyimply(w-literal(pointers_00000_00002,2), aux208)
reifyimply(w-literal(actionFrom_00002,0), aux209)
reifyimply(w-literal(actionTo_00002,2), aux210)
reifyimply(w-inintervalset(pointers_00000_00002,[1,3]), aux211)
reifyimply(watchelement_undefzero([4, 8, 5], aux213, statePlaces_00002_00002), aux212)
reifyimply(w-literal(actionFrom_00003,0), aux215)
reifyimply(w-literal(actionTo_00003,2), aux216)
reifyimply(w-inintervalset(pointers_00000_00003,[1,3]), aux217)
reifyimply(watchelement_undefzero([4, 8, 5], aux219, statePlaces_00002_00003), aux218)
reifyimply(w-literal(actionFrom_00004,0), aux221)
reifyimply(w-literal(actionTo_00004,2), aux222)
reifyimply(w-inintervalset(pointers_00000_00004,[1,3]), aux223)
reifyimply(watchelement_undefzero([4, 8, 5], aux225, statePlaces_00002_00004), aux224)
reifyimply(w-literal(actionFrom_00005,0), aux227)
reifyimply(w-literal(actionTo_00005,2), aux228)
reifyimply(w-inintervalset(pointers_00000_00005,[1,3]), aux229)
reifyimply(watchelement_undefzero([4, 8, 5], aux231, statePlaces_00002_00005), aux230)
reifyimply(w-literal(actionFrom_00006,0), aux233)
reifyimply(w-literal(actionTo_00006,2), aux234)
reifyimply(w-inintervalset(pointers_00000_00006,[1,3]), aux235)
reifyimply(watchelement_undefzero([4, 8, 5], aux237, statePlaces_00002_00006), aux236)
reifyimply(w-literal(actionFrom_00007,0), aux239)
reifyimply(w-literal(actionTo_00007,2), aux240)
reifyimply(w-inintervalset(pointers_00000_00007,[1,3]), aux241)
reifyimply(watchelement_undefzero([4, 8, 5], aux243, statePlaces_00002_00007), aux242)
reifyimply(w-literal(actionFrom_00008,0), aux245)
reifyimply(w-literal(actionTo_00008,2), aux246)
reifyimply(w-inintervalset(pointers_00000_00008,[1,3]), aux247)
reifyimply(watchelement_undefzero([4, 8, 5], aux249, statePlaces_00002_00008), aux248)
reifyimply(w-literal(actionFrom_00009,0), aux251)
reifyimply(w-literal(actionTo_00009,2), aux252)
reifyimply(w-inintervalset(pointers_00000_00009,[1,3]), aux253)
reifyimply(watchelement_undefzero([4, 8, 5], aux255, statePlaces_00002_00009), aux254)
reifyimply(w-literal(actionFrom_00010,0), aux257)
reifyimply(w-literal(actionTo_00010,2), aux258)
reifyimply(w-inintervalset(pointers_00000_00010,[1,3]), aux259)
reifyimply(watchelement_undefzero([4, 8, 5], aux261, statePlaces_00002_00010), aux260)
reifyimply(w-literal(actionFrom_00011,0), aux263)
reifyimply(w-literal(actionTo_00011,2), aux264)
reifyimply(w-inintervalset(pointers_00000_00011,[1,3]), aux265)
reifyimply(watchelement_undefzero([4, 8, 5], aux267, statePlaces_00002_00011), aux266)
reifyimply(w-literal(actionFrom_00012,0), aux269)
reifyimply(w-literal(actionTo_00012,2), aux270)
reifyimply(w-inintervalset(pointers_00000_00012,[1,3]), aux271)
reifyimply(watchelement_undefzero([4, 8, 5], aux273, statePlaces_00002_00012), aux272)
reifyimply(w-literal(actionFrom_00013,0), aux275)
reifyimply(w-literal(actionTo_00013,2), aux276)
reifyimply(w-inintervalset(pointers_00000_00013,[1,3]), aux277)
reifyimply(watchelement_undefzero([4, 8, 5], aux279, statePlaces_00002_00013), aux278)
reifyimply(w-literal(actionFrom_00014,0), aux281)
reifyimply(w-literal(actionTo_00014,2), aux282)
reifyimply(w-inintervalset(pointers_00000_00014,[1,3]), aux283)
reifyimply(watchelement_undefzero([4, 8, 5], aux285, statePlaces_00002_00014), aux284)
reifyimply(diseq(statePlaces_00002_00002,-1), aux286)
reifyimply(w-literal(pointers_00001_00002,1), aux287)
reifyimply(w-literal(actionFrom_00002,2), aux288)
reifyimply(w-literal(actionTo_00002,1), aux289)
reifyimply(w-inintervalset(pointers_00001_00002,[1,3]), aux290)
reifyimply(watchelement_undefzero([32, 64, 40], aux292, 4), aux291)
reifyimply(diseq(statePlaces_00002_00003,-1), aux293)
reifyimply(diseq(statePlaces_00002_00002,-1), aux294)
reifyimply(w-literal(actionFrom_00003,2), aux296)
reifyimply(w-literal(actionTo_00003,1), aux297)
reifyimply(w-inintervalset(pointers_00001_00003,[1,3]), aux298)
reifyimply(watchelement_undefzero([32, 64, 40], aux300, statePlaces_00002_00002), aux299)
reifyimply(diseq(statePlaces_00002_00004,-1), aux301)
reifyimply(diseq(statePlaces_00002_00003,-1), aux302)
reifyimply(w-literal(actionFrom_00004,2), aux304)
reifyimply(w-literal(actionTo_00004,1), aux305)
reifyimply(w-inintervalset(pointers_00001_00004,[1,3]), aux306)
reifyimply(watchelement_undefzero([32, 64, 40], aux308, statePlaces_00002_00003), aux307)
reifyimply(diseq(statePlaces_00002_00005,-1), aux309)
reifyimply(diseq(statePlaces_00002_00004,-1), aux310)
reifyimply(w-literal(actionFrom_00005,2), aux312)
reifyimply(w-literal(actionTo_00005,1), aux313)
reifyimply(w-inintervalset(pointers_00001_00005,[1,3]), aux314)
reifyimply(watchelement_undefzero([32, 64, 40], aux316, statePlaces_00002_00004), aux315)
reifyimply(diseq(statePlaces_00002_00006,-1), aux317)
reifyimply(diseq(statePlaces_00002_00005,-1), aux318)
reifyimply(w-literal(actionFrom_00006,2), aux320)
reifyimply(w-literal(actionTo_00006,1), aux321)
reifyimply(w-inintervalset(pointers_00001_00006,[1,3]), aux322)
reifyimply(watchelement_undefzero([32, 64, 40], aux324, statePlaces_00002_00005), aux323)
reifyimply(diseq(statePlaces_00002_00007,-1), aux325)
reifyimply(diseq(statePlaces_00002_00006,-1), aux326)
reifyimply(w-literal(actionFrom_00007,2), aux328)
reifyimply(w-literal(actionTo_00007,1), aux329)
reifyimply(w-inintervalset(pointers_00001_00007,[1,3]), aux330)
reifyimply(watchelement_undefzero([32, 64, 40], aux332, statePlaces_00002_00006), aux331)
reifyimply(diseq(statePlaces_00002_00008,-1), aux333)
reifyimply(diseq(statePlaces_00002_00007,-1), aux334)
reifyimply(w-literal(actionFrom_00008,2), aux336)
reifyimply(w-literal(actionTo_00008,1), aux337)
reifyimply(w-inintervalset(pointers_00001_00008,[1,3]), aux338)
reifyimply(watchelement_undefzero([32, 64, 40], aux340, statePlaces_00002_00007), aux339)
reifyimply(diseq(statePlaces_00002_00009,-1), aux341)
reifyimply(diseq(statePlaces_00002_00008,-1), aux342)
reifyimply(w-literal(actionFrom_00009,2), aux344)
reifyimply(w-literal(actionTo_00009,1), aux345)
reifyimply(w-inintervalset(pointers_00001_00009,[1,3]), aux346)
reifyimply(watchelement_undefzero([32, 64, 40], aux348, statePlaces_00002_00008), aux347)
reifyimply(diseq(statePlaces_00002_00010,-1), aux349)
reifyimply(diseq(statePlaces_00002_00009,-1), aux350)
reifyimply(w-literal(actionFrom_00010,2), aux352)
reifyimply(w-literal(actionTo_00010,1), aux353)
reifyimply(w-inintervalset(pointers_00001_00010,[1,3]), aux354)
reifyimply(watchelement_undefzero([32, 64, 40], aux356, statePlaces_00002_00009), aux355)
reifyimply(diseq(statePlaces_00002_00011,-1), aux357)
reifyimply(diseq(statePlaces_00002_00010,-1), aux358)
reifyimply(w-literal(actionFrom_00011,2), aux360)
reifyimply(w-literal(actionTo_00011,1), aux361)
reifyimply(w-inintervalset(pointers_00001_00011,[1,3]), aux362)
reifyimply(watchelement_undefzero([32, 64, 40], aux364, statePlaces_00002_00010), aux363)
reifyimply(diseq(statePlaces_00002_00012,-1), aux365)
reifyimply(diseq(statePlaces_00002_00011,-1), aux366)
reifyimply(w-literal(actionFrom_00012,2), aux368)
reifyimply(w-literal(actionTo_00012,1), aux369)
reifyimply(w-inintervalset(pointers_00001_00012,[1,3]), aux370)
reifyimply(watchelement_undefzero([32, 64, 40], aux372, statePlaces_00002_00011), aux371)
reifyimply(diseq(statePlaces_00002_00013,-1), aux373)
reifyimply(diseq(statePlaces_00002_00012,-1), aux374)
reifyimply(w-literal(actionFrom_00013,2), aux376)
reifyimply(w-literal(actionTo_00013,1), aux377)
reifyimply(w-inintervalset(pointers_00001_00013,[1,3]), aux378)
reifyimply(watchelement_undefzero([32, 64, 40], aux380, statePlaces_00002_00012), aux379)
reifyimply(diseq(statePlaces_00002_00014,-1), aux381)
reifyimply(diseq(statePlaces_00002_00013,-1), aux382)
reifyimply(w-literal(pointers_00001_00013,2), aux383)
reifyimply(w-literal(actionFrom_00014,2), aux384)
reifyimply(w-literal(actionTo_00014,1), aux385)
reifyimply(w-literal(statePlaces_00002_00013,40), aux386)
ineq(aux387, aux62, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux388)
reifyimply(diseq(aux79,-1), aux389)
reifyimply(w-literal(actionTo_00002,2), aux390)
ineq(aux391, aux111, 0)
ineq(aux392, aux117, 0)
ineq(aux393, aux64, 0)
reifyimply(ineq(3, actionFrom_00003, 0), aux394)
reifyimply(diseq(aux73,-1), aux395)
reifyimply(w-literal(actionTo_00003,2), aux396)
ineq(aux397, aux110, 0)
ineq(aux398, aux128, 0)
ineq(aux399, aux63, 0)
reifyimply(ineq(3, actionFrom_00004, 0), aux400)
reifyimply(diseq(aux77,-1), aux401)
reifyimply(w-literal(actionTo_00004,2), aux402)
ineq(aux403, aux114, 0)
ineq(aux404, aux144, 0)
ineq(aux405, aux58, 0)
reifyimply(ineq(3, actionFrom_00005, 0), aux406)
reifyimply(diseq(aux72,-1), aux407)
reifyimply(w-literal(actionTo_00005,2), aux408)
ineq(aux409, aux113, 0)
ineq(aux410, aux138, 0)
ineq(aux411, aux57, 0)
reifyimply(ineq(3, actionFrom_00006, 0), aux412)
reifyimply(diseq(aux89,-1), aux413)
reifyimply(w-literal(actionTo_00006,2), aux414)
ineq(aux415, aux112, 0)
ineq(aux416, aux151, 0)
ineq(aux417, aux61, 0)
reifyimply(ineq(3, actionFrom_00007, 0), aux418)
reifyimply(diseq(aux82,-1), aux419)
reifyimply(w-literal(actionTo_00007,2), aux420)
ineq(aux421, aux108, 0)
ineq(aux422, aux104, 0)
ineq(aux423, aux60, 0)
reifyimply(ineq(3, actionFrom_00008, 0), aux424)
reifyimply(diseq(aux76,-1), aux425)
reifyimply(w-literal(actionTo_00008,2), aux426)
ineq(aux427, aux107, 0)
ineq(aux428, aux133, 0)
ineq(aux429, aux59, 0)
reifyimply(ineq(3, actionFrom_00009, 0), aux430)
reifyimply(diseq(aux68,-1), aux431)
reifyimply(w-literal(actionTo_00009,2), aux432)
ineq(aux433, aux109, 0)
ineq(aux434, aux150, 0)
ineq(aux435, aux54, 0)
reifyimply(ineq(3, actionFrom_00010, 0), aux436)
reifyimply(diseq(aux66,-1), aux437)
reifyimply(w-literal(actionTo_00010,2), aux438)
ineq(aux439, aux136, 0)
ineq(aux440, aux127, 0)
ineq(aux441, aux56, 0)
reifyimply(ineq(3, actionFrom_00011, 0), aux442)
reifyimply(diseq(aux87,-1), aux443)
reifyimply(w-literal(actionTo_00011,2), aux444)
ineq(aux445, aux135, 0)
ineq(aux446, aux126, 0)
ineq(aux447, aux55, 0)
reifyimply(ineq(3, actionFrom_00012, 0), aux448)
reifyimply(diseq(aux80,-1), aux449)
reifyimply(w-literal(actionTo_00012,2), aux450)
ineq(aux451, aux134, 0)
ineq(aux452, aux139, 0)
ineq(aux453, aux53, 0)
reifyimply(ineq(3, actionFrom_00013, 0), aux454)
reifyimply(diseq(aux83,-1), aux455)
reifyimply(w-literal(actionTo_00013,2), aux456)
ineq(aux457, aux131, 0)
ineq(aux458, aux152, 0)
ineq(aux459, aux52, 0)
reifyimply(ineq(3, actionFrom_00014, 0), aux460)
reifyimply(diseq(aux78,-1), aux461)
reifyimply(w-literal(actionTo_00014,2), aux462)
ineq(aux463, aux129, 0)
ineq(aux464, aux118, 0)
reifyimply(ineq(3, actionTo_00002, 0), aux465)
reifyimply(w-literal(actionFrom_00002,2), aux466)
ineq(aux467, aux117, 0)
ineq(aux468, aux111, 0)
ineq(aux469, aux62, 0)
reifyimply(ineq(3, actionTo_00003, 0), aux470)
reifyimply(w-literal(actionFrom_00003,2), aux471)
reifyimply(diseq(statePlaces_00002_00002,-1), aux472)
ineq(aux473, aux128, 0)
ineq(aux474, aux110, 0)
ineq(aux475, aux64, 0)
reifyimply(ineq(3, actionTo_00004, 0), aux476)
reifyimply(w-literal(actionFrom_00004,2), aux477)
reifyimply(diseq(statePlaces_00002_00003,-1), aux478)
ineq(aux479, aux144, 0)
ineq(aux480, aux114, 0)
ineq(aux481, aux63, 0)
reifyimply(ineq(3, actionTo_00005, 0), aux482)
reifyimply(w-literal(actionFrom_00005,2), aux483)
reifyimply(diseq(statePlaces_00002_00004,-1), aux484)
ineq(aux485, aux138, 0)
ineq(aux486, aux113, 0)
ineq(aux487, aux58, 0)
reifyimply(ineq(3, actionTo_00006, 0), aux488)
reifyimply(w-literal(actionFrom_00006,2), aux489)
reifyimply(diseq(statePlaces_00002_00005,-1), aux490)
ineq(aux491, aux151, 0)
ineq(aux492, aux112, 0)
ineq(aux493, aux57, 0)
reifyimply(ineq(3, actionTo_00007, 0), aux494)
reifyimply(w-literal(actionFrom_00007,2), aux495)
reifyimply(diseq(statePlaces_00002_00006,-1), aux496)
ineq(aux497, aux104, 0)
ineq(aux498, aux108, 0)
ineq(aux499, aux61, 0)
reifyimply(ineq(3, actionTo_00008, 0), aux500)
reifyimply(w-literal(actionFrom_00008,2), aux501)
reifyimply(diseq(statePlaces_00002_00007,-1), aux502)
ineq(aux503, aux133, 0)
ineq(aux504, aux107, 0)
ineq(aux505, aux60, 0)
reifyimply(ineq(3, actionTo_00009, 0), aux506)
reifyimply(w-literal(actionFrom_00009,2), aux507)
reifyimply(diseq(statePlaces_00002_00008,-1), aux508)
ineq(aux509, aux150, 0)
ineq(aux510, aux109, 0)
ineq(aux511, aux59, 0)
reifyimply(ineq(3, actionTo_00010, 0), aux512)
reifyimply(w-literal(actionFrom_00010,2), aux513)
reifyimply(diseq(statePlaces_00002_00009,-1), aux514)
ineq(aux515, aux127, 0)
ineq(aux516, aux136, 0)
ineq(aux517, aux54, 0)
reifyimply(ineq(3, actionTo_00011, 0), aux518)
reifyimply(w-literal(actionFrom_00011,2), aux519)
reifyimply(diseq(statePlaces_00002_00010,-1), aux520)
ineq(aux521, aux126, 0)
ineq(aux522, aux135, 0)
ineq(aux523, aux56, 0)
reifyimply(ineq(3, actionTo_00012, 0), aux524)
reifyimply(w-literal(actionFrom_00012,2), aux525)
reifyimply(diseq(statePlaces_00002_00011,-1), aux526)
ineq(aux527, aux139, 0)
ineq(aux528, aux134, 0)
ineq(aux529, aux55, 0)
reifyimply(ineq(3, actionTo_00013, 0), aux530)
reifyimply(w-literal(actionFrom_00013,2), aux531)
reifyimply(diseq(statePlaces_00002_00012,-1), aux532)
ineq(aux533, aux152, 0)
ineq(aux534, aux131, 0)
ineq(aux535, aux53, 0)
reifyimply(ineq(3, actionTo_00014, 0), aux536)
reifyimply(w-literal(actionFrom_00014,2), aux537)
reifyimply(diseq(statePlaces_00002_00013,-1), aux538)
ineq(aux539, aux118, 0)
ineq(aux540, aux129, 0)
ineq(aux541, aux52, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux542)
reifyimply(diseq(aux79,-1), aux543)
reifyimply(diseq(aux90,-1), aux544)
reifyimply(w-literal(actionTo_00002,2), aux545)
ineq(aux546, aux111, 0)
ineq(aux547, aux117, 0)
reifyimply(diseq(aux69,-1), aux548)
reifyimply(ineq(3, actionFrom_00003, 0), aux550)
reifyimply(diseq(aux73,-1), aux551)
reifyimply(diseq(aux98,-1), aux552)
reifyimply(w-literal(actionTo_00003,2), aux553)
ineq(aux554, aux110, 0)
ineq(aux555, aux128, 0)
reifyimply(diseq(aux67,-1), aux556)
reifyimply(ineq(3, actionFrom_00004, 0), aux558)
reifyimply(diseq(aux77,-1), aux559)
reifyimply(diseq(aux97,-1), aux560)
reifyimply(w-literal(actionTo_00004,2), aux561)
ineq(aux562, aux114, 0)
ineq(aux563, aux144, 0)
reifyimply(diseq(aux71,-1), aux564)
reifyimply(ineq(3, actionFrom_00005, 0), aux566)
reifyimply(diseq(aux72,-1), aux567)
reifyimply(diseq(aux102,-1), aux568)
reifyimply(w-literal(actionTo_00005,2), aux569)
ineq(aux570, aux113, 0)
ineq(aux571, aux138, 0)
reifyimply(diseq(aux103,-1), aux572)
reifyimply(ineq(3, actionFrom_00006, 0), aux574)
reifyimply(diseq(aux89,-1), aux575)
reifyimply(diseq(aux101,-1), aux576)
reifyimply(w-literal(actionTo_00006,2), aux577)
ineq(aux578, aux112, 0)
ineq(aux579, aux151, 0)
reifyimply(diseq(aux85,-1), aux580)
reifyimply(ineq(3, actionFrom_00007, 0), aux582)
reifyimply(diseq(aux82,-1), aux583)
reifyimply(diseq(aux100,-1), aux584)
reifyimply(w-literal(actionTo_00007,2), aux585)
ineq(aux586, aux108, 0)
ineq(aux587, aux104, 0)
reifyimply(diseq(aux75,-1), aux588)
reifyimply(ineq(3, actionFrom_00008, 0), aux590)
reifyimply(diseq(aux76,-1), aux591)
reifyimply(diseq(aux99,-1), aux592)
reifyimply(w-literal(actionTo_00008,2), aux593)
ineq(aux594, aux107, 0)
ineq(aux595, aux133, 0)
reifyimply(diseq(aux70,-1), aux596)
reifyimply(ineq(3, actionFrom_00009, 0), aux598)
reifyimply(diseq(aux68,-1), aux599)
reifyimply(diseq(aux95,-1), aux600)
reifyimply(w-literal(actionTo_00009,2), aux601)
ineq(aux602, aux109, 0)
ineq(aux603, aux150, 0)
reifyimply(diseq(aux88,-1), aux604)
reifyimply(ineq(3, actionFrom_00010, 0), aux606)
reifyimply(diseq(aux66,-1), aux607)
reifyimply(diseq(aux96,-1), aux608)
reifyimply(w-literal(actionTo_00010,2), aux609)
ineq(aux610, aux136, 0)
ineq(aux611, aux127, 0)
reifyimply(diseq(aux84,-1), aux612)
reifyimply(ineq(3, actionFrom_00011, 0), aux614)
reifyimply(diseq(aux87,-1), aux615)
reifyimply(diseq(aux91,-1), aux616)
reifyimply(w-literal(actionTo_00011,2), aux617)
ineq(aux618, aux135, 0)
ineq(aux619, aux126, 0)
reifyimply(diseq(aux81,-1), aux620)
reifyimply(ineq(3, actionFrom_00012, 0), aux622)
reifyimply(diseq(aux80,-1), aux623)
reifyimply(diseq(aux92,-1), aux624)
reifyimply(w-literal(actionTo_00012,2), aux625)
ineq(aux626, aux134, 0)
ineq(aux627, aux139, 0)
reifyimply(diseq(aux74,-1), aux628)
reifyimply(ineq(3, actionFrom_00013, 0), aux630)
reifyimply(diseq(aux83,-1), aux631)
reifyimply(diseq(aux93,-1), aux632)
reifyimply(w-literal(actionTo_00013,2), aux633)
ineq(aux634, aux131, 0)
ineq(aux635, aux152, 0)
reifyimply(diseq(aux65,-1), aux636)
reifyimply(ineq(3, actionFrom_00014, 0), aux638)
reifyimply(diseq(aux78,-1), aux639)
reifyimply(diseq(aux94,-1), aux640)
reifyimply(w-literal(actionTo_00014,2), aux641)
ineq(aux642, aux129, 0)
ineq(aux643, aux118, 0)
reifyimply(diseq(aux86,-1), aux644)
reifyimply(ineq(3, actionFrom_00002, 0), aux646)
reifyimply(diseq(aux79,-1), aux647)
reifyimply(diseq(aux90,-1), aux648)
reifyimply(w-literal(actionTo_00002,2), aux649)
ineq(aux651, aux111, 0)
ineq(aux652, aux117, 0)
reifyimply(ineq(3, actionFrom_00003, 0), aux653)
reifyimply(diseq(aux73,-1), aux654)
reifyimply(diseq(aux98,-1), aux655)
reifyimply(w-literal(actionTo_00003,2), aux656)
ineq(aux658, aux110, 0)
ineq(aux659, aux128, 0)
reifyimply(ineq(3, actionFrom_00004, 0), aux660)
reifyimply(diseq(aux77,-1), aux661)
reifyimply(diseq(aux97,-1), aux662)
reifyimply(w-literal(actionTo_00004,2), aux663)
ineq(aux665, aux114, 0)
ineq(aux666, aux144, 0)
reifyimply(ineq(3, actionFrom_00005, 0), aux667)
reifyimply(diseq(aux72,-1), aux668)
reifyimply(diseq(aux102,-1), aux669)
reifyimply(w-literal(actionTo_00005,2), aux670)
ineq(aux672, aux113, 0)
ineq(aux673, aux138, 0)
reifyimply(ineq(3, actionFrom_00006, 0), aux674)
reifyimply(diseq(aux89,-1), aux675)
reifyimply(diseq(aux101,-1), aux676)
reifyimply(w-literal(actionTo_00006,2), aux677)
ineq(aux679, aux112, 0)
ineq(aux680, aux151, 0)
reifyimply(ineq(3, actionFrom_00007, 0), aux681)
reifyimply(diseq(aux82,-1), aux682)
reifyimply(diseq(aux100,-1), aux683)
reifyimply(w-literal(actionTo_00007,2), aux684)
ineq(aux686, aux108, 0)
ineq(aux687, aux104, 0)
reifyimply(ineq(3, actionFrom_00008, 0), aux688)
reifyimply(diseq(aux76,-1), aux689)
reifyimply(diseq(aux99,-1), aux690)
reifyimply(w-literal(actionTo_00008,2), aux691)
ineq(aux693, aux107, 0)
ineq(aux694, aux133, 0)
reifyimply(ineq(3, actionFrom_00009, 0), aux695)
reifyimply(diseq(aux68,-1), aux696)
reifyimply(diseq(aux95,-1), aux697)
reifyimply(w-literal(actionTo_00009,2), aux698)
ineq(aux700, aux109, 0)
ineq(aux701, aux150, 0)
reifyimply(ineq(3, actionFrom_00010, 0), aux702)
reifyimply(diseq(aux66,-1), aux703)
reifyimply(diseq(aux96,-1), aux704)
reifyimply(w-literal(actionTo_00010,2), aux705)
ineq(aux707, aux136, 0)
ineq(aux708, aux127, 0)
reifyimply(ineq(3, actionFrom_00011, 0), aux709)
reifyimply(diseq(aux87,-1), aux710)
reifyimply(diseq(aux91,-1), aux711)
reifyimply(w-literal(actionTo_00011,2), aux712)
ineq(aux714, aux135, 0)
ineq(aux715, aux126, 0)
reifyimply(ineq(3, actionFrom_00012, 0), aux716)
reifyimply(diseq(aux80,-1), aux717)
reifyimply(diseq(aux92,-1), aux718)
reifyimply(w-literal(actionTo_00012,2), aux719)
ineq(aux721, aux134, 0)
ineq(aux722, aux139, 0)
reifyimply(ineq(3, actionFrom_00013, 0), aux723)
reifyimply(diseq(aux83,-1), aux724)
reifyimply(diseq(aux93,-1), aux725)
reifyimply(w-literal(actionTo_00013,2), aux726)
ineq(aux728, aux131, 0)
ineq(aux729, aux152, 0)
reifyimply(ineq(3, actionFrom_00014, 0), aux730)
reifyimply(diseq(aux78,-1), aux731)
reifyimply(diseq(aux94,-1), aux732)
reifyimply(w-literal(actionTo_00014,2), aux733)
ineq(aux735, aux129, 0)
ineq(aux736, aux118, 0)
ineq(aux737, aux62, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux738)
reifyimply(w-literal(actionTo_00002,2), aux739)
ineq(aux740, aux111, 0)
ineq(aux741, aux117, 0)
reifyimply(diseq(aux69,-1), aux742)
ineq(aux744, aux64, 0)
reifyimply(ineq(3, actionFrom_00003, 0), aux745)
reifyimply(w-literal(actionTo_00003,2), aux746)
ineq(aux747, aux110, 0)
ineq(aux748, aux128, 0)
reifyimply(diseq(aux67,-1), aux749)
ineq(aux751, aux63, 0)
reifyimply(ineq(3, actionFrom_00004, 0), aux752)
reifyimply(w-literal(actionTo_00004,2), aux753)
ineq(aux754, aux114, 0)
ineq(aux755, aux144, 0)
reifyimply(diseq(aux71,-1), aux756)
ineq(aux758, aux58, 0)
reifyimply(ineq(3, actionFrom_00005, 0), aux759)
reifyimply(w-literal(actionTo_00005,2), aux760)
ineq(aux761, aux113, 0)
ineq(aux762, aux138, 0)
reifyimply(diseq(aux103,-1), aux763)
ineq(aux765, aux57, 0)
reifyimply(ineq(3, actionFrom_00006, 0), aux766)
reifyimply(w-literal(actionTo_00006,2), aux767)
ineq(aux768, aux112, 0)
ineq(aux769, aux151, 0)
reifyimply(diseq(aux85,-1), aux770)
ineq(aux772, aux61, 0)
reifyimply(ineq(3, actionFrom_00007, 0), aux773)
reifyimply(w-literal(actionTo_00007,2), aux774)
ineq(aux775, aux108, 0)
ineq(aux776, aux104, 0)
reifyimply(diseq(aux75,-1), aux777)
ineq(aux779, aux60, 0)
reifyimply(ineq(3, actionFrom_00008, 0), aux780)
reifyimply(w-literal(actionTo_00008,2), aux781)
ineq(aux782, aux107, 0)
ineq(aux783, aux133, 0)
reifyimply(diseq(aux70,-1), aux784)
ineq(aux786, aux59, 0)
reifyimply(ineq(3, actionFrom_00009, 0), aux787)
reifyimply(w-literal(actionTo_00009,2), aux788)
ineq(aux789, aux109, 0)
ineq(aux790, aux150, 0)
reifyimply(diseq(aux88,-1), aux791)
ineq(aux793, aux54, 0)
reifyimply(ineq(3, actionFrom_00010, 0), aux794)
reifyimply(w-literal(actionTo_00010,2), aux795)
ineq(aux796, aux136, 0)
ineq(aux797, aux127, 0)
reifyimply(diseq(aux84,-1), aux798)
ineq(aux800, aux56, 0)
reifyimply(ineq(3, actionFrom_00011, 0), aux801)
reifyimply(w-literal(actionTo_00011,2), aux802)
ineq(aux803, aux135, 0)
ineq(aux804, aux126, 0)
reifyimply(diseq(aux81,-1), aux805)
ineq(aux807, aux55, 0)
reifyimply(ineq(3, actionFrom_00012, 0), aux808)
reifyimply(w-literal(actionTo_00012,2), aux809)
ineq(aux810, aux134, 0)
ineq(aux811, aux139, 0)
reifyimply(diseq(aux74,-1), aux812)
ineq(aux814, aux53, 0)
reifyimply(ineq(3, actionFrom_00013, 0), aux815)
reifyimply(w-literal(actionTo_00013,2), aux816)
ineq(aux817, aux131, 0)
ineq(aux818, aux152, 0)
reifyimply(diseq(aux65,-1), aux819)
ineq(aux821, aux52, 0)
reifyimply(ineq(3, actionFrom_00014, 0), aux822)
reifyimply(w-literal(actionTo_00014,2), aux823)
ineq(aux824, aux129, 0)
ineq(aux825, aux118, 0)
reifyimply(diseq(aux86,-1), aux826)
reifyimply(gaceq(aux79,statePlaces_00002_00002), aux828)
reifyimply(ineq(3, actionFrom_00002, 0), aux829)
reifyimply(w-literal(actionTo_00002,2), aux830)
ineq(aux832, aux117, 0)
reifyimply(diseq(aux69,-1), aux833)
reifyimply(gaceq(aux73,statePlaces_00002_00003), aux834)
reifyimply(ineq(3, actionFrom_00003, 0), aux835)
reifyimply(w-literal(actionTo_00003,2), aux836)
ineq(aux838, aux128, 0)
reifyimply(diseq(aux67,-1), aux839)
reifyimply(gaceq(aux77,statePlaces_00002_00004), aux840)
reifyimply(ineq(3, actionFrom_00004, 0), aux841)
reifyimply(w-literal(actionTo_00004,2), aux842)
ineq(aux844, aux144, 0)
reifyimply(diseq(aux71,-1), aux845)
reifyimply(gaceq(aux72,statePlaces_00002_00005), aux846)
reifyimply(ineq(3, actionFrom_00005, 0), aux847)
reifyimply(w-literal(actionTo_00005,2), aux848)
ineq(aux850, aux138, 0)
reifyimply(diseq(aux103,-1), aux851)
reifyimply(gaceq(aux89,statePlaces_00002_00006), aux852)
reifyimply(ineq(3, actionFrom_00006, 0), aux853)
reifyimply(w-literal(actionTo_00006,2), aux854)
ineq(aux856, aux151, 0)
reifyimply(diseq(aux85,-1), aux857)
reifyimply(gaceq(aux82,statePlaces_00002_00007), aux858)
reifyimply(ineq(3, actionFrom_00007, 0), aux859)
reifyimply(w-literal(actionTo_00007,2), aux860)
ineq(aux862, aux104, 0)
reifyimply(diseq(aux75,-1), aux863)
reifyimply(gaceq(aux76,statePlaces_00002_00008), aux864)
reifyimply(ineq(3, actionFrom_00008, 0), aux865)
reifyimply(w-literal(actionTo_00008,2), aux866)
ineq(aux868, aux133, 0)
reifyimply(diseq(aux70,-1), aux869)
reifyimply(gaceq(aux68,statePlaces_00002_00009), aux870)
reifyimply(ineq(3, actionFrom_00009, 0), aux871)
reifyimply(w-literal(actionTo_00009,2), aux872)
ineq(aux874, aux150, 0)
reifyimply(diseq(aux88,-1), aux875)
reifyimply(gaceq(aux66,statePlaces_00002_00010), aux876)
reifyimply(ineq(3, actionFrom_00010, 0), aux877)
reifyimply(w-literal(actionTo_00010,2), aux878)
ineq(aux880, aux127, 0)
reifyimply(diseq(aux84,-1), aux881)
reifyimply(gaceq(aux87,statePlaces_00002_00011), aux882)
reifyimply(ineq(3, actionFrom_00011, 0), aux883)
reifyimply(w-literal(actionTo_00011,2), aux884)
ineq(aux886, aux126, 0)
reifyimply(diseq(aux81,-1), aux887)
reifyimply(gaceq(aux80,statePlaces_00002_00012), aux888)
reifyimply(ineq(3, actionFrom_00012, 0), aux889)
reifyimply(w-literal(actionTo_00012,2), aux890)
ineq(aux892, aux139, 0)
reifyimply(diseq(aux74,-1), aux893)
reifyimply(gaceq(aux83,statePlaces_00002_00013), aux894)
reifyimply(ineq(3, actionFrom_00013, 0), aux895)
reifyimply(w-literal(actionTo_00013,2), aux896)
ineq(aux898, aux152, 0)
reifyimply(diseq(aux65,-1), aux899)
reifyimply(gaceq(aux78,statePlaces_00002_00014), aux900)
reifyimply(ineq(3, actionFrom_00014, 0), aux901)
reifyimply(w-literal(actionTo_00014,2), aux902)
ineq(aux904, aux118, 0)
reifyimply(diseq(aux86,-1), aux905)
sumleq([pointers_00000_00002,-1],aux213)
sumgeq([pointers_00000_00002,-1],aux213)
sumleq([pointers_00000_00003,-1],aux219)
sumgeq([pointers_00000_00003,-1],aux219)
sumleq([pointers_00000_00004,-1],aux225)
sumgeq([pointers_00000_00004,-1],aux225)
sumleq([pointers_00000_00005,-1],aux231)
sumgeq([pointers_00000_00005,-1],aux231)
sumleq([pointers_00000_00006,-1],aux237)
sumgeq([pointers_00000_00006,-1],aux237)
sumleq([pointers_00000_00007,-1],aux243)
sumgeq([pointers_00000_00007,-1],aux243)
sumleq([pointers_00000_00008,-1],aux249)
sumgeq([pointers_00000_00008,-1],aux249)
sumleq([pointers_00000_00009,-1],aux255)
sumgeq([pointers_00000_00009,-1],aux255)
sumleq([pointers_00000_00010,-1],aux261)
sumgeq([pointers_00000_00010,-1],aux261)
sumleq([pointers_00000_00011,-1],aux267)
sumgeq([pointers_00000_00011,-1],aux267)
sumleq([pointers_00000_00012,-1],aux273)
sumgeq([pointers_00000_00012,-1],aux273)
sumleq([pointers_00000_00013,-1],aux279)
sumgeq([pointers_00000_00013,-1],aux279)
sumleq([pointers_00000_00014,-1],aux285)
sumgeq([pointers_00000_00014,-1],aux285)
sumleq([pointers_00001_00002,-1],aux292)
sumgeq([pointers_00001_00002,-1],aux292)
sumleq([pointers_00001_00003,-1],aux300)
sumgeq([pointers_00001_00003,-1],aux300)
sumleq([pointers_00001_00004,-1],aux308)
sumgeq([pointers_00001_00004,-1],aux308)
sumleq([pointers_00001_00005,-1],aux316)
sumgeq([pointers_00001_00005,-1],aux316)
sumleq([pointers_00001_00006,-1],aux324)
sumgeq([pointers_00001_00006,-1],aux324)
sumleq([pointers_00001_00007,-1],aux332)
sumgeq([pointers_00001_00007,-1],aux332)
sumleq([pointers_00001_00008,-1],aux340)
sumgeq([pointers_00001_00008,-1],aux340)
sumleq([pointers_00001_00009,-1],aux348)
sumgeq([pointers_00001_00009,-1],aux348)
sumleq([pointers_00001_00010,-1],aux356)
sumgeq([pointers_00001_00010,-1],aux356)
sumleq([pointers_00001_00011,-1],aux364)
sumgeq([pointers_00001_00011,-1],aux364)
sumleq([pointers_00001_00012,-1],aux372)
sumgeq([pointers_00001_00012,-1],aux372)
sumleq([pointers_00001_00013,-1],aux380)
sumgeq([pointers_00001_00013,-1],aux380)
sumleq([actionFrom_00009,-2],aux105)
sumgeq([actionFrom_00009,-2],aux105)
sumleq([actionFrom_00012,-2],aux106)
sumgeq([actionFrom_00012,-2],aux106)
sumleq([actionFrom_00002,-2],aux115)
sumgeq([actionFrom_00002,-2],aux115)
sumleq([actionFrom_00013,-2],aux116)
sumgeq([actionFrom_00013,-2],aux116)
sumleq([actionFrom_00007,-2],aux119)
sumgeq([actionFrom_00007,-2],aux119)
sumleq([actionFrom_00010,-2],aux120)
sumgeq([actionFrom_00010,-2],aux120)
sumleq([actionTo_00014,-2],aux121)
sumgeq([actionTo_00014,-2],aux121)
sumleq([actionTo_00012,-2],aux122)
sumgeq([actionTo_00012,-2],aux122)
sumleq([actionTo_00013,-2],aux123)
sumgeq([actionTo_00013,-2],aux123)
sumleq([actionTo_00011,-2],aux124)
sumgeq([actionTo_00011,-2],aux124)
sumleq([actionTo_00010,-2],aux125)
sumgeq([actionTo_00010,-2],aux125)
sumleq([actionFrom_00008,-2],aux130)
sumgeq([actionFrom_00008,-2],aux130)
sumleq([actionFrom_00011,-2],aux132)
sumgeq([actionFrom_00011,-2],aux132)
sumleq([actionFrom_00005,-2],aux137)
sumgeq([actionFrom_00005,-2],aux137)
sumleq([actionTo_00008,-2],aux140)
sumgeq([actionTo_00008,-2],aux140)
sumleq([actionTo_00009,-2],aux141)
sumgeq([actionTo_00009,-2],aux141)
sumleq([actionTo_00007,-2],aux142)
sumgeq([actionTo_00007,-2],aux142)
sumleq([actionTo_00006,-2],aux143)
sumgeq([actionTo_00006,-2],aux143)
sumleq([actionTo_00005,-2],aux145)
sumgeq([actionTo_00005,-2],aux145)
sumleq([actionTo_00004,-2],aux146)
sumgeq([actionTo_00004,-2],aux146)
sumleq([actionTo_00003,-2],aux147)
sumgeq([actionTo_00003,-2],aux147)
sumleq([actionTo_00002,-2],aux148)
sumgeq([actionTo_00002,-2],aux148)
sumleq([actionFrom_00006,-2],aux149)
sumgeq([actionFrom_00006,-2],aux149)
sumleq([actionFrom_00003,-2],aux153)
sumgeq([actionFrom_00003,-2],aux153)
sumleq([actionFrom_00014,-2],aux154)
sumgeq([actionFrom_00014,-2],aux154)
sumleq([actionFrom_00004,-2],aux155)
sumgeq([actionFrom_00004,-2],aux155)
reifyimply(sumleq([pointers_00000_00002,1],pointers_00000_00003), aux214)
reifyimply(sumgeq([pointers_00000_00002,1],pointers_00000_00003), aux214)
reifyimply(sumleq([pointers_00000_00003,1],pointers_00000_00004), aux220)
reifyimply(sumgeq([pointers_00000_00003,1],pointers_00000_00004), aux220)
reifyimply(sumleq([pointers_00000_00004,1],pointers_00000_00005), aux226)
reifyimply(sumgeq([pointers_00000_00004,1],pointers_00000_00005), aux226)
reifyimply(sumleq([pointers_00000_00005,1],pointers_00000_00006), aux232)
reifyimply(sumgeq([pointers_00000_00005,1],pointers_00000_00006), aux232)
reifyimply(sumleq([pointers_00000_00006,1],pointers_00000_00007), aux238)
reifyimply(sumgeq([pointers_00000_00006,1],pointers_00000_00007), aux238)
reifyimply(sumleq([pointers_00000_00007,1],pointers_00000_00008), aux244)
reifyimply(sumgeq([pointers_00000_00007,1],pointers_00000_00008), aux244)
reifyimply(sumleq([pointers_00000_00008,1],pointers_00000_00009), aux250)
reifyimply(sumgeq([pointers_00000_00008,1],pointers_00000_00009), aux250)
reifyimply(sumleq([pointers_00000_00009,1],pointers_00000_00010), aux256)
reifyimply(sumgeq([pointers_00000_00009,1],pointers_00000_00010), aux256)
reifyimply(sumleq([pointers_00000_00010,1],pointers_00000_00011), aux262)
reifyimply(sumgeq([pointers_00000_00010,1],pointers_00000_00011), aux262)
reifyimply(sumleq([pointers_00000_00011,1],pointers_00000_00012), aux268)
reifyimply(sumgeq([pointers_00000_00011,1],pointers_00000_00012), aux268)
reifyimply(sumleq([pointers_00000_00012,1],pointers_00000_00013), aux274)
reifyimply(sumgeq([pointers_00000_00012,1],pointers_00000_00013), aux274)
reifyimply(sumleq([pointers_00000_00013,1],pointers_00000_00014), aux280)
reifyimply(sumgeq([pointers_00000_00013,1],pointers_00000_00014), aux280)
reifyimply(sumleq([pointers_00001_00002,1],pointers_00001_00003), aux295)
reifyimply(sumgeq([pointers_00001_00002,1],pointers_00001_00003), aux295)
reifyimply(sumleq([pointers_00001_00003,1],pointers_00001_00004), aux303)
reifyimply(sumgeq([pointers_00001_00003,1],pointers_00001_00004), aux303)
reifyimply(sumleq([pointers_00001_00004,1],pointers_00001_00005), aux311)
reifyimply(sumgeq([pointers_00001_00004,1],pointers_00001_00005), aux311)
reifyimply(sumleq([pointers_00001_00005,1],pointers_00001_00006), aux319)
reifyimply(sumgeq([pointers_00001_00005,1],pointers_00001_00006), aux319)
reifyimply(sumleq([pointers_00001_00006,1],pointers_00001_00007), aux327)
reifyimply(sumgeq([pointers_00001_00006,1],pointers_00001_00007), aux327)
reifyimply(sumleq([pointers_00001_00007,1],pointers_00001_00008), aux335)
reifyimply(sumgeq([pointers_00001_00007,1],pointers_00001_00008), aux335)
reifyimply(sumleq([pointers_00001_00008,1],pointers_00001_00009), aux343)
reifyimply(sumgeq([pointers_00001_00008,1],pointers_00001_00009), aux343)
reifyimply(sumleq([pointers_00001_00009,1],pointers_00001_00010), aux351)
reifyimply(sumgeq([pointers_00001_00009,1],pointers_00001_00010), aux351)
reifyimply(sumleq([pointers_00001_00010,1],pointers_00001_00011), aux359)
reifyimply(sumgeq([pointers_00001_00010,1],pointers_00001_00011), aux359)
reifyimply(sumleq([pointers_00001_00011,1],pointers_00001_00012), aux367)
reifyimply(sumgeq([pointers_00001_00011,1],pointers_00001_00012), aux367)
reifyimply(sumleq([pointers_00001_00012,1],pointers_00001_00013), aux375)
reifyimply(sumgeq([pointers_00001_00012,1],pointers_00001_00013), aux375)
reifyimply(sumleq([4,aux79],statePlaces_00002_00002), aux549)
reifyimply(sumgeq([4,aux79],statePlaces_00002_00002), aux549)
reifyimply(sumleq([statePlaces_00002_00002,aux73],statePlaces_00002_00003), aux557)
reifyimply(sumgeq([statePlaces_00002_00002,aux73],statePlaces_00002_00003), aux557)
reifyimply(sumleq([statePlaces_00002_00003,aux77],statePlaces_00002_00004), aux565)
reifyimply(sumgeq([statePlaces_00002_00003,aux77],statePlaces_00002_00004), aux565)
reifyimply(sumleq([statePlaces_00002_00004,aux72],statePlaces_00002_00005), aux573)
reifyimply(sumgeq([statePlaces_00002_00004,aux72],statePlaces_00002_00005), aux573)
reifyimply(sumleq([statePlaces_00002_00005,aux89],statePlaces_00002_00006), aux581)
reifyimply(sumgeq([statePlaces_00002_00005,aux89],statePlaces_00002_00006), aux581)
reifyimply(sumleq([statePlaces_00002_00006,aux82],statePlaces_00002_00007), aux589)
reifyimply(sumgeq([statePlaces_00002_00006,aux82],statePlaces_00002_00007), aux589)
reifyimply(sumleq([statePlaces_00002_00007,aux76],statePlaces_00002_00008), aux597)
reifyimply(sumgeq([statePlaces_00002_00007,aux76],statePlaces_00002_00008), aux597)
reifyimply(sumleq([statePlaces_00002_00008,aux68],statePlaces_00002_00009), aux605)
reifyimply(sumgeq([statePlaces_00002_00008,aux68],statePlaces_00002_00009), aux605)
reifyimply(sumleq([statePlaces_00002_00009,aux66],statePlaces_00002_00010), aux613)
reifyimply(sumgeq([statePlaces_00002_00009,aux66],statePlaces_00002_00010), aux613)
reifyimply(sumleq([statePlaces_00002_00010,aux87],statePlaces_00002_00011), aux621)
reifyimply(sumgeq([statePlaces_00002_00010,aux87],statePlaces_00002_00011), aux621)
reifyimply(sumleq([statePlaces_00002_00011,aux80],statePlaces_00002_00012), aux629)
reifyimply(sumgeq([statePlaces_00002_00011,aux80],statePlaces_00002_00012), aux629)
reifyimply(sumleq([statePlaces_00002_00012,aux83],statePlaces_00002_00013), aux637)
reifyimply(sumgeq([statePlaces_00002_00012,aux83],statePlaces_00002_00013), aux637)
reifyimply(sumleq([statePlaces_00002_00013,aux78],statePlaces_00002_00014), aux645)
reifyimply(sumgeq([statePlaces_00002_00013,aux78],statePlaces_00002_00014), aux645)
reifyimply(weightedsumleq([1,-1],[4,aux79],statePlaces_00002_00002), aux650)
reifyimply(weightedsumgeq([1,-1],[4,aux79],statePlaces_00002_00002), aux650)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00002,aux73],statePlaces_00002_00003), aux657)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00002,aux73],statePlaces_00002_00003), aux657)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00003,aux77],statePlaces_00002_00004), aux664)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00003,aux77],statePlaces_00002_00004), aux664)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00004,aux72],statePlaces_00002_00005), aux671)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00004,aux72],statePlaces_00002_00005), aux671)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00005,aux89],statePlaces_00002_00006), aux678)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00005,aux89],statePlaces_00002_00006), aux678)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00006,aux82],statePlaces_00002_00007), aux685)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00006,aux82],statePlaces_00002_00007), aux685)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00007,aux76],statePlaces_00002_00008), aux692)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00007,aux76],statePlaces_00002_00008), aux692)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00008,aux68],statePlaces_00002_00009), aux699)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00008,aux68],statePlaces_00002_00009), aux699)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00009,aux66],statePlaces_00002_00010), aux706)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00009,aux66],statePlaces_00002_00010), aux706)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00010,aux87],statePlaces_00002_00011), aux713)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00010,aux87],statePlaces_00002_00011), aux713)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00011,aux80],statePlaces_00002_00012), aux720)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00011,aux80],statePlaces_00002_00012), aux720)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00012,aux83],statePlaces_00002_00013), aux727)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00012,aux83],statePlaces_00002_00013), aux727)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00013,aux78],statePlaces_00002_00014), aux734)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00013,aux78],statePlaces_00002_00014), aux734)
reifyimply(sumleq([1,aux69],aux79), aux743)
reifyimply(sumgeq([1,aux69],aux79), aux743)
reifyimply(sumleq([1,aux67],aux73), aux750)
reifyimply(sumgeq([1,aux67],aux73), aux750)
reifyimply(sumleq([1,aux71],aux77), aux757)
reifyimply(sumgeq([1,aux71],aux77), aux757)
reifyimply(sumleq([aux103,1],aux72), aux764)
reifyimply(sumgeq([aux103,1],aux72), aux764)
reifyimply(sumleq([1,aux85],aux89), aux771)
reifyimply(sumgeq([1,aux85],aux89), aux771)
reifyimply(sumleq([1,aux75],aux82), aux778)
reifyimply(sumgeq([1,aux75],aux82), aux778)
reifyimply(sumleq([1,aux70],aux76), aux785)
reifyimply(sumgeq([1,aux70],aux76), aux785)
reifyimply(sumleq([1,aux88],aux68), aux792)
reifyimply(sumgeq([1,aux88],aux68), aux792)
reifyimply(sumleq([1,aux84],aux66), aux799)
reifyimply(sumgeq([1,aux84],aux66), aux799)
reifyimply(sumleq([1,aux81],aux87), aux806)
reifyimply(sumgeq([1,aux81],aux87), aux806)
reifyimply(sumleq([1,aux74],aux80), aux813)
reifyimply(sumgeq([1,aux74],aux80), aux813)
reifyimply(sumleq([1,aux65],aux83), aux820)
reifyimply(sumgeq([1,aux65],aux83), aux820)
reifyimply(sumleq([1,aux86],aux78), aux827)
reifyimply(sumgeq([1,aux86],aux78), aux827)
reifyimply(sumleq([-1,aux69],aux79), aux831)
reifyimply(sumgeq([-1,aux69],aux79), aux831)
reifyimply(sumleq([-1,aux67],aux73), aux837)
reifyimply(sumgeq([-1,aux67],aux73), aux837)
reifyimply(sumleq([-1,aux71],aux77), aux843)
reifyimply(sumgeq([-1,aux71],aux77), aux843)
reifyimply(sumleq([aux103,-1],aux72), aux849)
reifyimply(sumgeq([aux103,-1],aux72), aux849)
reifyimply(sumleq([-1,aux85],aux89), aux855)
reifyimply(sumgeq([-1,aux85],aux89), aux855)
reifyimply(sumleq([-1,aux75],aux82), aux861)
reifyimply(sumgeq([-1,aux75],aux82), aux861)
reifyimply(sumleq([-1,aux70],aux76), aux867)
reifyimply(sumgeq([-1,aux70],aux76), aux867)
reifyimply(sumleq([-1,aux88],aux68), aux873)
reifyimply(sumgeq([-1,aux88],aux68), aux873)
reifyimply(sumleq([-1,aux84],aux66), aux879)
reifyimply(sumgeq([-1,aux84],aux66), aux879)
reifyimply(sumleq([-1,aux81],aux87), aux885)
reifyimply(sumgeq([-1,aux81],aux87), aux885)
reifyimply(sumleq([-1,aux74],aux80), aux891)
reifyimply(sumgeq([-1,aux74],aux80), aux891)
reifyimply(sumleq([-1,aux65],aux83), aux897)
reifyimply(sumgeq([-1,aux65],aux83), aux897)
reifyimply(sumleq([-1,aux86],aux78), aux903)
reifyimply(sumgeq([-1,aux86],aux78), aux903)
**EOF**
