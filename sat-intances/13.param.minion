MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 118
# CSE_active_eliminated_expressions = 452
# CSE_active_total_size = 834
**VARIABLES**
DISCRETE statePlaces_00002_00002 #
{-1..100}
DISCRETE statePlaces_00002_00003 #
{-1..100}
DISCRETE statePlaces_00002_00004 #
{-1..100}
DISCRETE statePlaces_00002_00005 #
{-1..100}
DISCRETE statePlaces_00002_00006 #
{-1..100}
DISCRETE statePlaces_00002_00007 #
{-1..100}
DISCRETE statePlaces_00002_00008 #
{-1..100}
DISCRETE statePlaces_00002_00009 #
{-1..100}
DISCRETE statePlaces_00002_00010 #
{-1..100}
DISCRETE statePlaces_00002_00011 #
{-1..100}
DISCRETE statePlaces_00002_00012 #
{-1..100}
DISCRETE statePlaces_00003_00002 #
{-1..100}
DISCRETE statePlaces_00003_00003 #
{-1..100}
DISCRETE statePlaces_00003_00004 #
{-1..100}
DISCRETE statePlaces_00003_00005 #
{-1..100}
DISCRETE statePlaces_00003_00006 #
{-1..100}
DISCRETE statePlaces_00003_00007 #
{-1..100}
DISCRETE statePlaces_00003_00008 #
{-1..100}
DISCRETE statePlaces_00003_00009 #
{-1..100}
DISCRETE statePlaces_00003_00010 #
{-1..100}
DISCRETE statePlaces_00003_00011 #
{-1..100}
DISCRETE statePlaces_00003_00012 #
{-1..100}
DISCRETE statePlaces_00003_00013 #
{-1..100}
DISCRETE actionTypes_00002 #
{1..8}
DISCRETE actionTypes_00003 #
{1..8}
DISCRETE actionTypes_00004 #
{1..8}
DISCRETE actionTypes_00005 #
{1..8}
DISCRETE actionTypes_00006 #
{1..8}
DISCRETE actionTypes_00007 #
{1..8}
DISCRETE actionTypes_00008 #
{1..8}
DISCRETE actionTypes_00009 #
{1..8}
DISCRETE actionTypes_00010 #
{1..8}
DISCRETE actionTypes_00011 #
{1..8}
DISCRETE actionTypes_00012 #
{1..8}
DISCRETE actionTypes_00013 #
{2..8}
DISCRETE actionFrom_00002 #
{0..3}
DISCRETE actionFrom_00003 #
{0..3}
DISCRETE actionFrom_00004 #
{0..3}
DISCRETE actionFrom_00005 #
{0..3}
DISCRETE actionFrom_00006 #
{0..3}
DISCRETE actionFrom_00007 #
{0..3}
DISCRETE actionFrom_00008 #
{0..3}
DISCRETE actionFrom_00009 #
{0..3}
DISCRETE actionFrom_00010 #
{0..3}
DISCRETE actionFrom_00011 #
{0..3}
DISCRETE actionFrom_00012 #
{0..3}
DISCRETE actionFrom_00013 #
{0..3}
DISCRETE actionTo_00002 #
{0..3}
DISCRETE actionTo_00003 #
{0..3}
DISCRETE actionTo_00004 #
{0..3}
DISCRETE actionTo_00005 #
{0..3}
DISCRETE actionTo_00006 #
{0..3}
DISCRETE actionTo_00007 #
{0..3}
DISCRETE actionTo_00008 #
{0..3}
DISCRETE actionTo_00009 #
{0..3}
DISCRETE actionTo_00010 #
{0..3}
DISCRETE actionTo_00011 #
{0..3}
DISCRETE actionTo_00012 #
{0..3}
DISCRETE actionTo_00013 #
{0..3}
DISCRETE pointers_00000_00002 #
{0..6}
DISCRETE pointers_00000_00003 #
{0..6}
DISCRETE pointers_00000_00004 #
{0..6}
DISCRETE pointers_00000_00005 #
{0..6}
DISCRETE pointers_00000_00006 #
{0..6}
DISCRETE pointers_00000_00007 #
{0..6}
DISCRETE pointers_00000_00008 #
{0..6}
DISCRETE pointers_00000_00009 #
{0..6}
DISCRETE pointers_00000_00010 #
{0..6}
DISCRETE pointers_00000_00011 #
{0..6}
DISCRETE pointers_00000_00012 #
{0..6}
DISCRETE pointers_00001_00002 #
{0..6}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00002, [0,2,4,6])
**VARIABLES**
DISCRETE pointers_00001_00003 #
{0..6}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00003, [0,2,4,6])
**VARIABLES**
DISCRETE pointers_00001_00004 #
{0..6}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00004, [0,2,4,6])
**VARIABLES**
DISCRETE pointers_00001_00005 #
{0..6}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00005, [0,2,4,6])
**VARIABLES**
DISCRETE pointers_00001_00006 #
{0..6}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00006, [0,2,4,6])
**VARIABLES**
DISCRETE pointers_00001_00007 #
{0..6}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00007, [0,2,4,6])
**VARIABLES**
DISCRETE pointers_00001_00008 #
{0..6}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00008, [0,2,4,6])
**VARIABLES**
DISCRETE pointers_00001_00009 #
{0..6}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00009, [0,2,4,6])
**VARIABLES**
DISCRETE pointers_00001_00010 #
{0..6}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00010, [0,2,4,6])
**VARIABLES**
DISCRETE pointers_00001_00011 #
{0..6}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00011, [0,2,4,6])
**VARIABLES**
DISCRETE pointers_00001_00012 #
{0..6}
**CONSTRAINTS**
w-inintervalset(pointers_00001_00012, [0,2,4,6])
**VARIABLES**
BOOL aux59 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([90, statePlaces_00003_00013], (actionFrom_00013 + -2))=SafeElement([90, statePlaces_00003_00013], (actionTo_00013 + -2)))
BOOL aux60 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionTo_00010 + -2))=SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionFrom_00010 + -2)))
BOOL aux61 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionTo_00012 + -2))=SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionFrom_00012 + -2)))
BOOL aux62 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionTo_00011 + -2))=SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionFrom_00011 + -2)))
BOOL aux63 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionTo_00006 + -2))=SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionFrom_00006 + -2)))
BOOL aux64 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionTo_00005 + -2))=SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionFrom_00005 + -2)))
BOOL aux65 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionTo_00009 + -2))=SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionFrom_00009 + -2)))
BOOL aux66 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionTo_00008 + -2))=SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionFrom_00008 + -2)))
BOOL aux67 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionTo_00007 + -2))=SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionFrom_00007 + -2)))
BOOL aux68 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionTo_00002 + -2))=SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionFrom_00002 + -2)))
BOOL aux69 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionTo_00004 + -2))=SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionFrom_00004 + -2)))
BOOL aux70 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionTo_00003 + -2))=SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionFrom_00003 + -2)))
BOOL aux71 #Active-CSE: 2 occurrences of this expression or equivalent: ([90, statePlaces_00003_00013;int(2..3)] <lex [statePlaces_00002_00004, statePlaces_00003_00004;int(2..3)])
BOOL aux72 #Active-CSE: 2 occurrences of this expression or equivalent: ([90, statePlaces_00003_00013;int(2..3)] <lex [statePlaces_00002_00005, statePlaces_00003_00005;int(2..3)])
BOOL aux73 #Active-CSE: 2 occurrences of this expression or equivalent: ([90, statePlaces_00003_00013;int(2..3)] <lex [statePlaces_00002_00002, statePlaces_00003_00002;int(2..3)])
BOOL aux74 #Active-CSE: 2 occurrences of this expression or equivalent: ([90, statePlaces_00003_00013;int(2..3)] <lex [statePlaces_00002_00003, statePlaces_00003_00003;int(2..3)])
BOOL aux75 #Active-CSE: 2 occurrences of this expression or equivalent: ([90, statePlaces_00003_00013;int(2..3)] <lex [statePlaces_00002_00008, statePlaces_00003_00008;int(2..3)])
BOOL aux76 #Active-CSE: 2 occurrences of this expression or equivalent: ([90, statePlaces_00003_00013;int(2..3)] <lex [statePlaces_00002_00009, statePlaces_00003_00009;int(2..3)])
BOOL aux77 #Active-CSE: 2 occurrences of this expression or equivalent: ([90, statePlaces_00003_00013;int(2..3)] <lex [statePlaces_00002_00006, statePlaces_00003_00006;int(2..3)])
BOOL aux78 #Active-CSE: 2 occurrences of this expression or equivalent: ([90, statePlaces_00003_00013;int(2..3)] <lex [statePlaces_00002_00007, statePlaces_00003_00007;int(2..3)])
BOOL aux79 #Active-CSE: 2 occurrences of this expression or equivalent: ([90, statePlaces_00003_00013;int(2..3)] <lex [statePlaces_00002_00012, statePlaces_00003_00012;int(2..3)])
BOOL aux80 #Active-CSE: 2 occurrences of this expression or equivalent: ([90, statePlaces_00003_00013;int(2..3)] <lex [statePlaces_00002_00011, statePlaces_00003_00011;int(2..3)])
BOOL aux81 #Active-CSE: 2 occurrences of this expression or equivalent: ([90, statePlaces_00003_00013;int(2..3)] <lex [statePlaces_00002_00010, statePlaces_00003_00010;int(2..3)])
BOOL aux82 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00010, statePlaces_00003_00010;int(2..3)] <lex [90, statePlaces_00003_00013;int(2..3)])
BOOL aux83 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00011, statePlaces_00003_00011;int(2..3)] <lex [90, statePlaces_00003_00013;int(2..3)])
BOOL aux84 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00012, statePlaces_00003_00012;int(2..3)] <lex [90, statePlaces_00003_00013;int(2..3)])
BOOL aux85 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00009, statePlaces_00003_00009;int(2..3)] <lex [90, statePlaces_00003_00013;int(2..3)])
BOOL aux86 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00008, statePlaces_00003_00008;int(2..3)] <lex [90, statePlaces_00003_00013;int(2..3)])
BOOL aux87 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00007, statePlaces_00003_00007;int(2..3)] <lex [90, statePlaces_00003_00013;int(2..3)])
BOOL aux88 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00006, statePlaces_00003_00006;int(2..3)] <lex [90, statePlaces_00003_00013;int(2..3)])
BOOL aux89 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00005, statePlaces_00003_00005;int(2..3)] <lex [90, statePlaces_00003_00013;int(2..3)])
BOOL aux90 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00004, statePlaces_00003_00004;int(2..3)] <lex [90, statePlaces_00003_00013;int(2..3)])
BOOL aux91 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00003, statePlaces_00003_00003;int(2..3)] <lex [90, statePlaces_00003_00013;int(2..3)])
BOOL aux92 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00002, statePlaces_00003_00002;int(2..3)] <lex [90, statePlaces_00003_00013;int(2..3)])
DISCRETE aux93 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionFrom_00013 + -2))
{-1..100}
DISCRETE aux94 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionFrom_00010 + -2))
{-1..100}
DISCRETE aux95 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([90, statePlaces_00003_00013], (actionFrom_00013 + -2))
{-1..100}
DISCRETE aux96 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionFrom_00003 + -2))
{-1..100}
DISCRETE aux97 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionFrom_00009 + -2))
{-1..100}
DISCRETE aux98 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([3, -1], (actionFrom_00002 + -2))
{-1..3}
**CONSTRAINTS**
w-inintervalset(aux98, [-1,0,3,3])
**VARIABLES**
DISCRETE aux99 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionFrom_00008 + -2))
{-1..100}
DISCRETE aux100 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionFrom_00004 + -2))
{-1..100}
DISCRETE aux101 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionFrom_00005 + -2))
{-1..100}
DISCRETE aux102 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionFrom_00003 + -2))
{-1..100}
DISCRETE aux103 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionFrom_00012 + -2))
{-1..100}
DISCRETE aux104 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionFrom_00007 + -2))
{-1..100}
DISCRETE aux105 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionFrom_00008 + -2))
{-1..100}
DISCRETE aux106 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionFrom_00004 + -2))
{-1..100}
DISCRETE aux107 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionFrom_00002 + -2))
{-1..100}
DISCRETE aux108 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionFrom_00012 + -2))
{-1..100}
DISCRETE aux109 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionFrom_00011 + -2))
{-1..100}
DISCRETE aux110 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionFrom_00007 + -2))
{-1..100}
DISCRETE aux111 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionFrom_00010 + -2))
{-1..100}
DISCRETE aux112 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionFrom_00006 + -2))
{-1..100}
DISCRETE aux113 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionFrom_00011 + -2))
{-1..100}
DISCRETE aux114 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionFrom_00009 + -2))
{-1..100}
DISCRETE aux115 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionFrom_00006 + -2))
{-1..100}
DISCRETE aux116 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([3, -1], (actionTo_00002 + -2))
{-1..3}
**CONSTRAINTS**
w-inintervalset(aux116, [-1,0,3,3])
**VARIABLES**
DISCRETE aux117 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionTo_00011 + -2))
{-1..100}
DISCRETE aux118 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionTo_00012 + -2))
{-1..100}
DISCRETE aux119 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionTo_00013 + -2))
{-1..100}
DISCRETE aux120 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionTo_00009 + -2))
{-1..100}
DISCRETE aux121 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionTo_00010 + -2))
{-1..100}
DISCRETE aux122 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionTo_00004 + -2))
{-1..100}
DISCRETE aux123 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionTo_00003 + -2))
{-1..100}
DISCRETE aux124 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionTo_00008 + -2))
{-1..100}
DISCRETE aux125 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionTo_00007 + -2))
{-1..100}
DISCRETE aux126 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionTo_00006 + -2))
{-1..100}
DISCRETE aux127 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionTo_00005 + -2))
{-1..100}
DISCRETE aux128 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionFrom_00005 + -2))
{-1..100}
BOOL aux129 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00007 in int(2..3))
DISCRETE aux130 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00009 + -2)
{-2..1}
DISCRETE aux131 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00012 + -2)
{-2..1}
BOOL aux132 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00008 in int(2..3))
BOOL aux133 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00007 in int(2..3))
BOOL aux134 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00009 in int(2..3))
BOOL aux135 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00003 in int(2..3))
BOOL aux136 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00002 in int(2..3))
BOOL aux137 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00006 in int(2..3))
BOOL aux138 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00005 in int(2..3))
BOOL aux139 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00004 in int(2..3))
DISCRETE aux140 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00002 + -2)
{-2..1}
DISCRETE aux141 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00013 + -2)
{-2..1}
BOOL aux142 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00002 in int(2..3))
DISCRETE aux143 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00007 + -2)
{-2..1}
DISCRETE aux144 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00010 + -2)
{-2..1}
DISCRETE aux145 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00012 + -2)
{-2..1}
DISCRETE aux146 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00013 + -2)
{-2..1}
DISCRETE aux147 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00011 + -2)
{-2..1}
DISCRETE aux148 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00010 + -2)
{-2..1}
BOOL aux149 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00011 in int(2..3))
BOOL aux150 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00010 in int(2..3))
BOOL aux151 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00003 in int(2..3))
DISCRETE aux152 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00008 + -2)
{-2..1}
BOOL aux153 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00013 in int(2..3))
DISCRETE aux154 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00011 + -2)
{-2..1}
BOOL aux155 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00008 in int(2..3))
BOOL aux156 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00012 in int(2..3))
BOOL aux157 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00011 in int(2..3))
BOOL aux158 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00010 in int(2..3))
DISCRETE aux159 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00005 + -2)
{-2..1}
BOOL aux160 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00005 in int(2..3))
BOOL aux161 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00012 in int(2..3))
DISCRETE aux162 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00008 + -2)
{-2..1}
DISCRETE aux163 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00009 + -2)
{-2..1}
DISCRETE aux164 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00007 + -2)
{-2..1}
DISCRETE aux165 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00006 + -2)
{-2..1}
BOOL aux166 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00004 in int(2..3))
DISCRETE aux167 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00005 + -2)
{-2..1}
DISCRETE aux168 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00004 + -2)
{-2..1}
DISCRETE aux169 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00003 + -2)
{-2..1}
DISCRETE aux170 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00002 + -2)
{-2..1}
DISCRETE aux171 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00006 + -2)
{-2..1}
BOOL aux172 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00009 in int(2..3))
BOOL aux173 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00006 in int(2..3))
BOOL aux174 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00013 in int(2..3))
DISCRETE aux175 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00003 + -2)
{-2..1}
DISCRETE aux176 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00004 + -2)
{-2..1}
BOOL aux177 #(1 != actionTypes_00002)
BOOL aux178 #(1 != actionTypes_00003)
BOOL aux179 #(1 != actionTypes_00004)
BOOL aux180 #(1 != actionTypes_00005)
BOOL aux181 #(1 != actionTypes_00006)
BOOL aux182 #(1 != actionTypes_00007)
BOOL aux183 #(1 != actionTypes_00008)
BOOL aux184 #(1 != actionTypes_00009)
BOOL aux185 #(1 != actionTypes_00010)
BOOL aux186 #(1 != actionTypes_00011)
BOOL aux187 #(1 != actionTypes_00012)
BOOL aux188 #(2 != actionTypes_00002)
BOOL aux189 #(2 != actionTypes_00003)
BOOL aux190 #(2 != actionTypes_00004)
BOOL aux191 #(2 != actionTypes_00005)
BOOL aux192 #(2 != actionTypes_00006)
BOOL aux193 #(2 != actionTypes_00007)
BOOL aux194 #(2 != actionTypes_00008)
BOOL aux195 #(2 != actionTypes_00009)
BOOL aux196 #(2 != actionTypes_00010)
BOOL aux197 #(2 != actionTypes_00011)
BOOL aux198 #(2 != actionTypes_00012)
BOOL aux199 #(2 != actionTypes_00013)
BOOL aux200 #(((7=actionTypes_00002) /\ (actionFrom_00002 != 3)) \/ ((8=actionTypes_00002) /\ (actionFrom_00002 != 3)) \/ (1=actionTypes_00002) \/ (2=actionTypes_00002) \/ (3=actionTypes_00002) \/ (5=actionTypes_00002) \/ (6=actionTypes_00002) \/ ((4=actionTypes_00002) /\ (actionTo_00002 != 3)))
BOOL aux201 #(((7=actionTypes_00003) /\ (actionFrom_00003 != 3)) \/ ((8=actionTypes_00003) /\ (actionFrom_00003 != 3)) \/ (1=actionTypes_00003) \/ (2=actionTypes_00003) \/ (3=actionTypes_00003) \/ (5=actionTypes_00003) \/ (6=actionTypes_00003) \/ ((4=actionTypes_00003) /\ (actionTo_00003 != 3)))
BOOL aux202 #(((7=actionTypes_00004) /\ (actionFrom_00004 != 3)) \/ ((8=actionTypes_00004) /\ (actionFrom_00004 != 3)) \/ (1=actionTypes_00004) \/ (2=actionTypes_00004) \/ (3=actionTypes_00004) \/ (5=actionTypes_00004) \/ (6=actionTypes_00004) \/ ((4=actionTypes_00004) /\ (actionTo_00004 != 3)))
BOOL aux203 #(((7=actionTypes_00005) /\ (actionFrom_00005 != 3)) \/ ((8=actionTypes_00005) /\ (actionFrom_00005 != 3)) \/ (1=actionTypes_00005) \/ (2=actionTypes_00005) \/ (3=actionTypes_00005) \/ (5=actionTypes_00005) \/ (6=actionTypes_00005) \/ ((4=actionTypes_00005) /\ (actionTo_00005 != 3)))
BOOL aux204 #(((7=actionTypes_00006) /\ (actionFrom_00006 != 3)) \/ ((8=actionTypes_00006) /\ (actionFrom_00006 != 3)) \/ (1=actionTypes_00006) \/ (2=actionTypes_00006) \/ (3=actionTypes_00006) \/ (5=actionTypes_00006) \/ (6=actionTypes_00006) \/ ((4=actionTypes_00006) /\ (actionTo_00006 != 3)))
BOOL aux205 #(((7=actionTypes_00007) /\ (actionFrom_00007 != 3)) \/ ((8=actionTypes_00007) /\ (actionFrom_00007 != 3)) \/ (1=actionTypes_00007) \/ (2=actionTypes_00007) \/ (3=actionTypes_00007) \/ (5=actionTypes_00007) \/ (6=actionTypes_00007) \/ ((4=actionTypes_00007) /\ (actionTo_00007 != 3)))
BOOL aux206 #(((7=actionTypes_00008) /\ (actionFrom_00008 != 3)) \/ ((8=actionTypes_00008) /\ (actionFrom_00008 != 3)) \/ (1=actionTypes_00008) \/ (2=actionTypes_00008) \/ (3=actionTypes_00008) \/ (5=actionTypes_00008) \/ (6=actionTypes_00008) \/ ((4=actionTypes_00008) /\ (actionTo_00008 != 3)))
BOOL aux207 #(((7=actionTypes_00009) /\ (actionFrom_00009 != 3)) \/ ((8=actionTypes_00009) /\ (actionFrom_00009 != 3)) \/ (1=actionTypes_00009) \/ (2=actionTypes_00009) \/ (3=actionTypes_00009) \/ (5=actionTypes_00009) \/ (6=actionTypes_00009) \/ ((4=actionTypes_00009) /\ (actionTo_00009 != 3)))
BOOL aux208 #(((7=actionTypes_00010) /\ (actionFrom_00010 != 3)) \/ ((8=actionTypes_00010) /\ (actionFrom_00010 != 3)) \/ (1=actionTypes_00010) \/ (2=actionTypes_00010) \/ (3=actionTypes_00010) \/ (5=actionTypes_00010) \/ (6=actionTypes_00010) \/ ((4=actionTypes_00010) /\ (actionTo_00010 != 3)))
BOOL aux209 #(((7=actionTypes_00011) /\ (actionFrom_00011 != 3)) \/ ((8=actionTypes_00011) /\ (actionFrom_00011 != 3)) \/ (1=actionTypes_00011) \/ (2=actionTypes_00011) \/ (3=actionTypes_00011) \/ (5=actionTypes_00011) \/ (6=actionTypes_00011) \/ ((4=actionTypes_00011) /\ (actionTo_00011 != 3)))
BOOL aux210 #(((7=actionTypes_00012) /\ (actionFrom_00012 != 3)) \/ ((8=actionTypes_00012) /\ (actionFrom_00012 != 3)) \/ (1=actionTypes_00012) \/ (2=actionTypes_00012) \/ (3=actionTypes_00012) \/ (5=actionTypes_00012) \/ (6=actionTypes_00012) \/ ((4=actionTypes_00012) /\ (actionTo_00012 != 3)))
BOOL aux211 #(((7=actionTypes_00013) /\ (actionFrom_00013 != 3)) \/ ((8=actionTypes_00013) /\ (actionFrom_00013 != 3)) \/ (2=actionTypes_00013) \/ (3=actionTypes_00013) \/ (5=actionTypes_00013) \/ (6=actionTypes_00013) \/ ((4=actionTypes_00013) /\ (actionTo_00013 != 3)))
BOOL aux212 #((2=actionTypes_00002) \/ (4=actionTypes_00002))
BOOL aux213 #((2=actionTypes_00003) \/ (4=actionTypes_00003))
BOOL aux214 #((2=actionTypes_00004) \/ (4=actionTypes_00004))
BOOL aux215 #((2=actionTypes_00005) \/ (4=actionTypes_00005))
BOOL aux216 #((2=actionTypes_00006) \/ (4=actionTypes_00006))
BOOL aux217 #((2=actionTypes_00007) \/ (4=actionTypes_00007))
BOOL aux218 #((2=actionTypes_00008) \/ (4=actionTypes_00008))
BOOL aux219 #((2=actionTypes_00009) \/ (4=actionTypes_00009))
BOOL aux220 #((2=actionTypes_00010) \/ (4=actionTypes_00010))
BOOL aux221 #((2=actionTypes_00011) \/ (4=actionTypes_00011))
BOOL aux222 #((2=actionTypes_00012) \/ (4=actionTypes_00012))
BOOL aux223 #((2=actionTypes_00013) \/ (4=actionTypes_00013))
BOOL aux224 #(1=actionTypes_00002)
BOOL aux225 #(1=actionTypes_00002)
BOOL aux226 #(1=actionTypes_00002)
BOOL aux227 #(1=actionTypes_00002)
BOOL aux228 #(1=actionTypes_00002)
DISCRETE aux229 #(pointers_00000_00002 + -1)
{-1..5}
BOOL aux230 #(1=actionTypes_00003)
BOOL aux231 #(1=actionTypes_00003)
BOOL aux232 #(1=actionTypes_00003)
BOOL aux233 #(1=actionTypes_00003)
BOOL aux234 #(1=actionTypes_00003)
DISCRETE aux235 #(pointers_00000_00003 + -1)
{-1..5}
BOOL aux236 #(1=actionTypes_00004)
BOOL aux237 #(1=actionTypes_00004)
BOOL aux238 #(1=actionTypes_00004)
BOOL aux239 #(1=actionTypes_00004)
BOOL aux240 #(1=actionTypes_00004)
DISCRETE aux241 #(pointers_00000_00004 + -1)
{-1..5}
BOOL aux242 #(1=actionTypes_00005)
BOOL aux243 #(1=actionTypes_00005)
BOOL aux244 #(1=actionTypes_00005)
BOOL aux245 #(1=actionTypes_00005)
BOOL aux246 #(1=actionTypes_00005)
DISCRETE aux247 #(pointers_00000_00005 + -1)
{-1..5}
BOOL aux248 #(1=actionTypes_00006)
BOOL aux249 #(1=actionTypes_00006)
BOOL aux250 #(1=actionTypes_00006)
BOOL aux251 #(1=actionTypes_00006)
BOOL aux252 #(1=actionTypes_00006)
DISCRETE aux253 #(pointers_00000_00006 + -1)
{-1..5}
BOOL aux254 #(1=actionTypes_00007)
BOOL aux255 #(1=actionTypes_00007)
BOOL aux256 #(1=actionTypes_00007)
BOOL aux257 #(1=actionTypes_00007)
BOOL aux258 #(1=actionTypes_00007)
DISCRETE aux259 #(pointers_00000_00007 + -1)
{-1..5}
BOOL aux260 #(1=actionTypes_00008)
BOOL aux261 #(1=actionTypes_00008)
BOOL aux262 #(1=actionTypes_00008)
BOOL aux263 #(1=actionTypes_00008)
BOOL aux264 #(1=actionTypes_00008)
DISCRETE aux265 #(pointers_00000_00008 + -1)
{-1..5}
BOOL aux266 #(1=actionTypes_00009)
BOOL aux267 #(1=actionTypes_00009)
BOOL aux268 #(1=actionTypes_00009)
BOOL aux269 #(1=actionTypes_00009)
BOOL aux270 #(1=actionTypes_00009)
DISCRETE aux271 #(pointers_00000_00009 + -1)
{-1..5}
BOOL aux272 #(1=actionTypes_00010)
BOOL aux273 #(1=actionTypes_00010)
BOOL aux274 #(1=actionTypes_00010)
BOOL aux275 #(1=actionTypes_00010)
BOOL aux276 #(1=actionTypes_00010)
DISCRETE aux277 #(pointers_00000_00010 + -1)
{-1..5}
BOOL aux278 #(1=actionTypes_00011)
BOOL aux279 #(1=actionTypes_00011)
BOOL aux280 #(1=actionTypes_00011)
BOOL aux281 #(1=actionTypes_00011)
BOOL aux282 #(1=actionTypes_00011)
DISCRETE aux283 #(pointers_00000_00011 + -1)
{-1..5}
BOOL aux284 #(1=actionTypes_00012)
BOOL aux285 #(1=actionTypes_00012)
BOOL aux286 #(1=actionTypes_00012)
BOOL aux287 #(1=actionTypes_00012)
BOOL aux288 #(1=actionTypes_00012)
DISCRETE aux289 #(pointers_00000_00012 + -1)
{-1..5}
BOOL aux290 #(2=actionTypes_00002)
BOOL aux291 #(2=actionTypes_00002)
BOOL aux292 #(2=actionTypes_00002)
BOOL aux293 #(2=actionTypes_00002)
BOOL aux294 #(2=actionTypes_00002)
BOOL aux295 #(2=actionTypes_00002)
BOOL aux296 #(2=actionTypes_00002)
DISCRETE aux297 #(pointers_00001_00002 + -1)
{-1..5}
**CONSTRAINTS**
w-inintervalset(aux297, [-1,1,3,5])
**VARIABLES**
BOOL aux298 #(2=actionTypes_00003)
BOOL aux299 #(2=actionTypes_00003)
BOOL aux300 #(2=actionTypes_00003)
BOOL aux301 #(2=actionTypes_00003)
BOOL aux302 #(2=actionTypes_00003)
BOOL aux303 #(2=actionTypes_00003)
BOOL aux304 #(2=actionTypes_00003)
BOOL aux305 #(2=actionTypes_00003)
DISCRETE aux306 #(pointers_00001_00003 + -1)
{-1..5}
**CONSTRAINTS**
w-inintervalset(aux306, [-1,1,3,5])
**VARIABLES**
BOOL aux307 #(2=actionTypes_00004)
BOOL aux308 #(2=actionTypes_00004)
BOOL aux309 #(2=actionTypes_00004)
BOOL aux310 #(2=actionTypes_00004)
BOOL aux311 #(2=actionTypes_00004)
BOOL aux312 #(2=actionTypes_00004)
BOOL aux313 #(2=actionTypes_00004)
BOOL aux314 #(2=actionTypes_00004)
DISCRETE aux315 #(pointers_00001_00004 + -1)
{-1..5}
**CONSTRAINTS**
w-inintervalset(aux315, [-1,1,3,5])
**VARIABLES**
BOOL aux316 #(2=actionTypes_00005)
BOOL aux317 #(2=actionTypes_00005)
BOOL aux318 #(2=actionTypes_00005)
BOOL aux319 #(2=actionTypes_00005)
BOOL aux320 #(2=actionTypes_00005)
BOOL aux321 #(2=actionTypes_00005)
BOOL aux322 #(2=actionTypes_00005)
BOOL aux323 #(2=actionTypes_00005)
DISCRETE aux324 #(pointers_00001_00005 + -1)
{-1..5}
**CONSTRAINTS**
w-inintervalset(aux324, [-1,1,3,5])
**VARIABLES**
BOOL aux325 #(2=actionTypes_00006)
BOOL aux326 #(2=actionTypes_00006)
BOOL aux327 #(2=actionTypes_00006)
BOOL aux328 #(2=actionTypes_00006)
BOOL aux329 #(2=actionTypes_00006)
BOOL aux330 #(2=actionTypes_00006)
BOOL aux331 #(2=actionTypes_00006)
BOOL aux332 #(2=actionTypes_00006)
DISCRETE aux333 #(pointers_00001_00006 + -1)
{-1..5}
**CONSTRAINTS**
w-inintervalset(aux333, [-1,1,3,5])
**VARIABLES**
BOOL aux334 #(2=actionTypes_00007)
BOOL aux335 #(2=actionTypes_00007)
BOOL aux336 #(2=actionTypes_00007)
BOOL aux337 #(2=actionTypes_00007)
BOOL aux338 #(2=actionTypes_00007)
BOOL aux339 #(2=actionTypes_00007)
BOOL aux340 #(2=actionTypes_00007)
BOOL aux341 #(2=actionTypes_00007)
DISCRETE aux342 #(pointers_00001_00007 + -1)
{-1..5}
**CONSTRAINTS**
w-inintervalset(aux342, [-1,1,3,5])
**VARIABLES**
BOOL aux343 #(2=actionTypes_00008)
BOOL aux344 #(2=actionTypes_00008)
BOOL aux345 #(2=actionTypes_00008)
BOOL aux346 #(2=actionTypes_00008)
BOOL aux347 #(2=actionTypes_00008)
BOOL aux348 #(2=actionTypes_00008)
BOOL aux349 #(2=actionTypes_00008)
BOOL aux350 #(2=actionTypes_00008)
DISCRETE aux351 #(pointers_00001_00008 + -1)
{-1..5}
**CONSTRAINTS**
w-inintervalset(aux351, [-1,1,3,5])
**VARIABLES**
BOOL aux352 #(2=actionTypes_00009)
BOOL aux353 #(2=actionTypes_00009)
BOOL aux354 #(2=actionTypes_00009)
BOOL aux355 #(2=actionTypes_00009)
BOOL aux356 #(2=actionTypes_00009)
BOOL aux357 #(2=actionTypes_00009)
BOOL aux358 #(2=actionTypes_00009)
BOOL aux359 #(2=actionTypes_00009)
DISCRETE aux360 #(pointers_00001_00009 + -1)
{-1..5}
**CONSTRAINTS**
w-inintervalset(aux360, [-1,1,3,5])
**VARIABLES**
BOOL aux361 #(2=actionTypes_00010)
BOOL aux362 #(2=actionTypes_00010)
BOOL aux363 #(2=actionTypes_00010)
BOOL aux364 #(2=actionTypes_00010)
BOOL aux365 #(2=actionTypes_00010)
BOOL aux366 #(2=actionTypes_00010)
BOOL aux367 #(2=actionTypes_00010)
BOOL aux368 #(2=actionTypes_00010)
DISCRETE aux369 #(pointers_00001_00010 + -1)
{-1..5}
**CONSTRAINTS**
w-inintervalset(aux369, [-1,1,3,5])
**VARIABLES**
BOOL aux370 #(2=actionTypes_00011)
BOOL aux371 #(2=actionTypes_00011)
BOOL aux372 #(2=actionTypes_00011)
BOOL aux373 #(2=actionTypes_00011)
BOOL aux374 #(2=actionTypes_00011)
BOOL aux375 #(2=actionTypes_00011)
BOOL aux376 #(2=actionTypes_00011)
BOOL aux377 #(2=actionTypes_00011)
DISCRETE aux378 #(pointers_00001_00011 + -1)
{-1..5}
**CONSTRAINTS**
w-inintervalset(aux378, [-1,1,3,5])
**VARIABLES**
BOOL aux379 #(2=actionTypes_00012)
BOOL aux380 #(2=actionTypes_00012)
BOOL aux381 #(2=actionTypes_00012)
BOOL aux382 #(2=actionTypes_00012)
BOOL aux383 #(2=actionTypes_00012)
BOOL aux384 #(2=actionTypes_00012)
BOOL aux385 #(2=actionTypes_00012)
BOOL aux386 #(2=actionTypes_00012)
DISCRETE aux387 #(pointers_00001_00012 + -1)
{-1..5}
**CONSTRAINTS**
w-inintervalset(aux387, [-1,1,3,5])
**VARIABLES**
BOOL aux388 #(2=actionTypes_00013)
BOOL aux389 #(2=actionTypes_00013)
BOOL aux390 #(2=actionTypes_00013)
BOOL aux391 #(2=actionTypes_00013)
BOOL aux392 #(2=actionTypes_00013)
BOOL aux393 #(3=actionTypes_00002)
BOOL aux394 #(3=actionTypes_00002)
BOOL aux395 #(3=actionTypes_00002)
BOOL aux396 #(3=actionTypes_00002)
BOOL aux397 #(3=actionTypes_00002)
BOOL aux398 #(3=actionTypes_00002)
BOOL aux399 #(3=actionTypes_00003)
BOOL aux400 #(3=actionTypes_00003)
BOOL aux401 #(3=actionTypes_00003)
BOOL aux402 #(3=actionTypes_00003)
BOOL aux403 #(3=actionTypes_00003)
BOOL aux404 #(3=actionTypes_00003)
BOOL aux405 #(3=actionTypes_00004)
BOOL aux406 #(3=actionTypes_00004)
BOOL aux407 #(3=actionTypes_00004)
BOOL aux408 #(3=actionTypes_00004)
BOOL aux409 #(3=actionTypes_00004)
BOOL aux410 #(3=actionTypes_00004)
BOOL aux411 #(3=actionTypes_00005)
BOOL aux412 #(3=actionTypes_00005)
BOOL aux413 #(3=actionTypes_00005)
BOOL aux414 #(3=actionTypes_00005)
BOOL aux415 #(3=actionTypes_00005)
BOOL aux416 #(3=actionTypes_00005)
BOOL aux417 #(3=actionTypes_00006)
BOOL aux418 #(3=actionTypes_00006)
BOOL aux419 #(3=actionTypes_00006)
BOOL aux420 #(3=actionTypes_00006)
BOOL aux421 #(3=actionTypes_00006)
BOOL aux422 #(3=actionTypes_00006)
BOOL aux423 #(3=actionTypes_00007)
BOOL aux424 #(3=actionTypes_00007)
BOOL aux425 #(3=actionTypes_00007)
BOOL aux426 #(3=actionTypes_00007)
BOOL aux427 #(3=actionTypes_00007)
BOOL aux428 #(3=actionTypes_00007)
BOOL aux429 #(3=actionTypes_00008)
BOOL aux430 #(3=actionTypes_00008)
BOOL aux431 #(3=actionTypes_00008)
BOOL aux432 #(3=actionTypes_00008)
BOOL aux433 #(3=actionTypes_00008)
BOOL aux434 #(3=actionTypes_00008)
BOOL aux435 #(3=actionTypes_00009)
BOOL aux436 #(3=actionTypes_00009)
BOOL aux437 #(3=actionTypes_00009)
BOOL aux438 #(3=actionTypes_00009)
BOOL aux439 #(3=actionTypes_00009)
BOOL aux440 #(3=actionTypes_00009)
BOOL aux441 #(3=actionTypes_00010)
BOOL aux442 #(3=actionTypes_00010)
BOOL aux443 #(3=actionTypes_00010)
BOOL aux444 #(3=actionTypes_00010)
BOOL aux445 #(3=actionTypes_00010)
BOOL aux446 #(3=actionTypes_00010)
BOOL aux447 #(3=actionTypes_00011)
BOOL aux448 #(3=actionTypes_00011)
BOOL aux449 #(3=actionTypes_00011)
BOOL aux450 #(3=actionTypes_00011)
BOOL aux451 #(3=actionTypes_00011)
BOOL aux452 #(3=actionTypes_00011)
BOOL aux453 #(3=actionTypes_00012)
BOOL aux454 #(3=actionTypes_00012)
BOOL aux455 #(3=actionTypes_00012)
BOOL aux456 #(3=actionTypes_00012)
BOOL aux457 #(3=actionTypes_00012)
BOOL aux458 #(3=actionTypes_00012)
BOOL aux459 #(3=actionTypes_00013)
BOOL aux460 #(3=actionTypes_00013)
BOOL aux461 #(3=actionTypes_00013)
BOOL aux462 #(3=actionTypes_00013)
BOOL aux463 #(3=actionTypes_00013)
BOOL aux464 #(3=actionTypes_00013)
BOOL aux465 #(4=actionTypes_00002)
BOOL aux466 #(4=actionTypes_00002)
BOOL aux467 #(4=actionTypes_00002)
BOOL aux468 #(4=actionTypes_00002)
BOOL aux469 #(4=actionTypes_00002)
BOOL aux470 #(4=actionTypes_00003)
BOOL aux471 #(4=actionTypes_00003)
BOOL aux472 #(4=actionTypes_00003)
BOOL aux473 #(4=actionTypes_00003)
BOOL aux474 #(4=actionTypes_00003)
BOOL aux475 #(4=actionTypes_00003)
BOOL aux476 #(4=actionTypes_00004)
BOOL aux477 #(4=actionTypes_00004)
BOOL aux478 #(4=actionTypes_00004)
BOOL aux479 #(4=actionTypes_00004)
BOOL aux480 #(4=actionTypes_00004)
BOOL aux481 #(4=actionTypes_00004)
BOOL aux482 #(4=actionTypes_00005)
BOOL aux483 #(4=actionTypes_00005)
BOOL aux484 #(4=actionTypes_00005)
BOOL aux485 #(4=actionTypes_00005)
BOOL aux486 #(4=actionTypes_00005)
BOOL aux487 #(4=actionTypes_00005)
BOOL aux488 #(4=actionTypes_00006)
BOOL aux489 #(4=actionTypes_00006)
BOOL aux490 #(4=actionTypes_00006)
BOOL aux491 #(4=actionTypes_00006)
BOOL aux492 #(4=actionTypes_00006)
BOOL aux493 #(4=actionTypes_00006)
BOOL aux494 #(4=actionTypes_00007)
BOOL aux495 #(4=actionTypes_00007)
BOOL aux496 #(4=actionTypes_00007)
BOOL aux497 #(4=actionTypes_00007)
BOOL aux498 #(4=actionTypes_00007)
BOOL aux499 #(4=actionTypes_00007)
BOOL aux500 #(4=actionTypes_00008)
BOOL aux501 #(4=actionTypes_00008)
BOOL aux502 #(4=actionTypes_00008)
BOOL aux503 #(4=actionTypes_00008)
BOOL aux504 #(4=actionTypes_00008)
BOOL aux505 #(4=actionTypes_00008)
BOOL aux506 #(4=actionTypes_00009)
BOOL aux507 #(4=actionTypes_00009)
BOOL aux508 #(4=actionTypes_00009)
BOOL aux509 #(4=actionTypes_00009)
BOOL aux510 #(4=actionTypes_00009)
BOOL aux511 #(4=actionTypes_00009)
BOOL aux512 #(4=actionTypes_00010)
BOOL aux513 #(4=actionTypes_00010)
BOOL aux514 #(4=actionTypes_00010)
BOOL aux515 #(4=actionTypes_00010)
BOOL aux516 #(4=actionTypes_00010)
BOOL aux517 #(4=actionTypes_00010)
BOOL aux518 #(4=actionTypes_00011)
BOOL aux519 #(4=actionTypes_00011)
BOOL aux520 #(4=actionTypes_00011)
BOOL aux521 #(4=actionTypes_00011)
BOOL aux522 #(4=actionTypes_00011)
BOOL aux523 #(4=actionTypes_00011)
BOOL aux524 #(4=actionTypes_00012)
BOOL aux525 #(4=actionTypes_00012)
BOOL aux526 #(4=actionTypes_00012)
BOOL aux527 #(4=actionTypes_00012)
BOOL aux528 #(4=actionTypes_00012)
BOOL aux529 #(4=actionTypes_00012)
BOOL aux530 #(4=actionTypes_00013)
BOOL aux531 #(4=actionTypes_00013)
BOOL aux532 #(4=actionTypes_00013)
BOOL aux533 #(4=actionTypes_00013)
BOOL aux534 #(4=actionTypes_00013)
BOOL aux535 #(4=actionTypes_00013)
BOOL aux536 #(5=actionTypes_00002)
BOOL aux537 #(5=actionTypes_00002)
BOOL aux538 #(5=actionTypes_00002)
BOOL aux539 #(5=actionTypes_00002)
BOOL aux540 #(5=actionTypes_00002)
BOOL aux541 #(5=actionTypes_00002)
BOOL aux542 #(5=actionTypes_00002)
BOOL aux543 #(5=actionTypes_00002)
BOOL aux544 #(5=actionTypes_00003)
BOOL aux545 #(5=actionTypes_00003)
BOOL aux546 #(5=actionTypes_00003)
BOOL aux547 #(5=actionTypes_00003)
BOOL aux548 #(5=actionTypes_00003)
BOOL aux549 #(5=actionTypes_00003)
BOOL aux550 #(5=actionTypes_00003)
BOOL aux551 #(5=actionTypes_00003)
BOOL aux552 #(5=actionTypes_00004)
BOOL aux553 #(5=actionTypes_00004)
BOOL aux554 #(5=actionTypes_00004)
BOOL aux555 #(5=actionTypes_00004)
BOOL aux556 #(5=actionTypes_00004)
BOOL aux557 #(5=actionTypes_00004)
BOOL aux558 #(5=actionTypes_00004)
BOOL aux559 #(5=actionTypes_00004)
BOOL aux560 #(5=actionTypes_00005)
BOOL aux561 #(5=actionTypes_00005)
BOOL aux562 #(5=actionTypes_00005)
BOOL aux563 #(5=actionTypes_00005)
BOOL aux564 #(5=actionTypes_00005)
BOOL aux565 #(5=actionTypes_00005)
BOOL aux566 #(5=actionTypes_00005)
BOOL aux567 #(5=actionTypes_00005)
BOOL aux568 #(5=actionTypes_00006)
BOOL aux569 #(5=actionTypes_00006)
BOOL aux570 #(5=actionTypes_00006)
BOOL aux571 #(5=actionTypes_00006)
BOOL aux572 #(5=actionTypes_00006)
BOOL aux573 #(5=actionTypes_00006)
BOOL aux574 #(5=actionTypes_00006)
BOOL aux575 #(5=actionTypes_00006)
BOOL aux576 #(5=actionTypes_00007)
BOOL aux577 #(5=actionTypes_00007)
BOOL aux578 #(5=actionTypes_00007)
BOOL aux579 #(5=actionTypes_00007)
BOOL aux580 #(5=actionTypes_00007)
BOOL aux581 #(5=actionTypes_00007)
BOOL aux582 #(5=actionTypes_00007)
BOOL aux583 #(5=actionTypes_00007)
BOOL aux584 #(5=actionTypes_00008)
BOOL aux585 #(5=actionTypes_00008)
BOOL aux586 #(5=actionTypes_00008)
BOOL aux587 #(5=actionTypes_00008)
BOOL aux588 #(5=actionTypes_00008)
BOOL aux589 #(5=actionTypes_00008)
BOOL aux590 #(5=actionTypes_00008)
BOOL aux591 #(5=actionTypes_00008)
BOOL aux592 #(5=actionTypes_00009)
BOOL aux593 #(5=actionTypes_00009)
BOOL aux594 #(5=actionTypes_00009)
BOOL aux595 #(5=actionTypes_00009)
BOOL aux596 #(5=actionTypes_00009)
BOOL aux597 #(5=actionTypes_00009)
BOOL aux598 #(5=actionTypes_00009)
BOOL aux599 #(5=actionTypes_00009)
BOOL aux600 #(5=actionTypes_00010)
BOOL aux601 #(5=actionTypes_00010)
BOOL aux602 #(5=actionTypes_00010)
BOOL aux603 #(5=actionTypes_00010)
BOOL aux604 #(5=actionTypes_00010)
BOOL aux605 #(5=actionTypes_00010)
BOOL aux606 #(5=actionTypes_00010)
BOOL aux607 #(5=actionTypes_00010)
BOOL aux608 #(5=actionTypes_00011)
BOOL aux609 #(5=actionTypes_00011)
BOOL aux610 #(5=actionTypes_00011)
BOOL aux611 #(5=actionTypes_00011)
BOOL aux612 #(5=actionTypes_00011)
BOOL aux613 #(5=actionTypes_00011)
BOOL aux614 #(5=actionTypes_00011)
BOOL aux615 #(5=actionTypes_00011)
BOOL aux616 #(5=actionTypes_00012)
BOOL aux617 #(5=actionTypes_00012)
BOOL aux618 #(5=actionTypes_00012)
BOOL aux619 #(5=actionTypes_00012)
BOOL aux620 #(5=actionTypes_00012)
BOOL aux621 #(5=actionTypes_00012)
BOOL aux622 #(5=actionTypes_00012)
BOOL aux623 #(5=actionTypes_00012)
BOOL aux624 #(5=actionTypes_00013)
BOOL aux625 #(5=actionTypes_00013)
BOOL aux626 #(5=actionTypes_00013)
BOOL aux627 #(5=actionTypes_00013)
BOOL aux628 #(5=actionTypes_00013)
BOOL aux629 #(5=actionTypes_00013)
BOOL aux630 #(5=actionTypes_00013)
BOOL aux631 #(5=actionTypes_00013)
BOOL aux632 #(6=actionTypes_00002)
BOOL aux633 #(6=actionTypes_00002)
BOOL aux634 #(6=actionTypes_00002)
BOOL aux635 #(6=actionTypes_00002)
BOOL aux636 #(6=actionTypes_00002)
BOOL aux637 #(6=actionTypes_00002)
BOOL aux638 #(6=actionTypes_00002)
BOOL aux639 #(6=actionTypes_00003)
BOOL aux640 #(6=actionTypes_00003)
BOOL aux641 #(6=actionTypes_00003)
BOOL aux642 #(6=actionTypes_00003)
BOOL aux643 #(6=actionTypes_00003)
BOOL aux644 #(6=actionTypes_00003)
BOOL aux645 #(6=actionTypes_00003)
BOOL aux646 #(6=actionTypes_00004)
BOOL aux647 #(6=actionTypes_00004)
BOOL aux648 #(6=actionTypes_00004)
BOOL aux649 #(6=actionTypes_00004)
BOOL aux650 #(6=actionTypes_00004)
BOOL aux651 #(6=actionTypes_00004)
BOOL aux652 #(6=actionTypes_00004)
BOOL aux653 #(6=actionTypes_00005)
BOOL aux654 #(6=actionTypes_00005)
BOOL aux655 #(6=actionTypes_00005)
BOOL aux656 #(6=actionTypes_00005)
BOOL aux657 #(6=actionTypes_00005)
BOOL aux658 #(6=actionTypes_00005)
BOOL aux659 #(6=actionTypes_00005)
BOOL aux660 #(6=actionTypes_00006)
BOOL aux661 #(6=actionTypes_00006)
BOOL aux662 #(6=actionTypes_00006)
BOOL aux663 #(6=actionTypes_00006)
BOOL aux664 #(6=actionTypes_00006)
BOOL aux665 #(6=actionTypes_00006)
BOOL aux666 #(6=actionTypes_00006)
BOOL aux667 #(6=actionTypes_00007)
BOOL aux668 #(6=actionTypes_00007)
BOOL aux669 #(6=actionTypes_00007)
BOOL aux670 #(6=actionTypes_00007)
BOOL aux671 #(6=actionTypes_00007)
BOOL aux672 #(6=actionTypes_00007)
BOOL aux673 #(6=actionTypes_00007)
BOOL aux674 #(6=actionTypes_00008)
BOOL aux675 #(6=actionTypes_00008)
BOOL aux676 #(6=actionTypes_00008)
BOOL aux677 #(6=actionTypes_00008)
BOOL aux678 #(6=actionTypes_00008)
BOOL aux679 #(6=actionTypes_00008)
BOOL aux680 #(6=actionTypes_00008)
BOOL aux681 #(6=actionTypes_00009)
BOOL aux682 #(6=actionTypes_00009)
BOOL aux683 #(6=actionTypes_00009)
BOOL aux684 #(6=actionTypes_00009)
BOOL aux685 #(6=actionTypes_00009)
BOOL aux686 #(6=actionTypes_00009)
BOOL aux687 #(6=actionTypes_00009)
BOOL aux688 #(6=actionTypes_00010)
BOOL aux689 #(6=actionTypes_00010)
BOOL aux690 #(6=actionTypes_00010)
BOOL aux691 #(6=actionTypes_00010)
BOOL aux692 #(6=actionTypes_00010)
BOOL aux693 #(6=actionTypes_00010)
BOOL aux694 #(6=actionTypes_00010)
BOOL aux695 #(6=actionTypes_00011)
BOOL aux696 #(6=actionTypes_00011)
BOOL aux697 #(6=actionTypes_00011)
BOOL aux698 #(6=actionTypes_00011)
BOOL aux699 #(6=actionTypes_00011)
BOOL aux700 #(6=actionTypes_00011)
BOOL aux701 #(6=actionTypes_00011)
BOOL aux702 #(6=actionTypes_00012)
BOOL aux703 #(6=actionTypes_00012)
BOOL aux704 #(6=actionTypes_00012)
BOOL aux705 #(6=actionTypes_00012)
BOOL aux706 #(6=actionTypes_00012)
BOOL aux707 #(6=actionTypes_00012)
BOOL aux708 #(6=actionTypes_00012)
BOOL aux709 #(6=actionTypes_00013)
BOOL aux710 #(6=actionTypes_00013)
BOOL aux711 #(6=actionTypes_00013)
BOOL aux712 #(6=actionTypes_00013)
BOOL aux713 #(6=actionTypes_00013)
BOOL aux714 #(6=actionTypes_00013)
BOOL aux715 #(6=actionTypes_00013)
BOOL aux716 #(7=actionTypes_00002)
BOOL aux717 #(7=actionTypes_00002)
BOOL aux718 #(7=actionTypes_00002)
BOOL aux719 #(7=actionTypes_00002)
BOOL aux720 #(7=actionTypes_00002)
BOOL aux721 #(7=actionTypes_00002)
BOOL aux722 #(7=actionTypes_00002)
BOOL aux723 #(7=actionTypes_00003)
BOOL aux724 #(7=actionTypes_00003)
BOOL aux725 #(7=actionTypes_00003)
BOOL aux726 #(7=actionTypes_00003)
BOOL aux727 #(7=actionTypes_00003)
BOOL aux728 #(7=actionTypes_00003)
BOOL aux729 #(7=actionTypes_00003)
BOOL aux730 #(7=actionTypes_00004)
BOOL aux731 #(7=actionTypes_00004)
BOOL aux732 #(7=actionTypes_00004)
BOOL aux733 #(7=actionTypes_00004)
BOOL aux734 #(7=actionTypes_00004)
BOOL aux735 #(7=actionTypes_00004)
BOOL aux736 #(7=actionTypes_00004)
BOOL aux737 #(7=actionTypes_00005)
BOOL aux738 #(7=actionTypes_00005)
BOOL aux739 #(7=actionTypes_00005)
BOOL aux740 #(7=actionTypes_00005)
BOOL aux741 #(7=actionTypes_00005)
BOOL aux742 #(7=actionTypes_00005)
BOOL aux743 #(7=actionTypes_00005)
BOOL aux744 #(7=actionTypes_00006)
BOOL aux745 #(7=actionTypes_00006)
BOOL aux746 #(7=actionTypes_00006)
BOOL aux747 #(7=actionTypes_00006)
BOOL aux748 #(7=actionTypes_00006)
BOOL aux749 #(7=actionTypes_00006)
BOOL aux750 #(7=actionTypes_00006)
BOOL aux751 #(7=actionTypes_00007)
BOOL aux752 #(7=actionTypes_00007)
BOOL aux753 #(7=actionTypes_00007)
BOOL aux754 #(7=actionTypes_00007)
BOOL aux755 #(7=actionTypes_00007)
BOOL aux756 #(7=actionTypes_00007)
BOOL aux757 #(7=actionTypes_00007)
BOOL aux758 #(7=actionTypes_00008)
BOOL aux759 #(7=actionTypes_00008)
BOOL aux760 #(7=actionTypes_00008)
BOOL aux761 #(7=actionTypes_00008)
BOOL aux762 #(7=actionTypes_00008)
BOOL aux763 #(7=actionTypes_00008)
BOOL aux764 #(7=actionTypes_00008)
BOOL aux765 #(7=actionTypes_00009)
BOOL aux766 #(7=actionTypes_00009)
BOOL aux767 #(7=actionTypes_00009)
BOOL aux768 #(7=actionTypes_00009)
BOOL aux769 #(7=actionTypes_00009)
BOOL aux770 #(7=actionTypes_00009)
BOOL aux771 #(7=actionTypes_00009)
BOOL aux772 #(7=actionTypes_00010)
BOOL aux773 #(7=actionTypes_00010)
BOOL aux774 #(7=actionTypes_00010)
BOOL aux775 #(7=actionTypes_00010)
BOOL aux776 #(7=actionTypes_00010)
BOOL aux777 #(7=actionTypes_00010)
BOOL aux778 #(7=actionTypes_00010)
BOOL aux779 #(7=actionTypes_00011)
BOOL aux780 #(7=actionTypes_00011)
BOOL aux781 #(7=actionTypes_00011)
BOOL aux782 #(7=actionTypes_00011)
BOOL aux783 #(7=actionTypes_00011)
BOOL aux784 #(7=actionTypes_00011)
BOOL aux785 #(7=actionTypes_00011)
BOOL aux786 #(7=actionTypes_00012)
BOOL aux787 #(7=actionTypes_00012)
BOOL aux788 #(7=actionTypes_00012)
BOOL aux789 #(7=actionTypes_00012)
BOOL aux790 #(7=actionTypes_00012)
BOOL aux791 #(7=actionTypes_00012)
BOOL aux792 #(7=actionTypes_00012)
BOOL aux793 #(7=actionTypes_00013)
BOOL aux794 #(7=actionTypes_00013)
BOOL aux795 #(7=actionTypes_00013)
BOOL aux796 #(7=actionTypes_00013)
BOOL aux797 #(7=actionTypes_00013)
BOOL aux798 #(7=actionTypes_00013)
BOOL aux799 #(7=actionTypes_00013)
BOOL aux800 #(8=actionTypes_00002)
BOOL aux801 #(8=actionTypes_00002)
BOOL aux802 #(8=actionTypes_00002)
BOOL aux803 #(8=actionTypes_00002)
BOOL aux804 #(8=actionTypes_00002)
BOOL aux805 #(8=actionTypes_00002)
BOOL aux806 #(8=actionTypes_00003)
BOOL aux807 #(8=actionTypes_00003)
BOOL aux808 #(8=actionTypes_00003)
BOOL aux809 #(8=actionTypes_00003)
BOOL aux810 #(8=actionTypes_00003)
BOOL aux811 #(8=actionTypes_00003)
BOOL aux812 #(8=actionTypes_00004)
BOOL aux813 #(8=actionTypes_00004)
BOOL aux814 #(8=actionTypes_00004)
BOOL aux815 #(8=actionTypes_00004)
BOOL aux816 #(8=actionTypes_00004)
BOOL aux817 #(8=actionTypes_00004)
BOOL aux818 #(8=actionTypes_00005)
BOOL aux819 #(8=actionTypes_00005)
BOOL aux820 #(8=actionTypes_00005)
BOOL aux821 #(8=actionTypes_00005)
BOOL aux822 #(8=actionTypes_00005)
BOOL aux823 #(8=actionTypes_00005)
BOOL aux824 #(8=actionTypes_00006)
BOOL aux825 #(8=actionTypes_00006)
BOOL aux826 #(8=actionTypes_00006)
BOOL aux827 #(8=actionTypes_00006)
BOOL aux828 #(8=actionTypes_00006)
BOOL aux829 #(8=actionTypes_00006)
BOOL aux830 #(8=actionTypes_00007)
BOOL aux831 #(8=actionTypes_00007)
BOOL aux832 #(8=actionTypes_00007)
BOOL aux833 #(8=actionTypes_00007)
BOOL aux834 #(8=actionTypes_00007)
BOOL aux835 #(8=actionTypes_00007)
BOOL aux836 #(8=actionTypes_00008)
BOOL aux837 #(8=actionTypes_00008)
BOOL aux838 #(8=actionTypes_00008)
BOOL aux839 #(8=actionTypes_00008)
BOOL aux840 #(8=actionTypes_00008)
BOOL aux841 #(8=actionTypes_00008)
BOOL aux842 #(8=actionTypes_00009)
BOOL aux843 #(8=actionTypes_00009)
BOOL aux844 #(8=actionTypes_00009)
BOOL aux845 #(8=actionTypes_00009)
BOOL aux846 #(8=actionTypes_00009)
BOOL aux847 #(8=actionTypes_00009)
BOOL aux848 #(8=actionTypes_00010)
BOOL aux849 #(8=actionTypes_00010)
BOOL aux850 #(8=actionTypes_00010)
BOOL aux851 #(8=actionTypes_00010)
BOOL aux852 #(8=actionTypes_00010)
BOOL aux853 #(8=actionTypes_00010)
BOOL aux854 #(8=actionTypes_00011)
BOOL aux855 #(8=actionTypes_00011)
BOOL aux856 #(8=actionTypes_00011)
BOOL aux857 #(8=actionTypes_00011)
BOOL aux858 #(8=actionTypes_00011)
BOOL aux859 #(8=actionTypes_00011)
BOOL aux860 #(8=actionTypes_00012)
BOOL aux861 #(8=actionTypes_00012)
BOOL aux862 #(8=actionTypes_00012)
BOOL aux863 #(8=actionTypes_00012)
BOOL aux864 #(8=actionTypes_00012)
BOOL aux865 #(8=actionTypes_00012)
BOOL aux866 #(8=actionTypes_00013)
BOOL aux867 #(8=actionTypes_00013)
BOOL aux868 #(8=actionTypes_00013)
BOOL aux869 #(8=actionTypes_00013)
BOOL aux870 #(8=actionTypes_00013)
BOOL aux871 #(8=actionTypes_00013)
**VARIABLES**
ALIAS output[3]=[12, 36, 90]
**VARIABLES**
ALIAS input[6]=[3, 4, 12, 3, 10, 9]
**SEARCH**
PRINT[[statePlaces_00002_00002],[statePlaces_00002_00003],[statePlaces_00002_00004],[statePlaces_00002_00005],[statePlaces_00002_00006],[statePlaces_00002_00007],[statePlaces_00002_00008],[statePlaces_00002_00009],[statePlaces_00002_00010],[statePlaces_00002_00011],[statePlaces_00002_00012],[statePlaces_00003_00002],[statePlaces_00003_00003],[statePlaces_00003_00004],[statePlaces_00003_00005],[statePlaces_00003_00006],[statePlaces_00003_00007],[statePlaces_00003_00008],[statePlaces_00003_00009],[statePlaces_00003_00010],[statePlaces_00003_00011],[statePlaces_00003_00012],[statePlaces_00003_00013],[actionTypes_00002],[actionTypes_00003],[actionTypes_00004],[actionTypes_00005],[actionTypes_00006],[actionTypes_00007],[actionTypes_00008],[actionTypes_00009],[actionTypes_00010],[actionTypes_00011],[actionTypes_00012],[actionTypes_00013],[actionFrom_00002],[actionFrom_00003],[actionFrom_00004],[actionFrom_00005],[actionFrom_00006],[actionFrom_00007],[actionFrom_00008],[actionFrom_00009],[actionFrom_00010],[actionFrom_00011],[actionFrom_00012],[actionFrom_00013],[actionTo_00002],[actionTo_00003],[actionTo_00004],[actionTo_00005],[actionTo_00006],[actionTo_00007],[actionTo_00008],[actionTo_00009],[actionTo_00010],[actionTo_00011],[actionTo_00012],[actionTo_00013],[pointers_00000_00002],[pointers_00000_00003],[pointers_00000_00004],[pointers_00000_00005],[pointers_00000_00006],[pointers_00000_00007],[pointers_00000_00008],[pointers_00000_00009],[pointers_00000_00010],[pointers_00000_00011],[pointers_00000_00012],[pointers_00001_00002],[pointers_00001_00003],[pointers_00001_00004],[pointers_00001_00005],[pointers_00001_00006],[pointers_00001_00007],[pointers_00001_00008],[pointers_00001_00009],[pointers_00001_00010],[pointers_00001_00011],[pointers_00001_00012]]
**CONSTRAINTS**
reify(diseq(1,actionTypes_00002), aux177)
reify(diseq(1,actionTypes_00003), aux178)
reify(diseq(1,actionTypes_00004), aux179)
reify(diseq(1,actionTypes_00005), aux180)
reify(diseq(1,actionTypes_00006), aux181)
reify(diseq(1,actionTypes_00007), aux182)
reify(diseq(1,actionTypes_00008), aux183)
reify(diseq(1,actionTypes_00009), aux184)
reify(diseq(1,actionTypes_00010), aux185)
reify(diseq(1,actionTypes_00011), aux186)
reify(diseq(1,actionTypes_00012), aux187)
reify(diseq(2,actionTypes_00002), aux188)
reify(diseq(2,actionTypes_00003), aux189)
reify(diseq(2,actionTypes_00004), aux190)
reify(diseq(2,actionTypes_00005), aux191)
reify(diseq(2,actionTypes_00006), aux192)
reify(diseq(2,actionTypes_00007), aux193)
reify(diseq(2,actionTypes_00008), aux194)
reify(diseq(2,actionTypes_00009), aux195)
reify(diseq(2,actionTypes_00010), aux196)
reify(diseq(2,actionTypes_00011), aux197)
reify(diseq(2,actionTypes_00012), aux198)
reify(diseq(2,actionTypes_00013), aux199)
reify(watched-or({watched-and({w-literal(actionTypes_00002,7),diseq(actionFrom_00002,3)}),watched-and({w-literal(actionTypes_00002,8),diseq(actionFrom_00002,3)}),w-literal(actionTypes_00002,1),w-literal(actionTypes_00002,2),w-literal(actionTypes_00002,3),w-literal(actionTypes_00002,5),w-literal(actionTypes_00002,6),watched-and({w-literal(actionTypes_00002,4),diseq(actionTo_00002,3)})}), aux200)
reify(watched-or({watched-and({w-literal(actionTypes_00003,7),diseq(actionFrom_00003,3)}),watched-and({w-literal(actionTypes_00003,8),diseq(actionFrom_00003,3)}),w-literal(actionTypes_00003,1),w-literal(actionTypes_00003,2),w-literal(actionTypes_00003,3),w-literal(actionTypes_00003,5),w-literal(actionTypes_00003,6),watched-and({w-literal(actionTypes_00003,4),diseq(actionTo_00003,3)})}), aux201)
reify(watched-or({watched-and({w-literal(actionTypes_00004,7),diseq(actionFrom_00004,3)}),watched-and({w-literal(actionTypes_00004,8),diseq(actionFrom_00004,3)}),w-literal(actionTypes_00004,1),w-literal(actionTypes_00004,2),w-literal(actionTypes_00004,3),w-literal(actionTypes_00004,5),w-literal(actionTypes_00004,6),watched-and({w-literal(actionTypes_00004,4),diseq(actionTo_00004,3)})}), aux202)
reify(watched-or({watched-and({w-literal(actionTypes_00005,7),diseq(actionFrom_00005,3)}),watched-and({w-literal(actionTypes_00005,8),diseq(actionFrom_00005,3)}),w-literal(actionTypes_00005,1),w-literal(actionTypes_00005,2),w-literal(actionTypes_00005,3),w-literal(actionTypes_00005,5),w-literal(actionTypes_00005,6),watched-and({w-literal(actionTypes_00005,4),diseq(actionTo_00005,3)})}), aux203)
reify(watched-or({watched-and({w-literal(actionTypes_00006,7),diseq(actionFrom_00006,3)}),watched-and({w-literal(actionTypes_00006,8),diseq(actionFrom_00006,3)}),w-literal(actionTypes_00006,1),w-literal(actionTypes_00006,2),w-literal(actionTypes_00006,3),w-literal(actionTypes_00006,5),w-literal(actionTypes_00006,6),watched-and({w-literal(actionTypes_00006,4),diseq(actionTo_00006,3)})}), aux204)
reify(watched-or({watched-and({w-literal(actionTypes_00007,7),diseq(actionFrom_00007,3)}),watched-and({w-literal(actionTypes_00007,8),diseq(actionFrom_00007,3)}),w-literal(actionTypes_00007,1),w-literal(actionTypes_00007,2),w-literal(actionTypes_00007,3),w-literal(actionTypes_00007,5),w-literal(actionTypes_00007,6),watched-and({w-literal(actionTypes_00007,4),diseq(actionTo_00007,3)})}), aux205)
reify(watched-or({watched-and({w-literal(actionTypes_00008,7),diseq(actionFrom_00008,3)}),watched-and({w-literal(actionTypes_00008,8),diseq(actionFrom_00008,3)}),w-literal(actionTypes_00008,1),w-literal(actionTypes_00008,2),w-literal(actionTypes_00008,3),w-literal(actionTypes_00008,5),w-literal(actionTypes_00008,6),watched-and({w-literal(actionTypes_00008,4),diseq(actionTo_00008,3)})}), aux206)
reify(watched-or({watched-and({w-literal(actionTypes_00009,7),diseq(actionFrom_00009,3)}),watched-and({w-literal(actionTypes_00009,8),diseq(actionFrom_00009,3)}),w-literal(actionTypes_00009,1),w-literal(actionTypes_00009,2),w-literal(actionTypes_00009,3),w-literal(actionTypes_00009,5),w-literal(actionTypes_00009,6),watched-and({w-literal(actionTypes_00009,4),diseq(actionTo_00009,3)})}), aux207)
reify(watched-or({watched-and({w-literal(actionTypes_00010,7),diseq(actionFrom_00010,3)}),watched-and({w-literal(actionTypes_00010,8),diseq(actionFrom_00010,3)}),w-literal(actionTypes_00010,1),w-literal(actionTypes_00010,2),w-literal(actionTypes_00010,3),w-literal(actionTypes_00010,5),w-literal(actionTypes_00010,6),watched-and({w-literal(actionTypes_00010,4),diseq(actionTo_00010,3)})}), aux208)
reify(watched-or({watched-and({w-literal(actionTypes_00011,7),diseq(actionFrom_00011,3)}),watched-and({w-literal(actionTypes_00011,8),diseq(actionFrom_00011,3)}),w-literal(actionTypes_00011,1),w-literal(actionTypes_00011,2),w-literal(actionTypes_00011,3),w-literal(actionTypes_00011,5),w-literal(actionTypes_00011,6),watched-and({w-literal(actionTypes_00011,4),diseq(actionTo_00011,3)})}), aux209)
reify(watched-or({watched-and({w-literal(actionTypes_00012,7),diseq(actionFrom_00012,3)}),watched-and({w-literal(actionTypes_00012,8),diseq(actionFrom_00012,3)}),w-literal(actionTypes_00012,1),w-literal(actionTypes_00012,2),w-literal(actionTypes_00012,3),w-literal(actionTypes_00012,5),w-literal(actionTypes_00012,6),watched-and({w-literal(actionTypes_00012,4),diseq(actionTo_00012,3)})}), aux210)
reify(watched-or({watched-and({w-literal(actionTypes_00013,7),diseq(actionFrom_00013,3)}),watched-and({w-literal(actionTypes_00013,8),diseq(actionFrom_00013,3)}),w-literal(actionTypes_00013,2),w-literal(actionTypes_00013,3),w-literal(actionTypes_00013,5),w-literal(actionTypes_00013,6),watched-and({w-literal(actionTypes_00013,4),diseq(actionTo_00013,3)})}), aux211)
reify(watched-or({w-literal(actionTypes_00002,2),w-literal(actionTypes_00002,4)}), aux212)
reify(watched-or({w-literal(actionTypes_00003,2),w-literal(actionTypes_00003,4)}), aux213)
reify(watched-or({w-literal(actionTypes_00004,2),w-literal(actionTypes_00004,4)}), aux214)
reify(watched-or({w-literal(actionTypes_00005,2),w-literal(actionTypes_00005,4)}), aux215)
reify(watched-or({w-literal(actionTypes_00006,2),w-literal(actionTypes_00006,4)}), aux216)
reify(watched-or({w-literal(actionTypes_00007,2),w-literal(actionTypes_00007,4)}), aux217)
reify(watched-or({w-literal(actionTypes_00008,2),w-literal(actionTypes_00008,4)}), aux218)
reify(watched-or({w-literal(actionTypes_00009,2),w-literal(actionTypes_00009,4)}), aux219)
reify(watched-or({w-literal(actionTypes_00010,2),w-literal(actionTypes_00010,4)}), aux220)
reify(watched-or({w-literal(actionTypes_00011,2),w-literal(actionTypes_00011,4)}), aux221)
reify(watched-or({w-literal(actionTypes_00012,2),w-literal(actionTypes_00012,4)}), aux222)
reify(watched-or({w-literal(actionTypes_00013,2),w-literal(actionTypes_00013,4)}), aux223)
reify(w-literal(actionTypes_00002,1), aux224)
reify(w-literal(actionTypes_00002,1), aux225)
reify(w-literal(actionTypes_00002,1), aux226)
reify(w-literal(actionTypes_00002,1), aux227)
reify(w-literal(actionTypes_00002,1), aux228)
reify(w-literal(actionTypes_00003,1), aux230)
reify(w-literal(actionTypes_00003,1), aux231)
reify(w-literal(actionTypes_00003,1), aux232)
reify(w-literal(actionTypes_00003,1), aux233)
reify(w-literal(actionTypes_00003,1), aux234)
reify(w-literal(actionTypes_00004,1), aux236)
reify(w-literal(actionTypes_00004,1), aux237)
reify(w-literal(actionTypes_00004,1), aux238)
reify(w-literal(actionTypes_00004,1), aux239)
reify(w-literal(actionTypes_00004,1), aux240)
reify(w-literal(actionTypes_00005,1), aux242)
reify(w-literal(actionTypes_00005,1), aux243)
reify(w-literal(actionTypes_00005,1), aux244)
reify(w-literal(actionTypes_00005,1), aux245)
reify(w-literal(actionTypes_00005,1), aux246)
reify(w-literal(actionTypes_00006,1), aux248)
reify(w-literal(actionTypes_00006,1), aux249)
reify(w-literal(actionTypes_00006,1), aux250)
reify(w-literal(actionTypes_00006,1), aux251)
reify(w-literal(actionTypes_00006,1), aux252)
reify(w-literal(actionTypes_00007,1), aux254)
reify(w-literal(actionTypes_00007,1), aux255)
reify(w-literal(actionTypes_00007,1), aux256)
reify(w-literal(actionTypes_00007,1), aux257)
reify(w-literal(actionTypes_00007,1), aux258)
reify(w-literal(actionTypes_00008,1), aux260)
reify(w-literal(actionTypes_00008,1), aux261)
reify(w-literal(actionTypes_00008,1), aux262)
reify(w-literal(actionTypes_00008,1), aux263)
reify(w-literal(actionTypes_00008,1), aux264)
reify(w-literal(actionTypes_00009,1), aux266)
reify(w-literal(actionTypes_00009,1), aux267)
reify(w-literal(actionTypes_00009,1), aux268)
reify(w-literal(actionTypes_00009,1), aux269)
reify(w-literal(actionTypes_00009,1), aux270)
reify(w-literal(actionTypes_00010,1), aux272)
reify(w-literal(actionTypes_00010,1), aux273)
reify(w-literal(actionTypes_00010,1), aux274)
reify(w-literal(actionTypes_00010,1), aux275)
reify(w-literal(actionTypes_00010,1), aux276)
reify(w-literal(actionTypes_00011,1), aux278)
reify(w-literal(actionTypes_00011,1), aux279)
reify(w-literal(actionTypes_00011,1), aux280)
reify(w-literal(actionTypes_00011,1), aux281)
reify(w-literal(actionTypes_00011,1), aux282)
reify(w-literal(actionTypes_00012,1), aux284)
reify(w-literal(actionTypes_00012,1), aux285)
reify(w-literal(actionTypes_00012,1), aux286)
reify(w-literal(actionTypes_00012,1), aux287)
reify(w-literal(actionTypes_00012,1), aux288)
reify(w-literal(actionTypes_00002,2), aux290)
reify(w-literal(actionTypes_00002,2), aux291)
reify(w-literal(actionTypes_00002,2), aux292)
reify(w-literal(actionTypes_00002,2), aux293)
reify(w-literal(actionTypes_00002,2), aux294)
reify(w-literal(actionTypes_00002,2), aux295)
reify(w-literal(actionTypes_00002,2), aux296)
reify(w-literal(actionTypes_00003,2), aux298)
reify(w-literal(actionTypes_00003,2), aux299)
reify(w-literal(actionTypes_00003,2), aux300)
reify(w-literal(actionTypes_00003,2), aux301)
reify(w-literal(actionTypes_00003,2), aux302)
reify(w-literal(actionTypes_00003,2), aux303)
reify(w-literal(actionTypes_00003,2), aux304)
reify(w-literal(actionTypes_00003,2), aux305)
reify(w-literal(actionTypes_00004,2), aux307)
reify(w-literal(actionTypes_00004,2), aux308)
reify(w-literal(actionTypes_00004,2), aux309)
reify(w-literal(actionTypes_00004,2), aux310)
reify(w-literal(actionTypes_00004,2), aux311)
reify(w-literal(actionTypes_00004,2), aux312)
reify(w-literal(actionTypes_00004,2), aux313)
reify(w-literal(actionTypes_00004,2), aux314)
reify(w-literal(actionTypes_00005,2), aux316)
reify(w-literal(actionTypes_00005,2), aux317)
reify(w-literal(actionTypes_00005,2), aux318)
reify(w-literal(actionTypes_00005,2), aux319)
reify(w-literal(actionTypes_00005,2), aux320)
reify(w-literal(actionTypes_00005,2), aux321)
reify(w-literal(actionTypes_00005,2), aux322)
reify(w-literal(actionTypes_00005,2), aux323)
reify(w-literal(actionTypes_00006,2), aux325)
reify(w-literal(actionTypes_00006,2), aux326)
reify(w-literal(actionTypes_00006,2), aux327)
reify(w-literal(actionTypes_00006,2), aux328)
reify(w-literal(actionTypes_00006,2), aux329)
reify(w-literal(actionTypes_00006,2), aux330)
reify(w-literal(actionTypes_00006,2), aux331)
reify(w-literal(actionTypes_00006,2), aux332)
reify(w-literal(actionTypes_00007,2), aux334)
reify(w-literal(actionTypes_00007,2), aux335)
reify(w-literal(actionTypes_00007,2), aux336)
reify(w-literal(actionTypes_00007,2), aux337)
reify(w-literal(actionTypes_00007,2), aux338)
reify(w-literal(actionTypes_00007,2), aux339)
reify(w-literal(actionTypes_00007,2), aux340)
reify(w-literal(actionTypes_00007,2), aux341)
reify(w-literal(actionTypes_00008,2), aux343)
reify(w-literal(actionTypes_00008,2), aux344)
reify(w-literal(actionTypes_00008,2), aux345)
reify(w-literal(actionTypes_00008,2), aux346)
reify(w-literal(actionTypes_00008,2), aux347)
reify(w-literal(actionTypes_00008,2), aux348)
reify(w-literal(actionTypes_00008,2), aux349)
reify(w-literal(actionTypes_00008,2), aux350)
reify(w-literal(actionTypes_00009,2), aux352)
reify(w-literal(actionTypes_00009,2), aux353)
reify(w-literal(actionTypes_00009,2), aux354)
reify(w-literal(actionTypes_00009,2), aux355)
reify(w-literal(actionTypes_00009,2), aux356)
reify(w-literal(actionTypes_00009,2), aux357)
reify(w-literal(actionTypes_00009,2), aux358)
reify(w-literal(actionTypes_00009,2), aux359)
reify(w-literal(actionTypes_00010,2), aux361)
reify(w-literal(actionTypes_00010,2), aux362)
reify(w-literal(actionTypes_00010,2), aux363)
reify(w-literal(actionTypes_00010,2), aux364)
reify(w-literal(actionTypes_00010,2), aux365)
reify(w-literal(actionTypes_00010,2), aux366)
reify(w-literal(actionTypes_00010,2), aux367)
reify(w-literal(actionTypes_00010,2), aux368)
reify(w-literal(actionTypes_00011,2), aux370)
reify(w-literal(actionTypes_00011,2), aux371)
reify(w-literal(actionTypes_00011,2), aux372)
reify(w-literal(actionTypes_00011,2), aux373)
reify(w-literal(actionTypes_00011,2), aux374)
reify(w-literal(actionTypes_00011,2), aux375)
reify(w-literal(actionTypes_00011,2), aux376)
reify(w-literal(actionTypes_00011,2), aux377)
reify(w-literal(actionTypes_00012,2), aux379)
reify(w-literal(actionTypes_00012,2), aux380)
reify(w-literal(actionTypes_00012,2), aux381)
reify(w-literal(actionTypes_00012,2), aux382)
reify(w-literal(actionTypes_00012,2), aux383)
reify(w-literal(actionTypes_00012,2), aux384)
reify(w-literal(actionTypes_00012,2), aux385)
reify(w-literal(actionTypes_00012,2), aux386)
reify(w-literal(actionTypes_00013,2), aux388)
reify(w-literal(actionTypes_00013,2), aux389)
reify(w-literal(actionTypes_00013,2), aux390)
reify(w-literal(actionTypes_00013,2), aux391)
reify(w-literal(actionTypes_00013,2), aux392)
reify(w-literal(actionTypes_00002,3), aux393)
reify(w-literal(actionTypes_00002,3), aux394)
reify(w-literal(actionTypes_00002,3), aux395)
reify(w-literal(actionTypes_00002,3), aux396)
reify(w-literal(actionTypes_00002,3), aux397)
reify(w-literal(actionTypes_00002,3), aux398)
reify(w-literal(actionTypes_00003,3), aux399)
reify(w-literal(actionTypes_00003,3), aux400)
reify(w-literal(actionTypes_00003,3), aux401)
reify(w-literal(actionTypes_00003,3), aux402)
reify(w-literal(actionTypes_00003,3), aux403)
reify(w-literal(actionTypes_00003,3), aux404)
reify(w-literal(actionTypes_00004,3), aux405)
reify(w-literal(actionTypes_00004,3), aux406)
reify(w-literal(actionTypes_00004,3), aux407)
reify(w-literal(actionTypes_00004,3), aux408)
reify(w-literal(actionTypes_00004,3), aux409)
reify(w-literal(actionTypes_00004,3), aux410)
reify(w-literal(actionTypes_00005,3), aux411)
reify(w-literal(actionTypes_00005,3), aux412)
reify(w-literal(actionTypes_00005,3), aux413)
reify(w-literal(actionTypes_00005,3), aux414)
reify(w-literal(actionTypes_00005,3), aux415)
reify(w-literal(actionTypes_00005,3), aux416)
reify(w-literal(actionTypes_00006,3), aux417)
reify(w-literal(actionTypes_00006,3), aux418)
reify(w-literal(actionTypes_00006,3), aux419)
reify(w-literal(actionTypes_00006,3), aux420)
reify(w-literal(actionTypes_00006,3), aux421)
reify(w-literal(actionTypes_00006,3), aux422)
reify(w-literal(actionTypes_00007,3), aux423)
reify(w-literal(actionTypes_00007,3), aux424)
reify(w-literal(actionTypes_00007,3), aux425)
reify(w-literal(actionTypes_00007,3), aux426)
reify(w-literal(actionTypes_00007,3), aux427)
reify(w-literal(actionTypes_00007,3), aux428)
reify(w-literal(actionTypes_00008,3), aux429)
reify(w-literal(actionTypes_00008,3), aux430)
reify(w-literal(actionTypes_00008,3), aux431)
reify(w-literal(actionTypes_00008,3), aux432)
reify(w-literal(actionTypes_00008,3), aux433)
reify(w-literal(actionTypes_00008,3), aux434)
reify(w-literal(actionTypes_00009,3), aux435)
reify(w-literal(actionTypes_00009,3), aux436)
reify(w-literal(actionTypes_00009,3), aux437)
reify(w-literal(actionTypes_00009,3), aux438)
reify(w-literal(actionTypes_00009,3), aux439)
reify(w-literal(actionTypes_00009,3), aux440)
reify(w-literal(actionTypes_00010,3), aux441)
reify(w-literal(actionTypes_00010,3), aux442)
reify(w-literal(actionTypes_00010,3), aux443)
reify(w-literal(actionTypes_00010,3), aux444)
reify(w-literal(actionTypes_00010,3), aux445)
reify(w-literal(actionTypes_00010,3), aux446)
reify(w-literal(actionTypes_00011,3), aux447)
reify(w-literal(actionTypes_00011,3), aux448)
reify(w-literal(actionTypes_00011,3), aux449)
reify(w-literal(actionTypes_00011,3), aux450)
reify(w-literal(actionTypes_00011,3), aux451)
reify(w-literal(actionTypes_00011,3), aux452)
reify(w-literal(actionTypes_00012,3), aux453)
reify(w-literal(actionTypes_00012,3), aux454)
reify(w-literal(actionTypes_00012,3), aux455)
reify(w-literal(actionTypes_00012,3), aux456)
reify(w-literal(actionTypes_00012,3), aux457)
reify(w-literal(actionTypes_00012,3), aux458)
reify(w-literal(actionTypes_00013,3), aux459)
reify(w-literal(actionTypes_00013,3), aux460)
reify(w-literal(actionTypes_00013,3), aux461)
reify(w-literal(actionTypes_00013,3), aux462)
reify(w-literal(actionTypes_00013,3), aux463)
reify(w-literal(actionTypes_00013,3), aux464)
reify(w-literal(actionTypes_00002,4), aux465)
reify(w-literal(actionTypes_00002,4), aux466)
reify(w-literal(actionTypes_00002,4), aux467)
reify(w-literal(actionTypes_00002,4), aux468)
reify(w-literal(actionTypes_00002,4), aux469)
reify(w-literal(actionTypes_00003,4), aux470)
reify(w-literal(actionTypes_00003,4), aux471)
reify(w-literal(actionTypes_00003,4), aux472)
reify(w-literal(actionTypes_00003,4), aux473)
reify(w-literal(actionTypes_00003,4), aux474)
reify(w-literal(actionTypes_00003,4), aux475)
reify(w-literal(actionTypes_00004,4), aux476)
reify(w-literal(actionTypes_00004,4), aux477)
reify(w-literal(actionTypes_00004,4), aux478)
reify(w-literal(actionTypes_00004,4), aux479)
reify(w-literal(actionTypes_00004,4), aux480)
reify(w-literal(actionTypes_00004,4), aux481)
reify(w-literal(actionTypes_00005,4), aux482)
reify(w-literal(actionTypes_00005,4), aux483)
reify(w-literal(actionTypes_00005,4), aux484)
reify(w-literal(actionTypes_00005,4), aux485)
reify(w-literal(actionTypes_00005,4), aux486)
reify(w-literal(actionTypes_00005,4), aux487)
reify(w-literal(actionTypes_00006,4), aux488)
reify(w-literal(actionTypes_00006,4), aux489)
reify(w-literal(actionTypes_00006,4), aux490)
reify(w-literal(actionTypes_00006,4), aux491)
reify(w-literal(actionTypes_00006,4), aux492)
reify(w-literal(actionTypes_00006,4), aux493)
reify(w-literal(actionTypes_00007,4), aux494)
reify(w-literal(actionTypes_00007,4), aux495)
reify(w-literal(actionTypes_00007,4), aux496)
reify(w-literal(actionTypes_00007,4), aux497)
reify(w-literal(actionTypes_00007,4), aux498)
reify(w-literal(actionTypes_00007,4), aux499)
reify(w-literal(actionTypes_00008,4), aux500)
reify(w-literal(actionTypes_00008,4), aux501)
reify(w-literal(actionTypes_00008,4), aux502)
reify(w-literal(actionTypes_00008,4), aux503)
reify(w-literal(actionTypes_00008,4), aux504)
reify(w-literal(actionTypes_00008,4), aux505)
reify(w-literal(actionTypes_00009,4), aux506)
reify(w-literal(actionTypes_00009,4), aux507)
reify(w-literal(actionTypes_00009,4), aux508)
reify(w-literal(actionTypes_00009,4), aux509)
reify(w-literal(actionTypes_00009,4), aux510)
reify(w-literal(actionTypes_00009,4), aux511)
reify(w-literal(actionTypes_00010,4), aux512)
reify(w-literal(actionTypes_00010,4), aux513)
reify(w-literal(actionTypes_00010,4), aux514)
reify(w-literal(actionTypes_00010,4), aux515)
reify(w-literal(actionTypes_00010,4), aux516)
reify(w-literal(actionTypes_00010,4), aux517)
reify(w-literal(actionTypes_00011,4), aux518)
reify(w-literal(actionTypes_00011,4), aux519)
reify(w-literal(actionTypes_00011,4), aux520)
reify(w-literal(actionTypes_00011,4), aux521)
reify(w-literal(actionTypes_00011,4), aux522)
reify(w-literal(actionTypes_00011,4), aux523)
reify(w-literal(actionTypes_00012,4), aux524)
reify(w-literal(actionTypes_00012,4), aux525)
reify(w-literal(actionTypes_00012,4), aux526)
reify(w-literal(actionTypes_00012,4), aux527)
reify(w-literal(actionTypes_00012,4), aux528)
reify(w-literal(actionTypes_00012,4), aux529)
reify(w-literal(actionTypes_00013,4), aux530)
reify(w-literal(actionTypes_00013,4), aux531)
reify(w-literal(actionTypes_00013,4), aux532)
reify(w-literal(actionTypes_00013,4), aux533)
reify(w-literal(actionTypes_00013,4), aux534)
reify(w-literal(actionTypes_00013,4), aux535)
reify(w-literal(actionTypes_00002,5), aux536)
reify(w-literal(actionTypes_00002,5), aux537)
reify(w-literal(actionTypes_00002,5), aux538)
reify(w-literal(actionTypes_00002,5), aux539)
reify(w-literal(actionTypes_00002,5), aux540)
reify(w-literal(actionTypes_00002,5), aux541)
reify(w-literal(actionTypes_00002,5), aux542)
reify(w-literal(actionTypes_00002,5), aux543)
reify(w-literal(actionTypes_00003,5), aux544)
reify(w-literal(actionTypes_00003,5), aux545)
reify(w-literal(actionTypes_00003,5), aux546)
reify(w-literal(actionTypes_00003,5), aux547)
reify(w-literal(actionTypes_00003,5), aux548)
reify(w-literal(actionTypes_00003,5), aux549)
reify(w-literal(actionTypes_00003,5), aux550)
reify(w-literal(actionTypes_00003,5), aux551)
reify(w-literal(actionTypes_00004,5), aux552)
reify(w-literal(actionTypes_00004,5), aux553)
reify(w-literal(actionTypes_00004,5), aux554)
reify(w-literal(actionTypes_00004,5), aux555)
reify(w-literal(actionTypes_00004,5), aux556)
reify(w-literal(actionTypes_00004,5), aux557)
reify(w-literal(actionTypes_00004,5), aux558)
reify(w-literal(actionTypes_00004,5), aux559)
reify(w-literal(actionTypes_00005,5), aux560)
reify(w-literal(actionTypes_00005,5), aux561)
reify(w-literal(actionTypes_00005,5), aux562)
reify(w-literal(actionTypes_00005,5), aux563)
reify(w-literal(actionTypes_00005,5), aux564)
reify(w-literal(actionTypes_00005,5), aux565)
reify(w-literal(actionTypes_00005,5), aux566)
reify(w-literal(actionTypes_00005,5), aux567)
reify(w-literal(actionTypes_00006,5), aux568)
reify(w-literal(actionTypes_00006,5), aux569)
reify(w-literal(actionTypes_00006,5), aux570)
reify(w-literal(actionTypes_00006,5), aux571)
reify(w-literal(actionTypes_00006,5), aux572)
reify(w-literal(actionTypes_00006,5), aux573)
reify(w-literal(actionTypes_00006,5), aux574)
reify(w-literal(actionTypes_00006,5), aux575)
reify(w-literal(actionTypes_00007,5), aux576)
reify(w-literal(actionTypes_00007,5), aux577)
reify(w-literal(actionTypes_00007,5), aux578)
reify(w-literal(actionTypes_00007,5), aux579)
reify(w-literal(actionTypes_00007,5), aux580)
reify(w-literal(actionTypes_00007,5), aux581)
reify(w-literal(actionTypes_00007,5), aux582)
reify(w-literal(actionTypes_00007,5), aux583)
reify(w-literal(actionTypes_00008,5), aux584)
reify(w-literal(actionTypes_00008,5), aux585)
reify(w-literal(actionTypes_00008,5), aux586)
reify(w-literal(actionTypes_00008,5), aux587)
reify(w-literal(actionTypes_00008,5), aux588)
reify(w-literal(actionTypes_00008,5), aux589)
reify(w-literal(actionTypes_00008,5), aux590)
reify(w-literal(actionTypes_00008,5), aux591)
reify(w-literal(actionTypes_00009,5), aux592)
reify(w-literal(actionTypes_00009,5), aux593)
reify(w-literal(actionTypes_00009,5), aux594)
reify(w-literal(actionTypes_00009,5), aux595)
reify(w-literal(actionTypes_00009,5), aux596)
reify(w-literal(actionTypes_00009,5), aux597)
reify(w-literal(actionTypes_00009,5), aux598)
reify(w-literal(actionTypes_00009,5), aux599)
reify(w-literal(actionTypes_00010,5), aux600)
reify(w-literal(actionTypes_00010,5), aux601)
reify(w-literal(actionTypes_00010,5), aux602)
reify(w-literal(actionTypes_00010,5), aux603)
reify(w-literal(actionTypes_00010,5), aux604)
reify(w-literal(actionTypes_00010,5), aux605)
reify(w-literal(actionTypes_00010,5), aux606)
reify(w-literal(actionTypes_00010,5), aux607)
reify(w-literal(actionTypes_00011,5), aux608)
reify(w-literal(actionTypes_00011,5), aux609)
reify(w-literal(actionTypes_00011,5), aux610)
reify(w-literal(actionTypes_00011,5), aux611)
reify(w-literal(actionTypes_00011,5), aux612)
reify(w-literal(actionTypes_00011,5), aux613)
reify(w-literal(actionTypes_00011,5), aux614)
reify(w-literal(actionTypes_00011,5), aux615)
reify(w-literal(actionTypes_00012,5), aux616)
reify(w-literal(actionTypes_00012,5), aux617)
reify(w-literal(actionTypes_00012,5), aux618)
reify(w-literal(actionTypes_00012,5), aux619)
reify(w-literal(actionTypes_00012,5), aux620)
reify(w-literal(actionTypes_00012,5), aux621)
reify(w-literal(actionTypes_00012,5), aux622)
reify(w-literal(actionTypes_00012,5), aux623)
reify(w-literal(actionTypes_00013,5), aux624)
reify(w-literal(actionTypes_00013,5), aux625)
reify(w-literal(actionTypes_00013,5), aux626)
reify(w-literal(actionTypes_00013,5), aux627)
reify(w-literal(actionTypes_00013,5), aux628)
reify(w-literal(actionTypes_00013,5), aux629)
reify(w-literal(actionTypes_00013,5), aux630)
reify(w-literal(actionTypes_00013,5), aux631)
reify(w-literal(actionTypes_00002,6), aux632)
reify(w-literal(actionTypes_00002,6), aux633)
reify(w-literal(actionTypes_00002,6), aux634)
reify(w-literal(actionTypes_00002,6), aux635)
reify(w-literal(actionTypes_00002,6), aux636)
reify(w-literal(actionTypes_00002,6), aux637)
reify(w-literal(actionTypes_00002,6), aux638)
reify(w-literal(actionTypes_00003,6), aux639)
reify(w-literal(actionTypes_00003,6), aux640)
reify(w-literal(actionTypes_00003,6), aux641)
reify(w-literal(actionTypes_00003,6), aux642)
reify(w-literal(actionTypes_00003,6), aux643)
reify(w-literal(actionTypes_00003,6), aux644)
reify(w-literal(actionTypes_00003,6), aux645)
reify(w-literal(actionTypes_00004,6), aux646)
reify(w-literal(actionTypes_00004,6), aux647)
reify(w-literal(actionTypes_00004,6), aux648)
reify(w-literal(actionTypes_00004,6), aux649)
reify(w-literal(actionTypes_00004,6), aux650)
reify(w-literal(actionTypes_00004,6), aux651)
reify(w-literal(actionTypes_00004,6), aux652)
reify(w-literal(actionTypes_00005,6), aux653)
reify(w-literal(actionTypes_00005,6), aux654)
reify(w-literal(actionTypes_00005,6), aux655)
reify(w-literal(actionTypes_00005,6), aux656)
reify(w-literal(actionTypes_00005,6), aux657)
reify(w-literal(actionTypes_00005,6), aux658)
reify(w-literal(actionTypes_00005,6), aux659)
reify(w-literal(actionTypes_00006,6), aux660)
reify(w-literal(actionTypes_00006,6), aux661)
reify(w-literal(actionTypes_00006,6), aux662)
reify(w-literal(actionTypes_00006,6), aux663)
reify(w-literal(actionTypes_00006,6), aux664)
reify(w-literal(actionTypes_00006,6), aux665)
reify(w-literal(actionTypes_00006,6), aux666)
reify(w-literal(actionTypes_00007,6), aux667)
reify(w-literal(actionTypes_00007,6), aux668)
reify(w-literal(actionTypes_00007,6), aux669)
reify(w-literal(actionTypes_00007,6), aux670)
reify(w-literal(actionTypes_00007,6), aux671)
reify(w-literal(actionTypes_00007,6), aux672)
reify(w-literal(actionTypes_00007,6), aux673)
reify(w-literal(actionTypes_00008,6), aux674)
reify(w-literal(actionTypes_00008,6), aux675)
reify(w-literal(actionTypes_00008,6), aux676)
reify(w-literal(actionTypes_00008,6), aux677)
reify(w-literal(actionTypes_00008,6), aux678)
reify(w-literal(actionTypes_00008,6), aux679)
reify(w-literal(actionTypes_00008,6), aux680)
reify(w-literal(actionTypes_00009,6), aux681)
reify(w-literal(actionTypes_00009,6), aux682)
reify(w-literal(actionTypes_00009,6), aux683)
reify(w-literal(actionTypes_00009,6), aux684)
reify(w-literal(actionTypes_00009,6), aux685)
reify(w-literal(actionTypes_00009,6), aux686)
reify(w-literal(actionTypes_00009,6), aux687)
reify(w-literal(actionTypes_00010,6), aux688)
reify(w-literal(actionTypes_00010,6), aux689)
reify(w-literal(actionTypes_00010,6), aux690)
reify(w-literal(actionTypes_00010,6), aux691)
reify(w-literal(actionTypes_00010,6), aux692)
reify(w-literal(actionTypes_00010,6), aux693)
reify(w-literal(actionTypes_00010,6), aux694)
reify(w-literal(actionTypes_00011,6), aux695)
reify(w-literal(actionTypes_00011,6), aux696)
reify(w-literal(actionTypes_00011,6), aux697)
reify(w-literal(actionTypes_00011,6), aux698)
reify(w-literal(actionTypes_00011,6), aux699)
reify(w-literal(actionTypes_00011,6), aux700)
reify(w-literal(actionTypes_00011,6), aux701)
reify(w-literal(actionTypes_00012,6), aux702)
reify(w-literal(actionTypes_00012,6), aux703)
reify(w-literal(actionTypes_00012,6), aux704)
reify(w-literal(actionTypes_00012,6), aux705)
reify(w-literal(actionTypes_00012,6), aux706)
reify(w-literal(actionTypes_00012,6), aux707)
reify(w-literal(actionTypes_00012,6), aux708)
reify(w-literal(actionTypes_00013,6), aux709)
reify(w-literal(actionTypes_00013,6), aux710)
reify(w-literal(actionTypes_00013,6), aux711)
reify(w-literal(actionTypes_00013,6), aux712)
reify(w-literal(actionTypes_00013,6), aux713)
reify(w-literal(actionTypes_00013,6), aux714)
reify(w-literal(actionTypes_00013,6), aux715)
reify(w-literal(actionTypes_00002,7), aux716)
reify(w-literal(actionTypes_00002,7), aux717)
reify(w-literal(actionTypes_00002,7), aux718)
reify(w-literal(actionTypes_00002,7), aux719)
reify(w-literal(actionTypes_00002,7), aux720)
reify(w-literal(actionTypes_00002,7), aux721)
reify(w-literal(actionTypes_00002,7), aux722)
reify(w-literal(actionTypes_00003,7), aux723)
reify(w-literal(actionTypes_00003,7), aux724)
reify(w-literal(actionTypes_00003,7), aux725)
reify(w-literal(actionTypes_00003,7), aux726)
reify(w-literal(actionTypes_00003,7), aux727)
reify(w-literal(actionTypes_00003,7), aux728)
reify(w-literal(actionTypes_00003,7), aux729)
reify(w-literal(actionTypes_00004,7), aux730)
reify(w-literal(actionTypes_00004,7), aux731)
reify(w-literal(actionTypes_00004,7), aux732)
reify(w-literal(actionTypes_00004,7), aux733)
reify(w-literal(actionTypes_00004,7), aux734)
reify(w-literal(actionTypes_00004,7), aux735)
reify(w-literal(actionTypes_00004,7), aux736)
reify(w-literal(actionTypes_00005,7), aux737)
reify(w-literal(actionTypes_00005,7), aux738)
reify(w-literal(actionTypes_00005,7), aux739)
reify(w-literal(actionTypes_00005,7), aux740)
reify(w-literal(actionTypes_00005,7), aux741)
reify(w-literal(actionTypes_00005,7), aux742)
reify(w-literal(actionTypes_00005,7), aux743)
reify(w-literal(actionTypes_00006,7), aux744)
reify(w-literal(actionTypes_00006,7), aux745)
reify(w-literal(actionTypes_00006,7), aux746)
reify(w-literal(actionTypes_00006,7), aux747)
reify(w-literal(actionTypes_00006,7), aux748)
reify(w-literal(actionTypes_00006,7), aux749)
reify(w-literal(actionTypes_00006,7), aux750)
reify(w-literal(actionTypes_00007,7), aux751)
reify(w-literal(actionTypes_00007,7), aux752)
reify(w-literal(actionTypes_00007,7), aux753)
reify(w-literal(actionTypes_00007,7), aux754)
reify(w-literal(actionTypes_00007,7), aux755)
reify(w-literal(actionTypes_00007,7), aux756)
reify(w-literal(actionTypes_00007,7), aux757)
reify(w-literal(actionTypes_00008,7), aux758)
reify(w-literal(actionTypes_00008,7), aux759)
reify(w-literal(actionTypes_00008,7), aux760)
reify(w-literal(actionTypes_00008,7), aux761)
reify(w-literal(actionTypes_00008,7), aux762)
reify(w-literal(actionTypes_00008,7), aux763)
reify(w-literal(actionTypes_00008,7), aux764)
reify(w-literal(actionTypes_00009,7), aux765)
reify(w-literal(actionTypes_00009,7), aux766)
reify(w-literal(actionTypes_00009,7), aux767)
reify(w-literal(actionTypes_00009,7), aux768)
reify(w-literal(actionTypes_00009,7), aux769)
reify(w-literal(actionTypes_00009,7), aux770)
reify(w-literal(actionTypes_00009,7), aux771)
reify(w-literal(actionTypes_00010,7), aux772)
reify(w-literal(actionTypes_00010,7), aux773)
reify(w-literal(actionTypes_00010,7), aux774)
reify(w-literal(actionTypes_00010,7), aux775)
reify(w-literal(actionTypes_00010,7), aux776)
reify(w-literal(actionTypes_00010,7), aux777)
reify(w-literal(actionTypes_00010,7), aux778)
reify(w-literal(actionTypes_00011,7), aux779)
reify(w-literal(actionTypes_00011,7), aux780)
reify(w-literal(actionTypes_00011,7), aux781)
reify(w-literal(actionTypes_00011,7), aux782)
reify(w-literal(actionTypes_00011,7), aux783)
reify(w-literal(actionTypes_00011,7), aux784)
reify(w-literal(actionTypes_00011,7), aux785)
reify(w-literal(actionTypes_00012,7), aux786)
reify(w-literal(actionTypes_00012,7), aux787)
reify(w-literal(actionTypes_00012,7), aux788)
reify(w-literal(actionTypes_00012,7), aux789)
reify(w-literal(actionTypes_00012,7), aux790)
reify(w-literal(actionTypes_00012,7), aux791)
reify(w-literal(actionTypes_00012,7), aux792)
reify(w-literal(actionTypes_00013,7), aux793)
reify(w-literal(actionTypes_00013,7), aux794)
reify(w-literal(actionTypes_00013,7), aux795)
reify(w-literal(actionTypes_00013,7), aux796)
reify(w-literal(actionTypes_00013,7), aux797)
reify(w-literal(actionTypes_00013,7), aux798)
reify(w-literal(actionTypes_00013,7), aux799)
reify(w-literal(actionTypes_00002,8), aux800)
reify(w-literal(actionTypes_00002,8), aux801)
reify(w-literal(actionTypes_00002,8), aux802)
reify(w-literal(actionTypes_00002,8), aux803)
reify(w-literal(actionTypes_00002,8), aux804)
reify(w-literal(actionTypes_00002,8), aux805)
reify(w-literal(actionTypes_00003,8), aux806)
reify(w-literal(actionTypes_00003,8), aux807)
reify(w-literal(actionTypes_00003,8), aux808)
reify(w-literal(actionTypes_00003,8), aux809)
reify(w-literal(actionTypes_00003,8), aux810)
reify(w-literal(actionTypes_00003,8), aux811)
reify(w-literal(actionTypes_00004,8), aux812)
reify(w-literal(actionTypes_00004,8), aux813)
reify(w-literal(actionTypes_00004,8), aux814)
reify(w-literal(actionTypes_00004,8), aux815)
reify(w-literal(actionTypes_00004,8), aux816)
reify(w-literal(actionTypes_00004,8), aux817)
reify(w-literal(actionTypes_00005,8), aux818)
reify(w-literal(actionTypes_00005,8), aux819)
reify(w-literal(actionTypes_00005,8), aux820)
reify(w-literal(actionTypes_00005,8), aux821)
reify(w-literal(actionTypes_00005,8), aux822)
reify(w-literal(actionTypes_00005,8), aux823)
reify(w-literal(actionTypes_00006,8), aux824)
reify(w-literal(actionTypes_00006,8), aux825)
reify(w-literal(actionTypes_00006,8), aux826)
reify(w-literal(actionTypes_00006,8), aux827)
reify(w-literal(actionTypes_00006,8), aux828)
reify(w-literal(actionTypes_00006,8), aux829)
reify(w-literal(actionTypes_00007,8), aux830)
reify(w-literal(actionTypes_00007,8), aux831)
reify(w-literal(actionTypes_00007,8), aux832)
reify(w-literal(actionTypes_00007,8), aux833)
reify(w-literal(actionTypes_00007,8), aux834)
reify(w-literal(actionTypes_00007,8), aux835)
reify(w-literal(actionTypes_00008,8), aux836)
reify(w-literal(actionTypes_00008,8), aux837)
reify(w-literal(actionTypes_00008,8), aux838)
reify(w-literal(actionTypes_00008,8), aux839)
reify(w-literal(actionTypes_00008,8), aux840)
reify(w-literal(actionTypes_00008,8), aux841)
reify(w-literal(actionTypes_00009,8), aux842)
reify(w-literal(actionTypes_00009,8), aux843)
reify(w-literal(actionTypes_00009,8), aux844)
reify(w-literal(actionTypes_00009,8), aux845)
reify(w-literal(actionTypes_00009,8), aux846)
reify(w-literal(actionTypes_00009,8), aux847)
reify(w-literal(actionTypes_00010,8), aux848)
reify(w-literal(actionTypes_00010,8), aux849)
reify(w-literal(actionTypes_00010,8), aux850)
reify(w-literal(actionTypes_00010,8), aux851)
reify(w-literal(actionTypes_00010,8), aux852)
reify(w-literal(actionTypes_00010,8), aux853)
reify(w-literal(actionTypes_00011,8), aux854)
reify(w-literal(actionTypes_00011,8), aux855)
reify(w-literal(actionTypes_00011,8), aux856)
reify(w-literal(actionTypes_00011,8), aux857)
reify(w-literal(actionTypes_00011,8), aux858)
reify(w-literal(actionTypes_00011,8), aux859)
reify(w-literal(actionTypes_00012,8), aux860)
reify(w-literal(actionTypes_00012,8), aux861)
reify(w-literal(actionTypes_00012,8), aux862)
reify(w-literal(actionTypes_00012,8), aux863)
reify(w-literal(actionTypes_00012,8), aux864)
reify(w-literal(actionTypes_00012,8), aux865)
reify(w-literal(actionTypes_00013,8), aux866)
reify(w-literal(actionTypes_00013,8), aux867)
reify(w-literal(actionTypes_00013,8), aux868)
reify(w-literal(actionTypes_00013,8), aux869)
reify(w-literal(actionTypes_00013,8), aux870)
reify(w-literal(actionTypes_00013,8), aux871)
reify(watchelement_undefzero([90, statePlaces_00003_00013], aux146, aux95), aux59)
reify(watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux148, aux94), aux60)
reify(watchelement_undefzero([statePlaces_00002_00012, statePlaces_00003_00012], aux145, aux108), aux61)
reify(watchelement_undefzero([statePlaces_00002_00011, statePlaces_00003_00011], aux147, aux113), aux62)
reify(watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux165, aux115), aux63)
reify(watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux167, aux101), aux64)
reify(watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux163, aux97), aux65)
reify(watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux162, aux105), aux66)
reify(watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux164, aux110), aux67)
reify(watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux170, aux107), aux68)
reify(watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux168, aux106), aux69)
reify(watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux169, aux102), aux70)
reify(lexless([90, statePlaces_00003_00013],[statePlaces_00002_00004, statePlaces_00003_00004]), aux71)
reify(lexless([90, statePlaces_00003_00013],[statePlaces_00002_00005, statePlaces_00003_00005]), aux72)
reify(lexless([90, statePlaces_00003_00013],[statePlaces_00002_00002, statePlaces_00003_00002]), aux73)
reify(lexless([90, statePlaces_00003_00013],[statePlaces_00002_00003, statePlaces_00003_00003]), aux74)
reify(lexless([90, statePlaces_00003_00013],[statePlaces_00002_00008, statePlaces_00003_00008]), aux75)
reify(lexless([90, statePlaces_00003_00013],[statePlaces_00002_00009, statePlaces_00003_00009]), aux76)
reify(lexless([90, statePlaces_00003_00013],[statePlaces_00002_00006, statePlaces_00003_00006]), aux77)
reify(lexless([90, statePlaces_00003_00013],[statePlaces_00002_00007, statePlaces_00003_00007]), aux78)
reify(lexless([90, statePlaces_00003_00013],[statePlaces_00002_00012, statePlaces_00003_00012]), aux79)
reify(lexless([90, statePlaces_00003_00013],[statePlaces_00002_00011, statePlaces_00003_00011]), aux80)
reify(lexless([90, statePlaces_00003_00013],[statePlaces_00002_00010, statePlaces_00003_00010]), aux81)
reify(lexless([statePlaces_00002_00010, statePlaces_00003_00010],[90, statePlaces_00003_00013]), aux82)
reify(lexless([statePlaces_00002_00011, statePlaces_00003_00011],[90, statePlaces_00003_00013]), aux83)
reify(lexless([statePlaces_00002_00012, statePlaces_00003_00012],[90, statePlaces_00003_00013]), aux84)
reify(lexless([statePlaces_00002_00009, statePlaces_00003_00009],[90, statePlaces_00003_00013]), aux85)
reify(lexless([statePlaces_00002_00008, statePlaces_00003_00008],[90, statePlaces_00003_00013]), aux86)
reify(lexless([statePlaces_00002_00007, statePlaces_00003_00007],[90, statePlaces_00003_00013]), aux87)
reify(lexless([statePlaces_00002_00006, statePlaces_00003_00006],[90, statePlaces_00003_00013]), aux88)
reify(lexless([statePlaces_00002_00005, statePlaces_00003_00005],[90, statePlaces_00003_00013]), aux89)
reify(lexless([statePlaces_00002_00004, statePlaces_00003_00004],[90, statePlaces_00003_00013]), aux90)
reify(lexless([statePlaces_00002_00003, statePlaces_00003_00003],[90, statePlaces_00003_00013]), aux91)
reify(lexless([statePlaces_00002_00002, statePlaces_00003_00002],[90, statePlaces_00003_00013]), aux92)
watchelement_undefzero([statePlaces_00002_00012, statePlaces_00003_00012], aux141, aux93)
watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux144, aux94)
watchelement_undefzero([90, statePlaces_00003_00013], aux141, aux95)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux175, aux96)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux130, aux97)
watchelement_undefzero([3, -1], aux140, aux98)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux152, aux99)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux176, aux100)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux159, aux101)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux175, aux102)
watchelement_undefzero([statePlaces_00002_00011, statePlaces_00003_00011], aux131, aux103)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux143, aux104)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux152, aux105)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux176, aux106)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux140, aux107)
watchelement_undefzero([statePlaces_00002_00012, statePlaces_00003_00012], aux131, aux108)
watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux154, aux109)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux143, aux110)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux144, aux111)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux171, aux112)
watchelement_undefzero([statePlaces_00002_00011, statePlaces_00003_00011], aux154, aux113)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux130, aux114)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux171, aux115)
watchelement_undefzero([3, -1], aux170, aux116)
watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux147, aux117)
watchelement_undefzero([statePlaces_00002_00011, statePlaces_00003_00011], aux145, aux118)
watchelement_undefzero([statePlaces_00002_00012, statePlaces_00003_00012], aux146, aux119)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux163, aux120)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux148, aux121)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux168, aux122)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux169, aux123)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux162, aux124)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux164, aux125)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux165, aux126)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux167, aux127)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux159, aux128)
reify(w-inintervalset(actionFrom_00007,[2,3]), aux129)
reify(w-inintervalset(actionTo_00008,[2,3]), aux132)
reify(w-inintervalset(actionTo_00007,[2,3]), aux133)
reify(w-inintervalset(actionTo_00009,[2,3]), aux134)
reify(w-inintervalset(actionTo_00003,[2,3]), aux135)
reify(w-inintervalset(actionTo_00002,[2,3]), aux136)
reify(w-inintervalset(actionTo_00006,[2,3]), aux137)
reify(w-inintervalset(actionTo_00005,[2,3]), aux138)
reify(w-inintervalset(actionTo_00004,[2,3]), aux139)
reify(w-inintervalset(actionFrom_00002,[2,3]), aux142)
reify(w-inintervalset(actionFrom_00011,[2,3]), aux149)
reify(w-inintervalset(actionFrom_00010,[2,3]), aux150)
reify(w-inintervalset(actionFrom_00003,[2,3]), aux151)
reify(w-inintervalset(actionTo_00013,[2,3]), aux153)
reify(w-inintervalset(actionFrom_00008,[2,3]), aux155)
reify(w-inintervalset(actionTo_00012,[2,3]), aux156)
reify(w-inintervalset(actionTo_00011,[2,3]), aux157)
reify(w-inintervalset(actionTo_00010,[2,3]), aux158)
reify(w-inintervalset(actionFrom_00005,[2,3]), aux160)
reify(w-inintervalset(actionFrom_00012,[2,3]), aux161)
reify(w-inintervalset(actionFrom_00004,[2,3]), aux166)
reify(w-inintervalset(actionFrom_00009,[2,3]), aux172)
reify(w-inintervalset(actionFrom_00006,[2,3]), aux173)
reify(w-inintervalset(actionFrom_00013,[2,3]), aux174)
watched-or({ineq(statePlaces_00002_00002, 3, -1),lexless([1, 0],[pointers_00000_00002, pointers_00001_00002]),lexless([3, -1],[statePlaces_00002_00002, statePlaces_00003_00002])})
watched-or({ineq(statePlaces_00002_00003, 3, -1),lexless([1, 0],[pointers_00000_00003, pointers_00001_00003]),lexless([3, -1],[statePlaces_00002_00003, statePlaces_00003_00003])})
watched-or({ineq(statePlaces_00002_00004, 3, -1),lexless([1, 0],[pointers_00000_00004, pointers_00001_00004]),lexless([3, -1],[statePlaces_00002_00004, statePlaces_00003_00004])})
watched-or({ineq(statePlaces_00002_00005, 3, -1),lexless([1, 0],[pointers_00000_00005, pointers_00001_00005]),lexless([3, -1],[statePlaces_00002_00005, statePlaces_00003_00005])})
watched-or({ineq(statePlaces_00002_00006, 3, -1),lexless([1, 0],[pointers_00000_00006, pointers_00001_00006]),lexless([3, -1],[statePlaces_00002_00006, statePlaces_00003_00006])})
watched-or({ineq(statePlaces_00002_00007, 3, -1),lexless([1, 0],[pointers_00000_00007, pointers_00001_00007]),lexless([3, -1],[statePlaces_00002_00007, statePlaces_00003_00007])})
watched-or({ineq(statePlaces_00002_00008, 3, -1),lexless([1, 0],[pointers_00000_00008, pointers_00001_00008]),lexless([3, -1],[statePlaces_00002_00008, statePlaces_00003_00008])})
watched-or({ineq(statePlaces_00002_00009, 3, -1),lexless([1, 0],[pointers_00000_00009, pointers_00001_00009]),lexless([3, -1],[statePlaces_00002_00009, statePlaces_00003_00009])})
watched-or({ineq(statePlaces_00002_00010, 3, -1),lexless([1, 0],[pointers_00000_00010, pointers_00001_00010]),lexless([3, -1],[statePlaces_00002_00010, statePlaces_00003_00010])})
watched-or({ineq(statePlaces_00002_00011, 3, -1),lexless([1, 0],[pointers_00000_00011, pointers_00001_00011]),lexless([3, -1],[statePlaces_00002_00011, statePlaces_00003_00011])})
watched-or({ineq(statePlaces_00002_00012, 3, -1),lexless([1, 0],[pointers_00000_00012, pointers_00001_00012]),lexless([3, -1],[statePlaces_00002_00012, statePlaces_00003_00012])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00003, pointers_00001_00003])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00004, pointers_00001_00004])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00012, pointers_00001_00012])})
watched-or({w-literal(aux92,1),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00012, 2]),w-literal(aux73,1)})
watched-or({w-literal(aux92,1),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00012, 3]),w-literal(aux73,1)})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00004, pointers_00001_00004])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00012, pointers_00001_00012])})
watched-or({w-literal(aux91,1),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00012, 2]),w-literal(aux74,1)})
watched-or({w-literal(aux91,1),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00012, 3]),w-literal(aux74,1)})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00012, pointers_00001_00012])})
watched-or({w-literal(aux90,1),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00012, 2]),w-literal(aux71,1)})
watched-or({w-literal(aux90,1),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00012, 3]),w-literal(aux71,1)})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00012, pointers_00001_00012])})
watched-or({w-literal(aux89,1),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00012, 2]),w-literal(aux72,1)})
watched-or({w-literal(aux89,1),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00012, 3]),w-literal(aux72,1)})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00012, pointers_00001_00012])})
watched-or({w-literal(aux88,1),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00012, 2]),w-literal(aux77,1)})
watched-or({w-literal(aux88,1),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00012, 3]),w-literal(aux77,1)})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00012, pointers_00001_00012])})
watched-or({w-literal(aux87,1),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00012, 2]),w-literal(aux78,1)})
watched-or({w-literal(aux87,1),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00012, 3]),w-literal(aux78,1)})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00012, pointers_00001_00012])})
watched-or({w-literal(aux86,1),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00012, 2]),w-literal(aux75,1)})
watched-or({w-literal(aux86,1),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00012, 3]),w-literal(aux75,1)})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00012, pointers_00001_00012])})
watched-or({w-literal(aux85,1),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00012, 2]),w-literal(aux76,1)})
watched-or({w-literal(aux85,1),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00012, 3]),w-literal(aux76,1)})
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00012, pointers_00001_00012])})
watched-or({w-literal(aux82,1),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00012, 2]),w-literal(aux81,1)})
watched-or({w-literal(aux82,1),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00012, 3]),w-literal(aux81,1)})
watched-or({lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([pointers_00000_00011, pointers_00001_00011],[pointers_00000_00012, pointers_00001_00012])})
watched-or({w-literal(aux83,1),lexless([pointers_00000_00011, pointers_00001_00011],[pointers_00000_00012, 2]),w-literal(aux80,1)})
watched-or({w-literal(aux83,1),lexless([pointers_00000_00011, pointers_00001_00011],[pointers_00000_00012, 3]),w-literal(aux80,1)})
watched-or({w-literal(aux84,1),ineq(pointers_00001_00012, 2, -1),w-literal(aux79,1)})
watched-or({w-literal(aux84,1),ineq(pointers_00001_00012, 3, -1),w-literal(aux79,1)})
reifyimply(w-literal(pointers_00000_00002,1), aux177)
reifyimply(gaceq(pointers_00000_00002,pointers_00000_00003), aux178)
reifyimply(gaceq(pointers_00000_00003,pointers_00000_00004), aux179)
reifyimply(gaceq(pointers_00000_00004,pointers_00000_00005), aux180)
reifyimply(gaceq(pointers_00000_00005,pointers_00000_00006), aux181)
reifyimply(gaceq(pointers_00000_00006,pointers_00000_00007), aux182)
reifyimply(gaceq(pointers_00000_00007,pointers_00000_00008), aux183)
reifyimply(gaceq(pointers_00000_00008,pointers_00000_00009), aux184)
reifyimply(gaceq(pointers_00000_00009,pointers_00000_00010), aux185)
reifyimply(gaceq(pointers_00000_00010,pointers_00000_00011), aux186)
reifyimply(gaceq(pointers_00000_00011,pointers_00000_00012), aux187)
reifyimply(w-literal(pointers_00001_00002,0), aux188)
reifyimply(gaceq(pointers_00001_00002,pointers_00001_00003), aux189)
reifyimply(gaceq(pointers_00001_00003,pointers_00001_00004), aux190)
reifyimply(gaceq(pointers_00001_00004,pointers_00001_00005), aux191)
reifyimply(gaceq(pointers_00001_00005,pointers_00001_00006), aux192)
reifyimply(gaceq(pointers_00001_00006,pointers_00001_00007), aux193)
reifyimply(gaceq(pointers_00001_00007,pointers_00001_00008), aux194)
reifyimply(gaceq(pointers_00001_00008,pointers_00001_00009), aux195)
reifyimply(gaceq(pointers_00001_00009,pointers_00001_00010), aux196)
reifyimply(gaceq(pointers_00001_00010,pointers_00001_00011), aux197)
reifyimply(gaceq(pointers_00001_00011,pointers_00001_00012), aux198)
reifyimply(w-literal(pointers_00001_00012,2), aux199)
reifyimply(w-literal(statePlaces_00003_00002,-1), aux200)
reifyimply(gaceq(statePlaces_00003_00002,statePlaces_00003_00003), aux201)
reifyimply(gaceq(statePlaces_00003_00003,statePlaces_00003_00004), aux202)
reifyimply(gaceq(statePlaces_00003_00004,statePlaces_00003_00005), aux203)
reifyimply(gaceq(statePlaces_00003_00005,statePlaces_00003_00006), aux204)
reifyimply(gaceq(statePlaces_00003_00006,statePlaces_00003_00007), aux205)
reifyimply(gaceq(statePlaces_00003_00007,statePlaces_00003_00008), aux206)
reifyimply(gaceq(statePlaces_00003_00008,statePlaces_00003_00009), aux207)
reifyimply(gaceq(statePlaces_00003_00009,statePlaces_00003_00010), aux208)
reifyimply(gaceq(statePlaces_00003_00010,statePlaces_00003_00011), aux209)
reifyimply(gaceq(statePlaces_00003_00011,statePlaces_00003_00012), aux210)
reifyimply(gaceq(statePlaces_00003_00012,statePlaces_00003_00013), aux211)
reifyimply(w-literal(statePlaces_00002_00002,3), aux212)
reifyimply(gaceq(statePlaces_00002_00002,statePlaces_00002_00003), aux213)
reifyimply(gaceq(statePlaces_00002_00003,statePlaces_00002_00004), aux214)
reifyimply(gaceq(statePlaces_00002_00004,statePlaces_00002_00005), aux215)
reifyimply(gaceq(statePlaces_00002_00005,statePlaces_00002_00006), aux216)
reifyimply(gaceq(statePlaces_00002_00006,statePlaces_00002_00007), aux217)
reifyimply(gaceq(statePlaces_00002_00007,statePlaces_00002_00008), aux218)
reifyimply(gaceq(statePlaces_00002_00008,statePlaces_00002_00009), aux219)
reifyimply(gaceq(statePlaces_00002_00009,statePlaces_00002_00010), aux220)
reifyimply(gaceq(statePlaces_00002_00010,statePlaces_00002_00011), aux221)
reifyimply(gaceq(statePlaces_00002_00011,statePlaces_00002_00012), aux222)
reifyimply(w-literal(statePlaces_00002_00012,90), aux223)
reifyimply(w-literal(pointers_00000_00002,2), aux224)
reifyimply(w-literal(actionFrom_00002,0), aux225)
reifyimply(w-literal(actionTo_00002,2), aux226)
reifyimply(w-inintervalset(pointers_00000_00002,[1,6]), aux227)
reifyimply(watchelement_undefzero([3, 4, 12, 3, 10, 9], aux229, statePlaces_00002_00002), aux228)
reifyimply(w-literal(actionFrom_00003,0), aux231)
reifyimply(w-literal(actionTo_00003,2), aux232)
reifyimply(w-inintervalset(pointers_00000_00003,[1,6]), aux233)
reifyimply(watchelement_undefzero([3, 4, 12, 3, 10, 9], aux235, statePlaces_00002_00003), aux234)
reifyimply(w-literal(actionFrom_00004,0), aux237)
reifyimply(w-literal(actionTo_00004,2), aux238)
reifyimply(w-inintervalset(pointers_00000_00004,[1,6]), aux239)
reifyimply(watchelement_undefzero([3, 4, 12, 3, 10, 9], aux241, statePlaces_00002_00004), aux240)
reifyimply(w-literal(actionFrom_00005,0), aux243)
reifyimply(w-literal(actionTo_00005,2), aux244)
reifyimply(w-inintervalset(pointers_00000_00005,[1,6]), aux245)
reifyimply(watchelement_undefzero([3, 4, 12, 3, 10, 9], aux247, statePlaces_00002_00005), aux246)
reifyimply(w-literal(actionFrom_00006,0), aux249)
reifyimply(w-literal(actionTo_00006,2), aux250)
reifyimply(w-inintervalset(pointers_00000_00006,[1,6]), aux251)
reifyimply(watchelement_undefzero([3, 4, 12, 3, 10, 9], aux253, statePlaces_00002_00006), aux252)
reifyimply(w-literal(actionFrom_00007,0), aux255)
reifyimply(w-literal(actionTo_00007,2), aux256)
reifyimply(w-inintervalset(pointers_00000_00007,[1,6]), aux257)
reifyimply(watchelement_undefzero([3, 4, 12, 3, 10, 9], aux259, statePlaces_00002_00007), aux258)
reifyimply(w-literal(actionFrom_00008,0), aux261)
reifyimply(w-literal(actionTo_00008,2), aux262)
reifyimply(w-inintervalset(pointers_00000_00008,[1,6]), aux263)
reifyimply(watchelement_undefzero([3, 4, 12, 3, 10, 9], aux265, statePlaces_00002_00008), aux264)
reifyimply(w-literal(actionFrom_00009,0), aux267)
reifyimply(w-literal(actionTo_00009,2), aux268)
reifyimply(w-inintervalset(pointers_00000_00009,[1,6]), aux269)
reifyimply(watchelement_undefzero([3, 4, 12, 3, 10, 9], aux271, statePlaces_00002_00009), aux270)
reifyimply(w-literal(actionFrom_00010,0), aux273)
reifyimply(w-literal(actionTo_00010,2), aux274)
reifyimply(w-inintervalset(pointers_00000_00010,[1,6]), aux275)
reifyimply(watchelement_undefzero([3, 4, 12, 3, 10, 9], aux277, statePlaces_00002_00010), aux276)
reifyimply(w-literal(actionFrom_00011,0), aux279)
reifyimply(w-literal(actionTo_00011,2), aux280)
reifyimply(w-inintervalset(pointers_00000_00011,[1,6]), aux281)
reifyimply(watchelement_undefzero([3, 4, 12, 3, 10, 9], aux283, statePlaces_00002_00011), aux282)
reifyimply(w-literal(actionFrom_00012,0), aux285)
reifyimply(w-literal(actionTo_00012,2), aux286)
reifyimply(w-inintervalset(pointers_00000_00012,[1,6]), aux287)
reifyimply(watchelement_undefzero([3, 4, 12, 3, 10, 9], aux289, statePlaces_00002_00012), aux288)
reifyimply(diseq(statePlaces_00002_00002,-1), aux290)
reifyimply(ineq(pointers_00001_00002, 3, 0), aux291)
reifyimply(w-literal(pointers_00001_00002,1), aux292)
reifyimply(w-literal(actionFrom_00002,2), aux293)
reifyimply(w-literal(actionTo_00002,1), aux294)
reifyimply(w-inintervalset(pointers_00001_00002,[1,3]), aux295)
reifyimply(watchelement_undefzero([12, 36, 90], aux297, 3), aux296)
reifyimply(diseq(statePlaces_00002_00003,-1), aux298)
reifyimply(diseq(statePlaces_00002_00002,-1), aux299)
reifyimply(ineq(pointers_00001_00003, 3, 0), aux300)
reifyimply(w-literal(actionFrom_00003,2), aux302)
reifyimply(w-literal(actionTo_00003,1), aux303)
reifyimply(w-inintervalset(pointers_00001_00003,[1,3]), aux304)
reifyimply(watchelement_undefzero([12, 36, 90], aux306, statePlaces_00002_00002), aux305)
reifyimply(diseq(statePlaces_00002_00004,-1), aux307)
reifyimply(diseq(statePlaces_00002_00003,-1), aux308)
reifyimply(ineq(pointers_00001_00004, 3, 0), aux309)
reifyimply(w-literal(actionFrom_00004,2), aux311)
reifyimply(w-literal(actionTo_00004,1), aux312)
reifyimply(w-inintervalset(pointers_00001_00004,[1,3]), aux313)
reifyimply(watchelement_undefzero([12, 36, 90], aux315, statePlaces_00002_00003), aux314)
reifyimply(diseq(statePlaces_00002_00005,-1), aux316)
reifyimply(diseq(statePlaces_00002_00004,-1), aux317)
reifyimply(ineq(pointers_00001_00005, 3, 0), aux318)
reifyimply(w-literal(actionFrom_00005,2), aux320)
reifyimply(w-literal(actionTo_00005,1), aux321)
reifyimply(w-inintervalset(pointers_00001_00005,[1,3]), aux322)
reifyimply(watchelement_undefzero([12, 36, 90], aux324, statePlaces_00002_00004), aux323)
reifyimply(diseq(statePlaces_00002_00006,-1), aux325)
reifyimply(diseq(statePlaces_00002_00005,-1), aux326)
reifyimply(ineq(pointers_00001_00006, 3, 0), aux327)
reifyimply(w-literal(actionFrom_00006,2), aux329)
reifyimply(w-literal(actionTo_00006,1), aux330)
reifyimply(w-inintervalset(pointers_00001_00006,[1,3]), aux331)
reifyimply(watchelement_undefzero([12, 36, 90], aux333, statePlaces_00002_00005), aux332)
reifyimply(diseq(statePlaces_00002_00007,-1), aux334)
reifyimply(diseq(statePlaces_00002_00006,-1), aux335)
reifyimply(ineq(pointers_00001_00007, 3, 0), aux336)
reifyimply(w-literal(actionFrom_00007,2), aux338)
reifyimply(w-literal(actionTo_00007,1), aux339)
reifyimply(w-inintervalset(pointers_00001_00007,[1,3]), aux340)
reifyimply(watchelement_undefzero([12, 36, 90], aux342, statePlaces_00002_00006), aux341)
reifyimply(diseq(statePlaces_00002_00008,-1), aux343)
reifyimply(diseq(statePlaces_00002_00007,-1), aux344)
reifyimply(ineq(pointers_00001_00008, 3, 0), aux345)
reifyimply(w-literal(actionFrom_00008,2), aux347)
reifyimply(w-literal(actionTo_00008,1), aux348)
reifyimply(w-inintervalset(pointers_00001_00008,[1,3]), aux349)
reifyimply(watchelement_undefzero([12, 36, 90], aux351, statePlaces_00002_00007), aux350)
reifyimply(diseq(statePlaces_00002_00009,-1), aux352)
reifyimply(diseq(statePlaces_00002_00008,-1), aux353)
reifyimply(ineq(pointers_00001_00009, 3, 0), aux354)
reifyimply(w-literal(actionFrom_00009,2), aux356)
reifyimply(w-literal(actionTo_00009,1), aux357)
reifyimply(w-inintervalset(pointers_00001_00009,[1,3]), aux358)
reifyimply(watchelement_undefzero([12, 36, 90], aux360, statePlaces_00002_00008), aux359)
reifyimply(diseq(statePlaces_00002_00010,-1), aux361)
reifyimply(diseq(statePlaces_00002_00009,-1), aux362)
reifyimply(ineq(pointers_00001_00010, 3, 0), aux363)
reifyimply(w-literal(actionFrom_00010,2), aux365)
reifyimply(w-literal(actionTo_00010,1), aux366)
reifyimply(w-inintervalset(pointers_00001_00010,[1,3]), aux367)
reifyimply(watchelement_undefzero([12, 36, 90], aux369, statePlaces_00002_00009), aux368)
reifyimply(diseq(statePlaces_00002_00011,-1), aux370)
reifyimply(diseq(statePlaces_00002_00010,-1), aux371)
reifyimply(ineq(pointers_00001_00011, 3, 0), aux372)
reifyimply(w-literal(actionFrom_00011,2), aux374)
reifyimply(w-literal(actionTo_00011,1), aux375)
reifyimply(w-inintervalset(pointers_00001_00011,[1,3]), aux376)
reifyimply(watchelement_undefzero([12, 36, 90], aux378, statePlaces_00002_00010), aux377)
reifyimply(diseq(statePlaces_00002_00012,-1), aux379)
reifyimply(diseq(statePlaces_00002_00011,-1), aux380)
reifyimply(ineq(pointers_00001_00012, 3, 0), aux381)
reifyimply(w-literal(actionFrom_00012,2), aux383)
reifyimply(w-literal(actionTo_00012,1), aux384)
reifyimply(w-inintervalset(pointers_00001_00012,[1,3]), aux385)
reifyimply(watchelement_undefzero([12, 36, 90], aux387, statePlaces_00002_00011), aux386)
reifyimply(diseq(statePlaces_00002_00012,-1), aux388)
reifyimply(w-literal(pointers_00001_00012,1), aux389)
reifyimply(w-literal(actionFrom_00013,2), aux390)
reifyimply(w-literal(actionTo_00013,1), aux391)
reifyimply(w-literal(statePlaces_00002_00012,36), aux392)
ineq(aux393, aux68, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux394)
reifyimply(diseq(aux107,-1), aux395)
reifyimply(w-literal(actionTo_00002,2), aux396)
ineq(aux397, aux136, 0)
ineq(aux398, aux142, 0)
ineq(aux399, aux70, 0)
reifyimply(ineq(3, actionFrom_00003, 0), aux400)
reifyimply(diseq(aux102,-1), aux401)
reifyimply(w-literal(actionTo_00003,2), aux402)
ineq(aux403, aux135, 0)
ineq(aux404, aux151, 0)
ineq(aux405, aux69, 0)
reifyimply(ineq(3, actionFrom_00004, 0), aux406)
reifyimply(diseq(aux106,-1), aux407)
reifyimply(w-literal(actionTo_00004,2), aux408)
ineq(aux409, aux139, 0)
ineq(aux410, aux166, 0)
ineq(aux411, aux64, 0)
reifyimply(ineq(3, actionFrom_00005, 0), aux412)
reifyimply(diseq(aux101,-1), aux413)
reifyimply(w-literal(actionTo_00005,2), aux414)
ineq(aux415, aux138, 0)
ineq(aux416, aux160, 0)
ineq(aux417, aux63, 0)
reifyimply(ineq(3, actionFrom_00006, 0), aux418)
reifyimply(diseq(aux115,-1), aux419)
reifyimply(w-literal(actionTo_00006,2), aux420)
ineq(aux421, aux137, 0)
ineq(aux422, aux173, 0)
ineq(aux423, aux67, 0)
reifyimply(ineq(3, actionFrom_00007, 0), aux424)
reifyimply(diseq(aux110,-1), aux425)
reifyimply(w-literal(actionTo_00007,2), aux426)
ineq(aux427, aux133, 0)
ineq(aux428, aux129, 0)
ineq(aux429, aux66, 0)
reifyimply(ineq(3, actionFrom_00008, 0), aux430)
reifyimply(diseq(aux105,-1), aux431)
reifyimply(w-literal(actionTo_00008,2), aux432)
ineq(aux433, aux132, 0)
ineq(aux434, aux155, 0)
ineq(aux435, aux65, 0)
reifyimply(ineq(3, actionFrom_00009, 0), aux436)
reifyimply(diseq(aux97,-1), aux437)
reifyimply(w-literal(actionTo_00009,2), aux438)
ineq(aux439, aux134, 0)
ineq(aux440, aux172, 0)
ineq(aux441, aux60, 0)
reifyimply(ineq(3, actionFrom_00010, 0), aux442)
reifyimply(diseq(aux94,-1), aux443)
reifyimply(w-literal(actionTo_00010,2), aux444)
ineq(aux445, aux158, 0)
ineq(aux446, aux150, 0)
ineq(aux447, aux62, 0)
reifyimply(ineq(3, actionFrom_00011, 0), aux448)
reifyimply(diseq(aux113,-1), aux449)
reifyimply(w-literal(actionTo_00011,2), aux450)
ineq(aux451, aux157, 0)
ineq(aux452, aux149, 0)
ineq(aux453, aux61, 0)
reifyimply(ineq(3, actionFrom_00012, 0), aux454)
reifyimply(diseq(aux108,-1), aux455)
reifyimply(w-literal(actionTo_00012,2), aux456)
ineq(aux457, aux156, 0)
ineq(aux458, aux161, 0)
ineq(aux459, aux59, 0)
reifyimply(ineq(3, actionFrom_00013, 0), aux460)
reifyimply(diseq(aux95,-1), aux461)
reifyimply(w-literal(actionTo_00013,2), aux462)
ineq(aux463, aux153, 0)
ineq(aux464, aux174, 0)
reifyimply(ineq(3, actionTo_00002, 0), aux465)
reifyimply(w-literal(actionFrom_00002,2), aux466)
ineq(aux467, aux142, 0)
ineq(aux468, aux136, 0)
ineq(aux469, aux68, 0)
reifyimply(ineq(3, actionTo_00003, 0), aux470)
reifyimply(w-literal(actionFrom_00003,2), aux471)
reifyimply(diseq(statePlaces_00002_00002,-1), aux472)
ineq(aux473, aux151, 0)
ineq(aux474, aux135, 0)
ineq(aux475, aux70, 0)
reifyimply(ineq(3, actionTo_00004, 0), aux476)
reifyimply(w-literal(actionFrom_00004,2), aux477)
reifyimply(diseq(statePlaces_00002_00003,-1), aux478)
ineq(aux479, aux166, 0)
ineq(aux480, aux139, 0)
ineq(aux481, aux69, 0)
reifyimply(ineq(3, actionTo_00005, 0), aux482)
reifyimply(w-literal(actionFrom_00005,2), aux483)
reifyimply(diseq(statePlaces_00002_00004,-1), aux484)
ineq(aux485, aux160, 0)
ineq(aux486, aux138, 0)
ineq(aux487, aux64, 0)
reifyimply(ineq(3, actionTo_00006, 0), aux488)
reifyimply(w-literal(actionFrom_00006,2), aux489)
reifyimply(diseq(statePlaces_00002_00005,-1), aux490)
ineq(aux491, aux173, 0)
ineq(aux492, aux137, 0)
ineq(aux493, aux63, 0)
reifyimply(ineq(3, actionTo_00007, 0), aux494)
reifyimply(w-literal(actionFrom_00007,2), aux495)
reifyimply(diseq(statePlaces_00002_00006,-1), aux496)
ineq(aux497, aux129, 0)
ineq(aux498, aux133, 0)
ineq(aux499, aux67, 0)
reifyimply(ineq(3, actionTo_00008, 0), aux500)
reifyimply(w-literal(actionFrom_00008,2), aux501)
reifyimply(diseq(statePlaces_00002_00007,-1), aux502)
ineq(aux503, aux155, 0)
ineq(aux504, aux132, 0)
ineq(aux505, aux66, 0)
reifyimply(ineq(3, actionTo_00009, 0), aux506)
reifyimply(w-literal(actionFrom_00009,2), aux507)
reifyimply(diseq(statePlaces_00002_00008,-1), aux508)
ineq(aux509, aux172, 0)
ineq(aux510, aux134, 0)
ineq(aux511, aux65, 0)
reifyimply(ineq(3, actionTo_00010, 0), aux512)
reifyimply(w-literal(actionFrom_00010,2), aux513)
reifyimply(diseq(statePlaces_00002_00009,-1), aux514)
ineq(aux515, aux150, 0)
ineq(aux516, aux158, 0)
ineq(aux517, aux60, 0)
reifyimply(ineq(3, actionTo_00011, 0), aux518)
reifyimply(w-literal(actionFrom_00011,2), aux519)
reifyimply(diseq(statePlaces_00002_00010,-1), aux520)
ineq(aux521, aux149, 0)
ineq(aux522, aux157, 0)
ineq(aux523, aux62, 0)
reifyimply(ineq(3, actionTo_00012, 0), aux524)
reifyimply(w-literal(actionFrom_00012,2), aux525)
reifyimply(diseq(statePlaces_00002_00011,-1), aux526)
ineq(aux527, aux161, 0)
ineq(aux528, aux156, 0)
ineq(aux529, aux61, 0)
reifyimply(ineq(3, actionTo_00013, 0), aux530)
reifyimply(w-literal(actionFrom_00013,2), aux531)
reifyimply(diseq(statePlaces_00002_00012,-1), aux532)
ineq(aux533, aux174, 0)
ineq(aux534, aux153, 0)
ineq(aux535, aux59, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux536)
reifyimply(diseq(aux107,-1), aux537)
reifyimply(diseq(aux116,-1), aux538)
reifyimply(w-literal(actionTo_00002,2), aux539)
ineq(aux540, aux136, 0)
ineq(aux541, aux142, 0)
reifyimply(diseq(aux98,-1), aux542)
reifyimply(ineq(3, actionFrom_00003, 0), aux544)
reifyimply(diseq(aux102,-1), aux545)
reifyimply(diseq(aux123,-1), aux546)
reifyimply(w-literal(actionTo_00003,2), aux547)
ineq(aux548, aux135, 0)
ineq(aux549, aux151, 0)
reifyimply(diseq(aux96,-1), aux550)
reifyimply(ineq(3, actionFrom_00004, 0), aux552)
reifyimply(diseq(aux106,-1), aux553)
reifyimply(diseq(aux122,-1), aux554)
reifyimply(w-literal(actionTo_00004,2), aux555)
ineq(aux556, aux139, 0)
ineq(aux557, aux166, 0)
reifyimply(diseq(aux100,-1), aux558)
reifyimply(ineq(3, actionFrom_00005, 0), aux560)
reifyimply(diseq(aux101,-1), aux561)
reifyimply(diseq(aux127,-1), aux562)
reifyimply(w-literal(actionTo_00005,2), aux563)
ineq(aux564, aux138, 0)
ineq(aux565, aux160, 0)
reifyimply(diseq(aux128,-1), aux566)
reifyimply(ineq(3, actionFrom_00006, 0), aux568)
reifyimply(diseq(aux115,-1), aux569)
reifyimply(diseq(aux126,-1), aux570)
reifyimply(w-literal(actionTo_00006,2), aux571)
ineq(aux572, aux137, 0)
ineq(aux573, aux173, 0)
reifyimply(diseq(aux112,-1), aux574)
reifyimply(ineq(3, actionFrom_00007, 0), aux576)
reifyimply(diseq(aux110,-1), aux577)
reifyimply(diseq(aux125,-1), aux578)
reifyimply(w-literal(actionTo_00007,2), aux579)
ineq(aux580, aux133, 0)
ineq(aux581, aux129, 0)
reifyimply(diseq(aux104,-1), aux582)
reifyimply(ineq(3, actionFrom_00008, 0), aux584)
reifyimply(diseq(aux105,-1), aux585)
reifyimply(diseq(aux124,-1), aux586)
reifyimply(w-literal(actionTo_00008,2), aux587)
ineq(aux588, aux132, 0)
ineq(aux589, aux155, 0)
reifyimply(diseq(aux99,-1), aux590)
reifyimply(ineq(3, actionFrom_00009, 0), aux592)
reifyimply(diseq(aux97,-1), aux593)
reifyimply(diseq(aux120,-1), aux594)
reifyimply(w-literal(actionTo_00009,2), aux595)
ineq(aux596, aux134, 0)
ineq(aux597, aux172, 0)
reifyimply(diseq(aux114,-1), aux598)
reifyimply(ineq(3, actionFrom_00010, 0), aux600)
reifyimply(diseq(aux94,-1), aux601)
reifyimply(diseq(aux121,-1), aux602)
reifyimply(w-literal(actionTo_00010,2), aux603)
ineq(aux604, aux158, 0)
ineq(aux605, aux150, 0)
reifyimply(diseq(aux111,-1), aux606)
reifyimply(ineq(3, actionFrom_00011, 0), aux608)
reifyimply(diseq(aux113,-1), aux609)
reifyimply(diseq(aux117,-1), aux610)
reifyimply(w-literal(actionTo_00011,2), aux611)
ineq(aux612, aux157, 0)
ineq(aux613, aux149, 0)
reifyimply(diseq(aux109,-1), aux614)
reifyimply(ineq(3, actionFrom_00012, 0), aux616)
reifyimply(diseq(aux108,-1), aux617)
reifyimply(diseq(aux118,-1), aux618)
reifyimply(w-literal(actionTo_00012,2), aux619)
ineq(aux620, aux156, 0)
ineq(aux621, aux161, 0)
reifyimply(diseq(aux103,-1), aux622)
reifyimply(ineq(3, actionFrom_00013, 0), aux624)
reifyimply(diseq(aux95,-1), aux625)
reifyimply(diseq(aux119,-1), aux626)
reifyimply(w-literal(actionTo_00013,2), aux627)
ineq(aux628, aux153, 0)
ineq(aux629, aux174, 0)
reifyimply(diseq(aux93,-1), aux630)
reifyimply(ineq(3, actionFrom_00002, 0), aux632)
reifyimply(diseq(aux107,-1), aux633)
reifyimply(diseq(aux116,-1), aux634)
reifyimply(w-literal(actionTo_00002,2), aux635)
ineq(aux637, aux136, 0)
ineq(aux638, aux142, 0)
reifyimply(ineq(3, actionFrom_00003, 0), aux639)
reifyimply(diseq(aux102,-1), aux640)
reifyimply(diseq(aux123,-1), aux641)
reifyimply(w-literal(actionTo_00003,2), aux642)
ineq(aux644, aux135, 0)
ineq(aux645, aux151, 0)
reifyimply(ineq(3, actionFrom_00004, 0), aux646)
reifyimply(diseq(aux106,-1), aux647)
reifyimply(diseq(aux122,-1), aux648)
reifyimply(w-literal(actionTo_00004,2), aux649)
ineq(aux651, aux139, 0)
ineq(aux652, aux166, 0)
reifyimply(ineq(3, actionFrom_00005, 0), aux653)
reifyimply(diseq(aux101,-1), aux654)
reifyimply(diseq(aux127,-1), aux655)
reifyimply(w-literal(actionTo_00005,2), aux656)
ineq(aux658, aux138, 0)
ineq(aux659, aux160, 0)
reifyimply(ineq(3, actionFrom_00006, 0), aux660)
reifyimply(diseq(aux115,-1), aux661)
reifyimply(diseq(aux126,-1), aux662)
reifyimply(w-literal(actionTo_00006,2), aux663)
ineq(aux665, aux137, 0)
ineq(aux666, aux173, 0)
reifyimply(ineq(3, actionFrom_00007, 0), aux667)
reifyimply(diseq(aux110,-1), aux668)
reifyimply(diseq(aux125,-1), aux669)
reifyimply(w-literal(actionTo_00007,2), aux670)
ineq(aux672, aux133, 0)
ineq(aux673, aux129, 0)
reifyimply(ineq(3, actionFrom_00008, 0), aux674)
reifyimply(diseq(aux105,-1), aux675)
reifyimply(diseq(aux124,-1), aux676)
reifyimply(w-literal(actionTo_00008,2), aux677)
ineq(aux679, aux132, 0)
ineq(aux680, aux155, 0)
reifyimply(ineq(3, actionFrom_00009, 0), aux681)
reifyimply(diseq(aux97,-1), aux682)
reifyimply(diseq(aux120,-1), aux683)
reifyimply(w-literal(actionTo_00009,2), aux684)
ineq(aux686, aux134, 0)
ineq(aux687, aux172, 0)
reifyimply(ineq(3, actionFrom_00010, 0), aux688)
reifyimply(diseq(aux94,-1), aux689)
reifyimply(diseq(aux121,-1), aux690)
reifyimply(w-literal(actionTo_00010,2), aux691)
ineq(aux693, aux158, 0)
ineq(aux694, aux150, 0)
reifyimply(ineq(3, actionFrom_00011, 0), aux695)
reifyimply(diseq(aux113,-1), aux696)
reifyimply(diseq(aux117,-1), aux697)
reifyimply(w-literal(actionTo_00011,2), aux698)
ineq(aux700, aux157, 0)
ineq(aux701, aux149, 0)
reifyimply(ineq(3, actionFrom_00012, 0), aux702)
reifyimply(diseq(aux108,-1), aux703)
reifyimply(diseq(aux118,-1), aux704)
reifyimply(w-literal(actionTo_00012,2), aux705)
ineq(aux707, aux156, 0)
ineq(aux708, aux161, 0)
reifyimply(ineq(3, actionFrom_00013, 0), aux709)
reifyimply(diseq(aux95,-1), aux710)
reifyimply(diseq(aux119,-1), aux711)
reifyimply(w-literal(actionTo_00013,2), aux712)
ineq(aux714, aux153, 0)
ineq(aux715, aux174, 0)
ineq(aux716, aux68, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux717)
reifyimply(w-literal(actionTo_00002,2), aux718)
ineq(aux719, aux136, 0)
ineq(aux720, aux142, 0)
reifyimply(diseq(aux98,-1), aux721)
ineq(aux723, aux70, 0)
reifyimply(ineq(3, actionFrom_00003, 0), aux724)
reifyimply(w-literal(actionTo_00003,2), aux725)
ineq(aux726, aux135, 0)
ineq(aux727, aux151, 0)
reifyimply(diseq(aux96,-1), aux728)
ineq(aux730, aux69, 0)
reifyimply(ineq(3, actionFrom_00004, 0), aux731)
reifyimply(w-literal(actionTo_00004,2), aux732)
ineq(aux733, aux139, 0)
ineq(aux734, aux166, 0)
reifyimply(diseq(aux100,-1), aux735)
ineq(aux737, aux64, 0)
reifyimply(ineq(3, actionFrom_00005, 0), aux738)
reifyimply(w-literal(actionTo_00005,2), aux739)
ineq(aux740, aux138, 0)
ineq(aux741, aux160, 0)
reifyimply(diseq(aux128,-1), aux742)
ineq(aux744, aux63, 0)
reifyimply(ineq(3, actionFrom_00006, 0), aux745)
reifyimply(w-literal(actionTo_00006,2), aux746)
ineq(aux747, aux137, 0)
ineq(aux748, aux173, 0)
reifyimply(diseq(aux112,-1), aux749)
ineq(aux751, aux67, 0)
reifyimply(ineq(3, actionFrom_00007, 0), aux752)
reifyimply(w-literal(actionTo_00007,2), aux753)
ineq(aux754, aux133, 0)
ineq(aux755, aux129, 0)
reifyimply(diseq(aux104,-1), aux756)
ineq(aux758, aux66, 0)
reifyimply(ineq(3, actionFrom_00008, 0), aux759)
reifyimply(w-literal(actionTo_00008,2), aux760)
ineq(aux761, aux132, 0)
ineq(aux762, aux155, 0)
reifyimply(diseq(aux99,-1), aux763)
ineq(aux765, aux65, 0)
reifyimply(ineq(3, actionFrom_00009, 0), aux766)
reifyimply(w-literal(actionTo_00009,2), aux767)
ineq(aux768, aux134, 0)
ineq(aux769, aux172, 0)
reifyimply(diseq(aux114,-1), aux770)
ineq(aux772, aux60, 0)
reifyimply(ineq(3, actionFrom_00010, 0), aux773)
reifyimply(w-literal(actionTo_00010,2), aux774)
ineq(aux775, aux158, 0)
ineq(aux776, aux150, 0)
reifyimply(diseq(aux111,-1), aux777)
ineq(aux779, aux62, 0)
reifyimply(ineq(3, actionFrom_00011, 0), aux780)
reifyimply(w-literal(actionTo_00011,2), aux781)
ineq(aux782, aux157, 0)
ineq(aux783, aux149, 0)
reifyimply(diseq(aux109,-1), aux784)
ineq(aux786, aux61, 0)
reifyimply(ineq(3, actionFrom_00012, 0), aux787)
reifyimply(w-literal(actionTo_00012,2), aux788)
ineq(aux789, aux156, 0)
ineq(aux790, aux161, 0)
reifyimply(diseq(aux103,-1), aux791)
ineq(aux793, aux59, 0)
reifyimply(ineq(3, actionFrom_00013, 0), aux794)
reifyimply(w-literal(actionTo_00013,2), aux795)
ineq(aux796, aux153, 0)
ineq(aux797, aux174, 0)
reifyimply(diseq(aux93,-1), aux798)
reifyimply(gaceq(aux107,statePlaces_00002_00002), aux800)
reifyimply(ineq(3, actionFrom_00002, 0), aux801)
reifyimply(w-literal(actionTo_00002,2), aux802)
ineq(aux804, aux142, 0)
reifyimply(diseq(aux98,-1), aux805)
reifyimply(gaceq(aux102,statePlaces_00002_00003), aux806)
reifyimply(ineq(3, actionFrom_00003, 0), aux807)
reifyimply(w-literal(actionTo_00003,2), aux808)
ineq(aux810, aux151, 0)
reifyimply(diseq(aux96,-1), aux811)
reifyimply(gaceq(aux106,statePlaces_00002_00004), aux812)
reifyimply(ineq(3, actionFrom_00004, 0), aux813)
reifyimply(w-literal(actionTo_00004,2), aux814)
ineq(aux816, aux166, 0)
reifyimply(diseq(aux100,-1), aux817)
reifyimply(gaceq(aux101,statePlaces_00002_00005), aux818)
reifyimply(ineq(3, actionFrom_00005, 0), aux819)
reifyimply(w-literal(actionTo_00005,2), aux820)
ineq(aux822, aux160, 0)
reifyimply(diseq(aux128,-1), aux823)
reifyimply(gaceq(aux115,statePlaces_00002_00006), aux824)
reifyimply(ineq(3, actionFrom_00006, 0), aux825)
reifyimply(w-literal(actionTo_00006,2), aux826)
ineq(aux828, aux173, 0)
reifyimply(diseq(aux112,-1), aux829)
reifyimply(gaceq(aux110,statePlaces_00002_00007), aux830)
reifyimply(ineq(3, actionFrom_00007, 0), aux831)
reifyimply(w-literal(actionTo_00007,2), aux832)
ineq(aux834, aux129, 0)
reifyimply(diseq(aux104,-1), aux835)
reifyimply(gaceq(aux105,statePlaces_00002_00008), aux836)
reifyimply(ineq(3, actionFrom_00008, 0), aux837)
reifyimply(w-literal(actionTo_00008,2), aux838)
ineq(aux840, aux155, 0)
reifyimply(diseq(aux99,-1), aux841)
reifyimply(gaceq(aux97,statePlaces_00002_00009), aux842)
reifyimply(ineq(3, actionFrom_00009, 0), aux843)
reifyimply(w-literal(actionTo_00009,2), aux844)
ineq(aux846, aux172, 0)
reifyimply(diseq(aux114,-1), aux847)
reifyimply(gaceq(aux94,statePlaces_00002_00010), aux848)
reifyimply(ineq(3, actionFrom_00010, 0), aux849)
reifyimply(w-literal(actionTo_00010,2), aux850)
ineq(aux852, aux150, 0)
reifyimply(diseq(aux111,-1), aux853)
reifyimply(gaceq(aux113,statePlaces_00002_00011), aux854)
reifyimply(ineq(3, actionFrom_00011, 0), aux855)
reifyimply(w-literal(actionTo_00011,2), aux856)
ineq(aux858, aux149, 0)
reifyimply(diseq(aux109,-1), aux859)
reifyimply(gaceq(aux108,statePlaces_00002_00012), aux860)
reifyimply(ineq(3, actionFrom_00012, 0), aux861)
reifyimply(w-literal(actionTo_00012,2), aux862)
ineq(aux864, aux161, 0)
reifyimply(diseq(aux103,-1), aux865)
reifyimply(w-literal(aux95,90), aux866)
reifyimply(ineq(3, actionFrom_00013, 0), aux867)
reifyimply(w-literal(actionTo_00013,2), aux868)
ineq(aux870, aux174, 0)
reifyimply(diseq(aux93,-1), aux871)
sumleq([pointers_00000_00002,-1],aux229)
sumgeq([pointers_00000_00002,-1],aux229)
sumleq([pointers_00000_00003,-1],aux235)
sumgeq([pointers_00000_00003,-1],aux235)
sumleq([pointers_00000_00004,-1],aux241)
sumgeq([pointers_00000_00004,-1],aux241)
sumleq([pointers_00000_00005,-1],aux247)
sumgeq([pointers_00000_00005,-1],aux247)
sumleq([pointers_00000_00006,-1],aux253)
sumgeq([pointers_00000_00006,-1],aux253)
sumleq([pointers_00000_00007,-1],aux259)
sumgeq([pointers_00000_00007,-1],aux259)
sumleq([pointers_00000_00008,-1],aux265)
sumgeq([pointers_00000_00008,-1],aux265)
sumleq([pointers_00000_00009,-1],aux271)
sumgeq([pointers_00000_00009,-1],aux271)
sumleq([pointers_00000_00010,-1],aux277)
sumgeq([pointers_00000_00010,-1],aux277)
sumleq([pointers_00000_00011,-1],aux283)
sumgeq([pointers_00000_00011,-1],aux283)
sumleq([pointers_00000_00012,-1],aux289)
sumgeq([pointers_00000_00012,-1],aux289)
sumleq([pointers_00001_00002,-1],aux297)
sumgeq([pointers_00001_00002,-1],aux297)
sumleq([pointers_00001_00003,-1],aux306)
sumgeq([pointers_00001_00003,-1],aux306)
sumleq([pointers_00001_00004,-1],aux315)
sumgeq([pointers_00001_00004,-1],aux315)
sumleq([pointers_00001_00005,-1],aux324)
sumgeq([pointers_00001_00005,-1],aux324)
sumleq([pointers_00001_00006,-1],aux333)
sumgeq([pointers_00001_00006,-1],aux333)
sumleq([pointers_00001_00007,-1],aux342)
sumgeq([pointers_00001_00007,-1],aux342)
sumleq([pointers_00001_00008,-1],aux351)
sumgeq([pointers_00001_00008,-1],aux351)
sumleq([pointers_00001_00009,-1],aux360)
sumgeq([pointers_00001_00009,-1],aux360)
sumleq([pointers_00001_00010,-1],aux369)
sumgeq([pointers_00001_00010,-1],aux369)
sumleq([pointers_00001_00011,-1],aux378)
sumgeq([pointers_00001_00011,-1],aux378)
sumleq([pointers_00001_00012,-1],aux387)
sumgeq([pointers_00001_00012,-1],aux387)
sumleq([actionFrom_00009,-2],aux130)
sumgeq([actionFrom_00009,-2],aux130)
sumleq([actionFrom_00012,-2],aux131)
sumgeq([actionFrom_00012,-2],aux131)
sumleq([actionFrom_00002,-2],aux140)
sumgeq([actionFrom_00002,-2],aux140)
sumleq([actionFrom_00013,-2],aux141)
sumgeq([actionFrom_00013,-2],aux141)
sumleq([actionFrom_00007,-2],aux143)
sumgeq([actionFrom_00007,-2],aux143)
sumleq([actionFrom_00010,-2],aux144)
sumgeq([actionFrom_00010,-2],aux144)
sumleq([actionTo_00012,-2],aux145)
sumgeq([actionTo_00012,-2],aux145)
sumleq([actionTo_00013,-2],aux146)
sumgeq([actionTo_00013,-2],aux146)
sumleq([actionTo_00011,-2],aux147)
sumgeq([actionTo_00011,-2],aux147)
sumleq([actionTo_00010,-2],aux148)
sumgeq([actionTo_00010,-2],aux148)
sumleq([actionFrom_00008,-2],aux152)
sumgeq([actionFrom_00008,-2],aux152)
sumleq([actionFrom_00011,-2],aux154)
sumgeq([actionFrom_00011,-2],aux154)
sumleq([actionFrom_00005,-2],aux159)
sumgeq([actionFrom_00005,-2],aux159)
sumleq([actionTo_00008,-2],aux162)
sumgeq([actionTo_00008,-2],aux162)
sumleq([actionTo_00009,-2],aux163)
sumgeq([actionTo_00009,-2],aux163)
sumleq([actionTo_00007,-2],aux164)
sumgeq([actionTo_00007,-2],aux164)
sumleq([actionTo_00006,-2],aux165)
sumgeq([actionTo_00006,-2],aux165)
sumleq([actionTo_00005,-2],aux167)
sumgeq([actionTo_00005,-2],aux167)
sumleq([actionTo_00004,-2],aux168)
sumgeq([actionTo_00004,-2],aux168)
sumleq([actionTo_00003,-2],aux169)
sumgeq([actionTo_00003,-2],aux169)
sumleq([actionTo_00002,-2],aux170)
sumgeq([actionTo_00002,-2],aux170)
sumleq([actionFrom_00006,-2],aux171)
sumgeq([actionFrom_00006,-2],aux171)
sumleq([actionFrom_00003,-2],aux175)
sumgeq([actionFrom_00003,-2],aux175)
sumleq([actionFrom_00004,-2],aux176)
sumgeq([actionFrom_00004,-2],aux176)
reifyimply(sumleq([pointers_00000_00002,1],pointers_00000_00003), aux230)
reifyimply(sumgeq([pointers_00000_00002,1],pointers_00000_00003), aux230)
reifyimply(sumleq([pointers_00000_00003,1],pointers_00000_00004), aux236)
reifyimply(sumgeq([pointers_00000_00003,1],pointers_00000_00004), aux236)
reifyimply(sumleq([pointers_00000_00004,1],pointers_00000_00005), aux242)
reifyimply(sumgeq([pointers_00000_00004,1],pointers_00000_00005), aux242)
reifyimply(sumleq([pointers_00000_00005,1],pointers_00000_00006), aux248)
reifyimply(sumgeq([pointers_00000_00005,1],pointers_00000_00006), aux248)
reifyimply(sumleq([pointers_00000_00006,1],pointers_00000_00007), aux254)
reifyimply(sumgeq([pointers_00000_00006,1],pointers_00000_00007), aux254)
reifyimply(sumleq([pointers_00000_00007,1],pointers_00000_00008), aux260)
reifyimply(sumgeq([pointers_00000_00007,1],pointers_00000_00008), aux260)
reifyimply(sumleq([pointers_00000_00008,1],pointers_00000_00009), aux266)
reifyimply(sumgeq([pointers_00000_00008,1],pointers_00000_00009), aux266)
reifyimply(sumleq([pointers_00000_00009,1],pointers_00000_00010), aux272)
reifyimply(sumgeq([pointers_00000_00009,1],pointers_00000_00010), aux272)
reifyimply(sumleq([pointers_00000_00010,1],pointers_00000_00011), aux278)
reifyimply(sumgeq([pointers_00000_00010,1],pointers_00000_00011), aux278)
reifyimply(sumleq([pointers_00000_00011,1],pointers_00000_00012), aux284)
reifyimply(sumgeq([pointers_00000_00011,1],pointers_00000_00012), aux284)
reifyimply(sumleq([pointers_00001_00002,1],pointers_00001_00003), aux301)
reifyimply(sumgeq([pointers_00001_00002,1],pointers_00001_00003), aux301)
reifyimply(sumleq([pointers_00001_00003,1],pointers_00001_00004), aux310)
reifyimply(sumgeq([pointers_00001_00003,1],pointers_00001_00004), aux310)
reifyimply(sumleq([pointers_00001_00004,1],pointers_00001_00005), aux319)
reifyimply(sumgeq([pointers_00001_00004,1],pointers_00001_00005), aux319)
reifyimply(sumleq([pointers_00001_00005,1],pointers_00001_00006), aux328)
reifyimply(sumgeq([pointers_00001_00005,1],pointers_00001_00006), aux328)
reifyimply(sumleq([pointers_00001_00006,1],pointers_00001_00007), aux337)
reifyimply(sumgeq([pointers_00001_00006,1],pointers_00001_00007), aux337)
reifyimply(sumleq([pointers_00001_00007,1],pointers_00001_00008), aux346)
reifyimply(sumgeq([pointers_00001_00007,1],pointers_00001_00008), aux346)
reifyimply(sumleq([pointers_00001_00008,1],pointers_00001_00009), aux355)
reifyimply(sumgeq([pointers_00001_00008,1],pointers_00001_00009), aux355)
reifyimply(sumleq([pointers_00001_00009,1],pointers_00001_00010), aux364)
reifyimply(sumgeq([pointers_00001_00009,1],pointers_00001_00010), aux364)
reifyimply(sumleq([pointers_00001_00010,1],pointers_00001_00011), aux373)
reifyimply(sumgeq([pointers_00001_00010,1],pointers_00001_00011), aux373)
reifyimply(sumleq([pointers_00001_00011,1],pointers_00001_00012), aux382)
reifyimply(sumgeq([pointers_00001_00011,1],pointers_00001_00012), aux382)
reifyimply(sumleq([aux107,3],statePlaces_00002_00002), aux543)
reifyimply(sumgeq([aux107,3],statePlaces_00002_00002), aux543)
reifyimply(sumleq([aux102,statePlaces_00002_00002],statePlaces_00002_00003), aux551)
reifyimply(sumgeq([aux102,statePlaces_00002_00002],statePlaces_00002_00003), aux551)
reifyimply(sumleq([aux106,statePlaces_00002_00003],statePlaces_00002_00004), aux559)
reifyimply(sumgeq([aux106,statePlaces_00002_00003],statePlaces_00002_00004), aux559)
reifyimply(sumleq([aux101,statePlaces_00002_00004],statePlaces_00002_00005), aux567)
reifyimply(sumgeq([aux101,statePlaces_00002_00004],statePlaces_00002_00005), aux567)
reifyimply(sumleq([aux115,statePlaces_00002_00005],statePlaces_00002_00006), aux575)
reifyimply(sumgeq([aux115,statePlaces_00002_00005],statePlaces_00002_00006), aux575)
reifyimply(sumleq([aux110,statePlaces_00002_00006],statePlaces_00002_00007), aux583)
reifyimply(sumgeq([aux110,statePlaces_00002_00006],statePlaces_00002_00007), aux583)
reifyimply(sumleq([aux105,statePlaces_00002_00007],statePlaces_00002_00008), aux591)
reifyimply(sumgeq([aux105,statePlaces_00002_00007],statePlaces_00002_00008), aux591)
reifyimply(sumleq([statePlaces_00002_00008,aux97],statePlaces_00002_00009), aux599)
reifyimply(sumgeq([statePlaces_00002_00008,aux97],statePlaces_00002_00009), aux599)
reifyimply(sumleq([statePlaces_00002_00009,aux94],statePlaces_00002_00010), aux607)
reifyimply(sumgeq([statePlaces_00002_00009,aux94],statePlaces_00002_00010), aux607)
reifyimply(sumleq([aux113,statePlaces_00002_00010],statePlaces_00002_00011), aux615)
reifyimply(sumgeq([aux113,statePlaces_00002_00010],statePlaces_00002_00011), aux615)
reifyimply(sumleq([aux108,statePlaces_00002_00011],statePlaces_00002_00012), aux623)
reifyimply(sumgeq([aux108,statePlaces_00002_00011],statePlaces_00002_00012), aux623)
reifyimply(sumleq([statePlaces_00002_00012,aux95],90), aux631)
reifyimply(sumgeq([statePlaces_00002_00012,aux95],90), aux631)
reifyimply(weightedsumleq([-1,1],[aux107,3],statePlaces_00002_00002), aux636)
reifyimply(weightedsumgeq([-1,1],[aux107,3],statePlaces_00002_00002), aux636)
reifyimply(weightedsumleq([-1,1],[aux102,statePlaces_00002_00002],statePlaces_00002_00003), aux643)
reifyimply(weightedsumgeq([-1,1],[aux102,statePlaces_00002_00002],statePlaces_00002_00003), aux643)
reifyimply(weightedsumleq([-1,1],[aux106,statePlaces_00002_00003],statePlaces_00002_00004), aux650)
reifyimply(weightedsumgeq([-1,1],[aux106,statePlaces_00002_00003],statePlaces_00002_00004), aux650)
reifyimply(weightedsumleq([-1,1],[aux101,statePlaces_00002_00004],statePlaces_00002_00005), aux657)
reifyimply(weightedsumgeq([-1,1],[aux101,statePlaces_00002_00004],statePlaces_00002_00005), aux657)
reifyimply(weightedsumleq([-1,1],[aux115,statePlaces_00002_00005],statePlaces_00002_00006), aux664)
reifyimply(weightedsumgeq([-1,1],[aux115,statePlaces_00002_00005],statePlaces_00002_00006), aux664)
reifyimply(weightedsumleq([-1,1],[aux110,statePlaces_00002_00006],statePlaces_00002_00007), aux671)
reifyimply(weightedsumgeq([-1,1],[aux110,statePlaces_00002_00006],statePlaces_00002_00007), aux671)
reifyimply(weightedsumleq([-1,1],[aux105,statePlaces_00002_00007],statePlaces_00002_00008), aux678)
reifyimply(weightedsumgeq([-1,1],[aux105,statePlaces_00002_00007],statePlaces_00002_00008), aux678)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00008,aux97],statePlaces_00002_00009), aux685)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00008,aux97],statePlaces_00002_00009), aux685)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00009,aux94],statePlaces_00002_00010), aux692)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00009,aux94],statePlaces_00002_00010), aux692)
reifyimply(weightedsumleq([-1,1],[aux113,statePlaces_00002_00010],statePlaces_00002_00011), aux699)
reifyimply(weightedsumgeq([-1,1],[aux113,statePlaces_00002_00010],statePlaces_00002_00011), aux699)
reifyimply(weightedsumleq([-1,1],[aux108,statePlaces_00002_00011],statePlaces_00002_00012), aux706)
reifyimply(weightedsumgeq([-1,1],[aux108,statePlaces_00002_00011],statePlaces_00002_00012), aux706)
reifyimply(weightedsumleq([1,-1],[statePlaces_00002_00012,aux95],90), aux713)
reifyimply(weightedsumgeq([1,-1],[statePlaces_00002_00012,aux95],90), aux713)
reifyimply(sumleq([1,aux98],aux107), aux722)
reifyimply(sumgeq([1,aux98],aux107), aux722)
reifyimply(sumleq([1,aux96],aux102), aux729)
reifyimply(sumgeq([1,aux96],aux102), aux729)
reifyimply(sumleq([aux100,1],aux106), aux736)
reifyimply(sumgeq([aux100,1],aux106), aux736)
reifyimply(sumleq([aux128,1],aux101), aux743)
reifyimply(sumgeq([aux128,1],aux101), aux743)
reifyimply(sumleq([aux112,1],aux115), aux750)
reifyimply(sumgeq([aux112,1],aux115), aux750)
reifyimply(sumleq([aux104,1],aux110), aux757)
reifyimply(sumgeq([aux104,1],aux110), aux757)
reifyimply(sumleq([1,aux99],aux105), aux764)
reifyimply(sumgeq([1,aux99],aux105), aux764)
reifyimply(sumleq([aux114,1],aux97), aux771)
reifyimply(sumgeq([aux114,1],aux97), aux771)
reifyimply(sumleq([aux111,1],aux94), aux778)
reifyimply(sumgeq([aux111,1],aux94), aux778)
reifyimply(sumleq([aux109,1],aux113), aux785)
reifyimply(sumgeq([aux109,1],aux113), aux785)
reifyimply(sumleq([aux103,1],aux108), aux792)
reifyimply(sumgeq([aux103,1],aux108), aux792)
reifyimply(sumleq([1,aux93],aux95), aux799)
reifyimply(sumgeq([1,aux93],aux95), aux799)
reifyimply(sumleq([-1,aux98],aux107), aux803)
reifyimply(sumgeq([-1,aux98],aux107), aux803)
reifyimply(sumleq([-1,aux96],aux102), aux809)
reifyimply(sumgeq([-1,aux96],aux102), aux809)
reifyimply(sumleq([aux100,-1],aux106), aux815)
reifyimply(sumgeq([aux100,-1],aux106), aux815)
reifyimply(sumleq([aux128,-1],aux101), aux821)
reifyimply(sumgeq([aux128,-1],aux101), aux821)
reifyimply(sumleq([aux112,-1],aux115), aux827)
reifyimply(sumgeq([aux112,-1],aux115), aux827)
reifyimply(sumleq([aux104,-1],aux110), aux833)
reifyimply(sumgeq([aux104,-1],aux110), aux833)
reifyimply(sumleq([-1,aux99],aux105), aux839)
reifyimply(sumgeq([-1,aux99],aux105), aux839)
reifyimply(sumleq([aux114,-1],aux97), aux845)
reifyimply(sumgeq([aux114,-1],aux97), aux845)
reifyimply(sumleq([aux111,-1],aux94), aux851)
reifyimply(sumgeq([aux111,-1],aux94), aux851)
reifyimply(sumleq([aux109,-1],aux113), aux857)
reifyimply(sumgeq([aux109,-1],aux113), aux857)
reifyimply(sumleq([aux103,-1],aux108), aux863)
reifyimply(sumgeq([aux103,-1],aux108), aux863)
reifyimply(sumleq([-1,aux93],aux95), aux869)
reifyimply(sumgeq([-1,aux93],aux95), aux869)
**EOF**
