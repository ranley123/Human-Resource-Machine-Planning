MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 168
# CSE_active_eliminated_expressions = 642
# CSE_active_total_size = 1189
**VARIABLES**
DISCRETE statePlaces_00002_00002 #
{-1..100}
DISCRETE statePlaces_00002_00003 #
{-1..100}
DISCRETE statePlaces_00002_00004 #
{-1..100}
DISCRETE statePlaces_00002_00005 #
{-1..100}
DISCRETE statePlaces_00002_00006 #
{-1..100}
DISCRETE statePlaces_00002_00007 #
{-1..100}
DISCRETE statePlaces_00002_00008 #
{-1..100}
DISCRETE statePlaces_00002_00009 #
{-1..100}
DISCRETE statePlaces_00002_00010 #
{-1..100}
DISCRETE statePlaces_00002_00011 #
{-1..100}
DISCRETE statePlaces_00002_00012 #
{-1..100}
DISCRETE statePlaces_00002_00013 #
{-1..100}
DISCRETE statePlaces_00002_00014 #
{-1..100}
DISCRETE statePlaces_00002_00015 #
{-1..100}
DISCRETE statePlaces_00002_00016 #
{-1..100}
DISCRETE statePlaces_00002_00017 #
{-1..100}
DISCRETE statePlaces_00003_00002 #
{-1..100}
DISCRETE statePlaces_00003_00003 #
{-1..100}
DISCRETE statePlaces_00003_00004 #
{-1..100}
DISCRETE statePlaces_00003_00005 #
{-1..100}
DISCRETE statePlaces_00003_00006 #
{-1..100}
DISCRETE statePlaces_00003_00007 #
{-1..100}
DISCRETE statePlaces_00003_00008 #
{-1..100}
DISCRETE statePlaces_00003_00009 #
{-1..100}
DISCRETE statePlaces_00003_00010 #
{-1..100}
DISCRETE statePlaces_00003_00011 #
{-1..100}
DISCRETE statePlaces_00003_00012 #
{-1..100}
DISCRETE statePlaces_00003_00013 #
{-1..100}
DISCRETE statePlaces_00003_00014 #
{-1..100}
DISCRETE statePlaces_00003_00015 #
{-1..100}
DISCRETE statePlaces_00003_00016 #
{-1..100}
DISCRETE statePlaces_00003_00017 #
{-1..100}
DISCRETE statePlaces_00003_00018 #
{-1..100}
DISCRETE actionTypes_00002 #
{1..8}
DISCRETE actionTypes_00003 #
{1..8}
DISCRETE actionTypes_00004 #
{1..8}
DISCRETE actionTypes_00005 #
{1..8}
DISCRETE actionTypes_00006 #
{1..8}
DISCRETE actionTypes_00007 #
{1..8}
DISCRETE actionTypes_00008 #
{1..8}
DISCRETE actionTypes_00009 #
{1..8}
DISCRETE actionTypes_00010 #
{1..8}
DISCRETE actionTypes_00011 #
{1..8}
DISCRETE actionTypes_00012 #
{1..8}
DISCRETE actionTypes_00013 #
{1..8}
DISCRETE actionTypes_00014 #
{1..8}
DISCRETE actionTypes_00015 #
{1..8}
DISCRETE actionTypes_00016 #
{1..8}
DISCRETE actionTypes_00017 #
{1..8}
DISCRETE actionTypes_00018 #
{1..8}
DISCRETE actionFrom_00002 #
{0..3}
DISCRETE actionFrom_00003 #
{0..3}
DISCRETE actionFrom_00004 #
{0..3}
DISCRETE actionFrom_00005 #
{0..3}
DISCRETE actionFrom_00006 #
{0..3}
DISCRETE actionFrom_00007 #
{0..3}
DISCRETE actionFrom_00008 #
{0..3}
DISCRETE actionFrom_00009 #
{0..3}
DISCRETE actionFrom_00010 #
{0..3}
DISCRETE actionFrom_00011 #
{0..3}
DISCRETE actionFrom_00012 #
{0..3}
DISCRETE actionFrom_00013 #
{0..3}
DISCRETE actionFrom_00014 #
{0..3}
DISCRETE actionFrom_00015 #
{0..3}
DISCRETE actionFrom_00016 #
{0..3}
DISCRETE actionFrom_00017 #
{0..3}
DISCRETE actionFrom_00018 #
{0..3}
DISCRETE actionTo_00002 #
{0..3}
DISCRETE actionTo_00003 #
{0..3}
DISCRETE actionTo_00004 #
{0..3}
DISCRETE actionTo_00005 #
{0..3}
DISCRETE actionTo_00006 #
{0..3}
DISCRETE actionTo_00007 #
{0..3}
DISCRETE actionTo_00008 #
{0..3}
DISCRETE actionTo_00009 #
{0..3}
DISCRETE actionTo_00010 #
{0..3}
DISCRETE actionTo_00011 #
{0..3}
DISCRETE actionTo_00012 #
{0..3}
DISCRETE actionTo_00013 #
{0..3}
DISCRETE actionTo_00014 #
{0..3}
DISCRETE actionTo_00015 #
{0..3}
DISCRETE actionTo_00016 #
{0..3}
DISCRETE actionTo_00017 #
{0..3}
DISCRETE actionTo_00018 #
{0..3}
DISCRETE pointers_00000_00002 #
{0..4}
DISCRETE pointers_00000_00003 #
{0..4}
DISCRETE pointers_00000_00004 #
{0..4}
DISCRETE pointers_00000_00005 #
{0..4}
DISCRETE pointers_00000_00006 #
{0..4}
DISCRETE pointers_00000_00007 #
{0..4}
DISCRETE pointers_00000_00008 #
{0..4}
DISCRETE pointers_00000_00009 #
{0..4}
DISCRETE pointers_00000_00010 #
{0..4}
DISCRETE pointers_00000_00011 #
{0..4}
DISCRETE pointers_00000_00012 #
{0..4}
DISCRETE pointers_00000_00013 #
{0..4}
DISCRETE pointers_00000_00014 #
{0..4}
DISCRETE pointers_00000_00015 #
{0..4}
DISCRETE pointers_00000_00016 #
{0..4}
DISCRETE pointers_00000_00017 #
{0..4}
DISCRETE pointers_00000_00019 #
{0..4}
DISCRETE pointers_00001_00002 #
{0..3}
DISCRETE pointers_00001_00003 #
{0..3}
DISCRETE pointers_00001_00004 #
{0..3}
DISCRETE pointers_00001_00005 #
{0..3}
DISCRETE pointers_00001_00006 #
{0..3}
DISCRETE pointers_00001_00007 #
{0..3}
DISCRETE pointers_00001_00008 #
{0..3}
DISCRETE pointers_00001_00009 #
{0..3}
DISCRETE pointers_00001_00010 #
{0..3}
DISCRETE pointers_00001_00011 #
{0..3}
DISCRETE pointers_00001_00012 #
{0..3}
DISCRETE pointers_00001_00013 #
{0..3}
DISCRETE pointers_00001_00014 #
{0..3}
DISCRETE pointers_00001_00015 #
{0..3}
DISCRETE pointers_00001_00016 #
{0..3}
DISCRETE pointers_00001_00017 #
{0..3}
BOOL aux53 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00017, statePlaces_00003_00017], (actionTo_00017 + -2))=SafeElement([statePlaces_00002_00017, statePlaces_00003_00017], (actionFrom_00017 + -2)))
BOOL aux54 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00014, statePlaces_00003_00014], (actionTo_00014 + -2))=SafeElement([statePlaces_00002_00014, statePlaces_00003_00014], (actionFrom_00014 + -2)))
BOOL aux55 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00013, statePlaces_00003_00013], (actionTo_00013 + -2))=SafeElement([statePlaces_00002_00013, statePlaces_00003_00013], (actionFrom_00013 + -2)))
BOOL aux56 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00016, statePlaces_00003_00016], (actionTo_00016 + -2))=SafeElement([statePlaces_00002_00016, statePlaces_00003_00016], (actionFrom_00016 + -2)))
BOOL aux57 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00015, statePlaces_00003_00015], (actionTo_00015 + -2))=SafeElement([statePlaces_00002_00015, statePlaces_00003_00015], (actionFrom_00015 + -2)))
BOOL aux58 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionTo_00010 + -2))=SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionFrom_00010 + -2)))
BOOL aux59 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionTo_00012 + -2))=SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionFrom_00012 + -2)))
BOOL aux60 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionTo_00011 + -2))=SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionFrom_00011 + -2)))
BOOL aux61 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([1, statePlaces_00003_00018], (actionFrom_00018 + -2))=SafeElement([1, statePlaces_00003_00018], (actionTo_00018 + -2)))
BOOL aux62 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionTo_00006 + -2))=SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionFrom_00006 + -2)))
BOOL aux63 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionTo_00005 + -2))=SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionFrom_00005 + -2)))
BOOL aux64 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionTo_00009 + -2))=SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionFrom_00009 + -2)))
BOOL aux65 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionTo_00008 + -2))=SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionFrom_00008 + -2)))
BOOL aux66 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionTo_00007 + -2))=SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionFrom_00007 + -2)))
BOOL aux67 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionTo_00002 + -2))=SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionFrom_00002 + -2)))
BOOL aux68 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionTo_00004 + -2))=SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionFrom_00004 + -2)))
BOOL aux69 #Active-CSE: 3 occurrences of this expression or equivalent: (SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionTo_00003 + -2))=SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionFrom_00003 + -2)))
BOOL aux70 #Active-CSE: 2 occurrences of this expression or equivalent: ([1, statePlaces_00003_00018;int(2..3)] <lex [statePlaces_00002_00017, statePlaces_00003_00017;int(2..3)])
BOOL aux71 #Active-CSE: 2 occurrences of this expression or equivalent: ([1, statePlaces_00003_00018;int(2..3)] <lex [statePlaces_00002_00016, statePlaces_00003_00016;int(2..3)])
BOOL aux72 #Active-CSE: 2 occurrences of this expression or equivalent: ([1, statePlaces_00003_00018;int(2..3)] <lex [statePlaces_00002_00015, statePlaces_00003_00015;int(2..3)])
BOOL aux73 #Active-CSE: 2 occurrences of this expression or equivalent: ([1, statePlaces_00003_00018;int(2..3)] <lex [statePlaces_00002_00014, statePlaces_00003_00014;int(2..3)])
BOOL aux74 #Active-CSE: 2 occurrences of this expression or equivalent: ([1, statePlaces_00003_00018;int(2..3)] <lex [statePlaces_00002_00013, statePlaces_00003_00013;int(2..3)])
BOOL aux75 #Active-CSE: 2 occurrences of this expression or equivalent: ([1, statePlaces_00003_00018;int(2..3)] <lex [statePlaces_00002_00012, statePlaces_00003_00012;int(2..3)])
BOOL aux76 #Active-CSE: 2 occurrences of this expression or equivalent: ([1, statePlaces_00003_00018;int(2..3)] <lex [statePlaces_00002_00011, statePlaces_00003_00011;int(2..3)])
BOOL aux77 #Active-CSE: 2 occurrences of this expression or equivalent: ([1, statePlaces_00003_00018;int(2..3)] <lex [statePlaces_00002_00010, statePlaces_00003_00010;int(2..3)])
BOOL aux78 #Active-CSE: 2 occurrences of this expression or equivalent: ([1, statePlaces_00003_00018;int(2..3)] <lex [statePlaces_00002_00009, statePlaces_00003_00009;int(2..3)])
BOOL aux79 #Active-CSE: 2 occurrences of this expression or equivalent: ([1, statePlaces_00003_00018;int(2..3)] <lex [statePlaces_00002_00008, statePlaces_00003_00008;int(2..3)])
BOOL aux80 #Active-CSE: 2 occurrences of this expression or equivalent: ([1, statePlaces_00003_00018;int(2..3)] <lex [statePlaces_00002_00006, statePlaces_00003_00006;int(2..3)])
BOOL aux81 #Active-CSE: 2 occurrences of this expression or equivalent: ([1, statePlaces_00003_00018;int(2..3)] <lex [statePlaces_00002_00007, statePlaces_00003_00007;int(2..3)])
BOOL aux82 #Active-CSE: 2 occurrences of this expression or equivalent: ([1, statePlaces_00003_00018;int(2..3)] <lex [statePlaces_00002_00004, statePlaces_00003_00004;int(2..3)])
BOOL aux83 #Active-CSE: 2 occurrences of this expression or equivalent: ([1, statePlaces_00003_00018;int(2..3)] <lex [statePlaces_00002_00005, statePlaces_00003_00005;int(2..3)])
BOOL aux84 #Active-CSE: 2 occurrences of this expression or equivalent: ([1, statePlaces_00003_00018;int(2..3)] <lex [statePlaces_00002_00002, statePlaces_00003_00002;int(2..3)])
BOOL aux85 #Active-CSE: 2 occurrences of this expression or equivalent: ([1, statePlaces_00003_00018;int(2..3)] <lex [statePlaces_00002_00003, statePlaces_00003_00003;int(2..3)])
BOOL aux86 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00011, statePlaces_00003_00011;int(2..3)] <lex [1, statePlaces_00003_00018;int(2..3)])
BOOL aux87 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00012, statePlaces_00003_00012;int(2..3)] <lex [1, statePlaces_00003_00018;int(2..3)])
BOOL aux88 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00013, statePlaces_00003_00013;int(2..3)] <lex [1, statePlaces_00003_00018;int(2..3)])
BOOL aux89 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00014, statePlaces_00003_00014;int(2..3)] <lex [1, statePlaces_00003_00018;int(2..3)])
BOOL aux90 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00016, statePlaces_00003_00016;int(2..3)] <lex [1, statePlaces_00003_00018;int(2..3)])
BOOL aux91 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00015, statePlaces_00003_00015;int(2..3)] <lex [1, statePlaces_00003_00018;int(2..3)])
BOOL aux92 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00017, statePlaces_00003_00017;int(2..3)] <lex [1, statePlaces_00003_00018;int(2..3)])
BOOL aux93 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00010, statePlaces_00003_00010;int(2..3)] <lex [1, statePlaces_00003_00018;int(2..3)])
BOOL aux94 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00009, statePlaces_00003_00009;int(2..3)] <lex [1, statePlaces_00003_00018;int(2..3)])
BOOL aux95 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00008, statePlaces_00003_00008;int(2..3)] <lex [1, statePlaces_00003_00018;int(2..3)])
BOOL aux96 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00007, statePlaces_00003_00007;int(2..3)] <lex [1, statePlaces_00003_00018;int(2..3)])
BOOL aux97 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00006, statePlaces_00003_00006;int(2..3)] <lex [1, statePlaces_00003_00018;int(2..3)])
BOOL aux98 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00005, statePlaces_00003_00005;int(2..3)] <lex [1, statePlaces_00003_00018;int(2..3)])
BOOL aux99 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00004, statePlaces_00003_00004;int(2..3)] <lex [1, statePlaces_00003_00018;int(2..3)])
BOOL aux100 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00003, statePlaces_00003_00003;int(2..3)] <lex [1, statePlaces_00003_00018;int(2..3)])
BOOL aux101 #Active-CSE: 2 occurrences of this expression or equivalent: ([statePlaces_00002_00002, statePlaces_00003_00002;int(2..3)] <lex [1, statePlaces_00003_00018;int(2..3)])
DISCRETE aux102 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionFrom_00013 + -2))
{-1..100}
DISCRETE aux103 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionFrom_00010 + -2))
{-1..100}
DISCRETE aux104 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionFrom_00003 + -2))
{-1..100}
DISCRETE aux105 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionFrom_00009 + -2))
{-1..100}
DISCRETE aux106 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00015, statePlaces_00003_00015], (actionFrom_00015 + -2))
{-1..100}
DISCRETE aux107 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionFrom_00008 + -2))
{-1..100}
DISCRETE aux108 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionFrom_00004 + -2))
{-1..100}
DISCRETE aux109 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00017, statePlaces_00003_00017], (actionFrom_00018 + -2))
{-1..100}
DISCRETE aux110 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionFrom_00005 + -2))
{-1..100}
DISCRETE aux111 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionFrom_00003 + -2))
{-1..100}
DISCRETE aux112 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionFrom_00012 + -2))
{-1..100}
DISCRETE aux113 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionFrom_00007 + -2))
{-1..100}
DISCRETE aux114 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionFrom_00008 + -2))
{-1..100}
DISCRETE aux115 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionFrom_00004 + -2))
{-1..100}
DISCRETE aux116 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00014, statePlaces_00003_00014], (actionFrom_00014 + -2))
{-1..100}
DISCRETE aux117 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00016, statePlaces_00003_00016], (actionFrom_00017 + -2))
{-1..100}
DISCRETE aux118 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionFrom_00002 + -2))
{-1..100}
DISCRETE aux119 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00014, statePlaces_00003_00014], (actionFrom_00015 + -2))
{-1..100}
DISCRETE aux120 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionFrom_00012 + -2))
{-1..100}
DISCRETE aux121 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionFrom_00011 + -2))
{-1..100}
DISCRETE aux122 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00017, statePlaces_00003_00017], (actionFrom_00017 + -2))
{-1..100}
DISCRETE aux123 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionFrom_00007 + -2))
{-1..100}
DISCRETE aux124 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00013, statePlaces_00003_00013], (actionFrom_00013 + -2))
{-1..100}
DISCRETE aux125 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionFrom_00010 + -2))
{-1..100}
DISCRETE aux126 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00015, statePlaces_00003_00015], (actionFrom_00016 + -2))
{-1..100}
DISCRETE aux127 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionFrom_00006 + -2))
{-1..100}
DISCRETE aux128 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([1, statePlaces_00003_00018], (actionFrom_00018 + -2))
{-1..100}
DISCRETE aux129 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([6, -1], (actionFrom_00002 + -2))
{-1..6}
**CONSTRAINTS**
w-inintervalset(aux129, [-1,0,6,6])
**VARIABLES**
DISCRETE aux130 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00013, statePlaces_00003_00013], (actionFrom_00014 + -2))
{-1..100}
DISCRETE aux131 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionFrom_00011 + -2))
{-1..100}
DISCRETE aux132 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionFrom_00009 + -2))
{-1..100}
DISCRETE aux133 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionFrom_00006 + -2))
{-1..100}
DISCRETE aux134 #Active-CSE: 9 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00016, statePlaces_00003_00016], (actionFrom_00016 + -2))
{-1..100}
DISCRETE aux135 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([6, -1], (actionTo_00002 + -2))
{-1..6}
**CONSTRAINTS**
w-inintervalset(aux135, [-1,0,6,6])
**VARIABLES**
DISCRETE aux136 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00010, statePlaces_00003_00010], (actionTo_00011 + -2))
{-1..100}
DISCRETE aux137 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00015, statePlaces_00003_00015], (actionTo_00016 + -2))
{-1..100}
DISCRETE aux138 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00016, statePlaces_00003_00016], (actionTo_00017 + -2))
{-1..100}
DISCRETE aux139 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00017, statePlaces_00003_00017], (actionTo_00018 + -2))
{-1..100}
DISCRETE aux140 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00011, statePlaces_00003_00011], (actionTo_00012 + -2))
{-1..100}
DISCRETE aux141 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00012, statePlaces_00003_00012], (actionTo_00013 + -2))
{-1..100}
DISCRETE aux142 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00013, statePlaces_00003_00013], (actionTo_00014 + -2))
{-1..100}
DISCRETE aux143 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00014, statePlaces_00003_00014], (actionTo_00015 + -2))
{-1..100}
DISCRETE aux144 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00008, statePlaces_00003_00008], (actionTo_00009 + -2))
{-1..100}
DISCRETE aux145 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00009, statePlaces_00003_00009], (actionTo_00010 + -2))
{-1..100}
DISCRETE aux146 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00003, statePlaces_00003_00003], (actionTo_00004 + -2))
{-1..100}
DISCRETE aux147 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00002, statePlaces_00003_00002], (actionTo_00003 + -2))
{-1..100}
DISCRETE aux148 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00007, statePlaces_00003_00007], (actionTo_00008 + -2))
{-1..100}
DISCRETE aux149 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00006, statePlaces_00003_00006], (actionTo_00007 + -2))
{-1..100}
DISCRETE aux150 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00005, statePlaces_00003_00005], (actionTo_00006 + -2))
{-1..100}
DISCRETE aux151 #Active-CSE: 2 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionTo_00005 + -2))
{-1..100}
DISCRETE aux152 #Active-CSE: 5 occurrences of this expression or equivalent: SafeElement([statePlaces_00002_00004, statePlaces_00003_00004], (actionFrom_00005 + -2))
{-1..100}
BOOL aux153 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00007 in int(2..3))
DISCRETE aux154 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00009 + -2)
{-2..1}
DISCRETE aux155 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00012 + -2)
{-2..1}
BOOL aux156 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00008 in int(2..3))
BOOL aux157 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00007 in int(2..3))
BOOL aux158 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00009 in int(2..3))
BOOL aux159 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00003 in int(2..3))
BOOL aux160 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00002 in int(2..3))
BOOL aux161 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00006 in int(2..3))
BOOL aux162 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00005 in int(2..3))
BOOL aux163 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00004 in int(2..3))
DISCRETE aux164 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00002 + -2)
{-2..1}
DISCRETE aux165 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00013 + -2)
{-2..1}
BOOL aux166 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00002 in int(2..3))
BOOL aux167 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00014 in int(2..3))
DISCRETE aux168 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00007 + -2)
{-2..1}
DISCRETE aux169 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00016 + -2)
{-2..1}
DISCRETE aux170 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00015 + -2)
{-2..1}
DISCRETE aux171 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00010 + -2)
{-2..1}
DISCRETE aux172 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00018 + -2)
{-2..1}
DISCRETE aux173 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00014 + -2)
{-2..1}
DISCRETE aux174 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00012 + -2)
{-2..1}
DISCRETE aux175 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00013 + -2)
{-2..1}
DISCRETE aux176 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00011 + -2)
{-2..1}
DISCRETE aux177 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00010 + -2)
{-2..1}
BOOL aux178 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00011 in int(2..3))
BOOL aux179 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00010 in int(2..3))
BOOL aux180 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00018 in int(2..3))
BOOL aux181 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00017 in int(2..3))
DISCRETE aux182 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00018 + -2)
{-2..1}
BOOL aux183 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00003 in int(2..3))
DISCRETE aux184 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00017 + -2)
{-2..1}
BOOL aux185 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00014 in int(2..3))
DISCRETE aux186 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00008 + -2)
{-2..1}
BOOL aux187 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00015 in int(2..3))
BOOL aux188 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00013 in int(2..3))
DISCRETE aux189 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00011 + -2)
{-2..1}
BOOL aux190 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00016 in int(2..3))
BOOL aux191 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00015 in int(2..3))
BOOL aux192 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00008 in int(2..3))
BOOL aux193 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00012 in int(2..3))
BOOL aux194 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00011 in int(2..3))
BOOL aux195 #Active-CSE: 5 occurrences of this expression or equivalent: (actionTo_00010 in int(2..3))
DISCRETE aux196 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00005 + -2)
{-2..1}
BOOL aux197 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00005 in int(2..3))
DISCRETE aux198 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00016 + -2)
{-2..1}
BOOL aux199 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00012 in int(2..3))
DISCRETE aux200 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00008 + -2)
{-2..1}
DISCRETE aux201 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00009 + -2)
{-2..1}
DISCRETE aux202 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00007 + -2)
{-2..1}
DISCRETE aux203 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00006 + -2)
{-2..1}
BOOL aux204 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00004 in int(2..3))
DISCRETE aux205 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00005 + -2)
{-2..1}
DISCRETE aux206 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00004 + -2)
{-2..1}
BOOL aux207 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00016 in int(2..3))
DISCRETE aux208 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00003 + -2)
{-2..1}
DISCRETE aux209 #Active-CSE: 2 occurrences of this expression or equivalent: (actionTo_00002 + -2)
{-2..1}
DISCRETE aux210 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00006 + -2)
{-2..1}
DISCRETE aux211 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00017 + -2)
{-2..1}
BOOL aux212 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00009 in int(2..3))
BOOL aux213 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00006 in int(2..3))
BOOL aux214 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00013 in int(2..3))
DISCRETE aux215 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00003 + -2)
{-2..1}
DISCRETE aux216 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00014 + -2)
{-2..1}
BOOL aux217 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00018 in int(2..3))
BOOL aux218 #Active-CSE: 6 occurrences of this expression or equivalent: (actionFrom_00017 in int(2..3))
DISCRETE aux219 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00004 + -2)
{-2..1}
DISCRETE aux220 #Active-CSE: 2 occurrences of this expression or equivalent: (actionFrom_00015 + -2)
{-2..1}
BOOL aux221 #(1 != actionTypes_00002)
BOOL aux222 #(1 != actionTypes_00003)
BOOL aux223 #(1 != actionTypes_00004)
BOOL aux224 #(1 != actionTypes_00005)
BOOL aux225 #(1 != actionTypes_00006)
BOOL aux226 #(1 != actionTypes_00007)
BOOL aux227 #(1 != actionTypes_00008)
BOOL aux228 #(1 != actionTypes_00009)
BOOL aux229 #(1 != actionTypes_00010)
BOOL aux230 #(1 != actionTypes_00011)
BOOL aux231 #(1 != actionTypes_00012)
BOOL aux232 #(1 != actionTypes_00013)
BOOL aux233 #(1 != actionTypes_00014)
BOOL aux234 #(1 != actionTypes_00015)
BOOL aux235 #(1 != actionTypes_00016)
BOOL aux236 #(1 != actionTypes_00017)
BOOL aux237 #(1 != actionTypes_00018)
BOOL aux238 #(2 != actionTypes_00002)
BOOL aux239 #(2 != actionTypes_00003)
BOOL aux240 #(2 != actionTypes_00004)
BOOL aux241 #(2 != actionTypes_00005)
BOOL aux242 #(2 != actionTypes_00006)
BOOL aux243 #(2 != actionTypes_00007)
BOOL aux244 #(2 != actionTypes_00008)
BOOL aux245 #(2 != actionTypes_00009)
BOOL aux246 #(2 != actionTypes_00010)
BOOL aux247 #(2 != actionTypes_00011)
BOOL aux248 #(2 != actionTypes_00012)
BOOL aux249 #(2 != actionTypes_00013)
BOOL aux250 #(2 != actionTypes_00014)
BOOL aux251 #(2 != actionTypes_00015)
BOOL aux252 #(2 != actionTypes_00016)
BOOL aux253 #(2 != actionTypes_00017)
BOOL aux254 #(2 != actionTypes_00018)
BOOL aux255 #(((7=actionTypes_00002) /\ (actionFrom_00002 != 3)) \/ ((8=actionTypes_00002) /\ (actionFrom_00002 != 3)) \/ (1=actionTypes_00002) \/ (2=actionTypes_00002) \/ (3=actionTypes_00002) \/ (5=actionTypes_00002) \/ (6=actionTypes_00002) \/ ((4=actionTypes_00002) /\ (actionTo_00002 != 3)))
BOOL aux256 #(((7=actionTypes_00003) /\ (actionFrom_00003 != 3)) \/ ((8=actionTypes_00003) /\ (actionFrom_00003 != 3)) \/ (1=actionTypes_00003) \/ (2=actionTypes_00003) \/ (3=actionTypes_00003) \/ (5=actionTypes_00003) \/ (6=actionTypes_00003) \/ ((4=actionTypes_00003) /\ (actionTo_00003 != 3)))
BOOL aux257 #(((7=actionTypes_00004) /\ (actionFrom_00004 != 3)) \/ ((8=actionTypes_00004) /\ (actionFrom_00004 != 3)) \/ (1=actionTypes_00004) \/ (2=actionTypes_00004) \/ (3=actionTypes_00004) \/ (5=actionTypes_00004) \/ (6=actionTypes_00004) \/ ((4=actionTypes_00004) /\ (actionTo_00004 != 3)))
BOOL aux258 #(((7=actionTypes_00005) /\ (actionFrom_00005 != 3)) \/ ((8=actionTypes_00005) /\ (actionFrom_00005 != 3)) \/ (1=actionTypes_00005) \/ (2=actionTypes_00005) \/ (3=actionTypes_00005) \/ (5=actionTypes_00005) \/ (6=actionTypes_00005) \/ ((4=actionTypes_00005) /\ (actionTo_00005 != 3)))
BOOL aux259 #(((7=actionTypes_00006) /\ (actionFrom_00006 != 3)) \/ ((8=actionTypes_00006) /\ (actionFrom_00006 != 3)) \/ (1=actionTypes_00006) \/ (2=actionTypes_00006) \/ (3=actionTypes_00006) \/ (5=actionTypes_00006) \/ (6=actionTypes_00006) \/ ((4=actionTypes_00006) /\ (actionTo_00006 != 3)))
BOOL aux260 #(((7=actionTypes_00007) /\ (actionFrom_00007 != 3)) \/ ((8=actionTypes_00007) /\ (actionFrom_00007 != 3)) \/ (1=actionTypes_00007) \/ (2=actionTypes_00007) \/ (3=actionTypes_00007) \/ (5=actionTypes_00007) \/ (6=actionTypes_00007) \/ ((4=actionTypes_00007) /\ (actionTo_00007 != 3)))
BOOL aux261 #(((7=actionTypes_00008) /\ (actionFrom_00008 != 3)) \/ ((8=actionTypes_00008) /\ (actionFrom_00008 != 3)) \/ (1=actionTypes_00008) \/ (2=actionTypes_00008) \/ (3=actionTypes_00008) \/ (5=actionTypes_00008) \/ (6=actionTypes_00008) \/ ((4=actionTypes_00008) /\ (actionTo_00008 != 3)))
BOOL aux262 #(((7=actionTypes_00009) /\ (actionFrom_00009 != 3)) \/ ((8=actionTypes_00009) /\ (actionFrom_00009 != 3)) \/ (1=actionTypes_00009) \/ (2=actionTypes_00009) \/ (3=actionTypes_00009) \/ (5=actionTypes_00009) \/ (6=actionTypes_00009) \/ ((4=actionTypes_00009) /\ (actionTo_00009 != 3)))
BOOL aux263 #(((7=actionTypes_00010) /\ (actionFrom_00010 != 3)) \/ ((8=actionTypes_00010) /\ (actionFrom_00010 != 3)) \/ (1=actionTypes_00010) \/ (2=actionTypes_00010) \/ (3=actionTypes_00010) \/ (5=actionTypes_00010) \/ (6=actionTypes_00010) \/ ((4=actionTypes_00010) /\ (actionTo_00010 != 3)))
BOOL aux264 #(((7=actionTypes_00011) /\ (actionFrom_00011 != 3)) \/ ((8=actionTypes_00011) /\ (actionFrom_00011 != 3)) \/ (1=actionTypes_00011) \/ (2=actionTypes_00011) \/ (3=actionTypes_00011) \/ (5=actionTypes_00011) \/ (6=actionTypes_00011) \/ ((4=actionTypes_00011) /\ (actionTo_00011 != 3)))
BOOL aux265 #(((7=actionTypes_00012) /\ (actionFrom_00012 != 3)) \/ ((8=actionTypes_00012) /\ (actionFrom_00012 != 3)) \/ (1=actionTypes_00012) \/ (2=actionTypes_00012) \/ (3=actionTypes_00012) \/ (5=actionTypes_00012) \/ (6=actionTypes_00012) \/ ((4=actionTypes_00012) /\ (actionTo_00012 != 3)))
BOOL aux266 #(((7=actionTypes_00013) /\ (actionFrom_00013 != 3)) \/ ((8=actionTypes_00013) /\ (actionFrom_00013 != 3)) \/ (1=actionTypes_00013) \/ (2=actionTypes_00013) \/ (3=actionTypes_00013) \/ (5=actionTypes_00013) \/ (6=actionTypes_00013) \/ ((4=actionTypes_00013) /\ (actionTo_00013 != 3)))
BOOL aux267 #(((7=actionTypes_00014) /\ (actionFrom_00014 != 3)) \/ ((8=actionTypes_00014) /\ (actionFrom_00014 != 3)) \/ (1=actionTypes_00014) \/ (2=actionTypes_00014) \/ (3=actionTypes_00014) \/ (5=actionTypes_00014) \/ (6=actionTypes_00014) \/ ((4=actionTypes_00014) /\ (actionTo_00014 != 3)))
BOOL aux268 #(((7=actionTypes_00015) /\ (actionFrom_00015 != 3)) \/ ((8=actionTypes_00015) /\ (actionFrom_00015 != 3)) \/ (1=actionTypes_00015) \/ (2=actionTypes_00015) \/ (3=actionTypes_00015) \/ (5=actionTypes_00015) \/ (6=actionTypes_00015) \/ ((4=actionTypes_00015) /\ (actionTo_00015 != 3)))
BOOL aux269 #(((7=actionTypes_00016) /\ (actionFrom_00016 != 3)) \/ ((8=actionTypes_00016) /\ (actionFrom_00016 != 3)) \/ (1=actionTypes_00016) \/ (2=actionTypes_00016) \/ (3=actionTypes_00016) \/ (5=actionTypes_00016) \/ (6=actionTypes_00016) \/ ((4=actionTypes_00016) /\ (actionTo_00016 != 3)))
BOOL aux270 #(((7=actionTypes_00017) /\ (actionFrom_00017 != 3)) \/ ((8=actionTypes_00017) /\ (actionFrom_00017 != 3)) \/ (1=actionTypes_00017) \/ (2=actionTypes_00017) \/ (3=actionTypes_00017) \/ (5=actionTypes_00017) \/ (6=actionTypes_00017) \/ ((4=actionTypes_00017) /\ (actionTo_00017 != 3)))
BOOL aux271 #(((7=actionTypes_00018) /\ (actionFrom_00018 != 3)) \/ ((8=actionTypes_00018) /\ (actionFrom_00018 != 3)) \/ (1=actionTypes_00018) \/ (2=actionTypes_00018) \/ (3=actionTypes_00018) \/ (5=actionTypes_00018) \/ (6=actionTypes_00018) \/ ((4=actionTypes_00018) /\ (actionTo_00018 != 3)))
BOOL aux272 #((2=actionTypes_00002) \/ (4=actionTypes_00002))
BOOL aux273 #((2=actionTypes_00003) \/ (4=actionTypes_00003))
BOOL aux274 #((2=actionTypes_00004) \/ (4=actionTypes_00004))
BOOL aux275 #((2=actionTypes_00005) \/ (4=actionTypes_00005))
BOOL aux276 #((2=actionTypes_00006) \/ (4=actionTypes_00006))
BOOL aux277 #((2=actionTypes_00007) \/ (4=actionTypes_00007))
BOOL aux278 #((2=actionTypes_00008) \/ (4=actionTypes_00008))
BOOL aux279 #((2=actionTypes_00009) \/ (4=actionTypes_00009))
BOOL aux280 #((2=actionTypes_00010) \/ (4=actionTypes_00010))
BOOL aux281 #((2=actionTypes_00011) \/ (4=actionTypes_00011))
BOOL aux282 #((2=actionTypes_00012) \/ (4=actionTypes_00012))
BOOL aux283 #((2=actionTypes_00013) \/ (4=actionTypes_00013))
BOOL aux284 #((2=actionTypes_00014) \/ (4=actionTypes_00014))
BOOL aux285 #((2=actionTypes_00015) \/ (4=actionTypes_00015))
BOOL aux286 #((2=actionTypes_00016) \/ (4=actionTypes_00016))
BOOL aux287 #((2=actionTypes_00017) \/ (4=actionTypes_00017))
BOOL aux288 #((2=actionTypes_00018) \/ (4=actionTypes_00018))
BOOL aux289 #(1=actionTypes_00002)
BOOL aux290 #(1=actionTypes_00002)
BOOL aux291 #(1=actionTypes_00002)
BOOL aux292 #(1=actionTypes_00002)
BOOL aux293 #(1=actionTypes_00002)
DISCRETE aux294 #(pointers_00000_00002 + -1)
{-1..3}
BOOL aux295 #(1=actionTypes_00003)
BOOL aux296 #(1=actionTypes_00003)
BOOL aux297 #(1=actionTypes_00003)
BOOL aux298 #(1=actionTypes_00003)
BOOL aux299 #(1=actionTypes_00003)
DISCRETE aux300 #(pointers_00000_00003 + -1)
{-1..3}
BOOL aux301 #(1=actionTypes_00004)
BOOL aux302 #(1=actionTypes_00004)
BOOL aux303 #(1=actionTypes_00004)
BOOL aux304 #(1=actionTypes_00004)
BOOL aux305 #(1=actionTypes_00004)
DISCRETE aux306 #(pointers_00000_00004 + -1)
{-1..3}
BOOL aux307 #(1=actionTypes_00005)
BOOL aux308 #(1=actionTypes_00005)
BOOL aux309 #(1=actionTypes_00005)
BOOL aux310 #(1=actionTypes_00005)
BOOL aux311 #(1=actionTypes_00005)
DISCRETE aux312 #(pointers_00000_00005 + -1)
{-1..3}
BOOL aux313 #(1=actionTypes_00006)
BOOL aux314 #(1=actionTypes_00006)
BOOL aux315 #(1=actionTypes_00006)
BOOL aux316 #(1=actionTypes_00006)
BOOL aux317 #(1=actionTypes_00006)
DISCRETE aux318 #(pointers_00000_00006 + -1)
{-1..3}
BOOL aux319 #(1=actionTypes_00007)
BOOL aux320 #(1=actionTypes_00007)
BOOL aux321 #(1=actionTypes_00007)
BOOL aux322 #(1=actionTypes_00007)
BOOL aux323 #(1=actionTypes_00007)
DISCRETE aux324 #(pointers_00000_00007 + -1)
{-1..3}
BOOL aux325 #(1=actionTypes_00008)
BOOL aux326 #(1=actionTypes_00008)
BOOL aux327 #(1=actionTypes_00008)
BOOL aux328 #(1=actionTypes_00008)
BOOL aux329 #(1=actionTypes_00008)
DISCRETE aux330 #(pointers_00000_00008 + -1)
{-1..3}
BOOL aux331 #(1=actionTypes_00009)
BOOL aux332 #(1=actionTypes_00009)
BOOL aux333 #(1=actionTypes_00009)
BOOL aux334 #(1=actionTypes_00009)
BOOL aux335 #(1=actionTypes_00009)
DISCRETE aux336 #(pointers_00000_00009 + -1)
{-1..3}
BOOL aux337 #(1=actionTypes_00010)
BOOL aux338 #(1=actionTypes_00010)
BOOL aux339 #(1=actionTypes_00010)
BOOL aux340 #(1=actionTypes_00010)
BOOL aux341 #(1=actionTypes_00010)
DISCRETE aux342 #(pointers_00000_00010 + -1)
{-1..3}
BOOL aux343 #(1=actionTypes_00011)
BOOL aux344 #(1=actionTypes_00011)
BOOL aux345 #(1=actionTypes_00011)
BOOL aux346 #(1=actionTypes_00011)
BOOL aux347 #(1=actionTypes_00011)
DISCRETE aux348 #(pointers_00000_00011 + -1)
{-1..3}
BOOL aux349 #(1=actionTypes_00012)
BOOL aux350 #(1=actionTypes_00012)
BOOL aux351 #(1=actionTypes_00012)
BOOL aux352 #(1=actionTypes_00012)
BOOL aux353 #(1=actionTypes_00012)
DISCRETE aux354 #(pointers_00000_00012 + -1)
{-1..3}
BOOL aux355 #(1=actionTypes_00013)
BOOL aux356 #(1=actionTypes_00013)
BOOL aux357 #(1=actionTypes_00013)
BOOL aux358 #(1=actionTypes_00013)
BOOL aux359 #(1=actionTypes_00013)
DISCRETE aux360 #(pointers_00000_00013 + -1)
{-1..3}
BOOL aux361 #(1=actionTypes_00014)
BOOL aux362 #(1=actionTypes_00014)
BOOL aux363 #(1=actionTypes_00014)
BOOL aux364 #(1=actionTypes_00014)
BOOL aux365 #(1=actionTypes_00014)
DISCRETE aux366 #(pointers_00000_00014 + -1)
{-1..3}
BOOL aux367 #(1=actionTypes_00015)
BOOL aux368 #(1=actionTypes_00015)
BOOL aux369 #(1=actionTypes_00015)
BOOL aux370 #(1=actionTypes_00015)
BOOL aux371 #(1=actionTypes_00015)
DISCRETE aux372 #(pointers_00000_00015 + -1)
{-1..3}
BOOL aux373 #(1=actionTypes_00016)
BOOL aux374 #(1=actionTypes_00016)
BOOL aux375 #(1=actionTypes_00016)
BOOL aux376 #(1=actionTypes_00016)
BOOL aux377 #(1=actionTypes_00016)
DISCRETE aux378 #(pointers_00000_00016 + -1)
{-1..3}
BOOL aux379 #(1=actionTypes_00017)
BOOL aux380 #(1=actionTypes_00017)
BOOL aux381 #(1=actionTypes_00017)
BOOL aux382 #(1=actionTypes_00017)
BOOL aux383 #(1=actionTypes_00017)
DISCRETE aux384 #(pointers_00000_00017 + -1)
{-1..3}
BOOL aux385 #(1=actionTypes_00018)
BOOL aux386 #(1=actionTypes_00018)
BOOL aux387 #(1=actionTypes_00018)
BOOL aux388 #(1=actionTypes_00018)
BOOL aux389 #(1=actionTypes_00018)
DISCRETE aux390 #(pointers_00000_00019 + -1)
{-1..3}
BOOL aux391 #(2=actionTypes_00002)
BOOL aux392 #(2=actionTypes_00002)
BOOL aux393 #(2=actionTypes_00002)
BOOL aux394 #(2=actionTypes_00002)
BOOL aux395 #(2=actionTypes_00002)
BOOL aux396 #(2=actionTypes_00002)
DISCRETE aux397 #(pointers_00001_00002 + -1)
{-1..2}
BOOL aux398 #(2=actionTypes_00003)
BOOL aux399 #(2=actionTypes_00003)
BOOL aux400 #(2=actionTypes_00003)
BOOL aux401 #(2=actionTypes_00003)
BOOL aux402 #(2=actionTypes_00003)
BOOL aux403 #(2=actionTypes_00003)
BOOL aux404 #(2=actionTypes_00003)
DISCRETE aux405 #(pointers_00001_00003 + -1)
{-1..2}
BOOL aux406 #(2=actionTypes_00004)
BOOL aux407 #(2=actionTypes_00004)
BOOL aux408 #(2=actionTypes_00004)
BOOL aux409 #(2=actionTypes_00004)
BOOL aux410 #(2=actionTypes_00004)
BOOL aux411 #(2=actionTypes_00004)
BOOL aux412 #(2=actionTypes_00004)
DISCRETE aux413 #(pointers_00001_00004 + -1)
{-1..2}
BOOL aux414 #(2=actionTypes_00005)
BOOL aux415 #(2=actionTypes_00005)
BOOL aux416 #(2=actionTypes_00005)
BOOL aux417 #(2=actionTypes_00005)
BOOL aux418 #(2=actionTypes_00005)
BOOL aux419 #(2=actionTypes_00005)
BOOL aux420 #(2=actionTypes_00005)
DISCRETE aux421 #(pointers_00001_00005 + -1)
{-1..2}
BOOL aux422 #(2=actionTypes_00006)
BOOL aux423 #(2=actionTypes_00006)
BOOL aux424 #(2=actionTypes_00006)
BOOL aux425 #(2=actionTypes_00006)
BOOL aux426 #(2=actionTypes_00006)
BOOL aux427 #(2=actionTypes_00006)
BOOL aux428 #(2=actionTypes_00006)
DISCRETE aux429 #(pointers_00001_00006 + -1)
{-1..2}
BOOL aux430 #(2=actionTypes_00007)
BOOL aux431 #(2=actionTypes_00007)
BOOL aux432 #(2=actionTypes_00007)
BOOL aux433 #(2=actionTypes_00007)
BOOL aux434 #(2=actionTypes_00007)
BOOL aux435 #(2=actionTypes_00007)
BOOL aux436 #(2=actionTypes_00007)
DISCRETE aux437 #(pointers_00001_00007 + -1)
{-1..2}
BOOL aux438 #(2=actionTypes_00008)
BOOL aux439 #(2=actionTypes_00008)
BOOL aux440 #(2=actionTypes_00008)
BOOL aux441 #(2=actionTypes_00008)
BOOL aux442 #(2=actionTypes_00008)
BOOL aux443 #(2=actionTypes_00008)
BOOL aux444 #(2=actionTypes_00008)
DISCRETE aux445 #(pointers_00001_00008 + -1)
{-1..2}
BOOL aux446 #(2=actionTypes_00009)
BOOL aux447 #(2=actionTypes_00009)
BOOL aux448 #(2=actionTypes_00009)
BOOL aux449 #(2=actionTypes_00009)
BOOL aux450 #(2=actionTypes_00009)
BOOL aux451 #(2=actionTypes_00009)
BOOL aux452 #(2=actionTypes_00009)
DISCRETE aux453 #(pointers_00001_00009 + -1)
{-1..2}
BOOL aux454 #(2=actionTypes_00010)
BOOL aux455 #(2=actionTypes_00010)
BOOL aux456 #(2=actionTypes_00010)
BOOL aux457 #(2=actionTypes_00010)
BOOL aux458 #(2=actionTypes_00010)
BOOL aux459 #(2=actionTypes_00010)
BOOL aux460 #(2=actionTypes_00010)
DISCRETE aux461 #(pointers_00001_00010 + -1)
{-1..2}
BOOL aux462 #(2=actionTypes_00011)
BOOL aux463 #(2=actionTypes_00011)
BOOL aux464 #(2=actionTypes_00011)
BOOL aux465 #(2=actionTypes_00011)
BOOL aux466 #(2=actionTypes_00011)
BOOL aux467 #(2=actionTypes_00011)
BOOL aux468 #(2=actionTypes_00011)
DISCRETE aux469 #(pointers_00001_00011 + -1)
{-1..2}
BOOL aux470 #(2=actionTypes_00012)
BOOL aux471 #(2=actionTypes_00012)
BOOL aux472 #(2=actionTypes_00012)
BOOL aux473 #(2=actionTypes_00012)
BOOL aux474 #(2=actionTypes_00012)
BOOL aux475 #(2=actionTypes_00012)
BOOL aux476 #(2=actionTypes_00012)
DISCRETE aux477 #(pointers_00001_00012 + -1)
{-1..2}
BOOL aux478 #(2=actionTypes_00013)
BOOL aux479 #(2=actionTypes_00013)
BOOL aux480 #(2=actionTypes_00013)
BOOL aux481 #(2=actionTypes_00013)
BOOL aux482 #(2=actionTypes_00013)
BOOL aux483 #(2=actionTypes_00013)
BOOL aux484 #(2=actionTypes_00013)
DISCRETE aux485 #(pointers_00001_00013 + -1)
{-1..2}
BOOL aux486 #(2=actionTypes_00014)
BOOL aux487 #(2=actionTypes_00014)
BOOL aux488 #(2=actionTypes_00014)
BOOL aux489 #(2=actionTypes_00014)
BOOL aux490 #(2=actionTypes_00014)
BOOL aux491 #(2=actionTypes_00014)
BOOL aux492 #(2=actionTypes_00014)
DISCRETE aux493 #(pointers_00001_00014 + -1)
{-1..2}
BOOL aux494 #(2=actionTypes_00015)
BOOL aux495 #(2=actionTypes_00015)
BOOL aux496 #(2=actionTypes_00015)
BOOL aux497 #(2=actionTypes_00015)
BOOL aux498 #(2=actionTypes_00015)
BOOL aux499 #(2=actionTypes_00015)
BOOL aux500 #(2=actionTypes_00015)
DISCRETE aux501 #(pointers_00001_00015 + -1)
{-1..2}
BOOL aux502 #(2=actionTypes_00016)
BOOL aux503 #(2=actionTypes_00016)
BOOL aux504 #(2=actionTypes_00016)
BOOL aux505 #(2=actionTypes_00016)
BOOL aux506 #(2=actionTypes_00016)
BOOL aux507 #(2=actionTypes_00016)
BOOL aux508 #(2=actionTypes_00016)
DISCRETE aux509 #(pointers_00001_00016 + -1)
{-1..2}
BOOL aux510 #(2=actionTypes_00017)
BOOL aux511 #(2=actionTypes_00017)
BOOL aux512 #(2=actionTypes_00017)
BOOL aux513 #(2=actionTypes_00017)
BOOL aux514 #(2=actionTypes_00017)
BOOL aux515 #(2=actionTypes_00017)
BOOL aux516 #(2=actionTypes_00017)
DISCRETE aux517 #(pointers_00001_00017 + -1)
{-1..2}
BOOL aux518 #(2=actionTypes_00018)
BOOL aux519 #(2=actionTypes_00018)
BOOL aux520 #(2=actionTypes_00018)
BOOL aux521 #(2=actionTypes_00018)
BOOL aux522 #(2=actionTypes_00018)
BOOL aux523 #(3=actionTypes_00002)
BOOL aux524 #(3=actionTypes_00002)
BOOL aux525 #(3=actionTypes_00002)
BOOL aux526 #(3=actionTypes_00002)
BOOL aux527 #(3=actionTypes_00002)
BOOL aux528 #(3=actionTypes_00002)
BOOL aux529 #(3=actionTypes_00003)
BOOL aux530 #(3=actionTypes_00003)
BOOL aux531 #(3=actionTypes_00003)
BOOL aux532 #(3=actionTypes_00003)
BOOL aux533 #(3=actionTypes_00003)
BOOL aux534 #(3=actionTypes_00003)
BOOL aux535 #(3=actionTypes_00004)
BOOL aux536 #(3=actionTypes_00004)
BOOL aux537 #(3=actionTypes_00004)
BOOL aux538 #(3=actionTypes_00004)
BOOL aux539 #(3=actionTypes_00004)
BOOL aux540 #(3=actionTypes_00004)
BOOL aux541 #(3=actionTypes_00005)
BOOL aux542 #(3=actionTypes_00005)
BOOL aux543 #(3=actionTypes_00005)
BOOL aux544 #(3=actionTypes_00005)
BOOL aux545 #(3=actionTypes_00005)
BOOL aux546 #(3=actionTypes_00005)
BOOL aux547 #(3=actionTypes_00006)
BOOL aux548 #(3=actionTypes_00006)
BOOL aux549 #(3=actionTypes_00006)
BOOL aux550 #(3=actionTypes_00006)
BOOL aux551 #(3=actionTypes_00006)
BOOL aux552 #(3=actionTypes_00006)
BOOL aux553 #(3=actionTypes_00007)
BOOL aux554 #(3=actionTypes_00007)
BOOL aux555 #(3=actionTypes_00007)
BOOL aux556 #(3=actionTypes_00007)
BOOL aux557 #(3=actionTypes_00007)
BOOL aux558 #(3=actionTypes_00007)
BOOL aux559 #(3=actionTypes_00008)
BOOL aux560 #(3=actionTypes_00008)
BOOL aux561 #(3=actionTypes_00008)
BOOL aux562 #(3=actionTypes_00008)
BOOL aux563 #(3=actionTypes_00008)
BOOL aux564 #(3=actionTypes_00008)
BOOL aux565 #(3=actionTypes_00009)
BOOL aux566 #(3=actionTypes_00009)
BOOL aux567 #(3=actionTypes_00009)
BOOL aux568 #(3=actionTypes_00009)
BOOL aux569 #(3=actionTypes_00009)
BOOL aux570 #(3=actionTypes_00009)
BOOL aux571 #(3=actionTypes_00010)
BOOL aux572 #(3=actionTypes_00010)
BOOL aux573 #(3=actionTypes_00010)
BOOL aux574 #(3=actionTypes_00010)
BOOL aux575 #(3=actionTypes_00010)
BOOL aux576 #(3=actionTypes_00010)
BOOL aux577 #(3=actionTypes_00011)
BOOL aux578 #(3=actionTypes_00011)
BOOL aux579 #(3=actionTypes_00011)
BOOL aux580 #(3=actionTypes_00011)
BOOL aux581 #(3=actionTypes_00011)
BOOL aux582 #(3=actionTypes_00011)
BOOL aux583 #(3=actionTypes_00012)
BOOL aux584 #(3=actionTypes_00012)
BOOL aux585 #(3=actionTypes_00012)
BOOL aux586 #(3=actionTypes_00012)
BOOL aux587 #(3=actionTypes_00012)
BOOL aux588 #(3=actionTypes_00012)
BOOL aux589 #(3=actionTypes_00013)
BOOL aux590 #(3=actionTypes_00013)
BOOL aux591 #(3=actionTypes_00013)
BOOL aux592 #(3=actionTypes_00013)
BOOL aux593 #(3=actionTypes_00013)
BOOL aux594 #(3=actionTypes_00013)
BOOL aux595 #(3=actionTypes_00014)
BOOL aux596 #(3=actionTypes_00014)
BOOL aux597 #(3=actionTypes_00014)
BOOL aux598 #(3=actionTypes_00014)
BOOL aux599 #(3=actionTypes_00014)
BOOL aux600 #(3=actionTypes_00014)
BOOL aux601 #(3=actionTypes_00015)
BOOL aux602 #(3=actionTypes_00015)
BOOL aux603 #(3=actionTypes_00015)
BOOL aux604 #(3=actionTypes_00015)
BOOL aux605 #(3=actionTypes_00015)
BOOL aux606 #(3=actionTypes_00015)
BOOL aux607 #(3=actionTypes_00016)
BOOL aux608 #(3=actionTypes_00016)
BOOL aux609 #(3=actionTypes_00016)
BOOL aux610 #(3=actionTypes_00016)
BOOL aux611 #(3=actionTypes_00016)
BOOL aux612 #(3=actionTypes_00016)
BOOL aux613 #(3=actionTypes_00017)
BOOL aux614 #(3=actionTypes_00017)
BOOL aux615 #(3=actionTypes_00017)
BOOL aux616 #(3=actionTypes_00017)
BOOL aux617 #(3=actionTypes_00017)
BOOL aux618 #(3=actionTypes_00017)
BOOL aux619 #(3=actionTypes_00018)
BOOL aux620 #(3=actionTypes_00018)
BOOL aux621 #(3=actionTypes_00018)
BOOL aux622 #(3=actionTypes_00018)
BOOL aux623 #(3=actionTypes_00018)
BOOL aux624 #(3=actionTypes_00018)
BOOL aux625 #(4=actionTypes_00002)
BOOL aux626 #(4=actionTypes_00002)
BOOL aux627 #(4=actionTypes_00002)
BOOL aux628 #(4=actionTypes_00002)
BOOL aux629 #(4=actionTypes_00002)
BOOL aux630 #(4=actionTypes_00003)
BOOL aux631 #(4=actionTypes_00003)
BOOL aux632 #(4=actionTypes_00003)
BOOL aux633 #(4=actionTypes_00003)
BOOL aux634 #(4=actionTypes_00003)
BOOL aux635 #(4=actionTypes_00003)
BOOL aux636 #(4=actionTypes_00004)
BOOL aux637 #(4=actionTypes_00004)
BOOL aux638 #(4=actionTypes_00004)
BOOL aux639 #(4=actionTypes_00004)
BOOL aux640 #(4=actionTypes_00004)
BOOL aux641 #(4=actionTypes_00004)
BOOL aux642 #(4=actionTypes_00005)
BOOL aux643 #(4=actionTypes_00005)
BOOL aux644 #(4=actionTypes_00005)
BOOL aux645 #(4=actionTypes_00005)
BOOL aux646 #(4=actionTypes_00005)
BOOL aux647 #(4=actionTypes_00005)
BOOL aux648 #(4=actionTypes_00006)
BOOL aux649 #(4=actionTypes_00006)
BOOL aux650 #(4=actionTypes_00006)
BOOL aux651 #(4=actionTypes_00006)
BOOL aux652 #(4=actionTypes_00006)
BOOL aux653 #(4=actionTypes_00006)
BOOL aux654 #(4=actionTypes_00007)
BOOL aux655 #(4=actionTypes_00007)
BOOL aux656 #(4=actionTypes_00007)
BOOL aux657 #(4=actionTypes_00007)
BOOL aux658 #(4=actionTypes_00007)
BOOL aux659 #(4=actionTypes_00007)
BOOL aux660 #(4=actionTypes_00008)
BOOL aux661 #(4=actionTypes_00008)
BOOL aux662 #(4=actionTypes_00008)
BOOL aux663 #(4=actionTypes_00008)
BOOL aux664 #(4=actionTypes_00008)
BOOL aux665 #(4=actionTypes_00008)
BOOL aux666 #(4=actionTypes_00009)
BOOL aux667 #(4=actionTypes_00009)
BOOL aux668 #(4=actionTypes_00009)
BOOL aux669 #(4=actionTypes_00009)
BOOL aux670 #(4=actionTypes_00009)
BOOL aux671 #(4=actionTypes_00009)
BOOL aux672 #(4=actionTypes_00010)
BOOL aux673 #(4=actionTypes_00010)
BOOL aux674 #(4=actionTypes_00010)
BOOL aux675 #(4=actionTypes_00010)
BOOL aux676 #(4=actionTypes_00010)
BOOL aux677 #(4=actionTypes_00010)
BOOL aux678 #(4=actionTypes_00011)
BOOL aux679 #(4=actionTypes_00011)
BOOL aux680 #(4=actionTypes_00011)
BOOL aux681 #(4=actionTypes_00011)
BOOL aux682 #(4=actionTypes_00011)
BOOL aux683 #(4=actionTypes_00011)
BOOL aux684 #(4=actionTypes_00012)
BOOL aux685 #(4=actionTypes_00012)
BOOL aux686 #(4=actionTypes_00012)
BOOL aux687 #(4=actionTypes_00012)
BOOL aux688 #(4=actionTypes_00012)
BOOL aux689 #(4=actionTypes_00012)
BOOL aux690 #(4=actionTypes_00013)
BOOL aux691 #(4=actionTypes_00013)
BOOL aux692 #(4=actionTypes_00013)
BOOL aux693 #(4=actionTypes_00013)
BOOL aux694 #(4=actionTypes_00013)
BOOL aux695 #(4=actionTypes_00013)
BOOL aux696 #(4=actionTypes_00014)
BOOL aux697 #(4=actionTypes_00014)
BOOL aux698 #(4=actionTypes_00014)
BOOL aux699 #(4=actionTypes_00014)
BOOL aux700 #(4=actionTypes_00014)
BOOL aux701 #(4=actionTypes_00014)
BOOL aux702 #(4=actionTypes_00015)
BOOL aux703 #(4=actionTypes_00015)
BOOL aux704 #(4=actionTypes_00015)
BOOL aux705 #(4=actionTypes_00015)
BOOL aux706 #(4=actionTypes_00015)
BOOL aux707 #(4=actionTypes_00015)
BOOL aux708 #(4=actionTypes_00016)
BOOL aux709 #(4=actionTypes_00016)
BOOL aux710 #(4=actionTypes_00016)
BOOL aux711 #(4=actionTypes_00016)
BOOL aux712 #(4=actionTypes_00016)
BOOL aux713 #(4=actionTypes_00016)
BOOL aux714 #(4=actionTypes_00017)
BOOL aux715 #(4=actionTypes_00017)
BOOL aux716 #(4=actionTypes_00017)
BOOL aux717 #(4=actionTypes_00017)
BOOL aux718 #(4=actionTypes_00017)
BOOL aux719 #(4=actionTypes_00017)
BOOL aux720 #(4=actionTypes_00018)
BOOL aux721 #(4=actionTypes_00018)
BOOL aux722 #(4=actionTypes_00018)
BOOL aux723 #(4=actionTypes_00018)
BOOL aux724 #(4=actionTypes_00018)
BOOL aux725 #(4=actionTypes_00018)
BOOL aux726 #(5=actionTypes_00002)
BOOL aux727 #(5=actionTypes_00002)
BOOL aux728 #(5=actionTypes_00002)
BOOL aux729 #(5=actionTypes_00002)
BOOL aux730 #(5=actionTypes_00002)
BOOL aux731 #(5=actionTypes_00002)
BOOL aux732 #(5=actionTypes_00002)
BOOL aux733 #(5=actionTypes_00002)
BOOL aux734 #(5=actionTypes_00003)
BOOL aux735 #(5=actionTypes_00003)
BOOL aux736 #(5=actionTypes_00003)
BOOL aux737 #(5=actionTypes_00003)
BOOL aux738 #(5=actionTypes_00003)
BOOL aux739 #(5=actionTypes_00003)
BOOL aux740 #(5=actionTypes_00003)
BOOL aux741 #(5=actionTypes_00003)
BOOL aux742 #(5=actionTypes_00004)
BOOL aux743 #(5=actionTypes_00004)
BOOL aux744 #(5=actionTypes_00004)
BOOL aux745 #(5=actionTypes_00004)
BOOL aux746 #(5=actionTypes_00004)
BOOL aux747 #(5=actionTypes_00004)
BOOL aux748 #(5=actionTypes_00004)
BOOL aux749 #(5=actionTypes_00004)
BOOL aux750 #(5=actionTypes_00005)
BOOL aux751 #(5=actionTypes_00005)
BOOL aux752 #(5=actionTypes_00005)
BOOL aux753 #(5=actionTypes_00005)
BOOL aux754 #(5=actionTypes_00005)
BOOL aux755 #(5=actionTypes_00005)
BOOL aux756 #(5=actionTypes_00005)
BOOL aux757 #(5=actionTypes_00005)
BOOL aux758 #(5=actionTypes_00006)
BOOL aux759 #(5=actionTypes_00006)
BOOL aux760 #(5=actionTypes_00006)
BOOL aux761 #(5=actionTypes_00006)
BOOL aux762 #(5=actionTypes_00006)
BOOL aux763 #(5=actionTypes_00006)
BOOL aux764 #(5=actionTypes_00006)
BOOL aux765 #(5=actionTypes_00006)
BOOL aux766 #(5=actionTypes_00007)
BOOL aux767 #(5=actionTypes_00007)
BOOL aux768 #(5=actionTypes_00007)
BOOL aux769 #(5=actionTypes_00007)
BOOL aux770 #(5=actionTypes_00007)
BOOL aux771 #(5=actionTypes_00007)
BOOL aux772 #(5=actionTypes_00007)
BOOL aux773 #(5=actionTypes_00007)
BOOL aux774 #(5=actionTypes_00008)
BOOL aux775 #(5=actionTypes_00008)
BOOL aux776 #(5=actionTypes_00008)
BOOL aux777 #(5=actionTypes_00008)
BOOL aux778 #(5=actionTypes_00008)
BOOL aux779 #(5=actionTypes_00008)
BOOL aux780 #(5=actionTypes_00008)
BOOL aux781 #(5=actionTypes_00008)
BOOL aux782 #(5=actionTypes_00009)
BOOL aux783 #(5=actionTypes_00009)
BOOL aux784 #(5=actionTypes_00009)
BOOL aux785 #(5=actionTypes_00009)
BOOL aux786 #(5=actionTypes_00009)
BOOL aux787 #(5=actionTypes_00009)
BOOL aux788 #(5=actionTypes_00009)
BOOL aux789 #(5=actionTypes_00009)
BOOL aux790 #(5=actionTypes_00010)
BOOL aux791 #(5=actionTypes_00010)
BOOL aux792 #(5=actionTypes_00010)
BOOL aux793 #(5=actionTypes_00010)
BOOL aux794 #(5=actionTypes_00010)
BOOL aux795 #(5=actionTypes_00010)
BOOL aux796 #(5=actionTypes_00010)
BOOL aux797 #(5=actionTypes_00010)
BOOL aux798 #(5=actionTypes_00011)
BOOL aux799 #(5=actionTypes_00011)
BOOL aux800 #(5=actionTypes_00011)
BOOL aux801 #(5=actionTypes_00011)
BOOL aux802 #(5=actionTypes_00011)
BOOL aux803 #(5=actionTypes_00011)
BOOL aux804 #(5=actionTypes_00011)
BOOL aux805 #(5=actionTypes_00011)
BOOL aux806 #(5=actionTypes_00012)
BOOL aux807 #(5=actionTypes_00012)
BOOL aux808 #(5=actionTypes_00012)
BOOL aux809 #(5=actionTypes_00012)
BOOL aux810 #(5=actionTypes_00012)
BOOL aux811 #(5=actionTypes_00012)
BOOL aux812 #(5=actionTypes_00012)
BOOL aux813 #(5=actionTypes_00012)
BOOL aux814 #(5=actionTypes_00013)
BOOL aux815 #(5=actionTypes_00013)
BOOL aux816 #(5=actionTypes_00013)
BOOL aux817 #(5=actionTypes_00013)
BOOL aux818 #(5=actionTypes_00013)
BOOL aux819 #(5=actionTypes_00013)
BOOL aux820 #(5=actionTypes_00013)
BOOL aux821 #(5=actionTypes_00013)
BOOL aux822 #(5=actionTypes_00014)
BOOL aux823 #(5=actionTypes_00014)
BOOL aux824 #(5=actionTypes_00014)
BOOL aux825 #(5=actionTypes_00014)
BOOL aux826 #(5=actionTypes_00014)
BOOL aux827 #(5=actionTypes_00014)
BOOL aux828 #(5=actionTypes_00014)
BOOL aux829 #(5=actionTypes_00014)
BOOL aux830 #(5=actionTypes_00015)
BOOL aux831 #(5=actionTypes_00015)
BOOL aux832 #(5=actionTypes_00015)
BOOL aux833 #(5=actionTypes_00015)
BOOL aux834 #(5=actionTypes_00015)
BOOL aux835 #(5=actionTypes_00015)
BOOL aux836 #(5=actionTypes_00015)
BOOL aux837 #(5=actionTypes_00015)
BOOL aux838 #(5=actionTypes_00016)
BOOL aux839 #(5=actionTypes_00016)
BOOL aux840 #(5=actionTypes_00016)
BOOL aux841 #(5=actionTypes_00016)
BOOL aux842 #(5=actionTypes_00016)
BOOL aux843 #(5=actionTypes_00016)
BOOL aux844 #(5=actionTypes_00016)
BOOL aux845 #(5=actionTypes_00016)
BOOL aux846 #(5=actionTypes_00017)
BOOL aux847 #(5=actionTypes_00017)
BOOL aux848 #(5=actionTypes_00017)
BOOL aux849 #(5=actionTypes_00017)
BOOL aux850 #(5=actionTypes_00017)
BOOL aux851 #(5=actionTypes_00017)
BOOL aux852 #(5=actionTypes_00017)
BOOL aux853 #(5=actionTypes_00017)
BOOL aux854 #(5=actionTypes_00018)
BOOL aux855 #(5=actionTypes_00018)
BOOL aux856 #(5=actionTypes_00018)
BOOL aux857 #(5=actionTypes_00018)
BOOL aux858 #(5=actionTypes_00018)
BOOL aux859 #(5=actionTypes_00018)
BOOL aux860 #(5=actionTypes_00018)
BOOL aux861 #(5=actionTypes_00018)
BOOL aux862 #(6=actionTypes_00002)
BOOL aux863 #(6=actionTypes_00002)
BOOL aux864 #(6=actionTypes_00002)
BOOL aux865 #(6=actionTypes_00002)
BOOL aux866 #(6=actionTypes_00002)
BOOL aux867 #(6=actionTypes_00002)
BOOL aux868 #(6=actionTypes_00002)
BOOL aux869 #(6=actionTypes_00003)
BOOL aux870 #(6=actionTypes_00003)
BOOL aux871 #(6=actionTypes_00003)
BOOL aux872 #(6=actionTypes_00003)
BOOL aux873 #(6=actionTypes_00003)
BOOL aux874 #(6=actionTypes_00003)
BOOL aux875 #(6=actionTypes_00003)
BOOL aux876 #(6=actionTypes_00004)
BOOL aux877 #(6=actionTypes_00004)
BOOL aux878 #(6=actionTypes_00004)
BOOL aux879 #(6=actionTypes_00004)
BOOL aux880 #(6=actionTypes_00004)
BOOL aux881 #(6=actionTypes_00004)
BOOL aux882 #(6=actionTypes_00004)
BOOL aux883 #(6=actionTypes_00005)
BOOL aux884 #(6=actionTypes_00005)
BOOL aux885 #(6=actionTypes_00005)
BOOL aux886 #(6=actionTypes_00005)
BOOL aux887 #(6=actionTypes_00005)
BOOL aux888 #(6=actionTypes_00005)
BOOL aux889 #(6=actionTypes_00005)
BOOL aux890 #(6=actionTypes_00006)
BOOL aux891 #(6=actionTypes_00006)
BOOL aux892 #(6=actionTypes_00006)
BOOL aux893 #(6=actionTypes_00006)
BOOL aux894 #(6=actionTypes_00006)
BOOL aux895 #(6=actionTypes_00006)
BOOL aux896 #(6=actionTypes_00006)
BOOL aux897 #(6=actionTypes_00007)
BOOL aux898 #(6=actionTypes_00007)
BOOL aux899 #(6=actionTypes_00007)
BOOL aux900 #(6=actionTypes_00007)
BOOL aux901 #(6=actionTypes_00007)
BOOL aux902 #(6=actionTypes_00007)
BOOL aux903 #(6=actionTypes_00007)
BOOL aux904 #(6=actionTypes_00008)
BOOL aux905 #(6=actionTypes_00008)
BOOL aux906 #(6=actionTypes_00008)
BOOL aux907 #(6=actionTypes_00008)
BOOL aux908 #(6=actionTypes_00008)
BOOL aux909 #(6=actionTypes_00008)
BOOL aux910 #(6=actionTypes_00008)
BOOL aux911 #(6=actionTypes_00009)
BOOL aux912 #(6=actionTypes_00009)
BOOL aux913 #(6=actionTypes_00009)
BOOL aux914 #(6=actionTypes_00009)
BOOL aux915 #(6=actionTypes_00009)
BOOL aux916 #(6=actionTypes_00009)
BOOL aux917 #(6=actionTypes_00009)
BOOL aux918 #(6=actionTypes_00010)
BOOL aux919 #(6=actionTypes_00010)
BOOL aux920 #(6=actionTypes_00010)
BOOL aux921 #(6=actionTypes_00010)
BOOL aux922 #(6=actionTypes_00010)
BOOL aux923 #(6=actionTypes_00010)
BOOL aux924 #(6=actionTypes_00010)
BOOL aux925 #(6=actionTypes_00011)
BOOL aux926 #(6=actionTypes_00011)
BOOL aux927 #(6=actionTypes_00011)
BOOL aux928 #(6=actionTypes_00011)
BOOL aux929 #(6=actionTypes_00011)
BOOL aux930 #(6=actionTypes_00011)
BOOL aux931 #(6=actionTypes_00011)
BOOL aux932 #(6=actionTypes_00012)
BOOL aux933 #(6=actionTypes_00012)
BOOL aux934 #(6=actionTypes_00012)
BOOL aux935 #(6=actionTypes_00012)
BOOL aux936 #(6=actionTypes_00012)
BOOL aux937 #(6=actionTypes_00012)
BOOL aux938 #(6=actionTypes_00012)
BOOL aux939 #(6=actionTypes_00013)
BOOL aux940 #(6=actionTypes_00013)
BOOL aux941 #(6=actionTypes_00013)
BOOL aux942 #(6=actionTypes_00013)
BOOL aux943 #(6=actionTypes_00013)
BOOL aux944 #(6=actionTypes_00013)
BOOL aux945 #(6=actionTypes_00013)
BOOL aux946 #(6=actionTypes_00014)
BOOL aux947 #(6=actionTypes_00014)
BOOL aux948 #(6=actionTypes_00014)
BOOL aux949 #(6=actionTypes_00014)
BOOL aux950 #(6=actionTypes_00014)
BOOL aux951 #(6=actionTypes_00014)
BOOL aux952 #(6=actionTypes_00014)
BOOL aux953 #(6=actionTypes_00015)
BOOL aux954 #(6=actionTypes_00015)
BOOL aux955 #(6=actionTypes_00015)
BOOL aux956 #(6=actionTypes_00015)
BOOL aux957 #(6=actionTypes_00015)
BOOL aux958 #(6=actionTypes_00015)
BOOL aux959 #(6=actionTypes_00015)
BOOL aux960 #(6=actionTypes_00016)
BOOL aux961 #(6=actionTypes_00016)
BOOL aux962 #(6=actionTypes_00016)
BOOL aux963 #(6=actionTypes_00016)
BOOL aux964 #(6=actionTypes_00016)
BOOL aux965 #(6=actionTypes_00016)
BOOL aux966 #(6=actionTypes_00016)
BOOL aux967 #(6=actionTypes_00017)
BOOL aux968 #(6=actionTypes_00017)
BOOL aux969 #(6=actionTypes_00017)
BOOL aux970 #(6=actionTypes_00017)
BOOL aux971 #(6=actionTypes_00017)
BOOL aux972 #(6=actionTypes_00017)
BOOL aux973 #(6=actionTypes_00017)
BOOL aux974 #(6=actionTypes_00018)
BOOL aux975 #(6=actionTypes_00018)
BOOL aux976 #(6=actionTypes_00018)
BOOL aux977 #(6=actionTypes_00018)
BOOL aux978 #(6=actionTypes_00018)
BOOL aux979 #(6=actionTypes_00018)
BOOL aux980 #(6=actionTypes_00018)
BOOL aux981 #(7=actionTypes_00002)
BOOL aux982 #(7=actionTypes_00002)
BOOL aux983 #(7=actionTypes_00002)
BOOL aux984 #(7=actionTypes_00002)
BOOL aux985 #(7=actionTypes_00002)
BOOL aux986 #(7=actionTypes_00002)
BOOL aux987 #(7=actionTypes_00002)
BOOL aux988 #(7=actionTypes_00003)
BOOL aux989 #(7=actionTypes_00003)
BOOL aux990 #(7=actionTypes_00003)
BOOL aux991 #(7=actionTypes_00003)
BOOL aux992 #(7=actionTypes_00003)
BOOL aux993 #(7=actionTypes_00003)
BOOL aux994 #(7=actionTypes_00003)
BOOL aux995 #(7=actionTypes_00004)
BOOL aux996 #(7=actionTypes_00004)
BOOL aux997 #(7=actionTypes_00004)
BOOL aux998 #(7=actionTypes_00004)
BOOL aux999 #(7=actionTypes_00004)
BOOL aux1000 #(7=actionTypes_00004)
BOOL aux1001 #(7=actionTypes_00004)
BOOL aux1002 #(7=actionTypes_00005)
BOOL aux1003 #(7=actionTypes_00005)
BOOL aux1004 #(7=actionTypes_00005)
BOOL aux1005 #(7=actionTypes_00005)
BOOL aux1006 #(7=actionTypes_00005)
BOOL aux1007 #(7=actionTypes_00005)
BOOL aux1008 #(7=actionTypes_00005)
BOOL aux1009 #(7=actionTypes_00006)
BOOL aux1010 #(7=actionTypes_00006)
BOOL aux1011 #(7=actionTypes_00006)
BOOL aux1012 #(7=actionTypes_00006)
BOOL aux1013 #(7=actionTypes_00006)
BOOL aux1014 #(7=actionTypes_00006)
BOOL aux1015 #(7=actionTypes_00006)
BOOL aux1016 #(7=actionTypes_00007)
BOOL aux1017 #(7=actionTypes_00007)
BOOL aux1018 #(7=actionTypes_00007)
BOOL aux1019 #(7=actionTypes_00007)
BOOL aux1020 #(7=actionTypes_00007)
BOOL aux1021 #(7=actionTypes_00007)
BOOL aux1022 #(7=actionTypes_00007)
BOOL aux1023 #(7=actionTypes_00008)
BOOL aux1024 #(7=actionTypes_00008)
BOOL aux1025 #(7=actionTypes_00008)
BOOL aux1026 #(7=actionTypes_00008)
BOOL aux1027 #(7=actionTypes_00008)
BOOL aux1028 #(7=actionTypes_00008)
BOOL aux1029 #(7=actionTypes_00008)
BOOL aux1030 #(7=actionTypes_00009)
BOOL aux1031 #(7=actionTypes_00009)
BOOL aux1032 #(7=actionTypes_00009)
BOOL aux1033 #(7=actionTypes_00009)
BOOL aux1034 #(7=actionTypes_00009)
BOOL aux1035 #(7=actionTypes_00009)
BOOL aux1036 #(7=actionTypes_00009)
BOOL aux1037 #(7=actionTypes_00010)
BOOL aux1038 #(7=actionTypes_00010)
BOOL aux1039 #(7=actionTypes_00010)
BOOL aux1040 #(7=actionTypes_00010)
BOOL aux1041 #(7=actionTypes_00010)
BOOL aux1042 #(7=actionTypes_00010)
BOOL aux1043 #(7=actionTypes_00010)
BOOL aux1044 #(7=actionTypes_00011)
BOOL aux1045 #(7=actionTypes_00011)
BOOL aux1046 #(7=actionTypes_00011)
BOOL aux1047 #(7=actionTypes_00011)
BOOL aux1048 #(7=actionTypes_00011)
BOOL aux1049 #(7=actionTypes_00011)
BOOL aux1050 #(7=actionTypes_00011)
BOOL aux1051 #(7=actionTypes_00012)
BOOL aux1052 #(7=actionTypes_00012)
BOOL aux1053 #(7=actionTypes_00012)
BOOL aux1054 #(7=actionTypes_00012)
BOOL aux1055 #(7=actionTypes_00012)
BOOL aux1056 #(7=actionTypes_00012)
BOOL aux1057 #(7=actionTypes_00012)
BOOL aux1058 #(7=actionTypes_00013)
BOOL aux1059 #(7=actionTypes_00013)
BOOL aux1060 #(7=actionTypes_00013)
BOOL aux1061 #(7=actionTypes_00013)
BOOL aux1062 #(7=actionTypes_00013)
BOOL aux1063 #(7=actionTypes_00013)
BOOL aux1064 #(7=actionTypes_00013)
BOOL aux1065 #(7=actionTypes_00014)
BOOL aux1066 #(7=actionTypes_00014)
BOOL aux1067 #(7=actionTypes_00014)
BOOL aux1068 #(7=actionTypes_00014)
BOOL aux1069 #(7=actionTypes_00014)
BOOL aux1070 #(7=actionTypes_00014)
BOOL aux1071 #(7=actionTypes_00014)
BOOL aux1072 #(7=actionTypes_00015)
BOOL aux1073 #(7=actionTypes_00015)
BOOL aux1074 #(7=actionTypes_00015)
BOOL aux1075 #(7=actionTypes_00015)
BOOL aux1076 #(7=actionTypes_00015)
BOOL aux1077 #(7=actionTypes_00015)
BOOL aux1078 #(7=actionTypes_00015)
BOOL aux1079 #(7=actionTypes_00016)
BOOL aux1080 #(7=actionTypes_00016)
BOOL aux1081 #(7=actionTypes_00016)
BOOL aux1082 #(7=actionTypes_00016)
BOOL aux1083 #(7=actionTypes_00016)
BOOL aux1084 #(7=actionTypes_00016)
BOOL aux1085 #(7=actionTypes_00016)
BOOL aux1086 #(7=actionTypes_00017)
BOOL aux1087 #(7=actionTypes_00017)
BOOL aux1088 #(7=actionTypes_00017)
BOOL aux1089 #(7=actionTypes_00017)
BOOL aux1090 #(7=actionTypes_00017)
BOOL aux1091 #(7=actionTypes_00017)
BOOL aux1092 #(7=actionTypes_00017)
BOOL aux1093 #(7=actionTypes_00018)
BOOL aux1094 #(7=actionTypes_00018)
BOOL aux1095 #(7=actionTypes_00018)
BOOL aux1096 #(7=actionTypes_00018)
BOOL aux1097 #(7=actionTypes_00018)
BOOL aux1098 #(7=actionTypes_00018)
BOOL aux1099 #(7=actionTypes_00018)
BOOL aux1100 #(8=actionTypes_00002)
BOOL aux1101 #(8=actionTypes_00002)
BOOL aux1102 #(8=actionTypes_00002)
BOOL aux1103 #(8=actionTypes_00002)
BOOL aux1104 #(8=actionTypes_00002)
BOOL aux1105 #(8=actionTypes_00002)
BOOL aux1106 #(8=actionTypes_00003)
BOOL aux1107 #(8=actionTypes_00003)
BOOL aux1108 #(8=actionTypes_00003)
BOOL aux1109 #(8=actionTypes_00003)
BOOL aux1110 #(8=actionTypes_00003)
BOOL aux1111 #(8=actionTypes_00003)
BOOL aux1112 #(8=actionTypes_00004)
BOOL aux1113 #(8=actionTypes_00004)
BOOL aux1114 #(8=actionTypes_00004)
BOOL aux1115 #(8=actionTypes_00004)
BOOL aux1116 #(8=actionTypes_00004)
BOOL aux1117 #(8=actionTypes_00004)
BOOL aux1118 #(8=actionTypes_00005)
BOOL aux1119 #(8=actionTypes_00005)
BOOL aux1120 #(8=actionTypes_00005)
BOOL aux1121 #(8=actionTypes_00005)
BOOL aux1122 #(8=actionTypes_00005)
BOOL aux1123 #(8=actionTypes_00005)
BOOL aux1124 #(8=actionTypes_00006)
BOOL aux1125 #(8=actionTypes_00006)
BOOL aux1126 #(8=actionTypes_00006)
BOOL aux1127 #(8=actionTypes_00006)
BOOL aux1128 #(8=actionTypes_00006)
BOOL aux1129 #(8=actionTypes_00006)
BOOL aux1130 #(8=actionTypes_00007)
BOOL aux1131 #(8=actionTypes_00007)
BOOL aux1132 #(8=actionTypes_00007)
BOOL aux1133 #(8=actionTypes_00007)
BOOL aux1134 #(8=actionTypes_00007)
BOOL aux1135 #(8=actionTypes_00007)
BOOL aux1136 #(8=actionTypes_00008)
BOOL aux1137 #(8=actionTypes_00008)
BOOL aux1138 #(8=actionTypes_00008)
BOOL aux1139 #(8=actionTypes_00008)
BOOL aux1140 #(8=actionTypes_00008)
BOOL aux1141 #(8=actionTypes_00008)
BOOL aux1142 #(8=actionTypes_00009)
BOOL aux1143 #(8=actionTypes_00009)
BOOL aux1144 #(8=actionTypes_00009)
BOOL aux1145 #(8=actionTypes_00009)
BOOL aux1146 #(8=actionTypes_00009)
BOOL aux1147 #(8=actionTypes_00009)
BOOL aux1148 #(8=actionTypes_00010)
BOOL aux1149 #(8=actionTypes_00010)
BOOL aux1150 #(8=actionTypes_00010)
BOOL aux1151 #(8=actionTypes_00010)
BOOL aux1152 #(8=actionTypes_00010)
BOOL aux1153 #(8=actionTypes_00010)
BOOL aux1154 #(8=actionTypes_00011)
BOOL aux1155 #(8=actionTypes_00011)
BOOL aux1156 #(8=actionTypes_00011)
BOOL aux1157 #(8=actionTypes_00011)
BOOL aux1158 #(8=actionTypes_00011)
BOOL aux1159 #(8=actionTypes_00011)
BOOL aux1160 #(8=actionTypes_00012)
BOOL aux1161 #(8=actionTypes_00012)
BOOL aux1162 #(8=actionTypes_00012)
BOOL aux1163 #(8=actionTypes_00012)
BOOL aux1164 #(8=actionTypes_00012)
BOOL aux1165 #(8=actionTypes_00012)
BOOL aux1166 #(8=actionTypes_00013)
BOOL aux1167 #(8=actionTypes_00013)
BOOL aux1168 #(8=actionTypes_00013)
BOOL aux1169 #(8=actionTypes_00013)
BOOL aux1170 #(8=actionTypes_00013)
BOOL aux1171 #(8=actionTypes_00013)
BOOL aux1172 #(8=actionTypes_00014)
BOOL aux1173 #(8=actionTypes_00014)
BOOL aux1174 #(8=actionTypes_00014)
BOOL aux1175 #(8=actionTypes_00014)
BOOL aux1176 #(8=actionTypes_00014)
BOOL aux1177 #(8=actionTypes_00014)
BOOL aux1178 #(8=actionTypes_00015)
BOOL aux1179 #(8=actionTypes_00015)
BOOL aux1180 #(8=actionTypes_00015)
BOOL aux1181 #(8=actionTypes_00015)
BOOL aux1182 #(8=actionTypes_00015)
BOOL aux1183 #(8=actionTypes_00015)
BOOL aux1184 #(8=actionTypes_00016)
BOOL aux1185 #(8=actionTypes_00016)
BOOL aux1186 #(8=actionTypes_00016)
BOOL aux1187 #(8=actionTypes_00016)
BOOL aux1188 #(8=actionTypes_00016)
BOOL aux1189 #(8=actionTypes_00016)
BOOL aux1190 #(8=actionTypes_00017)
BOOL aux1191 #(8=actionTypes_00017)
BOOL aux1192 #(8=actionTypes_00017)
BOOL aux1193 #(8=actionTypes_00017)
BOOL aux1194 #(8=actionTypes_00017)
BOOL aux1195 #(8=actionTypes_00017)
BOOL aux1196 #(8=actionTypes_00018)
BOOL aux1197 #(8=actionTypes_00018)
BOOL aux1198 #(8=actionTypes_00018)
BOOL aux1199 #(8=actionTypes_00018)
BOOL aux1200 #(8=actionTypes_00018)
BOOL aux1201 #(8=actionTypes_00018)
**VARIABLES**
ALIAS output[4]=[4, 7, 8, 1]
**VARIABLES**
ALIAS input[4]=[6, 3, 8, 1]
**SEARCH**
PRINT[[statePlaces_00002_00002],[statePlaces_00002_00003],[statePlaces_00002_00004],[statePlaces_00002_00005],[statePlaces_00002_00006],[statePlaces_00002_00007],[statePlaces_00002_00008],[statePlaces_00002_00009],[statePlaces_00002_00010],[statePlaces_00002_00011],[statePlaces_00002_00012],[statePlaces_00002_00013],[statePlaces_00002_00014],[statePlaces_00002_00015],[statePlaces_00002_00016],[statePlaces_00002_00017],[statePlaces_00003_00002],[statePlaces_00003_00003],[statePlaces_00003_00004],[statePlaces_00003_00005],[statePlaces_00003_00006],[statePlaces_00003_00007],[statePlaces_00003_00008],[statePlaces_00003_00009],[statePlaces_00003_00010],[statePlaces_00003_00011],[statePlaces_00003_00012],[statePlaces_00003_00013],[statePlaces_00003_00014],[statePlaces_00003_00015],[statePlaces_00003_00016],[statePlaces_00003_00017],[statePlaces_00003_00018],[actionTypes_00002],[actionTypes_00003],[actionTypes_00004],[actionTypes_00005],[actionTypes_00006],[actionTypes_00007],[actionTypes_00008],[actionTypes_00009],[actionTypes_00010],[actionTypes_00011],[actionTypes_00012],[actionTypes_00013],[actionTypes_00014],[actionTypes_00015],[actionTypes_00016],[actionTypes_00017],[actionTypes_00018],[actionFrom_00002],[actionFrom_00003],[actionFrom_00004],[actionFrom_00005],[actionFrom_00006],[actionFrom_00007],[actionFrom_00008],[actionFrom_00009],[actionFrom_00010],[actionFrom_00011],[actionFrom_00012],[actionFrom_00013],[actionFrom_00014],[actionFrom_00015],[actionFrom_00016],[actionFrom_00017],[actionFrom_00018],[actionTo_00002],[actionTo_00003],[actionTo_00004],[actionTo_00005],[actionTo_00006],[actionTo_00007],[actionTo_00008],[actionTo_00009],[actionTo_00010],[actionTo_00011],[actionTo_00012],[actionTo_00013],[actionTo_00014],[actionTo_00015],[actionTo_00016],[actionTo_00017],[actionTo_00018],[pointers_00000_00002],[pointers_00000_00003],[pointers_00000_00004],[pointers_00000_00005],[pointers_00000_00006],[pointers_00000_00007],[pointers_00000_00008],[pointers_00000_00009],[pointers_00000_00010],[pointers_00000_00011],[pointers_00000_00012],[pointers_00000_00013],[pointers_00000_00014],[pointers_00000_00015],[pointers_00000_00016],[pointers_00000_00017],[pointers_00000_00019],[pointers_00001_00002],[pointers_00001_00003],[pointers_00001_00004],[pointers_00001_00005],[pointers_00001_00006],[pointers_00001_00007],[pointers_00001_00008],[pointers_00001_00009],[pointers_00001_00010],[pointers_00001_00011],[pointers_00001_00012],[pointers_00001_00013],[pointers_00001_00014],[pointers_00001_00015],[pointers_00001_00016],[pointers_00001_00017]]
**CONSTRAINTS**
reify(diseq(1,actionTypes_00002), aux221)
reify(diseq(1,actionTypes_00003), aux222)
reify(diseq(1,actionTypes_00004), aux223)
reify(diseq(1,actionTypes_00005), aux224)
reify(diseq(1,actionTypes_00006), aux225)
reify(diseq(1,actionTypes_00007), aux226)
reify(diseq(1,actionTypes_00008), aux227)
reify(diseq(1,actionTypes_00009), aux228)
reify(diseq(1,actionTypes_00010), aux229)
reify(diseq(1,actionTypes_00011), aux230)
reify(diseq(1,actionTypes_00012), aux231)
reify(diseq(1,actionTypes_00013), aux232)
reify(diseq(1,actionTypes_00014), aux233)
reify(diseq(1,actionTypes_00015), aux234)
reify(diseq(1,actionTypes_00016), aux235)
reify(diseq(1,actionTypes_00017), aux236)
reify(diseq(1,actionTypes_00018), aux237)
reify(diseq(2,actionTypes_00002), aux238)
reify(diseq(2,actionTypes_00003), aux239)
reify(diseq(2,actionTypes_00004), aux240)
reify(diseq(2,actionTypes_00005), aux241)
reify(diseq(2,actionTypes_00006), aux242)
reify(diseq(2,actionTypes_00007), aux243)
reify(diseq(2,actionTypes_00008), aux244)
reify(diseq(2,actionTypes_00009), aux245)
reify(diseq(2,actionTypes_00010), aux246)
reify(diseq(2,actionTypes_00011), aux247)
reify(diseq(2,actionTypes_00012), aux248)
reify(diseq(2,actionTypes_00013), aux249)
reify(diseq(2,actionTypes_00014), aux250)
reify(diseq(2,actionTypes_00015), aux251)
reify(diseq(2,actionTypes_00016), aux252)
reify(diseq(2,actionTypes_00017), aux253)
reify(diseq(2,actionTypes_00018), aux254)
reify(watched-or({watched-and({w-literal(actionTypes_00002,7),diseq(actionFrom_00002,3)}),watched-and({w-literal(actionTypes_00002,8),diseq(actionFrom_00002,3)}),w-literal(actionTypes_00002,1),w-literal(actionTypes_00002,2),w-literal(actionTypes_00002,3),w-literal(actionTypes_00002,5),w-literal(actionTypes_00002,6),watched-and({w-literal(actionTypes_00002,4),diseq(actionTo_00002,3)})}), aux255)
reify(watched-or({watched-and({w-literal(actionTypes_00003,7),diseq(actionFrom_00003,3)}),watched-and({w-literal(actionTypes_00003,8),diseq(actionFrom_00003,3)}),w-literal(actionTypes_00003,1),w-literal(actionTypes_00003,2),w-literal(actionTypes_00003,3),w-literal(actionTypes_00003,5),w-literal(actionTypes_00003,6),watched-and({w-literal(actionTypes_00003,4),diseq(actionTo_00003,3)})}), aux256)
reify(watched-or({watched-and({w-literal(actionTypes_00004,7),diseq(actionFrom_00004,3)}),watched-and({w-literal(actionTypes_00004,8),diseq(actionFrom_00004,3)}),w-literal(actionTypes_00004,1),w-literal(actionTypes_00004,2),w-literal(actionTypes_00004,3),w-literal(actionTypes_00004,5),w-literal(actionTypes_00004,6),watched-and({w-literal(actionTypes_00004,4),diseq(actionTo_00004,3)})}), aux257)
reify(watched-or({watched-and({w-literal(actionTypes_00005,7),diseq(actionFrom_00005,3)}),watched-and({w-literal(actionTypes_00005,8),diseq(actionFrom_00005,3)}),w-literal(actionTypes_00005,1),w-literal(actionTypes_00005,2),w-literal(actionTypes_00005,3),w-literal(actionTypes_00005,5),w-literal(actionTypes_00005,6),watched-and({w-literal(actionTypes_00005,4),diseq(actionTo_00005,3)})}), aux258)
reify(watched-or({watched-and({w-literal(actionTypes_00006,7),diseq(actionFrom_00006,3)}),watched-and({w-literal(actionTypes_00006,8),diseq(actionFrom_00006,3)}),w-literal(actionTypes_00006,1),w-literal(actionTypes_00006,2),w-literal(actionTypes_00006,3),w-literal(actionTypes_00006,5),w-literal(actionTypes_00006,6),watched-and({w-literal(actionTypes_00006,4),diseq(actionTo_00006,3)})}), aux259)
reify(watched-or({watched-and({w-literal(actionTypes_00007,7),diseq(actionFrom_00007,3)}),watched-and({w-literal(actionTypes_00007,8),diseq(actionFrom_00007,3)}),w-literal(actionTypes_00007,1),w-literal(actionTypes_00007,2),w-literal(actionTypes_00007,3),w-literal(actionTypes_00007,5),w-literal(actionTypes_00007,6),watched-and({w-literal(actionTypes_00007,4),diseq(actionTo_00007,3)})}), aux260)
reify(watched-or({watched-and({w-literal(actionTypes_00008,7),diseq(actionFrom_00008,3)}),watched-and({w-literal(actionTypes_00008,8),diseq(actionFrom_00008,3)}),w-literal(actionTypes_00008,1),w-literal(actionTypes_00008,2),w-literal(actionTypes_00008,3),w-literal(actionTypes_00008,5),w-literal(actionTypes_00008,6),watched-and({w-literal(actionTypes_00008,4),diseq(actionTo_00008,3)})}), aux261)
reify(watched-or({watched-and({w-literal(actionTypes_00009,7),diseq(actionFrom_00009,3)}),watched-and({w-literal(actionTypes_00009,8),diseq(actionFrom_00009,3)}),w-literal(actionTypes_00009,1),w-literal(actionTypes_00009,2),w-literal(actionTypes_00009,3),w-literal(actionTypes_00009,5),w-literal(actionTypes_00009,6),watched-and({w-literal(actionTypes_00009,4),diseq(actionTo_00009,3)})}), aux262)
reify(watched-or({watched-and({w-literal(actionTypes_00010,7),diseq(actionFrom_00010,3)}),watched-and({w-literal(actionTypes_00010,8),diseq(actionFrom_00010,3)}),w-literal(actionTypes_00010,1),w-literal(actionTypes_00010,2),w-literal(actionTypes_00010,3),w-literal(actionTypes_00010,5),w-literal(actionTypes_00010,6),watched-and({w-literal(actionTypes_00010,4),diseq(actionTo_00010,3)})}), aux263)
reify(watched-or({watched-and({w-literal(actionTypes_00011,7),diseq(actionFrom_00011,3)}),watched-and({w-literal(actionTypes_00011,8),diseq(actionFrom_00011,3)}),w-literal(actionTypes_00011,1),w-literal(actionTypes_00011,2),w-literal(actionTypes_00011,3),w-literal(actionTypes_00011,5),w-literal(actionTypes_00011,6),watched-and({w-literal(actionTypes_00011,4),diseq(actionTo_00011,3)})}), aux264)
reify(watched-or({watched-and({w-literal(actionTypes_00012,7),diseq(actionFrom_00012,3)}),watched-and({w-literal(actionTypes_00012,8),diseq(actionFrom_00012,3)}),w-literal(actionTypes_00012,1),w-literal(actionTypes_00012,2),w-literal(actionTypes_00012,3),w-literal(actionTypes_00012,5),w-literal(actionTypes_00012,6),watched-and({w-literal(actionTypes_00012,4),diseq(actionTo_00012,3)})}), aux265)
reify(watched-or({watched-and({w-literal(actionTypes_00013,7),diseq(actionFrom_00013,3)}),watched-and({w-literal(actionTypes_00013,8),diseq(actionFrom_00013,3)}),w-literal(actionTypes_00013,1),w-literal(actionTypes_00013,2),w-literal(actionTypes_00013,3),w-literal(actionTypes_00013,5),w-literal(actionTypes_00013,6),watched-and({w-literal(actionTypes_00013,4),diseq(actionTo_00013,3)})}), aux266)
reify(watched-or({watched-and({w-literal(actionTypes_00014,7),diseq(actionFrom_00014,3)}),watched-and({w-literal(actionTypes_00014,8),diseq(actionFrom_00014,3)}),w-literal(actionTypes_00014,1),w-literal(actionTypes_00014,2),w-literal(actionTypes_00014,3),w-literal(actionTypes_00014,5),w-literal(actionTypes_00014,6),watched-and({w-literal(actionTypes_00014,4),diseq(actionTo_00014,3)})}), aux267)
reify(watched-or({watched-and({w-literal(actionTypes_00015,7),diseq(actionFrom_00015,3)}),watched-and({w-literal(actionTypes_00015,8),diseq(actionFrom_00015,3)}),w-literal(actionTypes_00015,1),w-literal(actionTypes_00015,2),w-literal(actionTypes_00015,3),w-literal(actionTypes_00015,5),w-literal(actionTypes_00015,6),watched-and({w-literal(actionTypes_00015,4),diseq(actionTo_00015,3)})}), aux268)
reify(watched-or({watched-and({w-literal(actionTypes_00016,7),diseq(actionFrom_00016,3)}),watched-and({w-literal(actionTypes_00016,8),diseq(actionFrom_00016,3)}),w-literal(actionTypes_00016,1),w-literal(actionTypes_00016,2),w-literal(actionTypes_00016,3),w-literal(actionTypes_00016,5),w-literal(actionTypes_00016,6),watched-and({w-literal(actionTypes_00016,4),diseq(actionTo_00016,3)})}), aux269)
reify(watched-or({watched-and({w-literal(actionTypes_00017,7),diseq(actionFrom_00017,3)}),watched-and({w-literal(actionTypes_00017,8),diseq(actionFrom_00017,3)}),w-literal(actionTypes_00017,1),w-literal(actionTypes_00017,2),w-literal(actionTypes_00017,3),w-literal(actionTypes_00017,5),w-literal(actionTypes_00017,6),watched-and({w-literal(actionTypes_00017,4),diseq(actionTo_00017,3)})}), aux270)
reify(watched-or({watched-and({w-literal(actionTypes_00018,7),diseq(actionFrom_00018,3)}),watched-and({w-literal(actionTypes_00018,8),diseq(actionFrom_00018,3)}),w-literal(actionTypes_00018,1),w-literal(actionTypes_00018,2),w-literal(actionTypes_00018,3),w-literal(actionTypes_00018,5),w-literal(actionTypes_00018,6),watched-and({w-literal(actionTypes_00018,4),diseq(actionTo_00018,3)})}), aux271)
reify(watched-or({w-literal(actionTypes_00002,2),w-literal(actionTypes_00002,4)}), aux272)
reify(watched-or({w-literal(actionTypes_00003,2),w-literal(actionTypes_00003,4)}), aux273)
reify(watched-or({w-literal(actionTypes_00004,2),w-literal(actionTypes_00004,4)}), aux274)
reify(watched-or({w-literal(actionTypes_00005,2),w-literal(actionTypes_00005,4)}), aux275)
reify(watched-or({w-literal(actionTypes_00006,2),w-literal(actionTypes_00006,4)}), aux276)
reify(watched-or({w-literal(actionTypes_00007,2),w-literal(actionTypes_00007,4)}), aux277)
reify(watched-or({w-literal(actionTypes_00008,2),w-literal(actionTypes_00008,4)}), aux278)
reify(watched-or({w-literal(actionTypes_00009,2),w-literal(actionTypes_00009,4)}), aux279)
reify(watched-or({w-literal(actionTypes_00010,2),w-literal(actionTypes_00010,4)}), aux280)
reify(watched-or({w-literal(actionTypes_00011,2),w-literal(actionTypes_00011,4)}), aux281)
reify(watched-or({w-literal(actionTypes_00012,2),w-literal(actionTypes_00012,4)}), aux282)
reify(watched-or({w-literal(actionTypes_00013,2),w-literal(actionTypes_00013,4)}), aux283)
reify(watched-or({w-literal(actionTypes_00014,2),w-literal(actionTypes_00014,4)}), aux284)
reify(watched-or({w-literal(actionTypes_00015,2),w-literal(actionTypes_00015,4)}), aux285)
reify(watched-or({w-literal(actionTypes_00016,2),w-literal(actionTypes_00016,4)}), aux286)
reify(watched-or({w-literal(actionTypes_00017,2),w-literal(actionTypes_00017,4)}), aux287)
reify(watched-or({w-literal(actionTypes_00018,2),w-literal(actionTypes_00018,4)}), aux288)
reify(w-literal(actionTypes_00002,1), aux289)
reify(w-literal(actionTypes_00002,1), aux290)
reify(w-literal(actionTypes_00002,1), aux291)
reify(w-literal(actionTypes_00002,1), aux292)
reify(w-literal(actionTypes_00002,1), aux293)
reify(w-literal(actionTypes_00003,1), aux295)
reify(w-literal(actionTypes_00003,1), aux296)
reify(w-literal(actionTypes_00003,1), aux297)
reify(w-literal(actionTypes_00003,1), aux298)
reify(w-literal(actionTypes_00003,1), aux299)
reify(w-literal(actionTypes_00004,1), aux301)
reify(w-literal(actionTypes_00004,1), aux302)
reify(w-literal(actionTypes_00004,1), aux303)
reify(w-literal(actionTypes_00004,1), aux304)
reify(w-literal(actionTypes_00004,1), aux305)
reify(w-literal(actionTypes_00005,1), aux307)
reify(w-literal(actionTypes_00005,1), aux308)
reify(w-literal(actionTypes_00005,1), aux309)
reify(w-literal(actionTypes_00005,1), aux310)
reify(w-literal(actionTypes_00005,1), aux311)
reify(w-literal(actionTypes_00006,1), aux313)
reify(w-literal(actionTypes_00006,1), aux314)
reify(w-literal(actionTypes_00006,1), aux315)
reify(w-literal(actionTypes_00006,1), aux316)
reify(w-literal(actionTypes_00006,1), aux317)
reify(w-literal(actionTypes_00007,1), aux319)
reify(w-literal(actionTypes_00007,1), aux320)
reify(w-literal(actionTypes_00007,1), aux321)
reify(w-literal(actionTypes_00007,1), aux322)
reify(w-literal(actionTypes_00007,1), aux323)
reify(w-literal(actionTypes_00008,1), aux325)
reify(w-literal(actionTypes_00008,1), aux326)
reify(w-literal(actionTypes_00008,1), aux327)
reify(w-literal(actionTypes_00008,1), aux328)
reify(w-literal(actionTypes_00008,1), aux329)
reify(w-literal(actionTypes_00009,1), aux331)
reify(w-literal(actionTypes_00009,1), aux332)
reify(w-literal(actionTypes_00009,1), aux333)
reify(w-literal(actionTypes_00009,1), aux334)
reify(w-literal(actionTypes_00009,1), aux335)
reify(w-literal(actionTypes_00010,1), aux337)
reify(w-literal(actionTypes_00010,1), aux338)
reify(w-literal(actionTypes_00010,1), aux339)
reify(w-literal(actionTypes_00010,1), aux340)
reify(w-literal(actionTypes_00010,1), aux341)
reify(w-literal(actionTypes_00011,1), aux343)
reify(w-literal(actionTypes_00011,1), aux344)
reify(w-literal(actionTypes_00011,1), aux345)
reify(w-literal(actionTypes_00011,1), aux346)
reify(w-literal(actionTypes_00011,1), aux347)
reify(w-literal(actionTypes_00012,1), aux349)
reify(w-literal(actionTypes_00012,1), aux350)
reify(w-literal(actionTypes_00012,1), aux351)
reify(w-literal(actionTypes_00012,1), aux352)
reify(w-literal(actionTypes_00012,1), aux353)
reify(w-literal(actionTypes_00013,1), aux355)
reify(w-literal(actionTypes_00013,1), aux356)
reify(w-literal(actionTypes_00013,1), aux357)
reify(w-literal(actionTypes_00013,1), aux358)
reify(w-literal(actionTypes_00013,1), aux359)
reify(w-literal(actionTypes_00014,1), aux361)
reify(w-literal(actionTypes_00014,1), aux362)
reify(w-literal(actionTypes_00014,1), aux363)
reify(w-literal(actionTypes_00014,1), aux364)
reify(w-literal(actionTypes_00014,1), aux365)
reify(w-literal(actionTypes_00015,1), aux367)
reify(w-literal(actionTypes_00015,1), aux368)
reify(w-literal(actionTypes_00015,1), aux369)
reify(w-literal(actionTypes_00015,1), aux370)
reify(w-literal(actionTypes_00015,1), aux371)
reify(w-literal(actionTypes_00016,1), aux373)
reify(w-literal(actionTypes_00016,1), aux374)
reify(w-literal(actionTypes_00016,1), aux375)
reify(w-literal(actionTypes_00016,1), aux376)
reify(w-literal(actionTypes_00016,1), aux377)
reify(w-literal(actionTypes_00017,1), aux379)
reify(w-literal(actionTypes_00017,1), aux380)
reify(w-literal(actionTypes_00017,1), aux381)
reify(w-literal(actionTypes_00017,1), aux382)
reify(w-literal(actionTypes_00017,1), aux383)
reify(w-literal(actionTypes_00018,1), aux385)
reify(w-literal(actionTypes_00018,1), aux386)
reify(w-literal(actionTypes_00018,1), aux387)
reify(w-literal(actionTypes_00018,1), aux388)
reify(w-literal(actionTypes_00018,1), aux389)
reify(w-literal(actionTypes_00002,2), aux391)
reify(w-literal(actionTypes_00002,2), aux392)
reify(w-literal(actionTypes_00002,2), aux393)
reify(w-literal(actionTypes_00002,2), aux394)
reify(w-literal(actionTypes_00002,2), aux395)
reify(w-literal(actionTypes_00002,2), aux396)
reify(w-literal(actionTypes_00003,2), aux398)
reify(w-literal(actionTypes_00003,2), aux399)
reify(w-literal(actionTypes_00003,2), aux400)
reify(w-literal(actionTypes_00003,2), aux401)
reify(w-literal(actionTypes_00003,2), aux402)
reify(w-literal(actionTypes_00003,2), aux403)
reify(w-literal(actionTypes_00003,2), aux404)
reify(w-literal(actionTypes_00004,2), aux406)
reify(w-literal(actionTypes_00004,2), aux407)
reify(w-literal(actionTypes_00004,2), aux408)
reify(w-literal(actionTypes_00004,2), aux409)
reify(w-literal(actionTypes_00004,2), aux410)
reify(w-literal(actionTypes_00004,2), aux411)
reify(w-literal(actionTypes_00004,2), aux412)
reify(w-literal(actionTypes_00005,2), aux414)
reify(w-literal(actionTypes_00005,2), aux415)
reify(w-literal(actionTypes_00005,2), aux416)
reify(w-literal(actionTypes_00005,2), aux417)
reify(w-literal(actionTypes_00005,2), aux418)
reify(w-literal(actionTypes_00005,2), aux419)
reify(w-literal(actionTypes_00005,2), aux420)
reify(w-literal(actionTypes_00006,2), aux422)
reify(w-literal(actionTypes_00006,2), aux423)
reify(w-literal(actionTypes_00006,2), aux424)
reify(w-literal(actionTypes_00006,2), aux425)
reify(w-literal(actionTypes_00006,2), aux426)
reify(w-literal(actionTypes_00006,2), aux427)
reify(w-literal(actionTypes_00006,2), aux428)
reify(w-literal(actionTypes_00007,2), aux430)
reify(w-literal(actionTypes_00007,2), aux431)
reify(w-literal(actionTypes_00007,2), aux432)
reify(w-literal(actionTypes_00007,2), aux433)
reify(w-literal(actionTypes_00007,2), aux434)
reify(w-literal(actionTypes_00007,2), aux435)
reify(w-literal(actionTypes_00007,2), aux436)
reify(w-literal(actionTypes_00008,2), aux438)
reify(w-literal(actionTypes_00008,2), aux439)
reify(w-literal(actionTypes_00008,2), aux440)
reify(w-literal(actionTypes_00008,2), aux441)
reify(w-literal(actionTypes_00008,2), aux442)
reify(w-literal(actionTypes_00008,2), aux443)
reify(w-literal(actionTypes_00008,2), aux444)
reify(w-literal(actionTypes_00009,2), aux446)
reify(w-literal(actionTypes_00009,2), aux447)
reify(w-literal(actionTypes_00009,2), aux448)
reify(w-literal(actionTypes_00009,2), aux449)
reify(w-literal(actionTypes_00009,2), aux450)
reify(w-literal(actionTypes_00009,2), aux451)
reify(w-literal(actionTypes_00009,2), aux452)
reify(w-literal(actionTypes_00010,2), aux454)
reify(w-literal(actionTypes_00010,2), aux455)
reify(w-literal(actionTypes_00010,2), aux456)
reify(w-literal(actionTypes_00010,2), aux457)
reify(w-literal(actionTypes_00010,2), aux458)
reify(w-literal(actionTypes_00010,2), aux459)
reify(w-literal(actionTypes_00010,2), aux460)
reify(w-literal(actionTypes_00011,2), aux462)
reify(w-literal(actionTypes_00011,2), aux463)
reify(w-literal(actionTypes_00011,2), aux464)
reify(w-literal(actionTypes_00011,2), aux465)
reify(w-literal(actionTypes_00011,2), aux466)
reify(w-literal(actionTypes_00011,2), aux467)
reify(w-literal(actionTypes_00011,2), aux468)
reify(w-literal(actionTypes_00012,2), aux470)
reify(w-literal(actionTypes_00012,2), aux471)
reify(w-literal(actionTypes_00012,2), aux472)
reify(w-literal(actionTypes_00012,2), aux473)
reify(w-literal(actionTypes_00012,2), aux474)
reify(w-literal(actionTypes_00012,2), aux475)
reify(w-literal(actionTypes_00012,2), aux476)
reify(w-literal(actionTypes_00013,2), aux478)
reify(w-literal(actionTypes_00013,2), aux479)
reify(w-literal(actionTypes_00013,2), aux480)
reify(w-literal(actionTypes_00013,2), aux481)
reify(w-literal(actionTypes_00013,2), aux482)
reify(w-literal(actionTypes_00013,2), aux483)
reify(w-literal(actionTypes_00013,2), aux484)
reify(w-literal(actionTypes_00014,2), aux486)
reify(w-literal(actionTypes_00014,2), aux487)
reify(w-literal(actionTypes_00014,2), aux488)
reify(w-literal(actionTypes_00014,2), aux489)
reify(w-literal(actionTypes_00014,2), aux490)
reify(w-literal(actionTypes_00014,2), aux491)
reify(w-literal(actionTypes_00014,2), aux492)
reify(w-literal(actionTypes_00015,2), aux494)
reify(w-literal(actionTypes_00015,2), aux495)
reify(w-literal(actionTypes_00015,2), aux496)
reify(w-literal(actionTypes_00015,2), aux497)
reify(w-literal(actionTypes_00015,2), aux498)
reify(w-literal(actionTypes_00015,2), aux499)
reify(w-literal(actionTypes_00015,2), aux500)
reify(w-literal(actionTypes_00016,2), aux502)
reify(w-literal(actionTypes_00016,2), aux503)
reify(w-literal(actionTypes_00016,2), aux504)
reify(w-literal(actionTypes_00016,2), aux505)
reify(w-literal(actionTypes_00016,2), aux506)
reify(w-literal(actionTypes_00016,2), aux507)
reify(w-literal(actionTypes_00016,2), aux508)
reify(w-literal(actionTypes_00017,2), aux510)
reify(w-literal(actionTypes_00017,2), aux511)
reify(w-literal(actionTypes_00017,2), aux512)
reify(w-literal(actionTypes_00017,2), aux513)
reify(w-literal(actionTypes_00017,2), aux514)
reify(w-literal(actionTypes_00017,2), aux515)
reify(w-literal(actionTypes_00017,2), aux516)
reify(w-literal(actionTypes_00018,2), aux518)
reify(w-literal(actionTypes_00018,2), aux519)
reify(w-literal(actionTypes_00018,2), aux520)
reify(w-literal(actionTypes_00018,2), aux521)
reify(w-literal(actionTypes_00018,2), aux522)
reify(w-literal(actionTypes_00002,3), aux523)
reify(w-literal(actionTypes_00002,3), aux524)
reify(w-literal(actionTypes_00002,3), aux525)
reify(w-literal(actionTypes_00002,3), aux526)
reify(w-literal(actionTypes_00002,3), aux527)
reify(w-literal(actionTypes_00002,3), aux528)
reify(w-literal(actionTypes_00003,3), aux529)
reify(w-literal(actionTypes_00003,3), aux530)
reify(w-literal(actionTypes_00003,3), aux531)
reify(w-literal(actionTypes_00003,3), aux532)
reify(w-literal(actionTypes_00003,3), aux533)
reify(w-literal(actionTypes_00003,3), aux534)
reify(w-literal(actionTypes_00004,3), aux535)
reify(w-literal(actionTypes_00004,3), aux536)
reify(w-literal(actionTypes_00004,3), aux537)
reify(w-literal(actionTypes_00004,3), aux538)
reify(w-literal(actionTypes_00004,3), aux539)
reify(w-literal(actionTypes_00004,3), aux540)
reify(w-literal(actionTypes_00005,3), aux541)
reify(w-literal(actionTypes_00005,3), aux542)
reify(w-literal(actionTypes_00005,3), aux543)
reify(w-literal(actionTypes_00005,3), aux544)
reify(w-literal(actionTypes_00005,3), aux545)
reify(w-literal(actionTypes_00005,3), aux546)
reify(w-literal(actionTypes_00006,3), aux547)
reify(w-literal(actionTypes_00006,3), aux548)
reify(w-literal(actionTypes_00006,3), aux549)
reify(w-literal(actionTypes_00006,3), aux550)
reify(w-literal(actionTypes_00006,3), aux551)
reify(w-literal(actionTypes_00006,3), aux552)
reify(w-literal(actionTypes_00007,3), aux553)
reify(w-literal(actionTypes_00007,3), aux554)
reify(w-literal(actionTypes_00007,3), aux555)
reify(w-literal(actionTypes_00007,3), aux556)
reify(w-literal(actionTypes_00007,3), aux557)
reify(w-literal(actionTypes_00007,3), aux558)
reify(w-literal(actionTypes_00008,3), aux559)
reify(w-literal(actionTypes_00008,3), aux560)
reify(w-literal(actionTypes_00008,3), aux561)
reify(w-literal(actionTypes_00008,3), aux562)
reify(w-literal(actionTypes_00008,3), aux563)
reify(w-literal(actionTypes_00008,3), aux564)
reify(w-literal(actionTypes_00009,3), aux565)
reify(w-literal(actionTypes_00009,3), aux566)
reify(w-literal(actionTypes_00009,3), aux567)
reify(w-literal(actionTypes_00009,3), aux568)
reify(w-literal(actionTypes_00009,3), aux569)
reify(w-literal(actionTypes_00009,3), aux570)
reify(w-literal(actionTypes_00010,3), aux571)
reify(w-literal(actionTypes_00010,3), aux572)
reify(w-literal(actionTypes_00010,3), aux573)
reify(w-literal(actionTypes_00010,3), aux574)
reify(w-literal(actionTypes_00010,3), aux575)
reify(w-literal(actionTypes_00010,3), aux576)
reify(w-literal(actionTypes_00011,3), aux577)
reify(w-literal(actionTypes_00011,3), aux578)
reify(w-literal(actionTypes_00011,3), aux579)
reify(w-literal(actionTypes_00011,3), aux580)
reify(w-literal(actionTypes_00011,3), aux581)
reify(w-literal(actionTypes_00011,3), aux582)
reify(w-literal(actionTypes_00012,3), aux583)
reify(w-literal(actionTypes_00012,3), aux584)
reify(w-literal(actionTypes_00012,3), aux585)
reify(w-literal(actionTypes_00012,3), aux586)
reify(w-literal(actionTypes_00012,3), aux587)
reify(w-literal(actionTypes_00012,3), aux588)
reify(w-literal(actionTypes_00013,3), aux589)
reify(w-literal(actionTypes_00013,3), aux590)
reify(w-literal(actionTypes_00013,3), aux591)
reify(w-literal(actionTypes_00013,3), aux592)
reify(w-literal(actionTypes_00013,3), aux593)
reify(w-literal(actionTypes_00013,3), aux594)
reify(w-literal(actionTypes_00014,3), aux595)
reify(w-literal(actionTypes_00014,3), aux596)
reify(w-literal(actionTypes_00014,3), aux597)
reify(w-literal(actionTypes_00014,3), aux598)
reify(w-literal(actionTypes_00014,3), aux599)
reify(w-literal(actionTypes_00014,3), aux600)
reify(w-literal(actionTypes_00015,3), aux601)
reify(w-literal(actionTypes_00015,3), aux602)
reify(w-literal(actionTypes_00015,3), aux603)
reify(w-literal(actionTypes_00015,3), aux604)
reify(w-literal(actionTypes_00015,3), aux605)
reify(w-literal(actionTypes_00015,3), aux606)
reify(w-literal(actionTypes_00016,3), aux607)
reify(w-literal(actionTypes_00016,3), aux608)
reify(w-literal(actionTypes_00016,3), aux609)
reify(w-literal(actionTypes_00016,3), aux610)
reify(w-literal(actionTypes_00016,3), aux611)
reify(w-literal(actionTypes_00016,3), aux612)
reify(w-literal(actionTypes_00017,3), aux613)
reify(w-literal(actionTypes_00017,3), aux614)
reify(w-literal(actionTypes_00017,3), aux615)
reify(w-literal(actionTypes_00017,3), aux616)
reify(w-literal(actionTypes_00017,3), aux617)
reify(w-literal(actionTypes_00017,3), aux618)
reify(w-literal(actionTypes_00018,3), aux619)
reify(w-literal(actionTypes_00018,3), aux620)
reify(w-literal(actionTypes_00018,3), aux621)
reify(w-literal(actionTypes_00018,3), aux622)
reify(w-literal(actionTypes_00018,3), aux623)
reify(w-literal(actionTypes_00018,3), aux624)
reify(w-literal(actionTypes_00002,4), aux625)
reify(w-literal(actionTypes_00002,4), aux626)
reify(w-literal(actionTypes_00002,4), aux627)
reify(w-literal(actionTypes_00002,4), aux628)
reify(w-literal(actionTypes_00002,4), aux629)
reify(w-literal(actionTypes_00003,4), aux630)
reify(w-literal(actionTypes_00003,4), aux631)
reify(w-literal(actionTypes_00003,4), aux632)
reify(w-literal(actionTypes_00003,4), aux633)
reify(w-literal(actionTypes_00003,4), aux634)
reify(w-literal(actionTypes_00003,4), aux635)
reify(w-literal(actionTypes_00004,4), aux636)
reify(w-literal(actionTypes_00004,4), aux637)
reify(w-literal(actionTypes_00004,4), aux638)
reify(w-literal(actionTypes_00004,4), aux639)
reify(w-literal(actionTypes_00004,4), aux640)
reify(w-literal(actionTypes_00004,4), aux641)
reify(w-literal(actionTypes_00005,4), aux642)
reify(w-literal(actionTypes_00005,4), aux643)
reify(w-literal(actionTypes_00005,4), aux644)
reify(w-literal(actionTypes_00005,4), aux645)
reify(w-literal(actionTypes_00005,4), aux646)
reify(w-literal(actionTypes_00005,4), aux647)
reify(w-literal(actionTypes_00006,4), aux648)
reify(w-literal(actionTypes_00006,4), aux649)
reify(w-literal(actionTypes_00006,4), aux650)
reify(w-literal(actionTypes_00006,4), aux651)
reify(w-literal(actionTypes_00006,4), aux652)
reify(w-literal(actionTypes_00006,4), aux653)
reify(w-literal(actionTypes_00007,4), aux654)
reify(w-literal(actionTypes_00007,4), aux655)
reify(w-literal(actionTypes_00007,4), aux656)
reify(w-literal(actionTypes_00007,4), aux657)
reify(w-literal(actionTypes_00007,4), aux658)
reify(w-literal(actionTypes_00007,4), aux659)
reify(w-literal(actionTypes_00008,4), aux660)
reify(w-literal(actionTypes_00008,4), aux661)
reify(w-literal(actionTypes_00008,4), aux662)
reify(w-literal(actionTypes_00008,4), aux663)
reify(w-literal(actionTypes_00008,4), aux664)
reify(w-literal(actionTypes_00008,4), aux665)
reify(w-literal(actionTypes_00009,4), aux666)
reify(w-literal(actionTypes_00009,4), aux667)
reify(w-literal(actionTypes_00009,4), aux668)
reify(w-literal(actionTypes_00009,4), aux669)
reify(w-literal(actionTypes_00009,4), aux670)
reify(w-literal(actionTypes_00009,4), aux671)
reify(w-literal(actionTypes_00010,4), aux672)
reify(w-literal(actionTypes_00010,4), aux673)
reify(w-literal(actionTypes_00010,4), aux674)
reify(w-literal(actionTypes_00010,4), aux675)
reify(w-literal(actionTypes_00010,4), aux676)
reify(w-literal(actionTypes_00010,4), aux677)
reify(w-literal(actionTypes_00011,4), aux678)
reify(w-literal(actionTypes_00011,4), aux679)
reify(w-literal(actionTypes_00011,4), aux680)
reify(w-literal(actionTypes_00011,4), aux681)
reify(w-literal(actionTypes_00011,4), aux682)
reify(w-literal(actionTypes_00011,4), aux683)
reify(w-literal(actionTypes_00012,4), aux684)
reify(w-literal(actionTypes_00012,4), aux685)
reify(w-literal(actionTypes_00012,4), aux686)
reify(w-literal(actionTypes_00012,4), aux687)
reify(w-literal(actionTypes_00012,4), aux688)
reify(w-literal(actionTypes_00012,4), aux689)
reify(w-literal(actionTypes_00013,4), aux690)
reify(w-literal(actionTypes_00013,4), aux691)
reify(w-literal(actionTypes_00013,4), aux692)
reify(w-literal(actionTypes_00013,4), aux693)
reify(w-literal(actionTypes_00013,4), aux694)
reify(w-literal(actionTypes_00013,4), aux695)
reify(w-literal(actionTypes_00014,4), aux696)
reify(w-literal(actionTypes_00014,4), aux697)
reify(w-literal(actionTypes_00014,4), aux698)
reify(w-literal(actionTypes_00014,4), aux699)
reify(w-literal(actionTypes_00014,4), aux700)
reify(w-literal(actionTypes_00014,4), aux701)
reify(w-literal(actionTypes_00015,4), aux702)
reify(w-literal(actionTypes_00015,4), aux703)
reify(w-literal(actionTypes_00015,4), aux704)
reify(w-literal(actionTypes_00015,4), aux705)
reify(w-literal(actionTypes_00015,4), aux706)
reify(w-literal(actionTypes_00015,4), aux707)
reify(w-literal(actionTypes_00016,4), aux708)
reify(w-literal(actionTypes_00016,4), aux709)
reify(w-literal(actionTypes_00016,4), aux710)
reify(w-literal(actionTypes_00016,4), aux711)
reify(w-literal(actionTypes_00016,4), aux712)
reify(w-literal(actionTypes_00016,4), aux713)
reify(w-literal(actionTypes_00017,4), aux714)
reify(w-literal(actionTypes_00017,4), aux715)
reify(w-literal(actionTypes_00017,4), aux716)
reify(w-literal(actionTypes_00017,4), aux717)
reify(w-literal(actionTypes_00017,4), aux718)
reify(w-literal(actionTypes_00017,4), aux719)
reify(w-literal(actionTypes_00018,4), aux720)
reify(w-literal(actionTypes_00018,4), aux721)
reify(w-literal(actionTypes_00018,4), aux722)
reify(w-literal(actionTypes_00018,4), aux723)
reify(w-literal(actionTypes_00018,4), aux724)
reify(w-literal(actionTypes_00018,4), aux725)
reify(w-literal(actionTypes_00002,5), aux726)
reify(w-literal(actionTypes_00002,5), aux727)
reify(w-literal(actionTypes_00002,5), aux728)
reify(w-literal(actionTypes_00002,5), aux729)
reify(w-literal(actionTypes_00002,5), aux730)
reify(w-literal(actionTypes_00002,5), aux731)
reify(w-literal(actionTypes_00002,5), aux732)
reify(w-literal(actionTypes_00002,5), aux733)
reify(w-literal(actionTypes_00003,5), aux734)
reify(w-literal(actionTypes_00003,5), aux735)
reify(w-literal(actionTypes_00003,5), aux736)
reify(w-literal(actionTypes_00003,5), aux737)
reify(w-literal(actionTypes_00003,5), aux738)
reify(w-literal(actionTypes_00003,5), aux739)
reify(w-literal(actionTypes_00003,5), aux740)
reify(w-literal(actionTypes_00003,5), aux741)
reify(w-literal(actionTypes_00004,5), aux742)
reify(w-literal(actionTypes_00004,5), aux743)
reify(w-literal(actionTypes_00004,5), aux744)
reify(w-literal(actionTypes_00004,5), aux745)
reify(w-literal(actionTypes_00004,5), aux746)
reify(w-literal(actionTypes_00004,5), aux747)
reify(w-literal(actionTypes_00004,5), aux748)
reify(w-literal(actionTypes_00004,5), aux749)
reify(w-literal(actionTypes_00005,5), aux750)
reify(w-literal(actionTypes_00005,5), aux751)
reify(w-literal(actionTypes_00005,5), aux752)
reify(w-literal(actionTypes_00005,5), aux753)
reify(w-literal(actionTypes_00005,5), aux754)
reify(w-literal(actionTypes_00005,5), aux755)
reify(w-literal(actionTypes_00005,5), aux756)
reify(w-literal(actionTypes_00005,5), aux757)
reify(w-literal(actionTypes_00006,5), aux758)
reify(w-literal(actionTypes_00006,5), aux759)
reify(w-literal(actionTypes_00006,5), aux760)
reify(w-literal(actionTypes_00006,5), aux761)
reify(w-literal(actionTypes_00006,5), aux762)
reify(w-literal(actionTypes_00006,5), aux763)
reify(w-literal(actionTypes_00006,5), aux764)
reify(w-literal(actionTypes_00006,5), aux765)
reify(w-literal(actionTypes_00007,5), aux766)
reify(w-literal(actionTypes_00007,5), aux767)
reify(w-literal(actionTypes_00007,5), aux768)
reify(w-literal(actionTypes_00007,5), aux769)
reify(w-literal(actionTypes_00007,5), aux770)
reify(w-literal(actionTypes_00007,5), aux771)
reify(w-literal(actionTypes_00007,5), aux772)
reify(w-literal(actionTypes_00007,5), aux773)
reify(w-literal(actionTypes_00008,5), aux774)
reify(w-literal(actionTypes_00008,5), aux775)
reify(w-literal(actionTypes_00008,5), aux776)
reify(w-literal(actionTypes_00008,5), aux777)
reify(w-literal(actionTypes_00008,5), aux778)
reify(w-literal(actionTypes_00008,5), aux779)
reify(w-literal(actionTypes_00008,5), aux780)
reify(w-literal(actionTypes_00008,5), aux781)
reify(w-literal(actionTypes_00009,5), aux782)
reify(w-literal(actionTypes_00009,5), aux783)
reify(w-literal(actionTypes_00009,5), aux784)
reify(w-literal(actionTypes_00009,5), aux785)
reify(w-literal(actionTypes_00009,5), aux786)
reify(w-literal(actionTypes_00009,5), aux787)
reify(w-literal(actionTypes_00009,5), aux788)
reify(w-literal(actionTypes_00009,5), aux789)
reify(w-literal(actionTypes_00010,5), aux790)
reify(w-literal(actionTypes_00010,5), aux791)
reify(w-literal(actionTypes_00010,5), aux792)
reify(w-literal(actionTypes_00010,5), aux793)
reify(w-literal(actionTypes_00010,5), aux794)
reify(w-literal(actionTypes_00010,5), aux795)
reify(w-literal(actionTypes_00010,5), aux796)
reify(w-literal(actionTypes_00010,5), aux797)
reify(w-literal(actionTypes_00011,5), aux798)
reify(w-literal(actionTypes_00011,5), aux799)
reify(w-literal(actionTypes_00011,5), aux800)
reify(w-literal(actionTypes_00011,5), aux801)
reify(w-literal(actionTypes_00011,5), aux802)
reify(w-literal(actionTypes_00011,5), aux803)
reify(w-literal(actionTypes_00011,5), aux804)
reify(w-literal(actionTypes_00011,5), aux805)
reify(w-literal(actionTypes_00012,5), aux806)
reify(w-literal(actionTypes_00012,5), aux807)
reify(w-literal(actionTypes_00012,5), aux808)
reify(w-literal(actionTypes_00012,5), aux809)
reify(w-literal(actionTypes_00012,5), aux810)
reify(w-literal(actionTypes_00012,5), aux811)
reify(w-literal(actionTypes_00012,5), aux812)
reify(w-literal(actionTypes_00012,5), aux813)
reify(w-literal(actionTypes_00013,5), aux814)
reify(w-literal(actionTypes_00013,5), aux815)
reify(w-literal(actionTypes_00013,5), aux816)
reify(w-literal(actionTypes_00013,5), aux817)
reify(w-literal(actionTypes_00013,5), aux818)
reify(w-literal(actionTypes_00013,5), aux819)
reify(w-literal(actionTypes_00013,5), aux820)
reify(w-literal(actionTypes_00013,5), aux821)
reify(w-literal(actionTypes_00014,5), aux822)
reify(w-literal(actionTypes_00014,5), aux823)
reify(w-literal(actionTypes_00014,5), aux824)
reify(w-literal(actionTypes_00014,5), aux825)
reify(w-literal(actionTypes_00014,5), aux826)
reify(w-literal(actionTypes_00014,5), aux827)
reify(w-literal(actionTypes_00014,5), aux828)
reify(w-literal(actionTypes_00014,5), aux829)
reify(w-literal(actionTypes_00015,5), aux830)
reify(w-literal(actionTypes_00015,5), aux831)
reify(w-literal(actionTypes_00015,5), aux832)
reify(w-literal(actionTypes_00015,5), aux833)
reify(w-literal(actionTypes_00015,5), aux834)
reify(w-literal(actionTypes_00015,5), aux835)
reify(w-literal(actionTypes_00015,5), aux836)
reify(w-literal(actionTypes_00015,5), aux837)
reify(w-literal(actionTypes_00016,5), aux838)
reify(w-literal(actionTypes_00016,5), aux839)
reify(w-literal(actionTypes_00016,5), aux840)
reify(w-literal(actionTypes_00016,5), aux841)
reify(w-literal(actionTypes_00016,5), aux842)
reify(w-literal(actionTypes_00016,5), aux843)
reify(w-literal(actionTypes_00016,5), aux844)
reify(w-literal(actionTypes_00016,5), aux845)
reify(w-literal(actionTypes_00017,5), aux846)
reify(w-literal(actionTypes_00017,5), aux847)
reify(w-literal(actionTypes_00017,5), aux848)
reify(w-literal(actionTypes_00017,5), aux849)
reify(w-literal(actionTypes_00017,5), aux850)
reify(w-literal(actionTypes_00017,5), aux851)
reify(w-literal(actionTypes_00017,5), aux852)
reify(w-literal(actionTypes_00017,5), aux853)
reify(w-literal(actionTypes_00018,5), aux854)
reify(w-literal(actionTypes_00018,5), aux855)
reify(w-literal(actionTypes_00018,5), aux856)
reify(w-literal(actionTypes_00018,5), aux857)
reify(w-literal(actionTypes_00018,5), aux858)
reify(w-literal(actionTypes_00018,5), aux859)
reify(w-literal(actionTypes_00018,5), aux860)
reify(w-literal(actionTypes_00018,5), aux861)
reify(w-literal(actionTypes_00002,6), aux862)
reify(w-literal(actionTypes_00002,6), aux863)
reify(w-literal(actionTypes_00002,6), aux864)
reify(w-literal(actionTypes_00002,6), aux865)
reify(w-literal(actionTypes_00002,6), aux866)
reify(w-literal(actionTypes_00002,6), aux867)
reify(w-literal(actionTypes_00002,6), aux868)
reify(w-literal(actionTypes_00003,6), aux869)
reify(w-literal(actionTypes_00003,6), aux870)
reify(w-literal(actionTypes_00003,6), aux871)
reify(w-literal(actionTypes_00003,6), aux872)
reify(w-literal(actionTypes_00003,6), aux873)
reify(w-literal(actionTypes_00003,6), aux874)
reify(w-literal(actionTypes_00003,6), aux875)
reify(w-literal(actionTypes_00004,6), aux876)
reify(w-literal(actionTypes_00004,6), aux877)
reify(w-literal(actionTypes_00004,6), aux878)
reify(w-literal(actionTypes_00004,6), aux879)
reify(w-literal(actionTypes_00004,6), aux880)
reify(w-literal(actionTypes_00004,6), aux881)
reify(w-literal(actionTypes_00004,6), aux882)
reify(w-literal(actionTypes_00005,6), aux883)
reify(w-literal(actionTypes_00005,6), aux884)
reify(w-literal(actionTypes_00005,6), aux885)
reify(w-literal(actionTypes_00005,6), aux886)
reify(w-literal(actionTypes_00005,6), aux887)
reify(w-literal(actionTypes_00005,6), aux888)
reify(w-literal(actionTypes_00005,6), aux889)
reify(w-literal(actionTypes_00006,6), aux890)
reify(w-literal(actionTypes_00006,6), aux891)
reify(w-literal(actionTypes_00006,6), aux892)
reify(w-literal(actionTypes_00006,6), aux893)
reify(w-literal(actionTypes_00006,6), aux894)
reify(w-literal(actionTypes_00006,6), aux895)
reify(w-literal(actionTypes_00006,6), aux896)
reify(w-literal(actionTypes_00007,6), aux897)
reify(w-literal(actionTypes_00007,6), aux898)
reify(w-literal(actionTypes_00007,6), aux899)
reify(w-literal(actionTypes_00007,6), aux900)
reify(w-literal(actionTypes_00007,6), aux901)
reify(w-literal(actionTypes_00007,6), aux902)
reify(w-literal(actionTypes_00007,6), aux903)
reify(w-literal(actionTypes_00008,6), aux904)
reify(w-literal(actionTypes_00008,6), aux905)
reify(w-literal(actionTypes_00008,6), aux906)
reify(w-literal(actionTypes_00008,6), aux907)
reify(w-literal(actionTypes_00008,6), aux908)
reify(w-literal(actionTypes_00008,6), aux909)
reify(w-literal(actionTypes_00008,6), aux910)
reify(w-literal(actionTypes_00009,6), aux911)
reify(w-literal(actionTypes_00009,6), aux912)
reify(w-literal(actionTypes_00009,6), aux913)
reify(w-literal(actionTypes_00009,6), aux914)
reify(w-literal(actionTypes_00009,6), aux915)
reify(w-literal(actionTypes_00009,6), aux916)
reify(w-literal(actionTypes_00009,6), aux917)
reify(w-literal(actionTypes_00010,6), aux918)
reify(w-literal(actionTypes_00010,6), aux919)
reify(w-literal(actionTypes_00010,6), aux920)
reify(w-literal(actionTypes_00010,6), aux921)
reify(w-literal(actionTypes_00010,6), aux922)
reify(w-literal(actionTypes_00010,6), aux923)
reify(w-literal(actionTypes_00010,6), aux924)
reify(w-literal(actionTypes_00011,6), aux925)
reify(w-literal(actionTypes_00011,6), aux926)
reify(w-literal(actionTypes_00011,6), aux927)
reify(w-literal(actionTypes_00011,6), aux928)
reify(w-literal(actionTypes_00011,6), aux929)
reify(w-literal(actionTypes_00011,6), aux930)
reify(w-literal(actionTypes_00011,6), aux931)
reify(w-literal(actionTypes_00012,6), aux932)
reify(w-literal(actionTypes_00012,6), aux933)
reify(w-literal(actionTypes_00012,6), aux934)
reify(w-literal(actionTypes_00012,6), aux935)
reify(w-literal(actionTypes_00012,6), aux936)
reify(w-literal(actionTypes_00012,6), aux937)
reify(w-literal(actionTypes_00012,6), aux938)
reify(w-literal(actionTypes_00013,6), aux939)
reify(w-literal(actionTypes_00013,6), aux940)
reify(w-literal(actionTypes_00013,6), aux941)
reify(w-literal(actionTypes_00013,6), aux942)
reify(w-literal(actionTypes_00013,6), aux943)
reify(w-literal(actionTypes_00013,6), aux944)
reify(w-literal(actionTypes_00013,6), aux945)
reify(w-literal(actionTypes_00014,6), aux946)
reify(w-literal(actionTypes_00014,6), aux947)
reify(w-literal(actionTypes_00014,6), aux948)
reify(w-literal(actionTypes_00014,6), aux949)
reify(w-literal(actionTypes_00014,6), aux950)
reify(w-literal(actionTypes_00014,6), aux951)
reify(w-literal(actionTypes_00014,6), aux952)
reify(w-literal(actionTypes_00015,6), aux953)
reify(w-literal(actionTypes_00015,6), aux954)
reify(w-literal(actionTypes_00015,6), aux955)
reify(w-literal(actionTypes_00015,6), aux956)
reify(w-literal(actionTypes_00015,6), aux957)
reify(w-literal(actionTypes_00015,6), aux958)
reify(w-literal(actionTypes_00015,6), aux959)
reify(w-literal(actionTypes_00016,6), aux960)
reify(w-literal(actionTypes_00016,6), aux961)
reify(w-literal(actionTypes_00016,6), aux962)
reify(w-literal(actionTypes_00016,6), aux963)
reify(w-literal(actionTypes_00016,6), aux964)
reify(w-literal(actionTypes_00016,6), aux965)
reify(w-literal(actionTypes_00016,6), aux966)
reify(w-literal(actionTypes_00017,6), aux967)
reify(w-literal(actionTypes_00017,6), aux968)
reify(w-literal(actionTypes_00017,6), aux969)
reify(w-literal(actionTypes_00017,6), aux970)
reify(w-literal(actionTypes_00017,6), aux971)
reify(w-literal(actionTypes_00017,6), aux972)
reify(w-literal(actionTypes_00017,6), aux973)
reify(w-literal(actionTypes_00018,6), aux974)
reify(w-literal(actionTypes_00018,6), aux975)
reify(w-literal(actionTypes_00018,6), aux976)
reify(w-literal(actionTypes_00018,6), aux977)
reify(w-literal(actionTypes_00018,6), aux978)
reify(w-literal(actionTypes_00018,6), aux979)
reify(w-literal(actionTypes_00018,6), aux980)
reify(w-literal(actionTypes_00002,7), aux981)
reify(w-literal(actionTypes_00002,7), aux982)
reify(w-literal(actionTypes_00002,7), aux983)
reify(w-literal(actionTypes_00002,7), aux984)
reify(w-literal(actionTypes_00002,7), aux985)
reify(w-literal(actionTypes_00002,7), aux986)
reify(w-literal(actionTypes_00002,7), aux987)
reify(w-literal(actionTypes_00003,7), aux988)
reify(w-literal(actionTypes_00003,7), aux989)
reify(w-literal(actionTypes_00003,7), aux990)
reify(w-literal(actionTypes_00003,7), aux991)
reify(w-literal(actionTypes_00003,7), aux992)
reify(w-literal(actionTypes_00003,7), aux993)
reify(w-literal(actionTypes_00003,7), aux994)
reify(w-literal(actionTypes_00004,7), aux995)
reify(w-literal(actionTypes_00004,7), aux996)
reify(w-literal(actionTypes_00004,7), aux997)
reify(w-literal(actionTypes_00004,7), aux998)
reify(w-literal(actionTypes_00004,7), aux999)
reify(w-literal(actionTypes_00004,7), aux1000)
reify(w-literal(actionTypes_00004,7), aux1001)
reify(w-literal(actionTypes_00005,7), aux1002)
reify(w-literal(actionTypes_00005,7), aux1003)
reify(w-literal(actionTypes_00005,7), aux1004)
reify(w-literal(actionTypes_00005,7), aux1005)
reify(w-literal(actionTypes_00005,7), aux1006)
reify(w-literal(actionTypes_00005,7), aux1007)
reify(w-literal(actionTypes_00005,7), aux1008)
reify(w-literal(actionTypes_00006,7), aux1009)
reify(w-literal(actionTypes_00006,7), aux1010)
reify(w-literal(actionTypes_00006,7), aux1011)
reify(w-literal(actionTypes_00006,7), aux1012)
reify(w-literal(actionTypes_00006,7), aux1013)
reify(w-literal(actionTypes_00006,7), aux1014)
reify(w-literal(actionTypes_00006,7), aux1015)
reify(w-literal(actionTypes_00007,7), aux1016)
reify(w-literal(actionTypes_00007,7), aux1017)
reify(w-literal(actionTypes_00007,7), aux1018)
reify(w-literal(actionTypes_00007,7), aux1019)
reify(w-literal(actionTypes_00007,7), aux1020)
reify(w-literal(actionTypes_00007,7), aux1021)
reify(w-literal(actionTypes_00007,7), aux1022)
reify(w-literal(actionTypes_00008,7), aux1023)
reify(w-literal(actionTypes_00008,7), aux1024)
reify(w-literal(actionTypes_00008,7), aux1025)
reify(w-literal(actionTypes_00008,7), aux1026)
reify(w-literal(actionTypes_00008,7), aux1027)
reify(w-literal(actionTypes_00008,7), aux1028)
reify(w-literal(actionTypes_00008,7), aux1029)
reify(w-literal(actionTypes_00009,7), aux1030)
reify(w-literal(actionTypes_00009,7), aux1031)
reify(w-literal(actionTypes_00009,7), aux1032)
reify(w-literal(actionTypes_00009,7), aux1033)
reify(w-literal(actionTypes_00009,7), aux1034)
reify(w-literal(actionTypes_00009,7), aux1035)
reify(w-literal(actionTypes_00009,7), aux1036)
reify(w-literal(actionTypes_00010,7), aux1037)
reify(w-literal(actionTypes_00010,7), aux1038)
reify(w-literal(actionTypes_00010,7), aux1039)
reify(w-literal(actionTypes_00010,7), aux1040)
reify(w-literal(actionTypes_00010,7), aux1041)
reify(w-literal(actionTypes_00010,7), aux1042)
reify(w-literal(actionTypes_00010,7), aux1043)
reify(w-literal(actionTypes_00011,7), aux1044)
reify(w-literal(actionTypes_00011,7), aux1045)
reify(w-literal(actionTypes_00011,7), aux1046)
reify(w-literal(actionTypes_00011,7), aux1047)
reify(w-literal(actionTypes_00011,7), aux1048)
reify(w-literal(actionTypes_00011,7), aux1049)
reify(w-literal(actionTypes_00011,7), aux1050)
reify(w-literal(actionTypes_00012,7), aux1051)
reify(w-literal(actionTypes_00012,7), aux1052)
reify(w-literal(actionTypes_00012,7), aux1053)
reify(w-literal(actionTypes_00012,7), aux1054)
reify(w-literal(actionTypes_00012,7), aux1055)
reify(w-literal(actionTypes_00012,7), aux1056)
reify(w-literal(actionTypes_00012,7), aux1057)
reify(w-literal(actionTypes_00013,7), aux1058)
reify(w-literal(actionTypes_00013,7), aux1059)
reify(w-literal(actionTypes_00013,7), aux1060)
reify(w-literal(actionTypes_00013,7), aux1061)
reify(w-literal(actionTypes_00013,7), aux1062)
reify(w-literal(actionTypes_00013,7), aux1063)
reify(w-literal(actionTypes_00013,7), aux1064)
reify(w-literal(actionTypes_00014,7), aux1065)
reify(w-literal(actionTypes_00014,7), aux1066)
reify(w-literal(actionTypes_00014,7), aux1067)
reify(w-literal(actionTypes_00014,7), aux1068)
reify(w-literal(actionTypes_00014,7), aux1069)
reify(w-literal(actionTypes_00014,7), aux1070)
reify(w-literal(actionTypes_00014,7), aux1071)
reify(w-literal(actionTypes_00015,7), aux1072)
reify(w-literal(actionTypes_00015,7), aux1073)
reify(w-literal(actionTypes_00015,7), aux1074)
reify(w-literal(actionTypes_00015,7), aux1075)
reify(w-literal(actionTypes_00015,7), aux1076)
reify(w-literal(actionTypes_00015,7), aux1077)
reify(w-literal(actionTypes_00015,7), aux1078)
reify(w-literal(actionTypes_00016,7), aux1079)
reify(w-literal(actionTypes_00016,7), aux1080)
reify(w-literal(actionTypes_00016,7), aux1081)
reify(w-literal(actionTypes_00016,7), aux1082)
reify(w-literal(actionTypes_00016,7), aux1083)
reify(w-literal(actionTypes_00016,7), aux1084)
reify(w-literal(actionTypes_00016,7), aux1085)
reify(w-literal(actionTypes_00017,7), aux1086)
reify(w-literal(actionTypes_00017,7), aux1087)
reify(w-literal(actionTypes_00017,7), aux1088)
reify(w-literal(actionTypes_00017,7), aux1089)
reify(w-literal(actionTypes_00017,7), aux1090)
reify(w-literal(actionTypes_00017,7), aux1091)
reify(w-literal(actionTypes_00017,7), aux1092)
reify(w-literal(actionTypes_00018,7), aux1093)
reify(w-literal(actionTypes_00018,7), aux1094)
reify(w-literal(actionTypes_00018,7), aux1095)
reify(w-literal(actionTypes_00018,7), aux1096)
reify(w-literal(actionTypes_00018,7), aux1097)
reify(w-literal(actionTypes_00018,7), aux1098)
reify(w-literal(actionTypes_00018,7), aux1099)
reify(w-literal(actionTypes_00002,8), aux1100)
reify(w-literal(actionTypes_00002,8), aux1101)
reify(w-literal(actionTypes_00002,8), aux1102)
reify(w-literal(actionTypes_00002,8), aux1103)
reify(w-literal(actionTypes_00002,8), aux1104)
reify(w-literal(actionTypes_00002,8), aux1105)
reify(w-literal(actionTypes_00003,8), aux1106)
reify(w-literal(actionTypes_00003,8), aux1107)
reify(w-literal(actionTypes_00003,8), aux1108)
reify(w-literal(actionTypes_00003,8), aux1109)
reify(w-literal(actionTypes_00003,8), aux1110)
reify(w-literal(actionTypes_00003,8), aux1111)
reify(w-literal(actionTypes_00004,8), aux1112)
reify(w-literal(actionTypes_00004,8), aux1113)
reify(w-literal(actionTypes_00004,8), aux1114)
reify(w-literal(actionTypes_00004,8), aux1115)
reify(w-literal(actionTypes_00004,8), aux1116)
reify(w-literal(actionTypes_00004,8), aux1117)
reify(w-literal(actionTypes_00005,8), aux1118)
reify(w-literal(actionTypes_00005,8), aux1119)
reify(w-literal(actionTypes_00005,8), aux1120)
reify(w-literal(actionTypes_00005,8), aux1121)
reify(w-literal(actionTypes_00005,8), aux1122)
reify(w-literal(actionTypes_00005,8), aux1123)
reify(w-literal(actionTypes_00006,8), aux1124)
reify(w-literal(actionTypes_00006,8), aux1125)
reify(w-literal(actionTypes_00006,8), aux1126)
reify(w-literal(actionTypes_00006,8), aux1127)
reify(w-literal(actionTypes_00006,8), aux1128)
reify(w-literal(actionTypes_00006,8), aux1129)
reify(w-literal(actionTypes_00007,8), aux1130)
reify(w-literal(actionTypes_00007,8), aux1131)
reify(w-literal(actionTypes_00007,8), aux1132)
reify(w-literal(actionTypes_00007,8), aux1133)
reify(w-literal(actionTypes_00007,8), aux1134)
reify(w-literal(actionTypes_00007,8), aux1135)
reify(w-literal(actionTypes_00008,8), aux1136)
reify(w-literal(actionTypes_00008,8), aux1137)
reify(w-literal(actionTypes_00008,8), aux1138)
reify(w-literal(actionTypes_00008,8), aux1139)
reify(w-literal(actionTypes_00008,8), aux1140)
reify(w-literal(actionTypes_00008,8), aux1141)
reify(w-literal(actionTypes_00009,8), aux1142)
reify(w-literal(actionTypes_00009,8), aux1143)
reify(w-literal(actionTypes_00009,8), aux1144)
reify(w-literal(actionTypes_00009,8), aux1145)
reify(w-literal(actionTypes_00009,8), aux1146)
reify(w-literal(actionTypes_00009,8), aux1147)
reify(w-literal(actionTypes_00010,8), aux1148)
reify(w-literal(actionTypes_00010,8), aux1149)
reify(w-literal(actionTypes_00010,8), aux1150)
reify(w-literal(actionTypes_00010,8), aux1151)
reify(w-literal(actionTypes_00010,8), aux1152)
reify(w-literal(actionTypes_00010,8), aux1153)
reify(w-literal(actionTypes_00011,8), aux1154)
reify(w-literal(actionTypes_00011,8), aux1155)
reify(w-literal(actionTypes_00011,8), aux1156)
reify(w-literal(actionTypes_00011,8), aux1157)
reify(w-literal(actionTypes_00011,8), aux1158)
reify(w-literal(actionTypes_00011,8), aux1159)
reify(w-literal(actionTypes_00012,8), aux1160)
reify(w-literal(actionTypes_00012,8), aux1161)
reify(w-literal(actionTypes_00012,8), aux1162)
reify(w-literal(actionTypes_00012,8), aux1163)
reify(w-literal(actionTypes_00012,8), aux1164)
reify(w-literal(actionTypes_00012,8), aux1165)
reify(w-literal(actionTypes_00013,8), aux1166)
reify(w-literal(actionTypes_00013,8), aux1167)
reify(w-literal(actionTypes_00013,8), aux1168)
reify(w-literal(actionTypes_00013,8), aux1169)
reify(w-literal(actionTypes_00013,8), aux1170)
reify(w-literal(actionTypes_00013,8), aux1171)
reify(w-literal(actionTypes_00014,8), aux1172)
reify(w-literal(actionTypes_00014,8), aux1173)
reify(w-literal(actionTypes_00014,8), aux1174)
reify(w-literal(actionTypes_00014,8), aux1175)
reify(w-literal(actionTypes_00014,8), aux1176)
reify(w-literal(actionTypes_00014,8), aux1177)
reify(w-literal(actionTypes_00015,8), aux1178)
reify(w-literal(actionTypes_00015,8), aux1179)
reify(w-literal(actionTypes_00015,8), aux1180)
reify(w-literal(actionTypes_00015,8), aux1181)
reify(w-literal(actionTypes_00015,8), aux1182)
reify(w-literal(actionTypes_00015,8), aux1183)
reify(w-literal(actionTypes_00016,8), aux1184)
reify(w-literal(actionTypes_00016,8), aux1185)
reify(w-literal(actionTypes_00016,8), aux1186)
reify(w-literal(actionTypes_00016,8), aux1187)
reify(w-literal(actionTypes_00016,8), aux1188)
reify(w-literal(actionTypes_00016,8), aux1189)
reify(w-literal(actionTypes_00017,8), aux1190)
reify(w-literal(actionTypes_00017,8), aux1191)
reify(w-literal(actionTypes_00017,8), aux1192)
reify(w-literal(actionTypes_00017,8), aux1193)
reify(w-literal(actionTypes_00017,8), aux1194)
reify(w-literal(actionTypes_00017,8), aux1195)
reify(w-literal(actionTypes_00018,8), aux1196)
reify(w-literal(actionTypes_00018,8), aux1197)
reify(w-literal(actionTypes_00018,8), aux1198)
reify(w-literal(actionTypes_00018,8), aux1199)
reify(w-literal(actionTypes_00018,8), aux1200)
reify(w-literal(actionTypes_00018,8), aux1201)
reify(watchelement_undefzero([statePlaces_00002_00017, statePlaces_00003_00017], aux184, aux122), aux53)
reify(watchelement_undefzero([statePlaces_00002_00014, statePlaces_00003_00014], aux173, aux116), aux54)
reify(watchelement_undefzero([statePlaces_00002_00013, statePlaces_00003_00013], aux175, aux124), aux55)
reify(watchelement_undefzero([statePlaces_00002_00016, statePlaces_00003_00016], aux169, aux134), aux56)
reify(watchelement_undefzero([statePlaces_00002_00015, statePlaces_00003_00015], aux170, aux106), aux57)
reify(watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux177, aux103), aux58)
reify(watchelement_undefzero([statePlaces_00002_00012, statePlaces_00003_00012], aux174, aux120), aux59)
reify(watchelement_undefzero([statePlaces_00002_00011, statePlaces_00003_00011], aux176, aux131), aux60)
reify(watchelement_undefzero([1, statePlaces_00003_00018], aux182, aux128), aux61)
reify(watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux203, aux133), aux62)
reify(watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux205, aux110), aux63)
reify(watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux201, aux105), aux64)
reify(watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux200, aux114), aux65)
reify(watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux202, aux123), aux66)
reify(watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux209, aux118), aux67)
reify(watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux206, aux115), aux68)
reify(watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux208, aux111), aux69)
reify(lexless([1, statePlaces_00003_00018],[statePlaces_00002_00017, statePlaces_00003_00017]), aux70)
reify(lexless([1, statePlaces_00003_00018],[statePlaces_00002_00016, statePlaces_00003_00016]), aux71)
reify(lexless([1, statePlaces_00003_00018],[statePlaces_00002_00015, statePlaces_00003_00015]), aux72)
reify(lexless([1, statePlaces_00003_00018],[statePlaces_00002_00014, statePlaces_00003_00014]), aux73)
reify(lexless([1, statePlaces_00003_00018],[statePlaces_00002_00013, statePlaces_00003_00013]), aux74)
reify(lexless([1, statePlaces_00003_00018],[statePlaces_00002_00012, statePlaces_00003_00012]), aux75)
reify(lexless([1, statePlaces_00003_00018],[statePlaces_00002_00011, statePlaces_00003_00011]), aux76)
reify(lexless([1, statePlaces_00003_00018],[statePlaces_00002_00010, statePlaces_00003_00010]), aux77)
reify(lexless([1, statePlaces_00003_00018],[statePlaces_00002_00009, statePlaces_00003_00009]), aux78)
reify(lexless([1, statePlaces_00003_00018],[statePlaces_00002_00008, statePlaces_00003_00008]), aux79)
reify(lexless([1, statePlaces_00003_00018],[statePlaces_00002_00006, statePlaces_00003_00006]), aux80)
reify(lexless([1, statePlaces_00003_00018],[statePlaces_00002_00007, statePlaces_00003_00007]), aux81)
reify(lexless([1, statePlaces_00003_00018],[statePlaces_00002_00004, statePlaces_00003_00004]), aux82)
reify(lexless([1, statePlaces_00003_00018],[statePlaces_00002_00005, statePlaces_00003_00005]), aux83)
reify(lexless([1, statePlaces_00003_00018],[statePlaces_00002_00002, statePlaces_00003_00002]), aux84)
reify(lexless([1, statePlaces_00003_00018],[statePlaces_00002_00003, statePlaces_00003_00003]), aux85)
reify(lexless([statePlaces_00002_00011, statePlaces_00003_00011],[1, statePlaces_00003_00018]), aux86)
reify(lexless([statePlaces_00002_00012, statePlaces_00003_00012],[1, statePlaces_00003_00018]), aux87)
reify(lexless([statePlaces_00002_00013, statePlaces_00003_00013],[1, statePlaces_00003_00018]), aux88)
reify(lexless([statePlaces_00002_00014, statePlaces_00003_00014],[1, statePlaces_00003_00018]), aux89)
reify(lexless([statePlaces_00002_00016, statePlaces_00003_00016],[1, statePlaces_00003_00018]), aux90)
reify(lexless([statePlaces_00002_00015, statePlaces_00003_00015],[1, statePlaces_00003_00018]), aux91)
reify(lexless([statePlaces_00002_00017, statePlaces_00003_00017],[1, statePlaces_00003_00018]), aux92)
reify(lexless([statePlaces_00002_00010, statePlaces_00003_00010],[1, statePlaces_00003_00018]), aux93)
reify(lexless([statePlaces_00002_00009, statePlaces_00003_00009],[1, statePlaces_00003_00018]), aux94)
reify(lexless([statePlaces_00002_00008, statePlaces_00003_00008],[1, statePlaces_00003_00018]), aux95)
reify(lexless([statePlaces_00002_00007, statePlaces_00003_00007],[1, statePlaces_00003_00018]), aux96)
reify(lexless([statePlaces_00002_00006, statePlaces_00003_00006],[1, statePlaces_00003_00018]), aux97)
reify(lexless([statePlaces_00002_00005, statePlaces_00003_00005],[1, statePlaces_00003_00018]), aux98)
reify(lexless([statePlaces_00002_00004, statePlaces_00003_00004],[1, statePlaces_00003_00018]), aux99)
reify(lexless([statePlaces_00002_00003, statePlaces_00003_00003],[1, statePlaces_00003_00018]), aux100)
reify(lexless([statePlaces_00002_00002, statePlaces_00003_00002],[1, statePlaces_00003_00018]), aux101)
watchelement_undefzero([statePlaces_00002_00012, statePlaces_00003_00012], aux165, aux102)
watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux171, aux103)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux215, aux104)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux154, aux105)
watchelement_undefzero([statePlaces_00002_00015, statePlaces_00003_00015], aux220, aux106)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux186, aux107)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux219, aux108)
watchelement_undefzero([statePlaces_00002_00017, statePlaces_00003_00017], aux172, aux109)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux196, aux110)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux215, aux111)
watchelement_undefzero([statePlaces_00002_00011, statePlaces_00003_00011], aux155, aux112)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux168, aux113)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux186, aux114)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux219, aux115)
watchelement_undefzero([statePlaces_00002_00014, statePlaces_00003_00014], aux216, aux116)
watchelement_undefzero([statePlaces_00002_00016, statePlaces_00003_00016], aux211, aux117)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux164, aux118)
watchelement_undefzero([statePlaces_00002_00014, statePlaces_00003_00014], aux220, aux119)
watchelement_undefzero([statePlaces_00002_00012, statePlaces_00003_00012], aux155, aux120)
watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux189, aux121)
watchelement_undefzero([statePlaces_00002_00017, statePlaces_00003_00017], aux211, aux122)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux168, aux123)
watchelement_undefzero([statePlaces_00002_00013, statePlaces_00003_00013], aux165, aux124)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux171, aux125)
watchelement_undefzero([statePlaces_00002_00015, statePlaces_00003_00015], aux198, aux126)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux210, aux127)
watchelement_undefzero([1, statePlaces_00003_00018], aux172, aux128)
watchelement_undefzero([6, -1], aux164, aux129)
watchelement_undefzero([statePlaces_00002_00013, statePlaces_00003_00013], aux216, aux130)
watchelement_undefzero([statePlaces_00002_00011, statePlaces_00003_00011], aux189, aux131)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux154, aux132)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux210, aux133)
watchelement_undefzero([statePlaces_00002_00016, statePlaces_00003_00016], aux198, aux134)
watchelement_undefzero([6, -1], aux209, aux135)
watchelement_undefzero([statePlaces_00002_00010, statePlaces_00003_00010], aux176, aux136)
watchelement_undefzero([statePlaces_00002_00015, statePlaces_00003_00015], aux169, aux137)
watchelement_undefzero([statePlaces_00002_00016, statePlaces_00003_00016], aux184, aux138)
watchelement_undefzero([statePlaces_00002_00017, statePlaces_00003_00017], aux182, aux139)
watchelement_undefzero([statePlaces_00002_00011, statePlaces_00003_00011], aux174, aux140)
watchelement_undefzero([statePlaces_00002_00012, statePlaces_00003_00012], aux175, aux141)
watchelement_undefzero([statePlaces_00002_00013, statePlaces_00003_00013], aux173, aux142)
watchelement_undefzero([statePlaces_00002_00014, statePlaces_00003_00014], aux170, aux143)
watchelement_undefzero([statePlaces_00002_00008, statePlaces_00003_00008], aux201, aux144)
watchelement_undefzero([statePlaces_00002_00009, statePlaces_00003_00009], aux177, aux145)
watchelement_undefzero([statePlaces_00002_00003, statePlaces_00003_00003], aux206, aux146)
watchelement_undefzero([statePlaces_00002_00002, statePlaces_00003_00002], aux208, aux147)
watchelement_undefzero([statePlaces_00002_00007, statePlaces_00003_00007], aux200, aux148)
watchelement_undefzero([statePlaces_00002_00006, statePlaces_00003_00006], aux202, aux149)
watchelement_undefzero([statePlaces_00002_00005, statePlaces_00003_00005], aux203, aux150)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux205, aux151)
watchelement_undefzero([statePlaces_00002_00004, statePlaces_00003_00004], aux196, aux152)
reify(w-inintervalset(actionFrom_00007,[2,3]), aux153)
reify(w-inintervalset(actionTo_00008,[2,3]), aux156)
reify(w-inintervalset(actionTo_00007,[2,3]), aux157)
reify(w-inintervalset(actionTo_00009,[2,3]), aux158)
reify(w-inintervalset(actionTo_00003,[2,3]), aux159)
reify(w-inintervalset(actionTo_00002,[2,3]), aux160)
reify(w-inintervalset(actionTo_00006,[2,3]), aux161)
reify(w-inintervalset(actionTo_00005,[2,3]), aux162)
reify(w-inintervalset(actionTo_00004,[2,3]), aux163)
reify(w-inintervalset(actionFrom_00002,[2,3]), aux166)
reify(w-inintervalset(actionFrom_00014,[2,3]), aux167)
reify(w-inintervalset(actionFrom_00011,[2,3]), aux178)
reify(w-inintervalset(actionFrom_00010,[2,3]), aux179)
reify(w-inintervalset(actionTo_00018,[2,3]), aux180)
reify(w-inintervalset(actionTo_00017,[2,3]), aux181)
reify(w-inintervalset(actionFrom_00003,[2,3]), aux183)
reify(w-inintervalset(actionTo_00014,[2,3]), aux185)
reify(w-inintervalset(actionFrom_00015,[2,3]), aux187)
reify(w-inintervalset(actionTo_00013,[2,3]), aux188)
reify(w-inintervalset(actionTo_00016,[2,3]), aux190)
reify(w-inintervalset(actionTo_00015,[2,3]), aux191)
reify(w-inintervalset(actionFrom_00008,[2,3]), aux192)
reify(w-inintervalset(actionTo_00012,[2,3]), aux193)
reify(w-inintervalset(actionTo_00011,[2,3]), aux194)
reify(w-inintervalset(actionTo_00010,[2,3]), aux195)
reify(w-inintervalset(actionFrom_00005,[2,3]), aux197)
reify(w-inintervalset(actionFrom_00012,[2,3]), aux199)
reify(w-inintervalset(actionFrom_00004,[2,3]), aux204)
reify(w-inintervalset(actionFrom_00016,[2,3]), aux207)
reify(w-inintervalset(actionFrom_00009,[2,3]), aux212)
reify(w-inintervalset(actionFrom_00006,[2,3]), aux213)
reify(w-inintervalset(actionFrom_00013,[2,3]), aux214)
reify(w-inintervalset(actionFrom_00018,[2,3]), aux217)
reify(w-inintervalset(actionFrom_00017,[2,3]), aux218)
watched-or({ineq(statePlaces_00002_00002, 6, -1),lexless([1, 0],[pointers_00000_00002, pointers_00001_00002]),lexless([6, -1],[statePlaces_00002_00002, statePlaces_00003_00002])})
watched-or({ineq(statePlaces_00002_00003, 6, -1),lexless([1, 0],[pointers_00000_00003, pointers_00001_00003]),lexless([6, -1],[statePlaces_00002_00003, statePlaces_00003_00003])})
watched-or({ineq(statePlaces_00002_00004, 6, -1),lexless([1, 0],[pointers_00000_00004, pointers_00001_00004]),lexless([6, -1],[statePlaces_00002_00004, statePlaces_00003_00004])})
watched-or({ineq(statePlaces_00002_00005, 6, -1),lexless([1, 0],[pointers_00000_00005, pointers_00001_00005]),lexless([6, -1],[statePlaces_00002_00005, statePlaces_00003_00005])})
watched-or({ineq(statePlaces_00002_00006, 6, -1),lexless([1, 0],[pointers_00000_00006, pointers_00001_00006]),lexless([6, -1],[statePlaces_00002_00006, statePlaces_00003_00006])})
watched-or({ineq(statePlaces_00002_00007, 6, -1),lexless([1, 0],[pointers_00000_00007, pointers_00001_00007]),lexless([6, -1],[statePlaces_00002_00007, statePlaces_00003_00007])})
watched-or({ineq(statePlaces_00002_00008, 6, -1),lexless([1, 0],[pointers_00000_00008, pointers_00001_00008]),lexless([6, -1],[statePlaces_00002_00008, statePlaces_00003_00008])})
watched-or({ineq(statePlaces_00002_00009, 6, -1),lexless([1, 0],[pointers_00000_00009, pointers_00001_00009]),lexless([6, -1],[statePlaces_00002_00009, statePlaces_00003_00009])})
watched-or({ineq(statePlaces_00002_00010, 6, -1),lexless([1, 0],[pointers_00000_00010, pointers_00001_00010]),lexless([6, -1],[statePlaces_00002_00010, statePlaces_00003_00010])})
watched-or({ineq(statePlaces_00002_00011, 6, -1),lexless([1, 0],[pointers_00000_00011, pointers_00001_00011]),lexless([6, -1],[statePlaces_00002_00011, statePlaces_00003_00011])})
watched-or({ineq(statePlaces_00002_00012, 6, -1),lexless([1, 0],[pointers_00000_00012, pointers_00001_00012]),lexless([6, -1],[statePlaces_00002_00012, statePlaces_00003_00012])})
watched-or({ineq(statePlaces_00002_00013, 6, -1),lexless([1, 0],[pointers_00000_00013, pointers_00001_00013]),lexless([6, -1],[statePlaces_00002_00013, statePlaces_00003_00013])})
watched-or({ineq(statePlaces_00002_00014, 6, -1),lexless([1, 0],[pointers_00000_00014, pointers_00001_00014]),lexless([6, -1],[statePlaces_00002_00014, statePlaces_00003_00014])})
watched-or({ineq(statePlaces_00002_00015, 6, -1),lexless([1, 0],[pointers_00000_00015, pointers_00001_00015]),lexless([6, -1],[statePlaces_00002_00015, statePlaces_00003_00015])})
watched-or({ineq(statePlaces_00002_00016, 6, -1),lexless([1, 0],[pointers_00000_00016, pointers_00001_00016]),lexless([6, -1],[statePlaces_00002_00016, statePlaces_00003_00016])})
watched-or({ineq(statePlaces_00002_00017, 6, -1),lexless([1, 0],[pointers_00000_00017, pointers_00001_00017]),lexless([6, -1],[statePlaces_00002_00017, statePlaces_00003_00017])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00003, pointers_00001_00003])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00004, pointers_00001_00004])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00014, pointers_00001_00014])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00015, pointers_00001_00015])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00016, statePlaces_00003_00016]),lexless([statePlaces_00002_00016, statePlaces_00003_00016],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00016, pointers_00001_00016])})
watched-or({lexless([statePlaces_00002_00002, statePlaces_00003_00002],[statePlaces_00002_00017, statePlaces_00003_00017]),lexless([statePlaces_00002_00017, statePlaces_00003_00017],[statePlaces_00002_00002, statePlaces_00003_00002]),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00017, pointers_00001_00017])})
watched-or({w-literal(aux101,1),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00019, 3]),w-literal(aux84,1)})
watched-or({w-literal(aux101,1),lexless([pointers_00000_00002, pointers_00001_00002],[pointers_00000_00019, 4]),w-literal(aux84,1)})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00004, pointers_00001_00004])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00014, pointers_00001_00014])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00015, pointers_00001_00015])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00016, statePlaces_00003_00016]),lexless([statePlaces_00002_00016, statePlaces_00003_00016],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00016, pointers_00001_00016])})
watched-or({lexless([statePlaces_00002_00003, statePlaces_00003_00003],[statePlaces_00002_00017, statePlaces_00003_00017]),lexless([statePlaces_00002_00017, statePlaces_00003_00017],[statePlaces_00002_00003, statePlaces_00003_00003]),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00017, pointers_00001_00017])})
watched-or({w-literal(aux100,1),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00019, 3]),w-literal(aux85,1)})
watched-or({w-literal(aux100,1),lexless([pointers_00000_00003, pointers_00001_00003],[pointers_00000_00019, 4]),w-literal(aux85,1)})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00005, pointers_00001_00005])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00014, pointers_00001_00014])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00015, pointers_00001_00015])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00016, statePlaces_00003_00016]),lexless([statePlaces_00002_00016, statePlaces_00003_00016],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00016, pointers_00001_00016])})
watched-or({lexless([statePlaces_00002_00004, statePlaces_00003_00004],[statePlaces_00002_00017, statePlaces_00003_00017]),lexless([statePlaces_00002_00017, statePlaces_00003_00017],[statePlaces_00002_00004, statePlaces_00003_00004]),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00017, pointers_00001_00017])})
watched-or({w-literal(aux99,1),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00019, 3]),w-literal(aux82,1)})
watched-or({w-literal(aux99,1),lexless([pointers_00000_00004, pointers_00001_00004],[pointers_00000_00019, 4]),w-literal(aux82,1)})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00006, pointers_00001_00006])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00014, pointers_00001_00014])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00015, pointers_00001_00015])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00016, statePlaces_00003_00016]),lexless([statePlaces_00002_00016, statePlaces_00003_00016],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00016, pointers_00001_00016])})
watched-or({lexless([statePlaces_00002_00005, statePlaces_00003_00005],[statePlaces_00002_00017, statePlaces_00003_00017]),lexless([statePlaces_00002_00017, statePlaces_00003_00017],[statePlaces_00002_00005, statePlaces_00003_00005]),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00017, pointers_00001_00017])})
watched-or({w-literal(aux98,1),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00019, 3]),w-literal(aux83,1)})
watched-or({w-literal(aux98,1),lexless([pointers_00000_00005, pointers_00001_00005],[pointers_00000_00019, 4]),w-literal(aux83,1)})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00007, pointers_00001_00007])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00014, pointers_00001_00014])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00015, pointers_00001_00015])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00016, statePlaces_00003_00016]),lexless([statePlaces_00002_00016, statePlaces_00003_00016],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00016, pointers_00001_00016])})
watched-or({lexless([statePlaces_00002_00006, statePlaces_00003_00006],[statePlaces_00002_00017, statePlaces_00003_00017]),lexless([statePlaces_00002_00017, statePlaces_00003_00017],[statePlaces_00002_00006, statePlaces_00003_00006]),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00017, pointers_00001_00017])})
watched-or({w-literal(aux97,1),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00019, 3]),w-literal(aux80,1)})
watched-or({w-literal(aux97,1),lexless([pointers_00000_00006, pointers_00001_00006],[pointers_00000_00019, 4]),w-literal(aux80,1)})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00008, pointers_00001_00008])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00014, pointers_00001_00014])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00015, pointers_00001_00015])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00016, statePlaces_00003_00016]),lexless([statePlaces_00002_00016, statePlaces_00003_00016],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00016, pointers_00001_00016])})
watched-or({lexless([statePlaces_00002_00007, statePlaces_00003_00007],[statePlaces_00002_00017, statePlaces_00003_00017]),lexless([statePlaces_00002_00017, statePlaces_00003_00017],[statePlaces_00002_00007, statePlaces_00003_00007]),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00017, pointers_00001_00017])})
watched-or({w-literal(aux96,1),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00019, 3]),w-literal(aux81,1)})
watched-or({w-literal(aux96,1),lexless([pointers_00000_00007, pointers_00001_00007],[pointers_00000_00019, 4]),w-literal(aux81,1)})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00009, pointers_00001_00009])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00014, pointers_00001_00014])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00015, pointers_00001_00015])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00016, statePlaces_00003_00016]),lexless([statePlaces_00002_00016, statePlaces_00003_00016],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00016, pointers_00001_00016])})
watched-or({lexless([statePlaces_00002_00008, statePlaces_00003_00008],[statePlaces_00002_00017, statePlaces_00003_00017]),lexless([statePlaces_00002_00017, statePlaces_00003_00017],[statePlaces_00002_00008, statePlaces_00003_00008]),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00017, pointers_00001_00017])})
watched-or({w-literal(aux95,1),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00019, 3]),w-literal(aux79,1)})
watched-or({w-literal(aux95,1),lexless([pointers_00000_00008, pointers_00001_00008],[pointers_00000_00019, 4]),w-literal(aux79,1)})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00010, pointers_00001_00010])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00014, pointers_00001_00014])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00015, pointers_00001_00015])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00016, statePlaces_00003_00016]),lexless([statePlaces_00002_00016, statePlaces_00003_00016],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00016, pointers_00001_00016])})
watched-or({lexless([statePlaces_00002_00009, statePlaces_00003_00009],[statePlaces_00002_00017, statePlaces_00003_00017]),lexless([statePlaces_00002_00017, statePlaces_00003_00017],[statePlaces_00002_00009, statePlaces_00003_00009]),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00017, pointers_00001_00017])})
watched-or({w-literal(aux94,1),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00019, 3]),w-literal(aux78,1)})
watched-or({w-literal(aux94,1),lexless([pointers_00000_00009, pointers_00001_00009],[pointers_00000_00019, 4]),w-literal(aux78,1)})
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00011, pointers_00001_00011])})
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00014, pointers_00001_00014])})
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00015, pointers_00001_00015])})
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00016, statePlaces_00003_00016]),lexless([statePlaces_00002_00016, statePlaces_00003_00016],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00016, pointers_00001_00016])})
watched-or({lexless([statePlaces_00002_00010, statePlaces_00003_00010],[statePlaces_00002_00017, statePlaces_00003_00017]),lexless([statePlaces_00002_00017, statePlaces_00003_00017],[statePlaces_00002_00010, statePlaces_00003_00010]),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00017, pointers_00001_00017])})
watched-or({w-literal(aux93,1),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00019, 3]),w-literal(aux77,1)})
watched-or({w-literal(aux93,1),lexless([pointers_00000_00010, pointers_00001_00010],[pointers_00000_00019, 4]),w-literal(aux77,1)})
watched-or({lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([pointers_00000_00011, pointers_00001_00011],[pointers_00000_00012, pointers_00001_00012])})
watched-or({lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([pointers_00000_00011, pointers_00001_00011],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([pointers_00000_00011, pointers_00001_00011],[pointers_00000_00014, pointers_00001_00014])})
watched-or({lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([pointers_00000_00011, pointers_00001_00011],[pointers_00000_00015, pointers_00001_00015])})
watched-or({lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00016, statePlaces_00003_00016]),lexless([statePlaces_00002_00016, statePlaces_00003_00016],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([pointers_00000_00011, pointers_00001_00011],[pointers_00000_00016, pointers_00001_00016])})
watched-or({lexless([statePlaces_00002_00011, statePlaces_00003_00011],[statePlaces_00002_00017, statePlaces_00003_00017]),lexless([statePlaces_00002_00017, statePlaces_00003_00017],[statePlaces_00002_00011, statePlaces_00003_00011]),lexless([pointers_00000_00011, pointers_00001_00011],[pointers_00000_00017, pointers_00001_00017])})
watched-or({w-literal(aux86,1),lexless([pointers_00000_00011, pointers_00001_00011],[pointers_00000_00019, 3]),w-literal(aux76,1)})
watched-or({w-literal(aux86,1),lexless([pointers_00000_00011, pointers_00001_00011],[pointers_00000_00019, 4]),w-literal(aux76,1)})
watched-or({lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([pointers_00000_00012, pointers_00001_00012],[pointers_00000_00013, pointers_00001_00013])})
watched-or({lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([pointers_00000_00012, pointers_00001_00012],[pointers_00000_00014, pointers_00001_00014])})
watched-or({lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([pointers_00000_00012, pointers_00001_00012],[pointers_00000_00015, pointers_00001_00015])})
watched-or({lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00016, statePlaces_00003_00016]),lexless([statePlaces_00002_00016, statePlaces_00003_00016],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([pointers_00000_00012, pointers_00001_00012],[pointers_00000_00016, pointers_00001_00016])})
watched-or({lexless([statePlaces_00002_00012, statePlaces_00003_00012],[statePlaces_00002_00017, statePlaces_00003_00017]),lexless([statePlaces_00002_00017, statePlaces_00003_00017],[statePlaces_00002_00012, statePlaces_00003_00012]),lexless([pointers_00000_00012, pointers_00001_00012],[pointers_00000_00017, pointers_00001_00017])})
watched-or({w-literal(aux87,1),lexless([pointers_00000_00012, pointers_00001_00012],[pointers_00000_00019, 3]),w-literal(aux75,1)})
watched-or({w-literal(aux87,1),lexless([pointers_00000_00012, pointers_00001_00012],[pointers_00000_00019, 4]),w-literal(aux75,1)})
watched-or({lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([pointers_00000_00013, pointers_00001_00013],[pointers_00000_00014, pointers_00001_00014])})
watched-or({lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([pointers_00000_00013, pointers_00001_00013],[pointers_00000_00015, pointers_00001_00015])})
watched-or({lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00016, statePlaces_00003_00016]),lexless([statePlaces_00002_00016, statePlaces_00003_00016],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([pointers_00000_00013, pointers_00001_00013],[pointers_00000_00016, pointers_00001_00016])})
watched-or({lexless([statePlaces_00002_00013, statePlaces_00003_00013],[statePlaces_00002_00017, statePlaces_00003_00017]),lexless([statePlaces_00002_00017, statePlaces_00003_00017],[statePlaces_00002_00013, statePlaces_00003_00013]),lexless([pointers_00000_00013, pointers_00001_00013],[pointers_00000_00017, pointers_00001_00017])})
watched-or({w-literal(aux88,1),lexless([pointers_00000_00013, pointers_00001_00013],[pointers_00000_00019, 3]),w-literal(aux74,1)})
watched-or({w-literal(aux88,1),lexless([pointers_00000_00013, pointers_00001_00013],[pointers_00000_00019, 4]),w-literal(aux74,1)})
watched-or({lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([pointers_00000_00014, pointers_00001_00014],[pointers_00000_00015, pointers_00001_00015])})
watched-or({lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00016, statePlaces_00003_00016]),lexless([statePlaces_00002_00016, statePlaces_00003_00016],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([pointers_00000_00014, pointers_00001_00014],[pointers_00000_00016, pointers_00001_00016])})
watched-or({lexless([statePlaces_00002_00014, statePlaces_00003_00014],[statePlaces_00002_00017, statePlaces_00003_00017]),lexless([statePlaces_00002_00017, statePlaces_00003_00017],[statePlaces_00002_00014, statePlaces_00003_00014]),lexless([pointers_00000_00014, pointers_00001_00014],[pointers_00000_00017, pointers_00001_00017])})
watched-or({w-literal(aux89,1),lexless([pointers_00000_00014, pointers_00001_00014],[pointers_00000_00019, 3]),w-literal(aux73,1)})
watched-or({w-literal(aux89,1),lexless([pointers_00000_00014, pointers_00001_00014],[pointers_00000_00019, 4]),w-literal(aux73,1)})
watched-or({lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00016, statePlaces_00003_00016]),lexless([statePlaces_00002_00016, statePlaces_00003_00016],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([pointers_00000_00015, pointers_00001_00015],[pointers_00000_00016, pointers_00001_00016])})
watched-or({lexless([statePlaces_00002_00015, statePlaces_00003_00015],[statePlaces_00002_00017, statePlaces_00003_00017]),lexless([statePlaces_00002_00017, statePlaces_00003_00017],[statePlaces_00002_00015, statePlaces_00003_00015]),lexless([pointers_00000_00015, pointers_00001_00015],[pointers_00000_00017, pointers_00001_00017])})
watched-or({w-literal(aux91,1),lexless([pointers_00000_00015, pointers_00001_00015],[pointers_00000_00019, 3]),w-literal(aux72,1)})
watched-or({w-literal(aux91,1),lexless([pointers_00000_00015, pointers_00001_00015],[pointers_00000_00019, 4]),w-literal(aux72,1)})
watched-or({lexless([statePlaces_00002_00016, statePlaces_00003_00016],[statePlaces_00002_00017, statePlaces_00003_00017]),lexless([statePlaces_00002_00017, statePlaces_00003_00017],[statePlaces_00002_00016, statePlaces_00003_00016]),lexless([pointers_00000_00016, pointers_00001_00016],[pointers_00000_00017, pointers_00001_00017])})
watched-or({w-literal(aux90,1),lexless([pointers_00000_00016, pointers_00001_00016],[pointers_00000_00019, 3]),w-literal(aux71,1)})
watched-or({w-literal(aux90,1),lexless([pointers_00000_00016, pointers_00001_00016],[pointers_00000_00019, 4]),w-literal(aux71,1)})
watched-or({w-literal(aux92,1),lexless([pointers_00000_00017, pointers_00001_00017],[pointers_00000_00019, 3]),w-literal(aux70,1)})
watched-or({w-literal(aux92,1),lexless([pointers_00000_00017, pointers_00001_00017],[pointers_00000_00019, 4]),w-literal(aux70,1)})
reifyimply(w-literal(pointers_00000_00002,1), aux221)
reifyimply(gaceq(pointers_00000_00002,pointers_00000_00003), aux222)
reifyimply(gaceq(pointers_00000_00003,pointers_00000_00004), aux223)
reifyimply(gaceq(pointers_00000_00004,pointers_00000_00005), aux224)
reifyimply(gaceq(pointers_00000_00005,pointers_00000_00006), aux225)
reifyimply(gaceq(pointers_00000_00006,pointers_00000_00007), aux226)
reifyimply(gaceq(pointers_00000_00007,pointers_00000_00008), aux227)
reifyimply(gaceq(pointers_00000_00008,pointers_00000_00009), aux228)
reifyimply(gaceq(pointers_00000_00009,pointers_00000_00010), aux229)
reifyimply(gaceq(pointers_00000_00010,pointers_00000_00011), aux230)
reifyimply(gaceq(pointers_00000_00011,pointers_00000_00012), aux231)
reifyimply(gaceq(pointers_00000_00012,pointers_00000_00013), aux232)
reifyimply(gaceq(pointers_00000_00013,pointers_00000_00014), aux233)
reifyimply(gaceq(pointers_00000_00014,pointers_00000_00015), aux234)
reifyimply(gaceq(pointers_00000_00015,pointers_00000_00016), aux235)
reifyimply(gaceq(pointers_00000_00016,pointers_00000_00017), aux236)
reifyimply(gaceq(pointers_00000_00017,pointers_00000_00019), aux237)
reifyimply(w-literal(pointers_00001_00002,0), aux238)
reifyimply(gaceq(pointers_00001_00002,pointers_00001_00003), aux239)
reifyimply(gaceq(pointers_00001_00003,pointers_00001_00004), aux240)
reifyimply(gaceq(pointers_00001_00004,pointers_00001_00005), aux241)
reifyimply(gaceq(pointers_00001_00005,pointers_00001_00006), aux242)
reifyimply(gaceq(pointers_00001_00006,pointers_00001_00007), aux243)
reifyimply(gaceq(pointers_00001_00007,pointers_00001_00008), aux244)
reifyimply(gaceq(pointers_00001_00008,pointers_00001_00009), aux245)
reifyimply(gaceq(pointers_00001_00009,pointers_00001_00010), aux246)
reifyimply(gaceq(pointers_00001_00010,pointers_00001_00011), aux247)
reifyimply(gaceq(pointers_00001_00011,pointers_00001_00012), aux248)
reifyimply(gaceq(pointers_00001_00012,pointers_00001_00013), aux249)
reifyimply(gaceq(pointers_00001_00013,pointers_00001_00014), aux250)
reifyimply(gaceq(pointers_00001_00014,pointers_00001_00015), aux251)
reifyimply(gaceq(pointers_00001_00015,pointers_00001_00016), aux252)
reifyimply(gaceq(pointers_00001_00016,pointers_00001_00017), aux253)
reifyimply(w-literal(pointers_00001_00017,3), aux254)
reifyimply(w-literal(statePlaces_00003_00002,-1), aux255)
reifyimply(gaceq(statePlaces_00003_00002,statePlaces_00003_00003), aux256)
reifyimply(gaceq(statePlaces_00003_00003,statePlaces_00003_00004), aux257)
reifyimply(gaceq(statePlaces_00003_00004,statePlaces_00003_00005), aux258)
reifyimply(gaceq(statePlaces_00003_00005,statePlaces_00003_00006), aux259)
reifyimply(gaceq(statePlaces_00003_00006,statePlaces_00003_00007), aux260)
reifyimply(gaceq(statePlaces_00003_00007,statePlaces_00003_00008), aux261)
reifyimply(gaceq(statePlaces_00003_00008,statePlaces_00003_00009), aux262)
reifyimply(gaceq(statePlaces_00003_00009,statePlaces_00003_00010), aux263)
reifyimply(gaceq(statePlaces_00003_00010,statePlaces_00003_00011), aux264)
reifyimply(gaceq(statePlaces_00003_00011,statePlaces_00003_00012), aux265)
reifyimply(gaceq(statePlaces_00003_00012,statePlaces_00003_00013), aux266)
reifyimply(gaceq(statePlaces_00003_00013,statePlaces_00003_00014), aux267)
reifyimply(gaceq(statePlaces_00003_00014,statePlaces_00003_00015), aux268)
reifyimply(gaceq(statePlaces_00003_00015,statePlaces_00003_00016), aux269)
reifyimply(gaceq(statePlaces_00003_00016,statePlaces_00003_00017), aux270)
reifyimply(gaceq(statePlaces_00003_00017,statePlaces_00003_00018), aux271)
reifyimply(w-literal(statePlaces_00002_00002,6), aux272)
reifyimply(gaceq(statePlaces_00002_00002,statePlaces_00002_00003), aux273)
reifyimply(gaceq(statePlaces_00002_00003,statePlaces_00002_00004), aux274)
reifyimply(gaceq(statePlaces_00002_00004,statePlaces_00002_00005), aux275)
reifyimply(gaceq(statePlaces_00002_00005,statePlaces_00002_00006), aux276)
reifyimply(gaceq(statePlaces_00002_00006,statePlaces_00002_00007), aux277)
reifyimply(gaceq(statePlaces_00002_00007,statePlaces_00002_00008), aux278)
reifyimply(gaceq(statePlaces_00002_00008,statePlaces_00002_00009), aux279)
reifyimply(gaceq(statePlaces_00002_00009,statePlaces_00002_00010), aux280)
reifyimply(gaceq(statePlaces_00002_00010,statePlaces_00002_00011), aux281)
reifyimply(gaceq(statePlaces_00002_00011,statePlaces_00002_00012), aux282)
reifyimply(gaceq(statePlaces_00002_00012,statePlaces_00002_00013), aux283)
reifyimply(gaceq(statePlaces_00002_00013,statePlaces_00002_00014), aux284)
reifyimply(gaceq(statePlaces_00002_00014,statePlaces_00002_00015), aux285)
reifyimply(gaceq(statePlaces_00002_00015,statePlaces_00002_00016), aux286)
reifyimply(gaceq(statePlaces_00002_00016,statePlaces_00002_00017), aux287)
reifyimply(w-literal(statePlaces_00002_00017,1), aux288)
reifyimply(w-literal(pointers_00000_00002,2), aux289)
reifyimply(w-literal(actionFrom_00002,0), aux290)
reifyimply(w-literal(actionTo_00002,2), aux291)
reifyimply(w-inintervalset(pointers_00000_00002,[1,4]), aux292)
reifyimply(watchelement_undefzero([6, 3, 8, 1], aux294, statePlaces_00002_00002), aux293)
reifyimply(w-literal(actionFrom_00003,0), aux296)
reifyimply(w-literal(actionTo_00003,2), aux297)
reifyimply(w-inintervalset(pointers_00000_00003,[1,4]), aux298)
reifyimply(watchelement_undefzero([6, 3, 8, 1], aux300, statePlaces_00002_00003), aux299)
reifyimply(w-literal(actionFrom_00004,0), aux302)
reifyimply(w-literal(actionTo_00004,2), aux303)
reifyimply(w-inintervalset(pointers_00000_00004,[1,4]), aux304)
reifyimply(watchelement_undefzero([6, 3, 8, 1], aux306, statePlaces_00002_00004), aux305)
reifyimply(w-literal(actionFrom_00005,0), aux308)
reifyimply(w-literal(actionTo_00005,2), aux309)
reifyimply(w-inintervalset(pointers_00000_00005,[1,4]), aux310)
reifyimply(watchelement_undefzero([6, 3, 8, 1], aux312, statePlaces_00002_00005), aux311)
reifyimply(w-literal(actionFrom_00006,0), aux314)
reifyimply(w-literal(actionTo_00006,2), aux315)
reifyimply(w-inintervalset(pointers_00000_00006,[1,4]), aux316)
reifyimply(watchelement_undefzero([6, 3, 8, 1], aux318, statePlaces_00002_00006), aux317)
reifyimply(w-literal(actionFrom_00007,0), aux320)
reifyimply(w-literal(actionTo_00007,2), aux321)
reifyimply(w-inintervalset(pointers_00000_00007,[1,4]), aux322)
reifyimply(watchelement_undefzero([6, 3, 8, 1], aux324, statePlaces_00002_00007), aux323)
reifyimply(w-literal(actionFrom_00008,0), aux326)
reifyimply(w-literal(actionTo_00008,2), aux327)
reifyimply(w-inintervalset(pointers_00000_00008,[1,4]), aux328)
reifyimply(watchelement_undefzero([6, 3, 8, 1], aux330, statePlaces_00002_00008), aux329)
reifyimply(w-literal(actionFrom_00009,0), aux332)
reifyimply(w-literal(actionTo_00009,2), aux333)
reifyimply(w-inintervalset(pointers_00000_00009,[1,4]), aux334)
reifyimply(watchelement_undefzero([6, 3, 8, 1], aux336, statePlaces_00002_00009), aux335)
reifyimply(w-literal(actionFrom_00010,0), aux338)
reifyimply(w-literal(actionTo_00010,2), aux339)
reifyimply(w-inintervalset(pointers_00000_00010,[1,4]), aux340)
reifyimply(watchelement_undefzero([6, 3, 8, 1], aux342, statePlaces_00002_00010), aux341)
reifyimply(w-literal(actionFrom_00011,0), aux344)
reifyimply(w-literal(actionTo_00011,2), aux345)
reifyimply(w-inintervalset(pointers_00000_00011,[1,4]), aux346)
reifyimply(watchelement_undefzero([6, 3, 8, 1], aux348, statePlaces_00002_00011), aux347)
reifyimply(w-literal(actionFrom_00012,0), aux350)
reifyimply(w-literal(actionTo_00012,2), aux351)
reifyimply(w-inintervalset(pointers_00000_00012,[1,4]), aux352)
reifyimply(watchelement_undefzero([6, 3, 8, 1], aux354, statePlaces_00002_00012), aux353)
reifyimply(w-literal(actionFrom_00013,0), aux356)
reifyimply(w-literal(actionTo_00013,2), aux357)
reifyimply(w-inintervalset(pointers_00000_00013,[1,4]), aux358)
reifyimply(watchelement_undefzero([6, 3, 8, 1], aux360, statePlaces_00002_00013), aux359)
reifyimply(w-literal(actionFrom_00014,0), aux362)
reifyimply(w-literal(actionTo_00014,2), aux363)
reifyimply(w-inintervalset(pointers_00000_00014,[1,4]), aux364)
reifyimply(watchelement_undefzero([6, 3, 8, 1], aux366, statePlaces_00002_00014), aux365)
reifyimply(w-literal(actionFrom_00015,0), aux368)
reifyimply(w-literal(actionTo_00015,2), aux369)
reifyimply(w-inintervalset(pointers_00000_00015,[1,4]), aux370)
reifyimply(watchelement_undefzero([6, 3, 8, 1], aux372, statePlaces_00002_00015), aux371)
reifyimply(w-literal(actionFrom_00016,0), aux374)
reifyimply(w-literal(actionTo_00016,2), aux375)
reifyimply(w-inintervalset(pointers_00000_00016,[1,4]), aux376)
reifyimply(watchelement_undefzero([6, 3, 8, 1], aux378, statePlaces_00002_00016), aux377)
reifyimply(w-literal(actionFrom_00017,0), aux380)
reifyimply(w-literal(actionTo_00017,2), aux381)
reifyimply(w-inintervalset(pointers_00000_00017,[1,4]), aux382)
reifyimply(watchelement_undefzero([6, 3, 8, 1], aux384, statePlaces_00002_00017), aux383)
reifyimply(w-literal(actionFrom_00018,0), aux386)
reifyimply(w-literal(actionTo_00018,2), aux387)
reifyimply(w-inintervalset(pointers_00000_00019,[1,4]), aux388)
reifyimply(watchelement_undefzero([6, 3, 8, 1], aux390, 1), aux389)
reifyimply(diseq(statePlaces_00002_00002,-1), aux391)
reifyimply(w-literal(pointers_00001_00002,1), aux392)
reifyimply(w-literal(actionFrom_00002,2), aux393)
reifyimply(w-literal(actionTo_00002,1), aux394)
reifyimply(w-inintervalset(pointers_00001_00002,[1,4]), aux395)
reifyimply(watchelement_undefzero([4, 7, 8], aux397, 6), aux396)
reifyimply(diseq(statePlaces_00002_00003,-1), aux398)
reifyimply(diseq(statePlaces_00002_00002,-1), aux399)
reifyimply(w-literal(actionFrom_00003,2), aux401)
reifyimply(w-literal(actionTo_00003,1), aux402)
reifyimply(w-inintervalset(pointers_00001_00003,[1,4]), aux403)
reifyimply(watchelement_undefzero([4, 7, 8], aux405, statePlaces_00002_00002), aux404)
reifyimply(diseq(statePlaces_00002_00004,-1), aux406)
reifyimply(diseq(statePlaces_00002_00003,-1), aux407)
reifyimply(w-literal(actionFrom_00004,2), aux409)
reifyimply(w-literal(actionTo_00004,1), aux410)
reifyimply(w-inintervalset(pointers_00001_00004,[1,4]), aux411)
reifyimply(watchelement_undefzero([4, 7, 8], aux413, statePlaces_00002_00003), aux412)
reifyimply(diseq(statePlaces_00002_00005,-1), aux414)
reifyimply(diseq(statePlaces_00002_00004,-1), aux415)
reifyimply(w-literal(actionFrom_00005,2), aux417)
reifyimply(w-literal(actionTo_00005,1), aux418)
reifyimply(w-inintervalset(pointers_00001_00005,[1,4]), aux419)
reifyimply(watchelement_undefzero([4, 7, 8], aux421, statePlaces_00002_00004), aux420)
reifyimply(diseq(statePlaces_00002_00006,-1), aux422)
reifyimply(diseq(statePlaces_00002_00005,-1), aux423)
reifyimply(w-literal(actionFrom_00006,2), aux425)
reifyimply(w-literal(actionTo_00006,1), aux426)
reifyimply(w-inintervalset(pointers_00001_00006,[1,4]), aux427)
reifyimply(watchelement_undefzero([4, 7, 8], aux429, statePlaces_00002_00005), aux428)
reifyimply(diseq(statePlaces_00002_00007,-1), aux430)
reifyimply(diseq(statePlaces_00002_00006,-1), aux431)
reifyimply(w-literal(actionFrom_00007,2), aux433)
reifyimply(w-literal(actionTo_00007,1), aux434)
reifyimply(w-inintervalset(pointers_00001_00007,[1,4]), aux435)
reifyimply(watchelement_undefzero([4, 7, 8], aux437, statePlaces_00002_00006), aux436)
reifyimply(diseq(statePlaces_00002_00008,-1), aux438)
reifyimply(diseq(statePlaces_00002_00007,-1), aux439)
reifyimply(w-literal(actionFrom_00008,2), aux441)
reifyimply(w-literal(actionTo_00008,1), aux442)
reifyimply(w-inintervalset(pointers_00001_00008,[1,4]), aux443)
reifyimply(watchelement_undefzero([4, 7, 8], aux445, statePlaces_00002_00007), aux444)
reifyimply(diseq(statePlaces_00002_00009,-1), aux446)
reifyimply(diseq(statePlaces_00002_00008,-1), aux447)
reifyimply(w-literal(actionFrom_00009,2), aux449)
reifyimply(w-literal(actionTo_00009,1), aux450)
reifyimply(w-inintervalset(pointers_00001_00009,[1,4]), aux451)
reifyimply(watchelement_undefzero([4, 7, 8], aux453, statePlaces_00002_00008), aux452)
reifyimply(diseq(statePlaces_00002_00010,-1), aux454)
reifyimply(diseq(statePlaces_00002_00009,-1), aux455)
reifyimply(w-literal(actionFrom_00010,2), aux457)
reifyimply(w-literal(actionTo_00010,1), aux458)
reifyimply(w-inintervalset(pointers_00001_00010,[1,4]), aux459)
reifyimply(watchelement_undefzero([4, 7, 8], aux461, statePlaces_00002_00009), aux460)
reifyimply(diseq(statePlaces_00002_00011,-1), aux462)
reifyimply(diseq(statePlaces_00002_00010,-1), aux463)
reifyimply(w-literal(actionFrom_00011,2), aux465)
reifyimply(w-literal(actionTo_00011,1), aux466)
reifyimply(w-inintervalset(pointers_00001_00011,[1,4]), aux467)
reifyimply(watchelement_undefzero([4, 7, 8], aux469, statePlaces_00002_00010), aux468)
reifyimply(diseq(statePlaces_00002_00012,-1), aux470)
reifyimply(diseq(statePlaces_00002_00011,-1), aux471)
reifyimply(w-literal(actionFrom_00012,2), aux473)
reifyimply(w-literal(actionTo_00012,1), aux474)
reifyimply(w-inintervalset(pointers_00001_00012,[1,4]), aux475)
reifyimply(watchelement_undefzero([4, 7, 8], aux477, statePlaces_00002_00011), aux476)
reifyimply(diseq(statePlaces_00002_00013,-1), aux478)
reifyimply(diseq(statePlaces_00002_00012,-1), aux479)
reifyimply(w-literal(actionFrom_00013,2), aux481)
reifyimply(w-literal(actionTo_00013,1), aux482)
reifyimply(w-inintervalset(pointers_00001_00013,[1,4]), aux483)
reifyimply(watchelement_undefzero([4, 7, 8], aux485, statePlaces_00002_00012), aux484)
reifyimply(diseq(statePlaces_00002_00014,-1), aux486)
reifyimply(diseq(statePlaces_00002_00013,-1), aux487)
reifyimply(w-literal(actionFrom_00014,2), aux489)
reifyimply(w-literal(actionTo_00014,1), aux490)
reifyimply(w-inintervalset(pointers_00001_00014,[1,4]), aux491)
reifyimply(watchelement_undefzero([4, 7, 8], aux493, statePlaces_00002_00013), aux492)
reifyimply(diseq(statePlaces_00002_00015,-1), aux494)
reifyimply(diseq(statePlaces_00002_00014,-1), aux495)
reifyimply(w-literal(actionFrom_00015,2), aux497)
reifyimply(w-literal(actionTo_00015,1), aux498)
reifyimply(w-inintervalset(pointers_00001_00015,[1,4]), aux499)
reifyimply(watchelement_undefzero([4, 7, 8], aux501, statePlaces_00002_00014), aux500)
reifyimply(diseq(statePlaces_00002_00016,-1), aux502)
reifyimply(diseq(statePlaces_00002_00015,-1), aux503)
reifyimply(w-literal(actionFrom_00016,2), aux505)
reifyimply(w-literal(actionTo_00016,1), aux506)
reifyimply(w-inintervalset(pointers_00001_00016,[1,4]), aux507)
reifyimply(watchelement_undefzero([4, 7, 8], aux509, statePlaces_00002_00015), aux508)
reifyimply(diseq(statePlaces_00002_00017,-1), aux510)
reifyimply(diseq(statePlaces_00002_00016,-1), aux511)
reifyimply(w-literal(actionFrom_00017,2), aux513)
reifyimply(w-literal(actionTo_00017,1), aux514)
reifyimply(w-inintervalset(pointers_00001_00017,[1,4]), aux515)
reifyimply(watchelement_undefzero([4, 7, 8], aux517, statePlaces_00002_00016), aux516)
reifyimply(diseq(statePlaces_00002_00017,-1), aux518)
reifyimply(w-literal(pointers_00001_00017,2), aux519)
reifyimply(w-literal(actionFrom_00018,2), aux520)
reifyimply(w-literal(actionTo_00018,1), aux521)
reifyimply(w-literal(statePlaces_00002_00017,8), aux522)
ineq(aux523, aux67, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux524)
reifyimply(diseq(aux118,-1), aux525)
reifyimply(w-literal(actionTo_00002,2), aux526)
ineq(aux527, aux160, 0)
ineq(aux528, aux166, 0)
ineq(aux529, aux69, 0)
reifyimply(ineq(3, actionFrom_00003, 0), aux530)
reifyimply(diseq(aux111,-1), aux531)
reifyimply(w-literal(actionTo_00003,2), aux532)
ineq(aux533, aux159, 0)
ineq(aux534, aux183, 0)
ineq(aux535, aux68, 0)
reifyimply(ineq(3, actionFrom_00004, 0), aux536)
reifyimply(diseq(aux115,-1), aux537)
reifyimply(w-literal(actionTo_00004,2), aux538)
ineq(aux539, aux163, 0)
ineq(aux540, aux204, 0)
ineq(aux541, aux63, 0)
reifyimply(ineq(3, actionFrom_00005, 0), aux542)
reifyimply(diseq(aux110,-1), aux543)
reifyimply(w-literal(actionTo_00005,2), aux544)
ineq(aux545, aux162, 0)
ineq(aux546, aux197, 0)
ineq(aux547, aux62, 0)
reifyimply(ineq(3, actionFrom_00006, 0), aux548)
reifyimply(diseq(aux133,-1), aux549)
reifyimply(w-literal(actionTo_00006,2), aux550)
ineq(aux551, aux161, 0)
ineq(aux552, aux213, 0)
ineq(aux553, aux66, 0)
reifyimply(ineq(3, actionFrom_00007, 0), aux554)
reifyimply(diseq(aux123,-1), aux555)
reifyimply(w-literal(actionTo_00007,2), aux556)
ineq(aux557, aux157, 0)
ineq(aux558, aux153, 0)
ineq(aux559, aux65, 0)
reifyimply(ineq(3, actionFrom_00008, 0), aux560)
reifyimply(diseq(aux114,-1), aux561)
reifyimply(w-literal(actionTo_00008,2), aux562)
ineq(aux563, aux156, 0)
ineq(aux564, aux192, 0)
ineq(aux565, aux64, 0)
reifyimply(ineq(3, actionFrom_00009, 0), aux566)
reifyimply(diseq(aux105,-1), aux567)
reifyimply(w-literal(actionTo_00009,2), aux568)
ineq(aux569, aux158, 0)
ineq(aux570, aux212, 0)
ineq(aux571, aux58, 0)
reifyimply(ineq(3, actionFrom_00010, 0), aux572)
reifyimply(diseq(aux103,-1), aux573)
reifyimply(w-literal(actionTo_00010,2), aux574)
ineq(aux575, aux195, 0)
ineq(aux576, aux179, 0)
ineq(aux577, aux60, 0)
reifyimply(ineq(3, actionFrom_00011, 0), aux578)
reifyimply(diseq(aux131,-1), aux579)
reifyimply(w-literal(actionTo_00011,2), aux580)
ineq(aux581, aux194, 0)
ineq(aux582, aux178, 0)
ineq(aux583, aux59, 0)
reifyimply(ineq(3, actionFrom_00012, 0), aux584)
reifyimply(diseq(aux120,-1), aux585)
reifyimply(w-literal(actionTo_00012,2), aux586)
ineq(aux587, aux193, 0)
ineq(aux588, aux199, 0)
ineq(aux589, aux55, 0)
reifyimply(ineq(3, actionFrom_00013, 0), aux590)
reifyimply(diseq(aux124,-1), aux591)
reifyimply(w-literal(actionTo_00013,2), aux592)
ineq(aux593, aux188, 0)
ineq(aux594, aux214, 0)
ineq(aux595, aux54, 0)
reifyimply(ineq(3, actionFrom_00014, 0), aux596)
reifyimply(diseq(aux116,-1), aux597)
reifyimply(w-literal(actionTo_00014,2), aux598)
ineq(aux599, aux185, 0)
ineq(aux600, aux167, 0)
ineq(aux601, aux57, 0)
reifyimply(ineq(3, actionFrom_00015, 0), aux602)
reifyimply(diseq(aux106,-1), aux603)
reifyimply(w-literal(actionTo_00015,2), aux604)
ineq(aux605, aux191, 0)
ineq(aux606, aux187, 0)
ineq(aux607, aux56, 0)
reifyimply(ineq(3, actionFrom_00016, 0), aux608)
reifyimply(diseq(aux134,-1), aux609)
reifyimply(w-literal(actionTo_00016,2), aux610)
ineq(aux611, aux190, 0)
ineq(aux612, aux207, 0)
ineq(aux613, aux53, 0)
reifyimply(ineq(3, actionFrom_00017, 0), aux614)
reifyimply(diseq(aux122,-1), aux615)
reifyimply(w-literal(actionTo_00017,2), aux616)
ineq(aux617, aux181, 0)
ineq(aux618, aux218, 0)
ineq(aux619, aux61, 0)
reifyimply(ineq(3, actionFrom_00018, 0), aux620)
reifyimply(diseq(aux128,-1), aux621)
reifyimply(w-literal(actionTo_00018,2), aux622)
ineq(aux623, aux180, 0)
ineq(aux624, aux217, 0)
reifyimply(ineq(3, actionTo_00002, 0), aux625)
reifyimply(w-literal(actionFrom_00002,2), aux626)
ineq(aux627, aux166, 0)
ineq(aux628, aux160, 0)
ineq(aux629, aux67, 0)
reifyimply(ineq(3, actionTo_00003, 0), aux630)
reifyimply(w-literal(actionFrom_00003,2), aux631)
reifyimply(diseq(statePlaces_00002_00002,-1), aux632)
ineq(aux633, aux183, 0)
ineq(aux634, aux159, 0)
ineq(aux635, aux69, 0)
reifyimply(ineq(3, actionTo_00004, 0), aux636)
reifyimply(w-literal(actionFrom_00004,2), aux637)
reifyimply(diseq(statePlaces_00002_00003,-1), aux638)
ineq(aux639, aux204, 0)
ineq(aux640, aux163, 0)
ineq(aux641, aux68, 0)
reifyimply(ineq(3, actionTo_00005, 0), aux642)
reifyimply(w-literal(actionFrom_00005,2), aux643)
reifyimply(diseq(statePlaces_00002_00004,-1), aux644)
ineq(aux645, aux197, 0)
ineq(aux646, aux162, 0)
ineq(aux647, aux63, 0)
reifyimply(ineq(3, actionTo_00006, 0), aux648)
reifyimply(w-literal(actionFrom_00006,2), aux649)
reifyimply(diseq(statePlaces_00002_00005,-1), aux650)
ineq(aux651, aux213, 0)
ineq(aux652, aux161, 0)
ineq(aux653, aux62, 0)
reifyimply(ineq(3, actionTo_00007, 0), aux654)
reifyimply(w-literal(actionFrom_00007,2), aux655)
reifyimply(diseq(statePlaces_00002_00006,-1), aux656)
ineq(aux657, aux153, 0)
ineq(aux658, aux157, 0)
ineq(aux659, aux66, 0)
reifyimply(ineq(3, actionTo_00008, 0), aux660)
reifyimply(w-literal(actionFrom_00008,2), aux661)
reifyimply(diseq(statePlaces_00002_00007,-1), aux662)
ineq(aux663, aux192, 0)
ineq(aux664, aux156, 0)
ineq(aux665, aux65, 0)
reifyimply(ineq(3, actionTo_00009, 0), aux666)
reifyimply(w-literal(actionFrom_00009,2), aux667)
reifyimply(diseq(statePlaces_00002_00008,-1), aux668)
ineq(aux669, aux212, 0)
ineq(aux670, aux158, 0)
ineq(aux671, aux64, 0)
reifyimply(ineq(3, actionTo_00010, 0), aux672)
reifyimply(w-literal(actionFrom_00010,2), aux673)
reifyimply(diseq(statePlaces_00002_00009,-1), aux674)
ineq(aux675, aux179, 0)
ineq(aux676, aux195, 0)
ineq(aux677, aux58, 0)
reifyimply(ineq(3, actionTo_00011, 0), aux678)
reifyimply(w-literal(actionFrom_00011,2), aux679)
reifyimply(diseq(statePlaces_00002_00010,-1), aux680)
ineq(aux681, aux178, 0)
ineq(aux682, aux194, 0)
ineq(aux683, aux60, 0)
reifyimply(ineq(3, actionTo_00012, 0), aux684)
reifyimply(w-literal(actionFrom_00012,2), aux685)
reifyimply(diseq(statePlaces_00002_00011,-1), aux686)
ineq(aux687, aux199, 0)
ineq(aux688, aux193, 0)
ineq(aux689, aux59, 0)
reifyimply(ineq(3, actionTo_00013, 0), aux690)
reifyimply(w-literal(actionFrom_00013,2), aux691)
reifyimply(diseq(statePlaces_00002_00012,-1), aux692)
ineq(aux693, aux214, 0)
ineq(aux694, aux188, 0)
ineq(aux695, aux55, 0)
reifyimply(ineq(3, actionTo_00014, 0), aux696)
reifyimply(w-literal(actionFrom_00014,2), aux697)
reifyimply(diseq(statePlaces_00002_00013,-1), aux698)
ineq(aux699, aux167, 0)
ineq(aux700, aux185, 0)
ineq(aux701, aux54, 0)
reifyimply(ineq(3, actionTo_00015, 0), aux702)
reifyimply(w-literal(actionFrom_00015,2), aux703)
reifyimply(diseq(statePlaces_00002_00014,-1), aux704)
ineq(aux705, aux187, 0)
ineq(aux706, aux191, 0)
ineq(aux707, aux57, 0)
reifyimply(ineq(3, actionTo_00016, 0), aux708)
reifyimply(w-literal(actionFrom_00016,2), aux709)
reifyimply(diseq(statePlaces_00002_00015,-1), aux710)
ineq(aux711, aux207, 0)
ineq(aux712, aux190, 0)
ineq(aux713, aux56, 0)
reifyimply(ineq(3, actionTo_00017, 0), aux714)
reifyimply(w-literal(actionFrom_00017,2), aux715)
reifyimply(diseq(statePlaces_00002_00016,-1), aux716)
ineq(aux717, aux218, 0)
ineq(aux718, aux181, 0)
ineq(aux719, aux53, 0)
reifyimply(ineq(3, actionTo_00018, 0), aux720)
reifyimply(w-literal(actionFrom_00018,2), aux721)
reifyimply(diseq(statePlaces_00002_00017,-1), aux722)
ineq(aux723, aux217, 0)
ineq(aux724, aux180, 0)
ineq(aux725, aux61, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux726)
reifyimply(diseq(aux118,-1), aux727)
reifyimply(diseq(aux135,-1), aux728)
reifyimply(w-literal(actionTo_00002,2), aux729)
ineq(aux730, aux160, 0)
ineq(aux731, aux166, 0)
reifyimply(diseq(aux129,-1), aux732)
reifyimply(ineq(3, actionFrom_00003, 0), aux734)
reifyimply(diseq(aux111,-1), aux735)
reifyimply(diseq(aux147,-1), aux736)
reifyimply(w-literal(actionTo_00003,2), aux737)
ineq(aux738, aux159, 0)
ineq(aux739, aux183, 0)
reifyimply(diseq(aux104,-1), aux740)
reifyimply(ineq(3, actionFrom_00004, 0), aux742)
reifyimply(diseq(aux115,-1), aux743)
reifyimply(diseq(aux146,-1), aux744)
reifyimply(w-literal(actionTo_00004,2), aux745)
ineq(aux746, aux163, 0)
ineq(aux747, aux204, 0)
reifyimply(diseq(aux108,-1), aux748)
reifyimply(ineq(3, actionFrom_00005, 0), aux750)
reifyimply(diseq(aux110,-1), aux751)
reifyimply(diseq(aux151,-1), aux752)
reifyimply(w-literal(actionTo_00005,2), aux753)
ineq(aux754, aux162, 0)
ineq(aux755, aux197, 0)
reifyimply(diseq(aux152,-1), aux756)
reifyimply(ineq(3, actionFrom_00006, 0), aux758)
reifyimply(diseq(aux133,-1), aux759)
reifyimply(diseq(aux150,-1), aux760)
reifyimply(w-literal(actionTo_00006,2), aux761)
ineq(aux762, aux161, 0)
ineq(aux763, aux213, 0)
reifyimply(diseq(aux127,-1), aux764)
reifyimply(ineq(3, actionFrom_00007, 0), aux766)
reifyimply(diseq(aux123,-1), aux767)
reifyimply(diseq(aux149,-1), aux768)
reifyimply(w-literal(actionTo_00007,2), aux769)
ineq(aux770, aux157, 0)
ineq(aux771, aux153, 0)
reifyimply(diseq(aux113,-1), aux772)
reifyimply(ineq(3, actionFrom_00008, 0), aux774)
reifyimply(diseq(aux114,-1), aux775)
reifyimply(diseq(aux148,-1), aux776)
reifyimply(w-literal(actionTo_00008,2), aux777)
ineq(aux778, aux156, 0)
ineq(aux779, aux192, 0)
reifyimply(diseq(aux107,-1), aux780)
reifyimply(ineq(3, actionFrom_00009, 0), aux782)
reifyimply(diseq(aux105,-1), aux783)
reifyimply(diseq(aux144,-1), aux784)
reifyimply(w-literal(actionTo_00009,2), aux785)
ineq(aux786, aux158, 0)
ineq(aux787, aux212, 0)
reifyimply(diseq(aux132,-1), aux788)
reifyimply(ineq(3, actionFrom_00010, 0), aux790)
reifyimply(diseq(aux103,-1), aux791)
reifyimply(diseq(aux145,-1), aux792)
reifyimply(w-literal(actionTo_00010,2), aux793)
ineq(aux794, aux195, 0)
ineq(aux795, aux179, 0)
reifyimply(diseq(aux125,-1), aux796)
reifyimply(ineq(3, actionFrom_00011, 0), aux798)
reifyimply(diseq(aux131,-1), aux799)
reifyimply(diseq(aux136,-1), aux800)
reifyimply(w-literal(actionTo_00011,2), aux801)
ineq(aux802, aux194, 0)
ineq(aux803, aux178, 0)
reifyimply(diseq(aux121,-1), aux804)
reifyimply(ineq(3, actionFrom_00012, 0), aux806)
reifyimply(diseq(aux120,-1), aux807)
reifyimply(diseq(aux140,-1), aux808)
reifyimply(w-literal(actionTo_00012,2), aux809)
ineq(aux810, aux193, 0)
ineq(aux811, aux199, 0)
reifyimply(diseq(aux112,-1), aux812)
reifyimply(ineq(3, actionFrom_00013, 0), aux814)
reifyimply(diseq(aux124,-1), aux815)
reifyimply(diseq(aux141,-1), aux816)
reifyimply(w-literal(actionTo_00013,2), aux817)
ineq(aux818, aux188, 0)
ineq(aux819, aux214, 0)
reifyimply(diseq(aux102,-1), aux820)
reifyimply(ineq(3, actionFrom_00014, 0), aux822)
reifyimply(diseq(aux116,-1), aux823)
reifyimply(diseq(aux142,-1), aux824)
reifyimply(w-literal(actionTo_00014,2), aux825)
ineq(aux826, aux185, 0)
ineq(aux827, aux167, 0)
reifyimply(diseq(aux130,-1), aux828)
reifyimply(ineq(3, actionFrom_00015, 0), aux830)
reifyimply(diseq(aux106,-1), aux831)
reifyimply(diseq(aux143,-1), aux832)
reifyimply(w-literal(actionTo_00015,2), aux833)
ineq(aux834, aux191, 0)
ineq(aux835, aux187, 0)
reifyimply(diseq(aux119,-1), aux836)
reifyimply(ineq(3, actionFrom_00016, 0), aux838)
reifyimply(diseq(aux134,-1), aux839)
reifyimply(diseq(aux137,-1), aux840)
reifyimply(w-literal(actionTo_00016,2), aux841)
ineq(aux842, aux190, 0)
ineq(aux843, aux207, 0)
reifyimply(diseq(aux126,-1), aux844)
reifyimply(ineq(3, actionFrom_00017, 0), aux846)
reifyimply(diseq(aux122,-1), aux847)
reifyimply(diseq(aux138,-1), aux848)
reifyimply(w-literal(actionTo_00017,2), aux849)
ineq(aux850, aux181, 0)
ineq(aux851, aux218, 0)
reifyimply(diseq(aux117,-1), aux852)
reifyimply(ineq(3, actionFrom_00018, 0), aux854)
reifyimply(diseq(aux128,-1), aux855)
reifyimply(diseq(aux139,-1), aux856)
reifyimply(w-literal(actionTo_00018,2), aux857)
ineq(aux858, aux180, 0)
ineq(aux859, aux217, 0)
reifyimply(diseq(aux109,-1), aux860)
reifyimply(ineq(3, actionFrom_00002, 0), aux862)
reifyimply(diseq(aux118,-1), aux863)
reifyimply(diseq(aux135,-1), aux864)
reifyimply(w-literal(actionTo_00002,2), aux865)
ineq(aux867, aux160, 0)
ineq(aux868, aux166, 0)
reifyimply(ineq(3, actionFrom_00003, 0), aux869)
reifyimply(diseq(aux111,-1), aux870)
reifyimply(diseq(aux147,-1), aux871)
reifyimply(w-literal(actionTo_00003,2), aux872)
ineq(aux874, aux159, 0)
ineq(aux875, aux183, 0)
reifyimply(ineq(3, actionFrom_00004, 0), aux876)
reifyimply(diseq(aux115,-1), aux877)
reifyimply(diseq(aux146,-1), aux878)
reifyimply(w-literal(actionTo_00004,2), aux879)
ineq(aux881, aux163, 0)
ineq(aux882, aux204, 0)
reifyimply(ineq(3, actionFrom_00005, 0), aux883)
reifyimply(diseq(aux110,-1), aux884)
reifyimply(diseq(aux151,-1), aux885)
reifyimply(w-literal(actionTo_00005,2), aux886)
ineq(aux888, aux162, 0)
ineq(aux889, aux197, 0)
reifyimply(ineq(3, actionFrom_00006, 0), aux890)
reifyimply(diseq(aux133,-1), aux891)
reifyimply(diseq(aux150,-1), aux892)
reifyimply(w-literal(actionTo_00006,2), aux893)
ineq(aux895, aux161, 0)
ineq(aux896, aux213, 0)
reifyimply(ineq(3, actionFrom_00007, 0), aux897)
reifyimply(diseq(aux123,-1), aux898)
reifyimply(diseq(aux149,-1), aux899)
reifyimply(w-literal(actionTo_00007,2), aux900)
ineq(aux902, aux157, 0)
ineq(aux903, aux153, 0)
reifyimply(ineq(3, actionFrom_00008, 0), aux904)
reifyimply(diseq(aux114,-1), aux905)
reifyimply(diseq(aux148,-1), aux906)
reifyimply(w-literal(actionTo_00008,2), aux907)
ineq(aux909, aux156, 0)
ineq(aux910, aux192, 0)
reifyimply(ineq(3, actionFrom_00009, 0), aux911)
reifyimply(diseq(aux105,-1), aux912)
reifyimply(diseq(aux144,-1), aux913)
reifyimply(w-literal(actionTo_00009,2), aux914)
ineq(aux916, aux158, 0)
ineq(aux917, aux212, 0)
reifyimply(ineq(3, actionFrom_00010, 0), aux918)
reifyimply(diseq(aux103,-1), aux919)
reifyimply(diseq(aux145,-1), aux920)
reifyimply(w-literal(actionTo_00010,2), aux921)
ineq(aux923, aux195, 0)
ineq(aux924, aux179, 0)
reifyimply(ineq(3, actionFrom_00011, 0), aux925)
reifyimply(diseq(aux131,-1), aux926)
reifyimply(diseq(aux136,-1), aux927)
reifyimply(w-literal(actionTo_00011,2), aux928)
ineq(aux930, aux194, 0)
ineq(aux931, aux178, 0)
reifyimply(ineq(3, actionFrom_00012, 0), aux932)
reifyimply(diseq(aux120,-1), aux933)
reifyimply(diseq(aux140,-1), aux934)
reifyimply(w-literal(actionTo_00012,2), aux935)
ineq(aux937, aux193, 0)
ineq(aux938, aux199, 0)
reifyimply(ineq(3, actionFrom_00013, 0), aux939)
reifyimply(diseq(aux124,-1), aux940)
reifyimply(diseq(aux141,-1), aux941)
reifyimply(w-literal(actionTo_00013,2), aux942)
ineq(aux944, aux188, 0)
ineq(aux945, aux214, 0)
reifyimply(ineq(3, actionFrom_00014, 0), aux946)
reifyimply(diseq(aux116,-1), aux947)
reifyimply(diseq(aux142,-1), aux948)
reifyimply(w-literal(actionTo_00014,2), aux949)
ineq(aux951, aux185, 0)
ineq(aux952, aux167, 0)
reifyimply(ineq(3, actionFrom_00015, 0), aux953)
reifyimply(diseq(aux106,-1), aux954)
reifyimply(diseq(aux143,-1), aux955)
reifyimply(w-literal(actionTo_00015,2), aux956)
ineq(aux958, aux191, 0)
ineq(aux959, aux187, 0)
reifyimply(ineq(3, actionFrom_00016, 0), aux960)
reifyimply(diseq(aux134,-1), aux961)
reifyimply(diseq(aux137,-1), aux962)
reifyimply(w-literal(actionTo_00016,2), aux963)
ineq(aux965, aux190, 0)
ineq(aux966, aux207, 0)
reifyimply(ineq(3, actionFrom_00017, 0), aux967)
reifyimply(diseq(aux122,-1), aux968)
reifyimply(diseq(aux138,-1), aux969)
reifyimply(w-literal(actionTo_00017,2), aux970)
ineq(aux972, aux181, 0)
ineq(aux973, aux218, 0)
reifyimply(ineq(3, actionFrom_00018, 0), aux974)
reifyimply(diseq(aux128,-1), aux975)
reifyimply(diseq(aux139,-1), aux976)
reifyimply(w-literal(actionTo_00018,2), aux977)
ineq(aux979, aux180, 0)
ineq(aux980, aux217, 0)
ineq(aux981, aux67, 0)
reifyimply(ineq(3, actionFrom_00002, 0), aux982)
reifyimply(w-literal(actionTo_00002,2), aux983)
ineq(aux984, aux160, 0)
ineq(aux985, aux166, 0)
reifyimply(diseq(aux129,-1), aux986)
ineq(aux988, aux69, 0)
reifyimply(ineq(3, actionFrom_00003, 0), aux989)
reifyimply(w-literal(actionTo_00003,2), aux990)
ineq(aux991, aux159, 0)
ineq(aux992, aux183, 0)
reifyimply(diseq(aux104,-1), aux993)
ineq(aux995, aux68, 0)
reifyimply(ineq(3, actionFrom_00004, 0), aux996)
reifyimply(w-literal(actionTo_00004,2), aux997)
ineq(aux998, aux163, 0)
ineq(aux999, aux204, 0)
reifyimply(diseq(aux108,-1), aux1000)
ineq(aux1002, aux63, 0)
reifyimply(ineq(3, actionFrom_00005, 0), aux1003)
reifyimply(w-literal(actionTo_00005,2), aux1004)
ineq(aux1005, aux162, 0)
ineq(aux1006, aux197, 0)
reifyimply(diseq(aux152,-1), aux1007)
ineq(aux1009, aux62, 0)
reifyimply(ineq(3, actionFrom_00006, 0), aux1010)
reifyimply(w-literal(actionTo_00006,2), aux1011)
ineq(aux1012, aux161, 0)
ineq(aux1013, aux213, 0)
reifyimply(diseq(aux127,-1), aux1014)
ineq(aux1016, aux66, 0)
reifyimply(ineq(3, actionFrom_00007, 0), aux1017)
reifyimply(w-literal(actionTo_00007,2), aux1018)
ineq(aux1019, aux157, 0)
ineq(aux1020, aux153, 0)
reifyimply(diseq(aux113,-1), aux1021)
ineq(aux1023, aux65, 0)
reifyimply(ineq(3, actionFrom_00008, 0), aux1024)
reifyimply(w-literal(actionTo_00008,2), aux1025)
ineq(aux1026, aux156, 0)
ineq(aux1027, aux192, 0)
reifyimply(diseq(aux107,-1), aux1028)
ineq(aux1030, aux64, 0)
reifyimply(ineq(3, actionFrom_00009, 0), aux1031)
reifyimply(w-literal(actionTo_00009,2), aux1032)
ineq(aux1033, aux158, 0)
ineq(aux1034, aux212, 0)
reifyimply(diseq(aux132,-1), aux1035)
ineq(aux1037, aux58, 0)
reifyimply(ineq(3, actionFrom_00010, 0), aux1038)
reifyimply(w-literal(actionTo_00010,2), aux1039)
ineq(aux1040, aux195, 0)
ineq(aux1041, aux179, 0)
reifyimply(diseq(aux125,-1), aux1042)
ineq(aux1044, aux60, 0)
reifyimply(ineq(3, actionFrom_00011, 0), aux1045)
reifyimply(w-literal(actionTo_00011,2), aux1046)
ineq(aux1047, aux194, 0)
ineq(aux1048, aux178, 0)
reifyimply(diseq(aux121,-1), aux1049)
ineq(aux1051, aux59, 0)
reifyimply(ineq(3, actionFrom_00012, 0), aux1052)
reifyimply(w-literal(actionTo_00012,2), aux1053)
ineq(aux1054, aux193, 0)
ineq(aux1055, aux199, 0)
reifyimply(diseq(aux112,-1), aux1056)
ineq(aux1058, aux55, 0)
reifyimply(ineq(3, actionFrom_00013, 0), aux1059)
reifyimply(w-literal(actionTo_00013,2), aux1060)
ineq(aux1061, aux188, 0)
ineq(aux1062, aux214, 0)
reifyimply(diseq(aux102,-1), aux1063)
ineq(aux1065, aux54, 0)
reifyimply(ineq(3, actionFrom_00014, 0), aux1066)
reifyimply(w-literal(actionTo_00014,2), aux1067)
ineq(aux1068, aux185, 0)
ineq(aux1069, aux167, 0)
reifyimply(diseq(aux130,-1), aux1070)
ineq(aux1072, aux57, 0)
reifyimply(ineq(3, actionFrom_00015, 0), aux1073)
reifyimply(w-literal(actionTo_00015,2), aux1074)
ineq(aux1075, aux191, 0)
ineq(aux1076, aux187, 0)
reifyimply(diseq(aux119,-1), aux1077)
ineq(aux1079, aux56, 0)
reifyimply(ineq(3, actionFrom_00016, 0), aux1080)
reifyimply(w-literal(actionTo_00016,2), aux1081)
ineq(aux1082, aux190, 0)
ineq(aux1083, aux207, 0)
reifyimply(diseq(aux126,-1), aux1084)
ineq(aux1086, aux53, 0)
reifyimply(ineq(3, actionFrom_00017, 0), aux1087)
reifyimply(w-literal(actionTo_00017,2), aux1088)
ineq(aux1089, aux181, 0)
ineq(aux1090, aux218, 0)
reifyimply(diseq(aux117,-1), aux1091)
ineq(aux1093, aux61, 0)
reifyimply(ineq(3, actionFrom_00018, 0), aux1094)
reifyimply(w-literal(actionTo_00018,2), aux1095)
ineq(aux1096, aux180, 0)
ineq(aux1097, aux217, 0)
reifyimply(diseq(aux109,-1), aux1098)
reifyimply(gaceq(aux118,statePlaces_00002_00002), aux1100)
reifyimply(ineq(3, actionFrom_00002, 0), aux1101)
reifyimply(w-literal(actionTo_00002,2), aux1102)
ineq(aux1104, aux166, 0)
reifyimply(diseq(aux129,-1), aux1105)
reifyimply(gaceq(aux111,statePlaces_00002_00003), aux1106)
reifyimply(ineq(3, actionFrom_00003, 0), aux1107)
reifyimply(w-literal(actionTo_00003,2), aux1108)
ineq(aux1110, aux183, 0)
reifyimply(diseq(aux104,-1), aux1111)
reifyimply(gaceq(aux115,statePlaces_00002_00004), aux1112)
reifyimply(ineq(3, actionFrom_00004, 0), aux1113)
reifyimply(w-literal(actionTo_00004,2), aux1114)
ineq(aux1116, aux204, 0)
reifyimply(diseq(aux108,-1), aux1117)
reifyimply(gaceq(aux110,statePlaces_00002_00005), aux1118)
reifyimply(ineq(3, actionFrom_00005, 0), aux1119)
reifyimply(w-literal(actionTo_00005,2), aux1120)
ineq(aux1122, aux197, 0)
reifyimply(diseq(aux152,-1), aux1123)
reifyimply(gaceq(aux133,statePlaces_00002_00006), aux1124)
reifyimply(ineq(3, actionFrom_00006, 0), aux1125)
reifyimply(w-literal(actionTo_00006,2), aux1126)
ineq(aux1128, aux213, 0)
reifyimply(diseq(aux127,-1), aux1129)
reifyimply(gaceq(aux123,statePlaces_00002_00007), aux1130)
reifyimply(ineq(3, actionFrom_00007, 0), aux1131)
reifyimply(w-literal(actionTo_00007,2), aux1132)
ineq(aux1134, aux153, 0)
reifyimply(diseq(aux113,-1), aux1135)
reifyimply(gaceq(aux114,statePlaces_00002_00008), aux1136)
reifyimply(ineq(3, actionFrom_00008, 0), aux1137)
reifyimply(w-literal(actionTo_00008,2), aux1138)
ineq(aux1140, aux192, 0)
reifyimply(diseq(aux107,-1), aux1141)
reifyimply(gaceq(aux105,statePlaces_00002_00009), aux1142)
reifyimply(ineq(3, actionFrom_00009, 0), aux1143)
reifyimply(w-literal(actionTo_00009,2), aux1144)
ineq(aux1146, aux212, 0)
reifyimply(diseq(aux132,-1), aux1147)
reifyimply(gaceq(aux103,statePlaces_00002_00010), aux1148)
reifyimply(ineq(3, actionFrom_00010, 0), aux1149)
reifyimply(w-literal(actionTo_00010,2), aux1150)
ineq(aux1152, aux179, 0)
reifyimply(diseq(aux125,-1), aux1153)
reifyimply(gaceq(aux131,statePlaces_00002_00011), aux1154)
reifyimply(ineq(3, actionFrom_00011, 0), aux1155)
reifyimply(w-literal(actionTo_00011,2), aux1156)
ineq(aux1158, aux178, 0)
reifyimply(diseq(aux121,-1), aux1159)
reifyimply(gaceq(aux120,statePlaces_00002_00012), aux1160)
reifyimply(ineq(3, actionFrom_00012, 0), aux1161)
reifyimply(w-literal(actionTo_00012,2), aux1162)
ineq(aux1164, aux199, 0)
reifyimply(diseq(aux112,-1), aux1165)
reifyimply(gaceq(aux124,statePlaces_00002_00013), aux1166)
reifyimply(ineq(3, actionFrom_00013, 0), aux1167)
reifyimply(w-literal(actionTo_00013,2), aux1168)
ineq(aux1170, aux214, 0)
reifyimply(diseq(aux102,-1), aux1171)
reifyimply(gaceq(aux116,statePlaces_00002_00014), aux1172)
reifyimply(ineq(3, actionFrom_00014, 0), aux1173)
reifyimply(w-literal(actionTo_00014,2), aux1174)
ineq(aux1176, aux167, 0)
reifyimply(diseq(aux130,-1), aux1177)
reifyimply(gaceq(aux106,statePlaces_00002_00015), aux1178)
reifyimply(ineq(3, actionFrom_00015, 0), aux1179)
reifyimply(w-literal(actionTo_00015,2), aux1180)
ineq(aux1182, aux187, 0)
reifyimply(diseq(aux119,-1), aux1183)
reifyimply(gaceq(aux134,statePlaces_00002_00016), aux1184)
reifyimply(ineq(3, actionFrom_00016, 0), aux1185)
reifyimply(w-literal(actionTo_00016,2), aux1186)
ineq(aux1188, aux207, 0)
reifyimply(diseq(aux126,-1), aux1189)
reifyimply(gaceq(aux122,statePlaces_00002_00017), aux1190)
reifyimply(ineq(3, actionFrom_00017, 0), aux1191)
reifyimply(w-literal(actionTo_00017,2), aux1192)
ineq(aux1194, aux218, 0)
reifyimply(diseq(aux117,-1), aux1195)
reifyimply(w-literal(aux128,1), aux1196)
reifyimply(ineq(3, actionFrom_00018, 0), aux1197)
reifyimply(w-literal(actionTo_00018,2), aux1198)
ineq(aux1200, aux217, 0)
reifyimply(diseq(aux109,-1), aux1201)
sumleq([pointers_00000_00002,-1],aux294)
sumgeq([pointers_00000_00002,-1],aux294)
sumleq([pointers_00000_00003,-1],aux300)
sumgeq([pointers_00000_00003,-1],aux300)
sumleq([pointers_00000_00004,-1],aux306)
sumgeq([pointers_00000_00004,-1],aux306)
sumleq([pointers_00000_00005,-1],aux312)
sumgeq([pointers_00000_00005,-1],aux312)
sumleq([pointers_00000_00006,-1],aux318)
sumgeq([pointers_00000_00006,-1],aux318)
sumleq([pointers_00000_00007,-1],aux324)
sumgeq([pointers_00000_00007,-1],aux324)
sumleq([pointers_00000_00008,-1],aux330)
sumgeq([pointers_00000_00008,-1],aux330)
sumleq([pointers_00000_00009,-1],aux336)
sumgeq([pointers_00000_00009,-1],aux336)
sumleq([pointers_00000_00010,-1],aux342)
sumgeq([pointers_00000_00010,-1],aux342)
sumleq([pointers_00000_00011,-1],aux348)
sumgeq([pointers_00000_00011,-1],aux348)
sumleq([pointers_00000_00012,-1],aux354)
sumgeq([pointers_00000_00012,-1],aux354)
sumleq([pointers_00000_00013,-1],aux360)
sumgeq([pointers_00000_00013,-1],aux360)
sumleq([pointers_00000_00014,-1],aux366)
sumgeq([pointers_00000_00014,-1],aux366)
sumleq([pointers_00000_00015,-1],aux372)
sumgeq([pointers_00000_00015,-1],aux372)
sumleq([pointers_00000_00016,-1],aux378)
sumgeq([pointers_00000_00016,-1],aux378)
sumleq([pointers_00000_00017,-1],aux384)
sumgeq([pointers_00000_00017,-1],aux384)
sumleq([pointers_00000_00019,-1],aux390)
sumgeq([pointers_00000_00019,-1],aux390)
sumleq([pointers_00001_00002,-1],aux397)
sumgeq([pointers_00001_00002,-1],aux397)
sumleq([pointers_00001_00003,-1],aux405)
sumgeq([pointers_00001_00003,-1],aux405)
sumleq([pointers_00001_00004,-1],aux413)
sumgeq([pointers_00001_00004,-1],aux413)
sumleq([pointers_00001_00005,-1],aux421)
sumgeq([pointers_00001_00005,-1],aux421)
sumleq([pointers_00001_00006,-1],aux429)
sumgeq([pointers_00001_00006,-1],aux429)
sumleq([pointers_00001_00007,-1],aux437)
sumgeq([pointers_00001_00007,-1],aux437)
sumleq([pointers_00001_00008,-1],aux445)
sumgeq([pointers_00001_00008,-1],aux445)
sumleq([pointers_00001_00009,-1],aux453)
sumgeq([pointers_00001_00009,-1],aux453)
sumleq([pointers_00001_00010,-1],aux461)
sumgeq([pointers_00001_00010,-1],aux461)
sumleq([pointers_00001_00011,-1],aux469)
sumgeq([pointers_00001_00011,-1],aux469)
sumleq([pointers_00001_00012,-1],aux477)
sumgeq([pointers_00001_00012,-1],aux477)
sumleq([pointers_00001_00013,-1],aux485)
sumgeq([pointers_00001_00013,-1],aux485)
sumleq([pointers_00001_00014,-1],aux493)
sumgeq([pointers_00001_00014,-1],aux493)
sumleq([pointers_00001_00015,-1],aux501)
sumgeq([pointers_00001_00015,-1],aux501)
sumleq([pointers_00001_00016,-1],aux509)
sumgeq([pointers_00001_00016,-1],aux509)
sumleq([pointers_00001_00017,-1],aux517)
sumgeq([pointers_00001_00017,-1],aux517)
sumleq([actionFrom_00009,-2],aux154)
sumgeq([actionFrom_00009,-2],aux154)
sumleq([actionFrom_00012,-2],aux155)
sumgeq([actionFrom_00012,-2],aux155)
sumleq([actionFrom_00002,-2],aux164)
sumgeq([actionFrom_00002,-2],aux164)
sumleq([actionFrom_00013,-2],aux165)
sumgeq([actionFrom_00013,-2],aux165)
sumleq([actionFrom_00007,-2],aux168)
sumgeq([actionFrom_00007,-2],aux168)
sumleq([actionTo_00016,-2],aux169)
sumgeq([actionTo_00016,-2],aux169)
sumleq([actionTo_00015,-2],aux170)
sumgeq([actionTo_00015,-2],aux170)
sumleq([actionFrom_00010,-2],aux171)
sumgeq([actionFrom_00010,-2],aux171)
sumleq([actionFrom_00018,-2],aux172)
sumgeq([actionFrom_00018,-2],aux172)
sumleq([actionTo_00014,-2],aux173)
sumgeq([actionTo_00014,-2],aux173)
sumleq([actionTo_00012,-2],aux174)
sumgeq([actionTo_00012,-2],aux174)
sumleq([actionTo_00013,-2],aux175)
sumgeq([actionTo_00013,-2],aux175)
sumleq([actionTo_00011,-2],aux176)
sumgeq([actionTo_00011,-2],aux176)
sumleq([actionTo_00010,-2],aux177)
sumgeq([actionTo_00010,-2],aux177)
sumleq([actionTo_00018,-2],aux182)
sumgeq([actionTo_00018,-2],aux182)
sumleq([actionTo_00017,-2],aux184)
sumgeq([actionTo_00017,-2],aux184)
sumleq([actionFrom_00008,-2],aux186)
sumgeq([actionFrom_00008,-2],aux186)
sumleq([actionFrom_00011,-2],aux189)
sumgeq([actionFrom_00011,-2],aux189)
sumleq([actionFrom_00005,-2],aux196)
sumgeq([actionFrom_00005,-2],aux196)
sumleq([actionFrom_00016,-2],aux198)
sumgeq([actionFrom_00016,-2],aux198)
sumleq([actionTo_00008,-2],aux200)
sumgeq([actionTo_00008,-2],aux200)
sumleq([actionTo_00009,-2],aux201)
sumgeq([actionTo_00009,-2],aux201)
sumleq([actionTo_00007,-2],aux202)
sumgeq([actionTo_00007,-2],aux202)
sumleq([actionTo_00006,-2],aux203)
sumgeq([actionTo_00006,-2],aux203)
sumleq([actionTo_00005,-2],aux205)
sumgeq([actionTo_00005,-2],aux205)
sumleq([actionTo_00004,-2],aux206)
sumgeq([actionTo_00004,-2],aux206)
sumleq([actionTo_00003,-2],aux208)
sumgeq([actionTo_00003,-2],aux208)
sumleq([actionTo_00002,-2],aux209)
sumgeq([actionTo_00002,-2],aux209)
sumleq([actionFrom_00006,-2],aux210)
sumgeq([actionFrom_00006,-2],aux210)
sumleq([actionFrom_00017,-2],aux211)
sumgeq([actionFrom_00017,-2],aux211)
sumleq([actionFrom_00003,-2],aux215)
sumgeq([actionFrom_00003,-2],aux215)
sumleq([actionFrom_00014,-2],aux216)
sumgeq([actionFrom_00014,-2],aux216)
sumleq([actionFrom_00004,-2],aux219)
sumgeq([actionFrom_00004,-2],aux219)
sumleq([actionFrom_00015,-2],aux220)
sumgeq([actionFrom_00015,-2],aux220)
reifyimply(sumleq([pointers_00000_00002,1],pointers_00000_00003), aux295)
reifyimply(sumgeq([pointers_00000_00002,1],pointers_00000_00003), aux295)
reifyimply(sumleq([pointers_00000_00003,1],pointers_00000_00004), aux301)
reifyimply(sumgeq([pointers_00000_00003,1],pointers_00000_00004), aux301)
reifyimply(sumleq([pointers_00000_00004,1],pointers_00000_00005), aux307)
reifyimply(sumgeq([pointers_00000_00004,1],pointers_00000_00005), aux307)
reifyimply(sumleq([pointers_00000_00005,1],pointers_00000_00006), aux313)
reifyimply(sumgeq([pointers_00000_00005,1],pointers_00000_00006), aux313)
reifyimply(sumleq([pointers_00000_00006,1],pointers_00000_00007), aux319)
reifyimply(sumgeq([pointers_00000_00006,1],pointers_00000_00007), aux319)
reifyimply(sumleq([pointers_00000_00007,1],pointers_00000_00008), aux325)
reifyimply(sumgeq([pointers_00000_00007,1],pointers_00000_00008), aux325)
reifyimply(sumleq([pointers_00000_00008,1],pointers_00000_00009), aux331)
reifyimply(sumgeq([pointers_00000_00008,1],pointers_00000_00009), aux331)
reifyimply(sumleq([pointers_00000_00009,1],pointers_00000_00010), aux337)
reifyimply(sumgeq([pointers_00000_00009,1],pointers_00000_00010), aux337)
reifyimply(sumleq([pointers_00000_00010,1],pointers_00000_00011), aux343)
reifyimply(sumgeq([pointers_00000_00010,1],pointers_00000_00011), aux343)
reifyimply(sumleq([pointers_00000_00011,1],pointers_00000_00012), aux349)
reifyimply(sumgeq([pointers_00000_00011,1],pointers_00000_00012), aux349)
reifyimply(sumleq([pointers_00000_00012,1],pointers_00000_00013), aux355)
reifyimply(sumgeq([pointers_00000_00012,1],pointers_00000_00013), aux355)
reifyimply(sumleq([pointers_00000_00013,1],pointers_00000_00014), aux361)
reifyimply(sumgeq([pointers_00000_00013,1],pointers_00000_00014), aux361)
reifyimply(sumleq([pointers_00000_00014,1],pointers_00000_00015), aux367)
reifyimply(sumgeq([pointers_00000_00014,1],pointers_00000_00015), aux367)
reifyimply(sumleq([pointers_00000_00015,1],pointers_00000_00016), aux373)
reifyimply(sumgeq([pointers_00000_00015,1],pointers_00000_00016), aux373)
reifyimply(sumleq([pointers_00000_00016,1],pointers_00000_00017), aux379)
reifyimply(sumgeq([pointers_00000_00016,1],pointers_00000_00017), aux379)
reifyimply(sumleq([pointers_00000_00017,1],pointers_00000_00019), aux385)
reifyimply(sumgeq([pointers_00000_00017,1],pointers_00000_00019), aux385)
reifyimply(sumleq([pointers_00001_00002,1],pointers_00001_00003), aux400)
reifyimply(sumgeq([pointers_00001_00002,1],pointers_00001_00003), aux400)
reifyimply(sumleq([pointers_00001_00003,1],pointers_00001_00004), aux408)
reifyimply(sumgeq([pointers_00001_00003,1],pointers_00001_00004), aux408)
reifyimply(sumleq([pointers_00001_00004,1],pointers_00001_00005), aux416)
reifyimply(sumgeq([pointers_00001_00004,1],pointers_00001_00005), aux416)
reifyimply(sumleq([pointers_00001_00005,1],pointers_00001_00006), aux424)
reifyimply(sumgeq([pointers_00001_00005,1],pointers_00001_00006), aux424)
reifyimply(sumleq([pointers_00001_00006,1],pointers_00001_00007), aux432)
reifyimply(sumgeq([pointers_00001_00006,1],pointers_00001_00007), aux432)
reifyimply(sumleq([pointers_00001_00007,1],pointers_00001_00008), aux440)
reifyimply(sumgeq([pointers_00001_00007,1],pointers_00001_00008), aux440)
reifyimply(sumleq([pointers_00001_00008,1],pointers_00001_00009), aux448)
reifyimply(sumgeq([pointers_00001_00008,1],pointers_00001_00009), aux448)
reifyimply(sumleq([pointers_00001_00009,1],pointers_00001_00010), aux456)
reifyimply(sumgeq([pointers_00001_00009,1],pointers_00001_00010), aux456)
reifyimply(sumleq([pointers_00001_00010,1],pointers_00001_00011), aux464)
reifyimply(sumgeq([pointers_00001_00010,1],pointers_00001_00011), aux464)
reifyimply(sumleq([pointers_00001_00011,1],pointers_00001_00012), aux472)
reifyimply(sumgeq([pointers_00001_00011,1],pointers_00001_00012), aux472)
reifyimply(sumleq([pointers_00001_00012,1],pointers_00001_00013), aux480)
reifyimply(sumgeq([pointers_00001_00012,1],pointers_00001_00013), aux480)
reifyimply(sumleq([pointers_00001_00013,1],pointers_00001_00014), aux488)
reifyimply(sumgeq([pointers_00001_00013,1],pointers_00001_00014), aux488)
reifyimply(sumleq([pointers_00001_00014,1],pointers_00001_00015), aux496)
reifyimply(sumgeq([pointers_00001_00014,1],pointers_00001_00015), aux496)
reifyimply(sumleq([pointers_00001_00015,1],pointers_00001_00016), aux504)
reifyimply(sumgeq([pointers_00001_00015,1],pointers_00001_00016), aux504)
reifyimply(sumleq([pointers_00001_00016,1],pointers_00001_00017), aux512)
reifyimply(sumgeq([pointers_00001_00016,1],pointers_00001_00017), aux512)
reifyimply(sumleq([aux118,6],statePlaces_00002_00002), aux733)
reifyimply(sumgeq([aux118,6],statePlaces_00002_00002), aux733)
reifyimply(sumleq([aux111,statePlaces_00002_00002],statePlaces_00002_00003), aux741)
reifyimply(sumgeq([aux111,statePlaces_00002_00002],statePlaces_00002_00003), aux741)
reifyimply(sumleq([aux115,statePlaces_00002_00003],statePlaces_00002_00004), aux749)
reifyimply(sumgeq([aux115,statePlaces_00002_00003],statePlaces_00002_00004), aux749)
reifyimply(sumleq([aux110,statePlaces_00002_00004],statePlaces_00002_00005), aux757)
reifyimply(sumgeq([aux110,statePlaces_00002_00004],statePlaces_00002_00005), aux757)
reifyimply(sumleq([aux133,statePlaces_00002_00005],statePlaces_00002_00006), aux765)
reifyimply(sumgeq([aux133,statePlaces_00002_00005],statePlaces_00002_00006), aux765)
reifyimply(sumleq([aux123,statePlaces_00002_00006],statePlaces_00002_00007), aux773)
reifyimply(sumgeq([aux123,statePlaces_00002_00006],statePlaces_00002_00007), aux773)
reifyimply(sumleq([aux114,statePlaces_00002_00007],statePlaces_00002_00008), aux781)
reifyimply(sumgeq([aux114,statePlaces_00002_00007],statePlaces_00002_00008), aux781)
reifyimply(sumleq([aux105,statePlaces_00002_00008],statePlaces_00002_00009), aux789)
reifyimply(sumgeq([aux105,statePlaces_00002_00008],statePlaces_00002_00009), aux789)
reifyimply(sumleq([aux103,statePlaces_00002_00009],statePlaces_00002_00010), aux797)
reifyimply(sumgeq([aux103,statePlaces_00002_00009],statePlaces_00002_00010), aux797)
reifyimply(sumleq([aux131,statePlaces_00002_00010],statePlaces_00002_00011), aux805)
reifyimply(sumgeq([aux131,statePlaces_00002_00010],statePlaces_00002_00011), aux805)
reifyimply(sumleq([aux120,statePlaces_00002_00011],statePlaces_00002_00012), aux813)
reifyimply(sumgeq([aux120,statePlaces_00002_00011],statePlaces_00002_00012), aux813)
reifyimply(sumleq([aux124,statePlaces_00002_00012],statePlaces_00002_00013), aux821)
reifyimply(sumgeq([aux124,statePlaces_00002_00012],statePlaces_00002_00013), aux821)
reifyimply(sumleq([aux116,statePlaces_00002_00013],statePlaces_00002_00014), aux829)
reifyimply(sumgeq([aux116,statePlaces_00002_00013],statePlaces_00002_00014), aux829)
reifyimply(sumleq([aux106,statePlaces_00002_00014],statePlaces_00002_00015), aux837)
reifyimply(sumgeq([aux106,statePlaces_00002_00014],statePlaces_00002_00015), aux837)
reifyimply(sumleq([aux134,statePlaces_00002_00015],statePlaces_00002_00016), aux845)
reifyimply(sumgeq([aux134,statePlaces_00002_00015],statePlaces_00002_00016), aux845)
reifyimply(sumleq([aux122,statePlaces_00002_00016],statePlaces_00002_00017), aux853)
reifyimply(sumgeq([aux122,statePlaces_00002_00016],statePlaces_00002_00017), aux853)
reifyimply(sumleq([aux128,statePlaces_00002_00017],1), aux861)
reifyimply(sumgeq([aux128,statePlaces_00002_00017],1), aux861)
reifyimply(weightedsumleq([-1,1],[aux118,6],statePlaces_00002_00002), aux866)
reifyimply(weightedsumgeq([-1,1],[aux118,6],statePlaces_00002_00002), aux866)
reifyimply(weightedsumleq([-1,1],[aux111,statePlaces_00002_00002],statePlaces_00002_00003), aux873)
reifyimply(weightedsumgeq([-1,1],[aux111,statePlaces_00002_00002],statePlaces_00002_00003), aux873)
reifyimply(weightedsumleq([-1,1],[aux115,statePlaces_00002_00003],statePlaces_00002_00004), aux880)
reifyimply(weightedsumgeq([-1,1],[aux115,statePlaces_00002_00003],statePlaces_00002_00004), aux880)
reifyimply(weightedsumleq([-1,1],[aux110,statePlaces_00002_00004],statePlaces_00002_00005), aux887)
reifyimply(weightedsumgeq([-1,1],[aux110,statePlaces_00002_00004],statePlaces_00002_00005), aux887)
reifyimply(weightedsumleq([-1,1],[aux133,statePlaces_00002_00005],statePlaces_00002_00006), aux894)
reifyimply(weightedsumgeq([-1,1],[aux133,statePlaces_00002_00005],statePlaces_00002_00006), aux894)
reifyimply(weightedsumleq([-1,1],[aux123,statePlaces_00002_00006],statePlaces_00002_00007), aux901)
reifyimply(weightedsumgeq([-1,1],[aux123,statePlaces_00002_00006],statePlaces_00002_00007), aux901)
reifyimply(weightedsumleq([-1,1],[aux114,statePlaces_00002_00007],statePlaces_00002_00008), aux908)
reifyimply(weightedsumgeq([-1,1],[aux114,statePlaces_00002_00007],statePlaces_00002_00008), aux908)
reifyimply(weightedsumleq([-1,1],[aux105,statePlaces_00002_00008],statePlaces_00002_00009), aux915)
reifyimply(weightedsumgeq([-1,1],[aux105,statePlaces_00002_00008],statePlaces_00002_00009), aux915)
reifyimply(weightedsumleq([-1,1],[aux103,statePlaces_00002_00009],statePlaces_00002_00010), aux922)
reifyimply(weightedsumgeq([-1,1],[aux103,statePlaces_00002_00009],statePlaces_00002_00010), aux922)
reifyimply(weightedsumleq([-1,1],[aux131,statePlaces_00002_00010],statePlaces_00002_00011), aux929)
reifyimply(weightedsumgeq([-1,1],[aux131,statePlaces_00002_00010],statePlaces_00002_00011), aux929)
reifyimply(weightedsumleq([-1,1],[aux120,statePlaces_00002_00011],statePlaces_00002_00012), aux936)
reifyimply(weightedsumgeq([-1,1],[aux120,statePlaces_00002_00011],statePlaces_00002_00012), aux936)
reifyimply(weightedsumleq([-1,1],[aux124,statePlaces_00002_00012],statePlaces_00002_00013), aux943)
reifyimply(weightedsumgeq([-1,1],[aux124,statePlaces_00002_00012],statePlaces_00002_00013), aux943)
reifyimply(weightedsumleq([-1,1],[aux116,statePlaces_00002_00013],statePlaces_00002_00014), aux950)
reifyimply(weightedsumgeq([-1,1],[aux116,statePlaces_00002_00013],statePlaces_00002_00014), aux950)
reifyimply(weightedsumleq([-1,1],[aux106,statePlaces_00002_00014],statePlaces_00002_00015), aux957)
reifyimply(weightedsumgeq([-1,1],[aux106,statePlaces_00002_00014],statePlaces_00002_00015), aux957)
reifyimply(weightedsumleq([-1,1],[aux134,statePlaces_00002_00015],statePlaces_00002_00016), aux964)
reifyimply(weightedsumgeq([-1,1],[aux134,statePlaces_00002_00015],statePlaces_00002_00016), aux964)
reifyimply(weightedsumleq([-1,1],[aux122,statePlaces_00002_00016],statePlaces_00002_00017), aux971)
reifyimply(weightedsumgeq([-1,1],[aux122,statePlaces_00002_00016],statePlaces_00002_00017), aux971)
reifyimply(weightedsumleq([-1,1],[aux128,statePlaces_00002_00017],1), aux978)
reifyimply(weightedsumgeq([-1,1],[aux128,statePlaces_00002_00017],1), aux978)
reifyimply(sumleq([aux129,1],aux118), aux987)
reifyimply(sumgeq([aux129,1],aux118), aux987)
reifyimply(sumleq([aux104,1],aux111), aux994)
reifyimply(sumgeq([aux104,1],aux111), aux994)
reifyimply(sumleq([aux108,1],aux115), aux1001)
reifyimply(sumgeq([aux108,1],aux115), aux1001)
reifyimply(sumleq([aux152,1],aux110), aux1008)
reifyimply(sumgeq([aux152,1],aux110), aux1008)
reifyimply(sumleq([aux127,1],aux133), aux1015)
reifyimply(sumgeq([aux127,1],aux133), aux1015)
reifyimply(sumleq([aux113,1],aux123), aux1022)
reifyimply(sumgeq([aux113,1],aux123), aux1022)
reifyimply(sumleq([aux107,1],aux114), aux1029)
reifyimply(sumgeq([aux107,1],aux114), aux1029)
reifyimply(sumleq([aux132,1],aux105), aux1036)
reifyimply(sumgeq([aux132,1],aux105), aux1036)
reifyimply(sumleq([aux125,1],aux103), aux1043)
reifyimply(sumgeq([aux125,1],aux103), aux1043)
reifyimply(sumleq([aux121,1],aux131), aux1050)
reifyimply(sumgeq([aux121,1],aux131), aux1050)
reifyimply(sumleq([aux112,1],aux120), aux1057)
reifyimply(sumgeq([aux112,1],aux120), aux1057)
reifyimply(sumleq([aux102,1],aux124), aux1064)
reifyimply(sumgeq([aux102,1],aux124), aux1064)
reifyimply(sumleq([aux130,1],aux116), aux1071)
reifyimply(sumgeq([aux130,1],aux116), aux1071)
reifyimply(sumleq([aux119,1],aux106), aux1078)
reifyimply(sumgeq([aux119,1],aux106), aux1078)
reifyimply(sumleq([aux126,1],aux134), aux1085)
reifyimply(sumgeq([aux126,1],aux134), aux1085)
reifyimply(sumleq([aux117,1],aux122), aux1092)
reifyimply(sumgeq([aux117,1],aux122), aux1092)
reifyimply(sumleq([aux109,1],aux128), aux1099)
reifyimply(sumgeq([aux109,1],aux128), aux1099)
reifyimply(sumleq([aux129,-1],aux118), aux1103)
reifyimply(sumgeq([aux129,-1],aux118), aux1103)
reifyimply(sumleq([aux104,-1],aux111), aux1109)
reifyimply(sumgeq([aux104,-1],aux111), aux1109)
reifyimply(sumleq([aux108,-1],aux115), aux1115)
reifyimply(sumgeq([aux108,-1],aux115), aux1115)
reifyimply(sumleq([aux152,-1],aux110), aux1121)
reifyimply(sumgeq([aux152,-1],aux110), aux1121)
reifyimply(sumleq([aux127,-1],aux133), aux1127)
reifyimply(sumgeq([aux127,-1],aux133), aux1127)
reifyimply(sumleq([aux113,-1],aux123), aux1133)
reifyimply(sumgeq([aux113,-1],aux123), aux1133)
reifyimply(sumleq([aux107,-1],aux114), aux1139)
reifyimply(sumgeq([aux107,-1],aux114), aux1139)
reifyimply(sumleq([aux132,-1],aux105), aux1145)
reifyimply(sumgeq([aux132,-1],aux105), aux1145)
reifyimply(sumleq([aux125,-1],aux103), aux1151)
reifyimply(sumgeq([aux125,-1],aux103), aux1151)
reifyimply(sumleq([aux121,-1],aux131), aux1157)
reifyimply(sumgeq([aux121,-1],aux131), aux1157)
reifyimply(sumleq([aux112,-1],aux120), aux1163)
reifyimply(sumgeq([aux112,-1],aux120), aux1163)
reifyimply(sumleq([aux102,-1],aux124), aux1169)
reifyimply(sumgeq([aux102,-1],aux124), aux1169)
reifyimply(sumleq([aux130,-1],aux116), aux1175)
reifyimply(sumgeq([aux130,-1],aux116), aux1175)
reifyimply(sumleq([aux119,-1],aux106), aux1181)
reifyimply(sumgeq([aux119,-1],aux106), aux1181)
reifyimply(sumleq([aux126,-1],aux134), aux1187)
reifyimply(sumgeq([aux126,-1],aux134), aux1187)
reifyimply(sumleq([aux117,-1],aux122), aux1193)
reifyimply(sumgeq([aux117,-1],aux122), aux1193)
reifyimply(sumleq([aux109,-1],aux128), aux1199)
reifyimply(sumgeq([aux109,-1],aux128), aux1199)
**EOF**
